WEBVTT

00:00.110 --> 00:02.610
这列科继续给大家讲讲太了系列课程

00:02.610 --> 00:06.110
那么这列科讲解的内容呢是Q运与组合

00:06.610 --> 00:08.610
那么说到Q运的话呢

00:08.610 --> 00:12.410
其实我们很多的一些特别小程序啊

00:12.410 --> 00:13.910
特别是微信小程序中呢

00:13.910 --> 00:15.910
就有这样的一些啊

00:15.910 --> 00:16.910
情况存在

00:17.210 --> 00:19.810
他的这个Q运其实是指的是

00:20.210 --> 00:22.310
组件的Q运

00:22.810 --> 00:26.110
好对于我们的Q运这个词的另一个翻译呢

00:26.110 --> 00:27.610
叫做紫组件

00:28.010 --> 00:29.910
我们的组件的过程中

00:29.910 --> 00:32.910
我们经常会进行数据的传直

00:33.110 --> 00:34.110
这个传直呢

00:34.110 --> 00:35.910
主要是通过Propos

00:36.210 --> 00:38.610
就是我们所谓的属性进行传递

00:39.010 --> 00:41.410
那么在除了属性以外

00:41.410 --> 00:44.410
我们其实还能把它的紫元素

00:44.410 --> 00:45.910
我们当然在组件中

00:45.910 --> 00:49.210
我们称之为叫紫组件进行数据传递

00:49.510 --> 00:50.610
那么这种时候呢

00:50.610 --> 00:52.510
我们就可以利用一个写法

00:52.910 --> 00:54.510
我们用一个

00:56.010 --> 00:57.510
画笔来表写一下

00:57.910 --> 01:00.110
This.Propos.Tutting

01:00.110 --> 01:03.010
在我们之前的势力中我用过一次

01:03.510 --> 01:04.910
那么它主要的呢

01:04.910 --> 01:06.910
是在引用的时候

01:07.110 --> 01:08.510
我们可以使用

01:08.510 --> 01:10.510
开始和结束标签

01:10.710 --> 01:13.410
中间所放置的这些元素

01:13.410 --> 01:16.410
作为它的Tutting参数进行传递

01:17.010 --> 01:17.810
那这样呢

01:17.810 --> 01:19.110
在组件内部

01:19.210 --> 01:22.310
我们就可以预留出一个区域来

01:22.510 --> 01:24.610
我们并不指定它的形式

01:24.610 --> 01:27.110
而我们只需要做一个框架

01:27.310 --> 01:28.810
那么具体的内容呢

01:28.810 --> 01:31.210
我们通过引用方进行传入

01:31.210 --> 01:32.610
这就是丘陵

01:33.010 --> 01:35.010
我们看我们举了一个简单势力

01:35.010 --> 01:36.610
就是叫做Dialogue

01:37.010 --> 01:40.110
我们应该会属见里面做一个对话框的呈现

01:40.810 --> 01:42.210
但是这个对话框里面

01:42.510 --> 01:44.410
究竟应该呈现在是一个按钮

01:44.410 --> 01:46.110
两个按钮一行文字还两行文字

01:46.110 --> 01:46.910
还有图片

01:47.110 --> 01:49.210
这些对于对话框来讲

01:49.410 --> 01:50.610
它不能去识别

01:51.010 --> 01:53.010
因为根据你现在不同的页面

01:53.010 --> 01:55.310
可能需要做不同的弹框处理

01:55.610 --> 01:56.410
这种时候呢

01:56.410 --> 01:59.110
我们就可以把这个弹框的真正内容

01:59.410 --> 02:01.310
放在我们的Tutting里面

02:01.610 --> 02:02.610
这是这一点

02:02.910 --> 02:04.610
等会我们给大家做一个简单演示

02:05.110 --> 02:05.810
同时呢

02:05.810 --> 02:08.010
我们应该要注意三点需求

02:08.110 --> 02:08.610
第一

02:08.810 --> 02:11.610
不能对Tutting做任何的操作

02:11.910 --> 02:13.110
这句话是什么意思的

02:13.110 --> 02:14.810
你说老师不是你先写Tutting吗

02:15.110 --> 02:15.610
对的

02:15.710 --> 02:17.010
那我们这里说的是

02:17.210 --> 02:19.210
我们的Tutting操作是指的是

02:19.210 --> 02:22.510
你不能对它做任何的作为的修改

02:22.810 --> 02:23.910
你对它说

02:24.010 --> 02:25.610
我读取里面某一个纸

02:25.710 --> 02:26.810
我或者说

02:26.810 --> 02:28.710
我对它里面某一个纸巾修改

02:29.310 --> 02:30.810
这种是不可以的

02:30.910 --> 02:31.910
因为很简单

02:32.310 --> 02:34.810
如果你还记得小程序原生写法的话

02:34.810 --> 02:36.410
小程序在原生的

02:36.510 --> 02:38.710
叫做自定义组件里面是有一个这个

02:39.210 --> 02:40.010
标签的

02:43.080 --> 02:43.680
slot

02:44.280 --> 02:45.480
如果你还记得的话

02:45.780 --> 02:47.780
那么如果不记得同学可以去看一下啊

02:47.780 --> 02:49.980
小程序在我们讲解自定义组件的时候

02:49.980 --> 02:51.280
有一个slot标签

02:51.580 --> 02:52.580
这个标签呢

02:52.580 --> 02:54.880
其实就是我们可以把

02:54.980 --> 02:58.680
紫元素紫组件的部分填写在我们的

02:59.080 --> 02:59.980
组件内部的

03:00.180 --> 03:02.280
那么其实对于我们现在的

03:02.280 --> 03:04.380
这个叫做proper student来讲的话

03:04.680 --> 03:06.280
它最终实现的时候

03:06.580 --> 03:07.380
它的功能

03:07.580 --> 03:09.080
就是做的是slot功能

03:09.580 --> 03:10.480
那么这时候呢

03:10.580 --> 03:11.880
我们讲解的是

03:11.980 --> 03:12.780
其实啊

03:12.880 --> 03:15.880
我们的叫做this.proper student children

03:15.980 --> 03:17.680
它其实是作为一种

03:17.680 --> 03:20.680
我们slot的另一种语法堂的概念

03:21.180 --> 03:22.880
它是一种语法堂的概念

03:23.280 --> 03:23.980
所以呢

03:24.080 --> 03:25.380
这一点我们说一下

03:25.480 --> 03:27.980
它和reactor里面的写法就不一样

03:28.380 --> 03:31.180
我们如果reactor里面是有一个这个的

03:33.510 --> 03:36.010
reactor里面是有一个reactor element

03:39.100 --> 03:40.900
reactor里面有个reactor element

03:41.400 --> 03:41.900
所以

03:42.100 --> 03:43.800
这个部分内容呢啊

03:43.900 --> 03:46.100
和我们的terror中就不太一样了

03:46.400 --> 03:47.600
我们在reactor中呢

03:47.600 --> 03:49.600
我们可以写的是比如说

03:49.800 --> 03:51.100
prop

03:51.500 --> 03:51.960
s

03:51.960 --> 03:53.300
proper student children

03:56.300 --> 03:56.800
chilling

03:56.900 --> 03:58.000
然后我们可以

03:58.000 --> 04:00.200
中国号的方式取里面的纸

04:00.400 --> 04:00.900
对不对

04:00.900 --> 04:01.800
用这样的方式

04:01.800 --> 04:02.400
你是可以的

04:02.400 --> 04:03.200
direct中

04:03.400 --> 04:05.000
但是在我们的terror中

04:06.400 --> 04:06.900
啊

04:07.000 --> 04:09.500
你的这种写法是不被允许的

04:10.000 --> 04:11.100
所以我们讲的是

04:11.100 --> 04:11.800
为什么

04:12.000 --> 04:13.400
因为terror最后

04:13.400 --> 04:15.800
它要生成出来的是微信小程序

04:15.800 --> 04:17.800
而微信小程序本身自己里面

04:17.800 --> 04:19.700
就应该是一个这个元素

04:20.000 --> 04:21.900
这个元素它是不可做修改

04:21.900 --> 04:25.900
直接是从外部整体的把内容全部包含在组件里面

04:26.200 --> 04:27.600
形成这样一个写法的

04:27.800 --> 04:28.400
所以呢

04:28.500 --> 04:30.500
我们大家要注意这是第一点啊

04:30.800 --> 04:32.700
不能对我们的

04:33.000 --> 04:34.700
chilling做任何的操作

04:35.100 --> 04:35.700
第二呢

04:35.700 --> 04:36.300
第二点

04:36.600 --> 04:38.400
this.proper student children

04:38.500 --> 04:42.500
它无法用default preface的设置默认内容

04:43.000 --> 04:44.100
我们应该都知道

04:44.400 --> 04:45.700
如果属性内部

04:45.700 --> 04:48.500
我们其实可以去做一个default preface

04:48.700 --> 04:50.300
就是说属性

04:50.500 --> 04:52.300
如果没有传执进来

04:52.400 --> 04:55.600
那我们其实可以做一个默认值的设定

04:56.000 --> 04:56.800
但是啊

04:57.000 --> 04:58.300
this.proper student children

04:58.800 --> 04:59.900
他本身呢

05:00.100 --> 05:01.700
内容和他的框架

05:01.800 --> 05:03.300
就不是他自己定的

05:04.400 --> 05:08.400
他把所有的这样的一个结构全部给了一个引用值

05:08.800 --> 05:10.100
引用方的操作

05:10.400 --> 05:13.500
所以他本身就没有办法去定默认值

05:14.500 --> 05:17.600
那并不是说我有一个基础框架和基础内容

05:17.600 --> 05:19.300
或者说基础一个大概显示

05:19.800 --> 05:20.800
我不可以哦

05:20.800 --> 05:21.600
我就是一种

05:21.600 --> 05:23.000
咱们讲的简单一点啊

05:23.200 --> 05:24.800
就是他就是一个相框

05:25.200 --> 05:27.100
你相框里面放什么东西

05:27.500 --> 05:29.300
你说我在制作相框的时候

05:29.300 --> 05:31.200
我能给他默认放一个什么吗

05:31.600 --> 05:33.100
不可以对吧

05:33.100 --> 05:35.200
因为谁用谁知道对吧

05:35.600 --> 05:36.400
所以第二点

05:36.400 --> 05:37.800
你应该很容易去理解

05:38.800 --> 05:39.200
好

05:39.400 --> 05:40.900
第三点不能把

05:41.100 --> 05:42.900
this.proper student children

05:43.000 --> 05:44.600
分解为辨量在使用

05:44.600 --> 05:46.200
就像我刚才说的这个写法

05:47.000 --> 05:49.400
他本身里面可能会有节点

05:49.400 --> 05:50.500
可能会有属性

05:50.500 --> 05:51.500
可能还有文本

05:51.700 --> 05:54.300
但是你不能通过这样的方式去拆

05:54.600 --> 05:58.700
你只能完整的把他里面所有内容全部给搬过来

05:58.900 --> 05:59.200
好

05:59.200 --> 06:00.700
这点是我们所谓的

06:00.900 --> 06:03.000
property的那个property的一个

06:03.400 --> 06:04.600
秋军的一个写法

06:04.600 --> 06:04.900
好

06:04.900 --> 06:07.400
我们先拿这个来举一个实例

06:08.300 --> 06:10.000
我们打开我们原有程序

06:10.400 --> 06:11.000
然后呢

06:11.000 --> 06:12.600
我们在src中

06:12.700 --> 06:15.300
我们建立一个我们的简单的一个

06:15.600 --> 06:16.200
呃

06:17.900 --> 06:18.400
页面

06:19.800 --> 06:20.700
在配置里面

06:21.200 --> 06:22.100
我们新建

06:22.300 --> 06:23.600
我们比如就叫APP

06:24.500 --> 06:25.500
我们就叫APP

06:26.900 --> 06:27.400
然后呢

06:27.400 --> 06:31.000
在APP下面我们建立一个APP.jsr

06:32.700 --> 06:33.700
这是首页

06:34.200 --> 06:34.800
然后呢

06:34.800 --> 06:35.500
在这个首页中

06:35.500 --> 06:37.800
我们完成一个基本框架的调用

06:38.100 --> 06:38.600
taro

06:41.540 --> 06:42.440
component

06:43.340 --> 06:43.840
from

06:44.740 --> 06:45.440
taro

06:45.540 --> 06:46.240
taro

06:50.800 --> 06:51.500
import

06:53.300 --> 06:53.900
view

06:56.420 --> 06:57.020
然后

06:57.620 --> 06:58.820
他来自于

07:03.830 --> 07:04.930
components

07:09.490 --> 07:10.090
expert

07:10.090 --> 07:10.990
default

07:11.690 --> 07:12.390
class

07:13.190 --> 07:15.090
那么这个我们就成为APP

07:18.060 --> 07:18.860
extends

07:19.460 --> 07:20.560
component

07:23.120 --> 07:23.320
好

07:23.320 --> 07:25.520
我们先不做那个

07:26.020 --> 07:26.920
constructor了

07:27.220 --> 07:28.520
我们直接写randle

07:30.020 --> 07:31.220
我们直接上randle

07:32.320 --> 07:33.920
在randle里面的话呢

07:33.920 --> 07:36.120
我们这边直接用一个return

07:36.120 --> 07:38.020
返回你现在的jsr

07:42.100 --> 07:42.500
好

07:42.800 --> 07:43.900
那么这样的话呢

07:43.900 --> 07:44.800
我们可以看到

07:45.100 --> 07:48.400
我们这边就可以有正常的一个数据结构了

07:48.900 --> 07:49.600
然后呢

07:49.800 --> 07:50.900
我们本身

07:51.400 --> 07:52.700
这个扩耗

07:53.000 --> 07:54.200
这扩耗应该在这

07:56.560 --> 07:57.760
本身来讲的话呢

07:57.760 --> 07:59.460
我们需要在这个

07:59.960 --> 08:00.660
呃

08:01.760 --> 08:02.860
根本键下面

08:02.860 --> 08:05.060
我们这里面去调用一个我们的

08:06.260 --> 08:06.860
组件

08:07.260 --> 08:07.860
所以呢

08:07.860 --> 08:09.960
我们应该去创建一个组件出来

08:09.960 --> 08:11.860
当然先把这个APP.js

08:12.260 --> 08:13.760
放入在我们jsr里面

08:16.570 --> 08:17.270
paters

08:17.970 --> 08:18.670
app

08:25.980 --> 08:26.780
紧接着

08:26.980 --> 08:28.580
我们开始做这样的一个页面

08:28.580 --> 08:29.080
然后呢

08:29.080 --> 08:31.780
我们把component里面去创建一个我们的

08:31.780 --> 08:32.980
dialogue对话框

08:37.030 --> 08:37.830
dialogue

08:39.130 --> 08:40.030
新建文件

08:42.260 --> 08:47.920
dialogue.reninjaxa

08:48.520 --> 08:50.420
我们依然使用这套语法

08:50.420 --> 08:52.020
把它给搬过来

08:55.110 --> 08:56.110
修改修改

08:58.370 --> 08:59.070
dialogue

08:59.770 --> 09:01.670
然后在它里面的话呢

09:01.670 --> 09:05.170
我们去定义我们现在所需要的整个这个

09:05.470 --> 09:06.070
结构

09:06.570 --> 09:07.970
首先我们来看啊

09:08.370 --> 09:10.070
我们在这个view里面

09:10.070 --> 09:11.570
我们可以给它一个样式

09:11.570 --> 09:12.770
但我们现在先补写

09:12.770 --> 09:15.670
一般我们大家都会给一个dialogue这样的格式

09:16.070 --> 09:16.570
然后呢

09:16.570 --> 09:19.270
我们可以写上这里边最简单的

09:19.270 --> 09:20.670
我们先给上

09:21.670 --> 09:22.970
它有自己的框架

09:22.970 --> 09:24.870
那么我们就定一个简单的

09:30.460 --> 09:31.160
我们待会

09:31.160 --> 09:32.760
待会把这个样式写一下就可以了

09:32.760 --> 09:33.360
特别简单

09:33.360 --> 09:35.260
我们先把框架写出来

09:35.360 --> 09:36.260
先补写样式

09:38.160 --> 09:39.560
然后这是一个头

09:39.960 --> 09:41.160
这是一个底

09:41.160 --> 09:41.860
我们说

09:50.490 --> 09:51.090
一个头

09:51.090 --> 09:51.790
一个底

09:52.390 --> 09:54.090
它中间有一块内容

09:57.280 --> 09:58.280
隔一有一块

09:58.280 --> 09:59.380
它的一个主

10:00.480 --> 10:01.380
内容区域

10:03.740 --> 10:04.140
对吧

10:04.140 --> 10:05.040
我们叫做

10:05.340 --> 10:05.940
birdie

10:06.340 --> 10:06.840
好了

10:07.240 --> 10:08.340
这里面内容呢

10:08.540 --> 10:09.240
我不知道

10:09.640 --> 10:10.840
我需要的是

10:10.940 --> 10:12.240
你在使用的时候

10:12.440 --> 10:13.240
传输进来

10:13.640 --> 10:15.840
所以我应该写的是根据刚才原则

10:16.140 --> 10:17.040
propercy点

10:17.040 --> 10:18.040
它不是一个值

10:18.140 --> 10:19.240
它是一个q

10:19.540 --> 10:20.140
代表

10:20.440 --> 10:21.840
待会调用的时候的

10:22.040 --> 10:24.840
开始和结束营用标签内的所有内容

10:25.340 --> 10:25.940
放在这

10:26.340 --> 10:27.840
那我们把这个内容呢

10:27.940 --> 10:28.840
简单的

10:29.440 --> 10:30.640
先把它调起来以后

10:30.640 --> 10:33.240
我们把样式简单设置一下就可以了

10:33.840 --> 10:35.040
首先我们这个页面

10:35.040 --> 10:36.340
基本结构先出来了

10:36.540 --> 10:37.140
接下去

10:37.440 --> 10:38.340
谁用它

10:38.840 --> 10:39.940
app.js里面

10:40.040 --> 10:40.640
用它

10:41.040 --> 10:41.940
用它方式

10:42.140 --> 10:42.940
先引入

10:49.680 --> 10:50.380
dialogue

10:50.980 --> 10:51.580
from

10:54.350 --> 10:55.150
dialogue

10:58.500 --> 10:59.200
点点杠

10:59.200 --> 11:00.000
点点杠

11:00.000 --> 11:03.200
component下面的dialogue下的dialogue

11:04.100 --> 11:05.300
那么我们在这写

11:09.260 --> 11:10.460
写上一个dialogue

11:11.060 --> 11:11.460
好

11:11.760 --> 11:12.760
那这样的话呢

11:12.760 --> 11:16.460
我在这边我就可以最简单的给他写点内容

11:16.460 --> 11:16.960
注意

11:17.260 --> 11:18.460
我们所谓的chilling

11:18.560 --> 11:21.860
它其实就是从这个开始标签到这个结束标签

11:21.860 --> 11:23.260
中间的所有

11:23.560 --> 11:24.360
内文本

11:24.460 --> 11:27.260
包括你的标签内容全部给你包含进去

11:31.730 --> 11:32.530
我们写上

11:35.600 --> 11:36.600
this is

11:37.000 --> 11:40.460
taro study

11:42.570 --> 11:43.870
this is taro study

11:44.270 --> 11:46.270
我们把这部分内容给你拿出来了

11:46.670 --> 11:47.870
所以这样的话呢

11:47.870 --> 11:50.270
我们在这边你可以写上样式

11:51.070 --> 11:52.670
你可以在这边写成样式

11:52.770 --> 11:53.570
我叫做

11:54.270 --> 11:55.070
dialogue

11:56.070 --> 11:56.770
message

11:57.070 --> 11:57.870
我这样写

11:58.470 --> 11:58.970
ok

11:59.170 --> 12:00.270
那我们保存一下

12:00.570 --> 12:02.770
首先我们看一下页面会呈现什么

12:03.070 --> 12:03.970
正常情况下

12:03.970 --> 12:05.870
我们应该逻辑上应该是

12:06.170 --> 12:08.070
页面会呈现一个wellcome第一行

12:08.370 --> 12:09.170
第二行

12:09.170 --> 12:10.470
它会把一个chilling

12:10.670 --> 12:11.570
给你呈现出来

12:11.570 --> 12:13.770
而chilling里面应该是这部分内容

12:14.170 --> 12:15.870
this is taro study

12:16.470 --> 12:17.170
然后呢

12:17.170 --> 12:19.070
下面再有一个divider

12:19.270 --> 12:19.470
好

12:19.470 --> 12:20.370
我们来看一下

12:21.170 --> 12:22.270
是不是这三款

12:23.170 --> 12:25.870
跟我们刚才预计的是一样的结构

12:26.370 --> 12:27.270
那么这样的话呢

12:27.270 --> 12:28.270
就意味着

12:28.470 --> 12:29.870
我在引用方

12:30.070 --> 12:32.170
所涉及到的这块内容

12:32.370 --> 12:36.270
它已经把它全部的放置到了我们现在的

12:36.370 --> 12:37.870
distant shooting 位置

12:38.470 --> 12:38.970
好

12:38.970 --> 12:41.170
那我们把它简单几个样式做一下

12:41.770 --> 12:42.670
dialogue

12:42.970 --> 12:45.070
我们在里面再建立我们的

12:46.270 --> 12:47.670
dialogue.css

12:48.770 --> 12:49.370
然后

12:49.770 --> 12:50.570
引入进来

12:56.990 --> 12:58.390
同名下面的

12:59.990 --> 13:02.790
dialogue.css

13:04.390 --> 13:06.590
然后我们把这个放过来

13:06.790 --> 13:08.790
我们只做一个简单的

13:09.190 --> 13:11.790
呃放在中间的一个接口位

13:12.990 --> 13:13.390
好

13:13.690 --> 13:15.990
dialogue是最大的这个框

13:16.090 --> 13:17.690
dialogue是最大的这个框

13:17.790 --> 13:18.790
这框的话呢

13:19.090 --> 13:20.290
我们给他做一个

13:24.280 --> 13:24.780
宽度

13:26.580 --> 13:27.080
做

13:30.050 --> 13:31.450
百分之八十

13:32.850 --> 13:34.450
宽度给他做百分之八十

13:34.850 --> 13:36.950
他的高度我们给他做一个

13:37.650 --> 13:38.050
呃

13:40.800 --> 13:43.400
20呃我们做一个60吧

13:43.500 --> 13:44.400
60px

13:46.500 --> 13:47.100
然后呢

13:49.180 --> 13:52.580
我们在在dialogue它是属于我们现在的最高的

13:52.580 --> 13:55.080
那我们在这层上面我们再定一个

13:55.480 --> 13:57.180
我们想让里面的所有内容

13:57.180 --> 13:58.780
形成一个所谓的什么

13:59.080 --> 14:01.180
我们的弹性布局的居中操作

14:01.580 --> 14:04.580
所以这个呢应该我们在更文件上我们其实一个

14:06.810 --> 14:07.410
container

14:16.170 --> 14:16.870
container

14:18.070 --> 14:18.470
所以

14:19.170 --> 14:22.670
整个的大框我们宽度一百分百算

14:23.170 --> 14:26.170
然后他的高度也一百分百算

14:27.070 --> 14:28.970
然后呢他上面还有一个

14:29.970 --> 14:31.070
是页面级的

14:38.170 --> 14:40.170
好紧接着我们来做

14:40.370 --> 14:42.170
那么对于container来讲的话

14:42.170 --> 14:43.770
他应该对他里面内容

14:44.170 --> 14:45.270
我们做一个flex

14:45.270 --> 14:47.170
也就是说这是一个

14:47.770 --> 14:48.670
弹性布局

14:48.970 --> 14:50.770
然后呢flex direction

14:50.870 --> 14:53.470
我们让他形成一个列积

14:53.870 --> 14:56.070
要这样的话呢just a container

14:56.670 --> 14:59.570
他其实就应该是一个center

15:01.470 --> 15:02.470
align item

15:03.470 --> 15:05.370
也是一个center

15:05.770 --> 15:06.770
用这几个来做

15:09.830 --> 15:12.130
同时我们的接下去

15:12.330 --> 15:15.030
我们能看到的是这里边有一个

15:15.530 --> 15:16.830
这里边我们说啊

15:17.330 --> 15:18.030
有一个

15:18.530 --> 15:20.230
dialogue做个背景

15:20.530 --> 15:21.530
那么这样的话呢

15:22.030 --> 15:22.730
背景色

15:23.030 --> 15:24.030
小黄色

15:27.790 --> 15:29.390
第一个小黄色

15:30.690 --> 15:32.590
好我们来看看现在效果

15:35.010 --> 15:37.110
dialogue这个出来了啊这个位置

15:37.710 --> 15:38.610
现在我们继续

15:41.160 --> 15:42.660
我们dialogue啊

15:42.960 --> 15:45.260
他是作为我们在哪个下面

15:45.760 --> 15:47.160
他是在我们这个下面

15:47.260 --> 15:48.160
所以我们

15:49.760 --> 15:50.460
container

15:53.430 --> 15:54.130
这部分

15:56.170 --> 15:58.670
我们让这一块啊我们让他

15:59.270 --> 16:01.770
啊你看着我们上面这两块

16:01.770 --> 16:03.870
其实我们如果在dialogue里面的话

16:03.870 --> 16:05.470
我们说可以不定一趟

16:06.170 --> 16:08.370
你可以不定你把上面这两块啊

16:08.370 --> 16:10.970
全部到时候放在我们的app

16:11.670 --> 16:14.070
app.dxr的样式结构里面去

16:14.070 --> 16:16.670
我们只要针对当前的这个dialogue

16:17.130 --> 16:18.970
然后你说他一个400 200

16:18.970 --> 16:21.070
宽度底速是那个

16:21.630 --> 16:22.270
我们的

16:23.170 --> 16:23.770
黄色

16:25.270 --> 16:26.870
所以他就出来这一块了

16:27.970 --> 16:30.670
居中的话其实我们做一个简单的吧

16:38.010 --> 16:38.750
so go out to

16:43.860 --> 16:44.560
就这样了

16:44.860 --> 16:47.160
ok啊我们样式先这么样

16:47.160 --> 16:48.460
就让他呈现出来

16:48.700 --> 16:51.100
代表这是一个弹框这里面的内容

16:51.100 --> 16:52.260
是我们可以自行定

16:52.560 --> 16:54.060
然后把welcome定一下

16:55.860 --> 16:58.160
welcome是header他在中间位置

17:00.140 --> 17:00.640
对吧

17:01.140 --> 17:03.140
然后给他一个背景色

17:04.240 --> 17:05.140
给他一个

17:07.630 --> 17:08.530
浅绿色

17:09.190 --> 17:09.930
然后呢

17:10.230 --> 17:11.830
他的文本让他居中

17:13.030 --> 17:13.730
然后呢

17:14.030 --> 17:15.630
文本稍微大一点

17:16.630 --> 17:17.690
我们给他一个

17:19.030 --> 17:21.930
20 25 px

17:22.430 --> 17:23.730
然后自己加粗

17:27.180 --> 17:28.880
好我们来看一下这个效果

17:33.090 --> 17:34.090
是我小了啊

17:34.190 --> 17:35.190
我们再大一点

17:36.990 --> 17:37.790
45

17:42.800 --> 17:43.400
ok吧

17:43.600 --> 17:44.600
就这样一个效果

17:44.900 --> 17:47.300
然后下面david这个结构是一样的

17:47.700 --> 17:48.800
我们也给他

17:48.800 --> 17:50.400
所以呢我们就这样写

17:50.400 --> 17:51.800
我们把这个footer

17:53.600 --> 17:54.200
逗号

17:55.000 --> 17:56.000
再给一个点

17:57.900 --> 17:58.900
然后我们来写

18:02.100 --> 18:02.600
是不是

18:02.900 --> 18:03.700
只不过呢

18:03.700 --> 18:06.400
这个footer下面我们再多一个样式给他

18:07.800 --> 18:08.400
footer

18:09.600 --> 18:10.100
然后

18:10.900 --> 18:12.100
david和

18:12.100 --> 18:14.000
哦那个不是那个footerheader

18:14.000 --> 18:15.200
外面是dialogue

18:15.700 --> 18:18.300
所以我们对dialogue要做一个position

18:19.200 --> 18:21.200
等于relative

18:22.000 --> 18:23.700
而此时的footer

18:24.100 --> 18:25.100
你的position

18:25.600 --> 18:27.800
你就要定成absolutive

18:32.590 --> 18:34.290
然后呢给他一个button

18:34.690 --> 18:35.590
给他个0

18:37.760 --> 18:39.060
你再说再来看一下

18:41.610 --> 18:42.710
是不是到底部来了

18:43.410 --> 18:45.610
然后呢我们再诶这个啊

18:45.810 --> 18:47.510
然后设他的宽度

18:48.410 --> 18:49.310
做百分百

18:58.670 --> 19:01.270
ok形成了这样的一个对话框

19:01.470 --> 19:02.970
上面是对话框

19:02.970 --> 19:04.870
上面是welcome一个一个结构

19:04.870 --> 19:06.270
下面是david的一个结构

19:06.570 --> 19:08.870
中间的内容呢是我输入进来了

19:08.870 --> 19:09.270
是不是

19:09.670 --> 19:11.270
所以这样的话呢我们看到

19:11.770 --> 19:13.270
这样的一个架构

19:13.270 --> 19:16.270
使其我们能够把内容输进来的形式

19:16.470 --> 19:17.970
我们称之为叫chilling

19:18.570 --> 19:19.070
是不是

19:19.370 --> 19:20.970
那么这部分的chilling内容

19:20.970 --> 19:23.270
你完全可以在这边进行

19:23.670 --> 19:25.170
更多样式的修改

19:25.470 --> 19:27.670
我们把container要定义在这个app

19:27.670 --> 19:28.970
点js差里面

19:34.050 --> 19:34.850
定在这

19:36.980 --> 19:37.580
pager

19:37.780 --> 19:39.380
我们定他的宽度

19:39.780 --> 19:40.480
为100

19:41.180 --> 19:42.380
定他的高度

19:42.580 --> 19:43.380
为100

19:43.580 --> 19:43.980
啊

19:44.080 --> 19:45.280
你可以这样设定一下

19:45.280 --> 19:46.380
然后container

19:46.780 --> 19:48.580
你也可以在这边设定一下

19:48.880 --> 19:49.580
比如说

19:49.980 --> 19:51.380
定container的高度

19:51.680 --> 19:52.580
为百分百

19:53.380 --> 19:54.780
你定height的高度

19:56.280 --> 19:57.880
有办法你去这样定指啊

19:58.120 --> 19:59.780
这个我不在这里去多做了

19:59.780 --> 20:00.920
然后同时的话呢

20:00.920 --> 20:02.280
我们把他引入进来

20:07.050 --> 20:07.750
点警告

20:08.750 --> 20:09.750
啊不是

20:09.850 --> 20:11.350
他就是当前下面的

20:11.550 --> 20:12.750
我们的app

20:13.250 --> 20:14.350
点css

20:15.350 --> 20:16.150
这样引进来

20:16.950 --> 20:17.350
好

20:17.750 --> 20:18.150
此时呢

20:18.150 --> 20:19.550
你再来看一下页面啊

20:19.850 --> 20:20.450
刷一下

20:20.650 --> 20:22.050
应该是没什么变化的

20:23.450 --> 20:23.950
ok

20:24.350 --> 20:26.350
紧接着我们把这个内容

20:26.350 --> 20:28.350
你可以去修改dialogue message

20:28.650 --> 20:29.450
代表的是

20:29.650 --> 20:31.250
你针对当前的

20:31.550 --> 20:32.650
这个显示内容

20:32.650 --> 20:33.250
你的样式

20:33.250 --> 20:34.450
你想显示什么样的

20:34.750 --> 20:37.650
比如说我想显示所有的这里边的字体

20:37.850 --> 20:40.550
我们都想呈现出一个红色字体

20:41.250 --> 20:42.950
啊代表这是一个器重

20:43.050 --> 20:43.550
对吧

20:43.650 --> 20:44.650
所有的字号呢

20:44.650 --> 20:45.850
我们再大一点

20:46.150 --> 20:47.550
我们比如说我们给的是

20:47.950 --> 20:49.150
啊30

20:50.350 --> 20:51.050
px

20:51.850 --> 20:52.950
你这样的方式

20:53.350 --> 20:55.150
那么我们大家简单看到一下

20:55.450 --> 20:57.010
无论你在样式内部的定义

20:57.010 --> 20:57.950
还是外部的定义

20:57.950 --> 21:00.550
有样式结构永远是符合于当前的

21:00.810 --> 21:02.450
但是如果你在内部

21:02.450 --> 21:05.350
你依然使用了我的一个全局样式的话

21:05.550 --> 21:06.150
比如说

21:06.350 --> 21:08.050
我们的那个pager

21:08.050 --> 21:10.050
或者是那么他依然可起作用

21:10.410 --> 21:11.050
第二点

21:11.250 --> 21:12.350
我们的别忘了

21:12.350 --> 21:14.550
我们有一些的那个样式

21:14.550 --> 21:15.750
它是有继承关系的

21:15.750 --> 21:16.650
比如说fonte

21:16.750 --> 21:17.950
比如说cara

21:18.150 --> 21:20.250
啊他可以在副组件上面设定好以后

21:20.250 --> 21:21.550
影响到你的自组件

21:21.850 --> 21:22.750
这是我们的qt

21:22.750 --> 21:24.450
时候说到的一堆的事情

21:24.710 --> 21:25.050
对吧

21:25.050 --> 21:27.150
我们现在做了讲的简单的一个演示

21:27.290 --> 21:29.310
那么见面中就看到有这样一个效果

21:29.650 --> 21:31.610
紧接着我们就往下讲

21:31.910 --> 21:32.550
那么qt

21:32.550 --> 21:33.810
本身自己呢啊

21:33.810 --> 21:35.410
刚才我们的几个注意点啊

21:35.470 --> 21:37.170
我们这边把他给说明一下

21:37.670 --> 21:39.310
我们这边接近qt

21:39.370 --> 21:40.670
你说我是我这样的

21:42.110 --> 21:43.670
qt不是里面的内容吗

21:43.670 --> 21:44.810
我说我直接这样

21:45.710 --> 21:47.470
直接你去打这样的符号

21:47.670 --> 21:48.770
那这种符号的话呢

21:48.770 --> 21:50.670
他本身就不可以使用的啊

21:50.910 --> 21:51.670
就第一点

21:52.070 --> 21:54.070
你不可以从里面抽取内容出来

21:54.770 --> 21:55.470
理解吧

21:55.630 --> 21:56.710
这意思啊

21:56.710 --> 21:58.210
同时呢我们说啊

21:58.210 --> 22:00.410
你不能对他做任何的修改

22:00.570 --> 22:01.470
也就意味着

22:01.630 --> 22:03.110
难道你能这样干吗

22:03.310 --> 22:04.710
在其他里面qt

22:05.070 --> 22:05.730
等于

22:06.130 --> 22:07.830
我自行再去设定一下

22:12.460 --> 22:13.060
你说

22:14.400 --> 22:14.960
哈喽

22:15.900 --> 22:17.000
去做这个操作

22:19.320 --> 22:20.600
肯定抱错啊

22:20.600 --> 22:21.660
这个叫修改

22:21.660 --> 22:24.020
你不能对他进行复制修改

22:24.220 --> 22:27.600
你不能对他进行扩展的辩量再使用

22:27.960 --> 22:29.200
啊这些都是不可以

22:29.660 --> 22:30.160
对吧

22:30.160 --> 22:32.100
因为我们强调了那个原则性

22:32.100 --> 22:33.800
他本身就应该是一个

22:33.800 --> 22:35.160
能够让我们能够

22:35.300 --> 22:38.200
把你现在所有的在页面中

22:38.200 --> 22:40.400
所需要传递的整个这部分

22:40.600 --> 22:41.400
给他放进来

22:42.400 --> 22:42.800
对吧

22:42.800 --> 22:44.000
这是他的一个逻辑

22:44.200 --> 22:46.200
同时呢我们到页面中来看

22:46.200 --> 22:46.500
哎

22:46.500 --> 22:47.900
这边我们还得存一下

22:49.960 --> 22:51.560
同时我们到页面中来看啊

22:51.860 --> 22:54.020
从页面中也能看到这个原则是什么

22:54.020 --> 22:54.920
你们看这个

22:54.920 --> 22:56.160
dialogue messenger

22:56.420 --> 22:58.020
他是属于我们的

22:58.220 --> 22:59.320
呃那个

22:59.620 --> 23:01.460
主调用方的应用方的

23:01.760 --> 23:02.220
对吧

23:02.380 --> 23:03.160
那么但是呢

23:03.160 --> 23:06.260
我把它写在了dialogue的本身自己的一个

23:06.560 --> 23:07.360
啊我们的

23:08.460 --> 23:09.260
qt里面

23:09.260 --> 23:11.160
所以你来看一下dialogue messenger

23:11.360 --> 23:13.760
是否在最后呈现的时候依然会出现

23:19.900 --> 23:20.500
看到了吗

23:21.500 --> 23:22.600
所谓的包含

23:22.600 --> 23:24.900
他是会把你现在里面所有的

23:24.900 --> 23:27.200
包括样式包括这些都拿进来

23:27.600 --> 23:29.300
所以一旦拿进来的话呢

23:29.400 --> 23:32.700
其实你把这个样式如果你非要做在我们的

23:33.100 --> 23:35.000
主容器里面或称之为

23:35.400 --> 23:36.500
副组建里面啊

23:36.500 --> 23:37.800
其实依然可以使效

23:38.000 --> 23:38.700
但是呢

23:38.700 --> 23:41.700
他不是我们真正组建所需要的一个

23:41.800 --> 23:42.300
结构

23:42.300 --> 23:44.400
那组建应该是把它所有放在一起

23:44.800 --> 23:45.200
好了

23:45.400 --> 23:48.100
那么这是属于我们所谓的第一个部分

23:48.300 --> 23:49.100
就是qt

23:49.500 --> 23:51.100
接下来我们来看第二部分

23:51.800 --> 23:54.600
我们本身来说到的整个qt呢

23:54.700 --> 23:56.000
他其实很简单对吧

23:56.000 --> 23:57.300
我们刚才已经掩饰了

23:57.600 --> 23:59.700
第二部分是一种叫组合

24:00.240 --> 24:01.300
组合是什么

24:01.540 --> 24:04.360
就是说在我们学习qt之前

24:04.360 --> 24:06.900
我们所有的一些参数

24:07.100 --> 24:09.900
都是通过purpose的一个属性方式

24:10.340 --> 24:12.200
传入到我们组建里面去的

24:12.800 --> 24:15.040
那么上级刚刚我们讲了一个qt

24:15.040 --> 24:17.440
以后呢你可以把一些元素

24:17.440 --> 24:19.340
就jx差的元素传进去

24:19.840 --> 24:22.440
但是有时候我们需要的数据

24:22.440 --> 24:24.040
并不是只有一个

24:24.500 --> 24:26.140
因为qt不可操作

24:26.140 --> 24:29.040
他只可把整段放入到我们组建

24:29.440 --> 24:32.040
但有时候我们的属性的值也需要

24:32.440 --> 24:33.540
那这时候怎么办呢

24:33.540 --> 24:35.240
就是我们的组合的出现

24:36.040 --> 24:37.240
所谓的组合

24:37.440 --> 24:39.940
其实我给了一句最简单的一句话说

24:42.010 --> 24:44.110
他既有属性传值

24:44.110 --> 24:45.910
又有qt传值

24:46.510 --> 24:48.310
那么最官网或者说

24:48.310 --> 24:51.410
对一些标准的说法是上面这个

24:51.810 --> 24:55.010
就是你需要传递一个组织

24:55.010 --> 24:57.410
可能会需要多个站位服

24:57.410 --> 25:01.210
这个站位服就是你要传递的内容的

25:01.710 --> 25:05.810
比如说属性值或者称之为抽菌值

25:06.510 --> 25:07.810
这种情况需要使用

25:08.310 --> 25:10.110
那么我们待会给大家演示一下

25:10.110 --> 25:13.010
怎么样能够继传属性值注意

25:13.510 --> 25:14.710
这个属性

25:15.210 --> 25:16.510
这个属性值

25:17.610 --> 25:18.510
它是什么

25:19.210 --> 25:19.710
看这

25:21.680 --> 25:23.780
它是一个JXX元素

25:24.180 --> 25:26.080
它并不是我们之前大家学到的

25:26.080 --> 25:29.980
比如说是个自付串或者是一个函数的引用

25:30.280 --> 25:30.780
不是

25:31.180 --> 25:32.380
它是一个JXX

25:34.420 --> 25:34.820
好

25:35.020 --> 25:35.720
那我们来看

25:36.020 --> 25:38.520
首先先看一下整个这个的一个解释

25:39.020 --> 25:43.020
就是我们需要在比如说Dialogue

25:47.110 --> 25:48.510
就随便写一个标签啊

25:48.810 --> 25:49.710
它后面有一个

25:49.710 --> 25:51.410
比如说我们举例

25:51.510 --> 25:52.510
这是个属性

25:52.810 --> 25:54.410
然后在它里面的话呢

25:54.410 --> 25:56.610
主要它传的是一个什么

25:57.110 --> 25:58.310
是一个JX

26:00.010 --> 26:00.910
是个JX

26:01.210 --> 26:02.710
那么当然不可能这么写嘛

26:02.910 --> 26:05.110
但是我们可以逻辑上先理清

26:05.110 --> 26:06.910
它可能要传一个JX给它

26:07.410 --> 26:08.310
同时呢

26:08.410 --> 26:10.210
它不能传其他任何元素

26:10.210 --> 26:11.510
你说我自付串还不能给

26:12.910 --> 26:13.310
第二

26:14.010 --> 26:15.210
它必须遵循

26:15.310 --> 26:17.610
this.properstudian的所有规则

26:18.010 --> 26:19.310
那就是刚才我们前面说的

26:20.110 --> 26:22.210
它是不能去进行修改的

26:22.210 --> 26:22.610
二

26:22.810 --> 26:24.410
它不能拆开使用的

26:24.410 --> 26:24.910
对啊

26:25.110 --> 26:27.610
这些都是属于properstudian的规则

26:28.110 --> 26:29.410
它还有一个自己特点

26:29.410 --> 26:32.410
就是属于所有的组合都必须使用

26:32.910 --> 26:34.110
Render 开头

26:34.210 --> 26:36.410
并且命名方式遵循

26:36.410 --> 26:37.910
托风式命名法则

26:38.810 --> 26:40.110
用这个内容来做

26:40.510 --> 26:41.910
那我们现在来看了啊

26:42.310 --> 26:44.610
那么我们能够

26:44.710 --> 26:47.510
我们怎么样能够即使用它的

26:47.810 --> 26:49.310
比如说这是结束服

26:51.640 --> 26:53.340
在它结束服里面的

26:53.740 --> 26:55.040
这些属性

26:55.240 --> 26:57.340
又使用它现在的

26:57.540 --> 26:58.440
上面这些

26:58.740 --> 26:59.540
那么这呢

26:59.540 --> 27:00.740
我们来举个案例

27:00.740 --> 27:01.440
你就知道了

27:02.540 --> 27:04.140
我们一旦打开我们的

27:04.840 --> 27:05.440
程序

27:05.640 --> 27:06.240
然后呢

27:06.740 --> 27:08.140
我们把这些都关掉

27:08.140 --> 27:09.240
我们来看一下啊

27:09.640 --> 27:12.140
我们依然在我们的app里面来做

27:12.840 --> 27:13.440
然后呢

27:13.440 --> 27:15.340
我们把我们现在的

27:15.340 --> 27:17.340
还是属于使用这dialogue

27:17.340 --> 27:18.640
我们来修改一下了

27:19.340 --> 27:22.040
那么首先我们到我们的

27:22.540 --> 27:23.240
呃

27:24.540 --> 27:25.240
调用点

27:25.240 --> 27:26.640
就是app里面我们来想

27:26.640 --> 27:27.740
就是我们这边

27:28.040 --> 27:29.340
这部分我肯定要传

27:29.340 --> 27:29.840
对吧

27:29.840 --> 27:32.340
因为这部分是属于我现在的一个

27:32.640 --> 27:33.240
呃

27:34.940 --> 27:35.840
修订属性

27:36.540 --> 27:38.340
但是我同时我在它上面

27:38.340 --> 27:40.940
我需要放置另外的属性结构出来

27:41.540 --> 27:43.240
另外的属性结构是什么

27:43.640 --> 27:45.540
另外的属性结构就是我现在

27:45.740 --> 27:47.640
需要传送给我们

27:48.640 --> 27:49.640
组件的

27:49.940 --> 27:50.740
复合

27:51.240 --> 27:52.240
组合模式

27:52.540 --> 27:53.640
那么他要求什么

27:53.640 --> 27:54.840
randow开头

27:56.040 --> 27:57.640
系统一看到randow开头

27:57.640 --> 27:58.540
他会知道

27:59.340 --> 28:01.440
这个是属于我们的

28:01.940 --> 28:03.640
叫做组合组件

28:04.040 --> 28:06.740
它并不是一个简单的内容

28:07.040 --> 28:08.240
它里面需要什么

28:08.440 --> 28:09.240
你支柱

28:09.640 --> 28:12.340
你要给的jaxa一定要给这个jaxa

28:12.340 --> 28:14.140
表达是你不能直接给

28:14.540 --> 28:15.140
理解吧

28:15.640 --> 28:17.240
你一定要以这种方式来给

28:17.640 --> 28:19.440
比如说我们这边给一个

28:19.840 --> 28:21.140
我再写个view

28:22.640 --> 28:23.140
然后呢

28:23.140 --> 28:24.540
我这里边给个样式

28:24.540 --> 28:26.140
当然样式你可给可不给

28:26.140 --> 28:27.840
现在我们先把它名称写出来

28:28.640 --> 28:29.340
welcome

28:30.440 --> 28:31.140
messager

28:31.640 --> 28:32.640
然后这边写上

28:34.040 --> 28:34.640
welcome

28:34.940 --> 28:36.840
我们写一个简单的

28:37.040 --> 28:38.440
这样的一个标记

28:38.840 --> 28:40.140
写出这样一个标记来

28:41.240 --> 28:43.040
那么这个标记呢

28:43.040 --> 28:44.640
就可以方便我们说

28:44.840 --> 28:46.640
把整个这个叫做

28:47.240 --> 28:48.940
view的jaxa的语句

28:49.140 --> 28:50.640
传送给dialogue

28:51.040 --> 28:52.340
dialogue怎么识别

28:52.440 --> 28:54.040
它是靠这个在识别

28:54.340 --> 28:54.940
randow

28:55.640 --> 28:58.740
同时我们往后再传一个

28:59.640 --> 29:00.340
这样的话呢

29:00.340 --> 29:01.840
我们可以多次传送

29:02.640 --> 29:04.240
randow开头可以是

29:04.940 --> 29:05.540
foot

29:05.840 --> 29:06.940
你可以这样去写

29:07.640 --> 29:08.340
然后呢

29:08.340 --> 29:10.440
我们这边再等于

29:10.740 --> 29:12.540
你再给一个jaxa

29:13.140 --> 29:15.540
比如说我们下面可以做一个按钮

29:17.480 --> 29:18.680
你可以写个button

29:20.550 --> 29:21.250
然后呢

29:21.450 --> 29:23.050
你也可以给它一个样式

29:23.750 --> 29:24.750
那么我们这边呢

29:24.750 --> 29:26.050
可以说close

29:26.650 --> 29:28.150
当然这个样式的话呢

29:28.150 --> 29:28.950
我们这边

29:29.250 --> 29:30.850
不去做过多的设定

29:31.150 --> 29:33.250
我们写一个close出来

29:33.550 --> 29:34.950
button爆错的原因

29:34.950 --> 29:37.350
上面没有对它进行注册声明

29:38.550 --> 29:39.550
在这写一下

29:41.250 --> 29:42.050
OK了啊

29:42.450 --> 29:43.350
那么这样的话呢

29:43.350 --> 29:46.250
我们就完成了整个这个部分的操作

29:46.650 --> 29:47.850
dialogue本身自己

29:47.850 --> 29:49.250
我们是有一个

29:49.450 --> 29:50.450
randow hander

29:50.750 --> 29:52.150
传送了这样一句话

29:52.450 --> 29:54.650
我们有第二个叫randow footer

29:54.650 --> 29:56.150
传送了这样一句话

29:56.450 --> 29:58.850
然后同时他自己有一套这部分

29:59.150 --> 30:00.450
这个是我们的qt

30:00.450 --> 30:01.450
迫取方式

30:01.750 --> 30:02.850
对吧好

30:03.050 --> 30:03.850
那么接下去呢

30:03.850 --> 30:05.850
我们就应该的dialogue里面去玩了

30:06.450 --> 30:07.550
dialogue里面的话呢

30:07.550 --> 30:10.250
首先我们看到这边所获取到的

30:10.550 --> 30:11.350
说是qt

30:11.350 --> 30:12.150
这不用改

30:12.550 --> 30:13.550
对吧这不用改

30:13.850 --> 30:15.650
然后我们在这边需要改

30:16.050 --> 30:17.350
我们的welcome语矩

30:17.350 --> 30:19.350
应该是外部传送过来的

30:19.750 --> 30:21.050
所以我在这改称

30:21.350 --> 30:22.950
他是拿一个属性过来

30:23.250 --> 30:25.450
so this.property.

30:25.750 --> 30:26.450
这里边的

30:27.950 --> 30:29.250
randow header

30:29.750 --> 30:30.850
他拿的时候

30:31.150 --> 30:33.150
和我们直接在前面

30:33.650 --> 30:34.650
写的这名称

30:34.750 --> 30:36.150
他的规则是一样的

30:36.450 --> 30:38.850
只不过就是前面行称

30:38.850 --> 30:39.750
在dialogue的时候

30:39.750 --> 30:41.850
如果你给的是个接差的一个

30:42.050 --> 30:42.850
表达式的话

30:42.850 --> 30:44.550
你要以randow方式开头

30:44.850 --> 30:45.750
这是我们说到的

30:46.150 --> 30:47.950
所以他这边直接写的是header

30:48.250 --> 30:48.850
同理

30:48.850 --> 30:50.350
我们把这个也写一下

30:51.050 --> 30:52.050
然后在这里面呢

30:52.050 --> 30:52.850
我们写上

30:52.950 --> 30:55.750
当前的property.

30:56.750 --> 30:58.250
randow footer

30:59.750 --> 31:00.350
保存

31:00.850 --> 31:02.350
现在我们来看一下效果

31:02.650 --> 31:04.150
我这边传一个welcome

31:04.450 --> 31:05.950
这边传一个close annual

31:06.350 --> 31:08.550
所以他界面上面应该呈现出的是

31:08.550 --> 31:09.150
welcome

31:09.650 --> 31:10.550
close annual

31:10.750 --> 31:12.150
close annual可点击

31:12.150 --> 31:12.650
是不是

31:13.150 --> 31:14.450
那么这样的话就意味着

31:14.650 --> 31:15.650
中间部分

31:15.850 --> 31:17.750
顶部和底部

31:17.950 --> 31:20.150
或者称之为属性部分

31:20.350 --> 31:21.450
和cuting部分

31:21.750 --> 31:23.550
可以一起传送

31:23.950 --> 31:25.150
可以一起传送

31:25.850 --> 31:26.250
这样呢

31:26.250 --> 31:28.950
我们的整个调用规则就更丰富了

31:30.150 --> 31:30.850
只不过

31:30.950 --> 31:32.050
我们在传送

31:32.150 --> 31:33.750
jsa表达式的时候

31:33.850 --> 31:35.050
我们要用randow

31:35.250 --> 31:36.950
作为你现在的一个

31:37.450 --> 31:38.950
起始点或者称之为

31:39.050 --> 31:40.050
你的属性名

31:40.450 --> 31:43.050
不然系统并不知道你里面传送的

31:43.050 --> 31:44.250
到底是自付串

31:44.450 --> 31:46.450
还是属于你现在是个jsa

31:46.550 --> 31:47.150
理解吗

31:47.650 --> 31:48.250
这样的话呢

31:48.250 --> 31:50.850
我们基本上就能看到整个这个结构了

31:51.050 --> 31:52.350
而且非常简单

31:52.850 --> 31:53.250
对吧

31:53.250 --> 31:55.950
我们可以把组合的方式给放过来

31:56.950 --> 31:57.850
那请记住

31:58.050 --> 32:00.250
你最终的目的是什么

32:00.450 --> 32:02.750
是你在声明这个组建的时候

32:03.050 --> 32:05.850
你根本就没有对他里面的所有的内容

32:06.050 --> 32:07.150
进行设定

32:07.950 --> 32:08.650
你在声明

32:08.650 --> 32:10.050
比如说dialogue在这啊

32:10.350 --> 32:12.050
我们在声明这个dialogue的时候

32:12.050 --> 32:13.050
我们里面你看

32:13.050 --> 32:14.450
我只设定了一个头

32:14.650 --> 32:15.850
不放置内容

32:17.050 --> 32:19.050
birdle放置内容跟footer放置内容

32:19.050 --> 32:19.450
对吧

32:19.650 --> 32:21.050
里面具体内容都没有

32:21.250 --> 32:23.550
那么一旦你要超过一个以上的话

32:23.750 --> 32:25.150
那么你就用这样的方式来

32:25.650 --> 32:27.850
一个是我们的dialogue位置上面

32:27.950 --> 32:29.050
这边放上内容

32:29.350 --> 32:29.750
那么

32:30.050 --> 32:32.750
这种结构在现实生活中哪里用的比较多呢

32:32.950 --> 32:36.650
就是我们只有一个固定的框架的作为一个

32:36.850 --> 32:37.650
显示区域

32:37.650 --> 32:38.850
具体里面的

32:38.950 --> 32:40.650
你到底的显示是图片

32:40.850 --> 32:42.350
还是属于不同的文字

32:42.650 --> 32:44.450
比如说我会做一个警告文字

32:44.650 --> 32:45.950
做一些提示文字

32:46.150 --> 32:47.750
还是属于我们的一个

32:49.250 --> 32:49.750
下载啊

32:49.750 --> 32:51.350
凡是给用户的交互的内容

32:51.350 --> 32:53.350
那么咱们都可以用这个方式来解决

32:54.350 --> 32:57.050
主要的还是把它的整个呈现给用户

32:57.250 --> 32:59.550
那我们其实做的更有意思一点也可以这样

33:00.350 --> 33:01.350
你把这里面啊

33:01.650 --> 33:04.550
不同的几个的样式

33:04.550 --> 33:06.250
比如说一个是提示的

33:06.350 --> 33:09.050
一个是图片家内容搞笑的

33:09.150 --> 33:11.350
一个是属于我们的警告的

33:11.450 --> 33:14.150
你把每一种的这个形式都做成一个组件

33:14.550 --> 33:15.550
那么这时候呢

33:15.750 --> 33:17.750
你页面所需使用的时候

33:17.850 --> 33:19.250
你比如这方要做提示

33:19.250 --> 33:20.750
你就调某一个组件

33:20.850 --> 33:21.950
传什么参给他

33:22.250 --> 33:23.150
再调某个组件

33:23.250 --> 33:25.050
那么这个组件本身自己里面

33:25.050 --> 33:26.650
它其实没有更多的东西

33:26.850 --> 33:30.050
它只是简单的完成了我们现在的这个

33:31.250 --> 33:32.350
那个叫做

33:32.650 --> 33:35.250
dialogue里面的内容的存储显示

33:35.250 --> 33:36.150
就这点内容

33:36.150 --> 33:37.450
它存储进来

33:37.550 --> 33:38.850
放到它的自己组件里面

33:38.850 --> 33:39.850
然后显示一下

33:40.350 --> 33:40.950
ok吧

33:41.450 --> 33:43.050
这是后期的可以扩展的

33:43.150 --> 33:44.750
但是在做那个之前的话

33:44.950 --> 33:47.050
要把我们现在所讲的课程内容

33:47.250 --> 33:47.950
选理清

33:48.250 --> 33:49.650
现在回到 ppt 你来看

33:50.050 --> 33:52.250
ppt里面现在在讲这几个元素的时候

33:52.350 --> 33:53.350
你应该是会清楚

33:53.350 --> 33:54.750
一他遵循所有的

33:54.750 --> 33:55.350
this is the purpose

33:55.350 --> 33:56.750
then children 的所有规则

33:57.250 --> 33:59.350
这点上我们大家应该说是ok的

33:59.350 --> 34:01.150
第二所有组合都必须使用

34:01.150 --> 34:02.050
randle 开头

34:02.350 --> 34:03.450
都刚才我看到了

34:03.550 --> 34:04.550
那我们大家说

34:04.550 --> 34:05.750
你要尝试一下吗

34:05.850 --> 34:07.150
你把这个拿掉

34:10.410 --> 34:11.510
你把这个拿掉

34:12.510 --> 34:13.410
啊你拿掉的话

34:13.410 --> 34:14.410
你里边也得拿

34:14.910 --> 34:15.310
对吧

34:15.310 --> 34:16.510
你里边这个也没有

34:19.790 --> 34:21.090
这样去做的话

34:21.090 --> 34:22.390
你来看一下页面啊

34:25.510 --> 34:26.210
看到了吗

34:26.810 --> 34:28.310
这边啥都没有呈现

34:28.610 --> 34:30.710
它页面其实是爆错结构元素

34:31.510 --> 34:32.410
所以我们讲

34:32.510 --> 34:33.610
你拿掉以后

34:33.710 --> 34:35.510
它是不可以呈现出来的

34:35.510 --> 34:36.710
也有错误存在

34:37.510 --> 34:38.210
第二点呢

34:38.210 --> 34:40.810
我们刚才看到的 ppt 里面再给我说你的事

34:41.110 --> 34:43.710
就是指传单个 jsi 元素

34:43.710 --> 34:45.410
不能传入其他任何类型

34:46.410 --> 34:49.510
那么由于你是想用组合的方式

34:49.510 --> 34:50.910
多次给我们传植

34:51.110 --> 34:53.110
所以你必须传的是一个 jsi

34:53.310 --> 34:54.710
那么你就可以用这样的方式

34:54.710 --> 34:55.510
randle 来做

34:55.810 --> 34:56.710
你传其他的

34:56.810 --> 34:57.910
那么你是老师这样的方式

34:57.910 --> 34:59.210
还能不能传其他的

35:00.010 --> 35:00.710
你来看

35:02.010 --> 35:03.510
我这边传了一个

35:04.010 --> 35:04.610
future

35:05.010 --> 35:05.510
对吧

35:05.810 --> 35:07.110
我这边传了一个

35:07.510 --> 35:08.110
hatter

35:08.210 --> 35:09.410
那我在这再传一个

35:09.810 --> 35:10.510
传个念

35:12.320 --> 35:13.220
我传个念

35:13.420 --> 35:14.520
咱们叫做 Tom

35:15.520 --> 35:17.120
那么这样传完以后

35:17.120 --> 35:18.420
我到这边肯定得接嘛

35:18.420 --> 35:18.920
对吧

35:19.220 --> 35:21.320
然后我后边直接接场

35:23.840 --> 35:24.540
this 点

35:24.840 --> 35:25.740
preference 点

35:26.240 --> 35:26.640
念

35:27.040 --> 35:28.240
你这样的方式接

35:28.440 --> 35:29.440
那我们来看一下

35:30.740 --> 35:31.440
能不能传

35:33.420 --> 35:34.020
可以吧

35:34.220 --> 35:35.020
可以的

35:35.420 --> 35:36.520
所以就变成的是

35:36.820 --> 35:38.320
如果是自服串的话

35:38.620 --> 35:40.720
那么你一定要是用普通的

35:40.920 --> 35:42.620
还属性的方式做传送

35:43.020 --> 35:44.820
那么你前面没有带上randle

35:44.920 --> 35:45.820
系统就会知道

35:45.920 --> 35:48.320
这个是一个普通的属性写法

35:48.720 --> 35:49.920
如果你写上个randle

35:50.120 --> 35:51.220
那么系统一定会知道

35:51.420 --> 35:52.620
你后面的jsX

35:52.920 --> 35:55.020
即使你不写jsX

35:55.020 --> 35:56.420
你说这边我也是jsX

35:56.820 --> 35:58.020
那么这时候告诉你

35:58.020 --> 35:59.420
一旦你带上randle了

35:59.520 --> 36:00.420
系统就认为

36:00.620 --> 36:01.620
你里面写的

36:01.720 --> 36:04.120
一定是一个jsX格式

36:04.720 --> 36:05.220
理解吧

36:05.320 --> 36:07.420
系统有这个编译的这样的一个

36:08.220 --> 36:08.820
识别

36:09.020 --> 36:09.520
所以呢

36:09.520 --> 36:11.120
你一定要遵循这个规范

36:11.120 --> 36:12.220
你才能去做到

36:12.620 --> 36:14.220
那么这样这里的话呢

36:14.220 --> 36:16.420
这就是我们所要讲解的什么

36:17.220 --> 36:19.020
叫做chilling与组合

36:19.620 --> 36:20.420
回顾一下

36:20.820 --> 36:22.020
所谓的chilling呢

36:22.120 --> 36:23.220
它其实就是

36:23.520 --> 36:25.620
我们可以把部分的内容

36:26.220 --> 36:27.720
放在引用端的

36:27.920 --> 36:30.120
开始和结束的组件标签中间

36:30.520 --> 36:31.120
然后呢

36:31.320 --> 36:32.620
在你在组件里面

36:32.620 --> 36:34.920
我们使用propertychilling的方式

36:35.220 --> 36:37.720
能够直接把这一段代码

36:38.320 --> 36:39.420
直接拷贝进来

36:39.420 --> 36:40.820
或者说使用进来

36:41.420 --> 36:42.020
第二个

36:42.320 --> 36:43.520
我们还可以呢

36:43.520 --> 36:44.420
在页面中

36:44.620 --> 36:46.620
使用第二段第3段的

36:46.720 --> 36:47.820
我们的jsX

36:47.920 --> 36:50.420
那么使用我们的属性写法来写

36:50.920 --> 36:52.720
属性写法的几个特点是

36:52.720 --> 36:53.920
你需要randle开头

36:53.920 --> 36:54.520
并且

36:54.720 --> 36:58.220
直接跟上jsX表达是里面写上你现在的

36:58.420 --> 37:00.520
强行呈现在组件中的

37:01.380 --> 37:02.020
jsX

37:02.920 --> 37:03.720
那么最后呢

37:03.720 --> 37:05.520
就是我们刚刚看到的这个模型

37:05.920 --> 37:08.420
你要传多段jsX给它的话

37:08.420 --> 37:10.120
那么你不能写在我们的

37:10.320 --> 37:11.220
整个这个

37:11.520 --> 37:12.720
开始标签里面

37:12.820 --> 37:15.320
因为开始标签他只认为就一个球铃

37:15.820 --> 37:16.420
那么此时呢

37:16.420 --> 37:20.320
我们就可以作为以randle开头的一个属性

37:20.620 --> 37:22.920
他是特别是可以帮助到我们

37:23.120 --> 37:26.620
传送简单的我们jsX的模块代码

37:27.020 --> 37:27.820
那么这样呢

37:28.020 --> 37:30.220
在我现在整个这个叫做

37:30.420 --> 37:32.420
主件里面的话呢

37:32.520 --> 37:34.920
他就可以既拿到chilling内容

37:35.280 --> 37:39.620
又可以去拿到我们作为属性传递的jsX

37:39.880 --> 37:41.520
还可以拿到普通辨量

37:41.720 --> 37:43.720
那么他里面就可以大有所谓

37:44.120 --> 37:45.920
因为他的各种数据都可以取得

37:46.220 --> 37:47.220
对吧好

37:47.420 --> 37:49.620
那么这就是我们今天这里要讲解的啊

37:49.820 --> 37:50.820
抽筋与组合

37:51.120 --> 37:51.920
大家的话呢

37:51.920 --> 37:53.520
一定把这个概念去理解

37:53.520 --> 37:55.620
并且很好的去做一些练习

37:55.720 --> 37:56.620
好吧好

37:56.620 --> 37:57.120
直接客人

