WEBVTT

00:00.050 --> 00:03.050
好 我们继续讲解Tarot的系列课程

00:03.050 --> 00:06.050
那么这节课呢 我们做一个小案例了

00:06.050 --> 00:10.050
我们来做一个我们的录音机的案例功能

00:10.050 --> 00:14.050
因为在之前呢 我们唱节课呢 主要讲了一下基础的

00:14.050 --> 00:18.050
开始录音 结束录音 和播放录音的功能

00:18.050 --> 00:22.050
那么这节课呢 我们讲一个 我们像手机一样

00:22.050 --> 00:26.050
本身来有一个就是按住 说话 说了一段时间以后呢

00:26.050 --> 00:30.050
然后放掉 那就发送 或者说我们这样的一个功能

00:30.050 --> 00:35.050
那么发送呢 其实只是在最后做一个音频的传输

00:35.050 --> 00:39.050
那么它其实做了一个记录 我们看 我们按住它 不放

00:39.050 --> 00:42.050
看到吗 它会有一个这样的说话的标签出现

00:42.050 --> 00:45.050
当我放开的时候 它就记录住了

00:45.050 --> 00:48.050
它就记录住了 然后我再来 我点一下

00:48.050 --> 00:52.050
我放开 然后它就记录住了 估计你录音成功

00:52.050 --> 00:54.050
就这样形成了这样一个结构

00:54.050 --> 00:57.050
那我每段录音里面呢 我点击一下 它就能播放

00:57.050 --> 01:01.050
它点击一下就能播放 是这个逻辑

01:01.050 --> 01:05.050
那我们来看一下 这个的录音机功能该怎么做

01:05.050 --> 01:08.050
像我们手机里面真正的录音机一样

01:08.050 --> 01:12.360
其实是拿我们前面所讲的基础部分

01:12.360 --> 01:16.360
做了一个小案例 并且再加了一些小功能而已

01:16.360 --> 01:19.360
比如说 中间有个图片 闪啊闪 这个逻辑 对吧

01:19.360 --> 01:27.900
创建

01:27.900 --> 01:30.900
我们创建我们现在的这个项目

01:30.900 --> 01:43.550
咱们称之为Recorder Demo

01:43.550 --> 01:57.430
JXX CSS

01:57.430 --> 02:04.790
紧接着我们这边 我们做一些简单的

02:04.790 --> 02:29.670
框架

02:29.670 --> 02:34.180
Import

02:34.180 --> 02:36.180
Recorder

02:36.180 --> 02:40.640
Demo.css

02:40.640 --> 02:43.640
Export Default

02:43.640 --> 02:45.640
Class

02:45.640 --> 02:51.830
Recorder Demo

02:51.830 --> 03:05.010
Exchange Component

03:05.010 --> 03:08.010
紧接着我们再来

03:08.010 --> 03:31.300
Random Return View

03:31.300 --> 03:33.300
Recorder

03:33.300 --> 03:36.300
我们把当前Recorder这个

03:36.300 --> 03:56.910
放到我们的app.dxx的第一句

03:56.910 --> 03:59.910
等它编译完 完成以后 它在编译

03:59.910 --> 04:05.570
完成以后我们再打开页面

04:05.570 --> 04:10.860
打开页面

04:10.860 --> 04:12.860
它只有在你打开页面的那一刻

04:12.860 --> 04:14.860
它才会显示这内容

04:14.860 --> 04:16.860
紧接着我们继续

04:16.860 --> 04:18.860
我们在这可以看到的是

04:18.860 --> 04:21.860
首先我们要做整个界面 对吧

04:21.860 --> 04:22.860
整个界面布局的话

04:22.860 --> 04:25.860
它其实可以一直往下滚动

04:25.860 --> 04:26.860
所以这个滚动效果

04:26.860 --> 04:31.860
我们是要通过我们的Scold View来做的

04:31.860 --> 04:41.140
所以在里面我们先写一个Scold View

04:41.140 --> 04:42.140
通过它来做

04:42.140 --> 04:53.140
再来Scold View

04:53.140 --> 04:55.140
Scold View 本身自己

04:55.140 --> 04:57.140
我们先不采取它里面的其他的设置

04:57.140 --> 04:59.140
让这个设置我们都会很多

04:59.140 --> 05:01.140
那我们直接把里面

05:01.140 --> 05:08.670
把一些结构给搭建出来

05:08.670 --> 05:10.670
咱们把结构给搭建出来

05:10.670 --> 05:11.670
View

05:11.670 --> 05:13.670
那么这里边如果有数据了

05:13.670 --> 05:15.670
我们就能让它呈现 对吧

05:15.670 --> 05:16.670
如果没有数据的话

05:16.670 --> 05:17.670
它肯定不能呈现

05:17.670 --> 05:18.670
所以我们这个View

05:18.670 --> 05:19.670
我作为一个最大的

05:19.670 --> 05:21.670
到时候要都判断的

05:21.670 --> 05:22.670
然后再往里面

05:22.670 --> 05:24.670
就是我们现在的一个

05:24.670 --> 05:33.040
之后要循环的一个部分

05:33.040 --> 05:34.040
之后要循环的部分

05:34.040 --> 05:36.040
所以我们在这儿View写出来

05:36.040 --> 05:39.040
这边里面我们写样式

05:39.040 --> 05:41.040
这个到真的要定一些像式

05:41.040 --> 05:46.530
Board

05:46.530 --> 05:48.530
里面再给进去

05:48.530 --> 05:52.800
View

05:52.800 --> 05:54.800
它是一个单元

05:54.800 --> 05:59.240
我们称之它为Scold

05:59.240 --> 06:04.900
再给进去里面是

06:04.900 --> 06:11.050
View

06:11.050 --> 06:12.050
Glass

06:12.050 --> 06:23.750
Scold View

06:23.750 --> 06:27.090
Glass Name

06:27.090 --> 06:31.360
第一个

06:31.360 --> 06:33.360
Date

06:33.360 --> 06:35.360
存储路径

06:35.360 --> 06:36.360
这后面是一个路径

06:36.360 --> 06:37.360
插插插

06:37.360 --> 06:38.360
我们先给一个

06:38.360 --> 06:43.980
现在定位

06:43.980 --> 06:44.980
View

06:44.980 --> 06:45.980
第二个

06:45.980 --> 06:49.930
我们就拿Data数据

06:49.930 --> 06:50.930
直接来给

06:50.930 --> 06:52.930
我们第二个是

06:52.930 --> 07:14.480
存储时间

07:14.480 --> 07:15.480
音频

07:15.480 --> 07:19.010
大小

07:19.010 --> 07:22.770
好 给出这三个来

07:22.770 --> 07:24.770
那么界面基本上就是这个结构

07:24.770 --> 07:26.770
我们前面的部分

07:26.770 --> 07:28.770
当然后面我们会有一个按钮

07:28.770 --> 07:29.770
其实这个就很简单

07:29.770 --> 07:31.770
我们先把前面的这块内容

07:31.770 --> 07:33.770
给它定位给定出来

07:33.770 --> 07:34.770
定位好以后

07:34.770 --> 07:35.770
我们后面再来看

07:35.770 --> 07:36.770
后面的结构

07:36.770 --> 07:41.700
上市里面来

07:41.700 --> 07:45.040
它其实很简单

07:45.040 --> 07:47.040
我们只要显示三行就可以

07:47.040 --> 07:48.040
对吧

07:48.040 --> 07:51.610
Board

07:51.610 --> 07:52.610
All Floating Hidden

07:52.610 --> 07:53.610
超过部分不需要

07:53.610 --> 08:03.350
Board Bottom

08:03.350 --> 08:04.350
Solid

08:04.350 --> 08:09.460
随便给一个颜色值

08:09.460 --> 08:10.460
26

08:10.460 --> 08:11.460
A5

08:11.460 --> 08:12.460
FF

08:12.460 --> 08:13.460
随便给

08:13.460 --> 08:14.460
是个小蓝色

08:14.460 --> 08:20.540
ER

08:20.540 --> 08:21.540
Board

08:21.540 --> 08:28.590
第二个

08:30.590 --> 08:31.590
列

08:31.590 --> 08:37.230
Display

08:37.230 --> 08:38.230
Flex

08:38.230 --> 08:40.670
Merging

08:40.670 --> 08:42.670
20rpx

08:42.670 --> 08:51.270
再有的是列下面的DB

08:51.270 --> 08:58.960
列下面的DB

08:58.960 --> 09:00.960
把这个设定一下

09:01.960 --> 09:02.960
Flex里面每一个是E

09:02.960 --> 09:03.960
做的是

09:03.960 --> 09:04.960
然后Position

09:05.960 --> 09:06.960
定它是Relative

09:06.960 --> 09:07.960
好了

09:07.960 --> 09:09.960
就这样就行了

09:09.960 --> 09:12.960
这个是上面显示的文字

09:13.960 --> 09:15.960
默认在没有数据情况下

09:15.960 --> 09:16.960
肯定不呈现的

09:16.960 --> 09:17.960
对吧

09:17.960 --> 09:18.960
那么接下去

09:18.960 --> 09:19.960
我们开始做第二块内容

09:19.960 --> 09:20.960
第二块是什么呢

09:20.960 --> 09:22.960
是我中间

09:22.960 --> 09:24.960
如果我按着时间长以后

09:24.960 --> 09:27.960
它应该会显示出一个图片

09:27.960 --> 09:29.960
就是有一个麦克风

09:29.960 --> 09:30.960
它那个声音

09:30.960 --> 09:31.960
上上下下

09:31.960 --> 09:32.960
上上下下的

09:32.960 --> 09:33.960
这个

09:33.960 --> 09:34.960
那么这样的话

09:34.960 --> 09:35.960
我们要说明一下

09:35.960 --> 09:36.960
其实上上下下

09:36.960 --> 09:39.960
其实它是不同的图片

09:39.960 --> 09:41.960
只不过我在短时间内

09:41.960 --> 09:42.960
切换

09:42.960 --> 09:43.960
是这个逻辑

09:43.960 --> 09:44.960
所以我们这边

09:44.960 --> 09:45.960
来做一下

09:45.960 --> 09:53.240
这个图片的结构体系

09:53.240 --> 09:55.240
动态

09:55.240 --> 10:00.620
麦克风

10:00.620 --> 10:01.620
View

10:01.620 --> 10:06.790
先定一下

10:06.790 --> 10:12.920
样式

10:12.920 --> 10:13.920
Speak

10:13.920 --> 10:17.260
Style

10:17.260 --> 10:19.260
里边开始做图片

10:19.260 --> 10:23.270
Imager

10:23.270 --> 10:25.270
样式一样

10:25.270 --> 10:30.180
Imager应该大写

10:30.180 --> 10:35.860
Imager没有声明注册

10:35.860 --> 10:39.780
给个样式

10:39.780 --> 10:43.730
咱们把Imager叫做

10:43.730 --> 10:44.730
SoundStyle

10:44.730 --> 10:51.090
给它一张图片

10:51.090 --> 10:52.090
那么在我本地

10:52.090 --> 10:55.090
我可以存储一张图片下来

10:55.090 --> 10:56.090
那么我们举例

10:56.090 --> 10:57.090
这是第一张图片

10:57.090 --> 10:58.090
那么此时呢

10:58.090 --> 11:01.090
我们可以做第二张图片在这

11:01.090 --> 11:03.090
第二张

11:03.090 --> 11:05.090
然后再做第三张

11:05.090 --> 11:06.090
第四张第五张

11:06.090 --> 11:08.090
我们把这几个都写出来

11:08.090 --> 11:12.380
我们有五张图片

11:12.380 --> 11:14.380
这样可以设定

11:14.380 --> 11:15.380
但是这五张图片

11:15.380 --> 11:17.380
不是说每个时间都出来

11:17.380 --> 11:19.380
它需要有一个判断

11:19.380 --> 11:21.380
它有一个时间判断

11:21.380 --> 11:23.380
也就是到某个时间点了

11:23.380 --> 11:25.380
它某个值是等于它现在这个值了

11:25.380 --> 11:27.380
那么它就可以出来

11:27.380 --> 11:28.380
逻辑上是这个

11:28.380 --> 11:29.380
所以我们要用到什么

11:29.380 --> 11:31.380
列表渲染概念

