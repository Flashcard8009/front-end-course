WEBVTT

00:00.050 --> 00:02.050
好 我们继续讲解Tarot课程

00:02.050 --> 00:05.050
这些课呢 给大家讲解一下路由的功能

00:05.050 --> 00:08.050
路由呢 在整个的Tarot过程中呢

00:08.050 --> 00:10.050
还是相对而言比较简单

00:10.050 --> 00:12.050
那么我们所谓的路由呢

00:12.050 --> 00:14.050
其实我们可以把它分成两个概念

00:14.050 --> 00:18.050
第一个呢 是叫做页面的进入路由

00:18.050 --> 00:21.050
第二种呢 我们把它称之为就跳转路由

00:21.050 --> 00:23.050
这两个方式都可以这么说

00:23.050 --> 00:26.050
首先第一点 我们页面的路由功能呢

00:26.050 --> 00:29.050
并不是我们自己需要做一个router

00:29.050 --> 00:32.050
做一个配置 它就是自带的

00:32.050 --> 00:35.050
所以我们不需要首先配置它

00:35.050 --> 00:37.050
但是我们需要去设定

00:37.050 --> 00:39.050
告诉它你现在路由是一个

00:39.050 --> 00:42.050
到哪儿 从哪个页面进

00:42.050 --> 00:44.050
这样的一个过程都要去设定

00:44.050 --> 00:45.050
但不要配置

00:45.050 --> 00:47.050
那么我们首先看一下

00:47.050 --> 00:51.050
我们只需要在入口文件的config中指定好Payers

00:51.050 --> 00:54.050
然后呢 我们就可以完成

00:54.050 --> 00:58.050
你所有的一个Tarot页面提供的API的精英跳转

00:59.050 --> 01:01.050
那么路由传餐呢也是一样

01:01.050 --> 01:03.050
我们通过get的方式

01:03.050 --> 01:05.050
我们可以通过跳转的get的方式

01:05.050 --> 01:07.050
完成路由的传餐

01:07.050 --> 01:10.050
同时呢 我们也可以通过Parmise的方式来获取

01:10.050 --> 01:12.050
待会儿也可以再看一下效果

01:12.050 --> 01:14.050
接餐和传餐的概念

01:14.050 --> 01:17.050
好 那我们呢 进入到我们的代码

01:17.050 --> 01:21.050
我们来看一下整个的一个路由的概念

01:21.050 --> 01:24.050
首先第一点啊 路由本身刚才讲了

01:24.050 --> 01:27.050
不需要有任何的传餐或者说配置

01:27.050 --> 01:30.050
它只是在我们的src里面

01:30.050 --> 01:33.050
我们有一个ab.gs

01:33.050 --> 01:35.050
打开以后

01:35.050 --> 01:39.050
我们有一个叫做Payers这样的一个位置

01:39.050 --> 01:41.050
它的位置是在config里面

01:41.050 --> 01:45.050
那么这里呢 我们其实把它称之为

01:45.050 --> 01:49.050
就是页面的所有路径的list

01:49.050 --> 01:51.050
这边是所有路径的list

01:51.050 --> 01:53.050
这边只做几件事情

01:53.050 --> 01:56.050
第一 它是需要你把我们当前

01:56.050 --> 01:59.050
在程序中 特别是对于微信小程序来讲

01:59.050 --> 02:01.050
用到的所有页面

02:01.050 --> 02:04.050
都设置在这个Payers里

02:04.050 --> 02:07.050
让程序在进入小程序那一刻

02:07.050 --> 02:11.050
就已经知道当前有几个页面

02:11.050 --> 02:13.050
这是它的第一个作用

02:13.050 --> 02:14.050
第二个的话呢

02:14.050 --> 02:17.050
那么它可以帮我们来识别

02:17.050 --> 02:21.050
哪些页面是否已经删除

02:21.050 --> 02:22.050
哪些页面增加以后

02:22.050 --> 02:24.050
还没有进行管理

02:24.050 --> 02:27.050
等一些预判断操作

02:27.050 --> 02:30.050
第三 当然这里边的话呢

02:30.050 --> 02:33.050
也有一个顺序 就是我们强调的

02:33.050 --> 02:35.050
你只要把我们的一个路径

02:35.050 --> 02:38.050
写在Payers的第一条上面

02:38.050 --> 02:40.050
写在Payers的第一条

02:40.050 --> 02:42.050
我们就把它称之为

02:42.050 --> 02:45.050
是整个微信小程序的起始页面

02:45.050 --> 02:47.050
那么永远注意一下

02:47.050 --> 02:49.050
这边有两个概念

02:49.050 --> 02:52.050
在title中有两个概念

02:53.050 --> 02:55.050
首先我们可以打开

02:55.050 --> 02:57.050
我们现在往下走

02:57.050 --> 02:59.050
咱们打开这个app.js以后

02:59.050 --> 03:02.050
我们看到这边有一个index

03:02.050 --> 03:04.050
这边有一个index

03:04.050 --> 03:06.050
这个index是谁

03:06.050 --> 03:08.050
这个index的话

03:08.050 --> 03:09.050
我们往上走

03:09.050 --> 03:10.050
我按到最上面看

03:10.050 --> 03:11.050
看到吗

03:11.050 --> 03:14.050
它是Payers下的index

03:14.050 --> 03:15.050
Payers下的index

03:15.050 --> 03:17.050
你发现我这有吗

03:17.050 --> 03:18.050
有吗

03:18.050 --> 03:19.050
没有了吧

03:19.050 --> 03:21.050
那么这边就要强调一点

03:21.050 --> 03:23.050
这个index

03:23.050 --> 03:25.050
这个Payers的index

03:25.050 --> 03:29.050
它并不是我们真正的页面

03:29.050 --> 03:31.050
它起什么作用呢

03:31.050 --> 03:33.050
它主要的是

03:33.050 --> 03:35.050
完成我们如果要实行

03:35.050 --> 03:38.050
在网页端打开

03:38.050 --> 03:41.050
我们要实现网页端打开的时候

03:41.050 --> 03:44.050
它是我们的主入口

03:44.050 --> 03:46.050
记住这一点

03:46.050 --> 03:48.050
但是我现在是小程序

03:48.050 --> 03:50.050
小程序本身自己

03:50.050 --> 03:52.050
和页面的这一块

03:52.050 --> 03:53.050
是没有关系的

03:53.050 --> 03:55.050
小程序有关的

03:55.050 --> 03:57.050
就是这个config配置

03:57.050 --> 04:00.050
在最后形成我们小程序的那一刻

04:00.050 --> 04:02.050
我们可以到我们的代码中

04:02.050 --> 04:04.050
我们可以看到

04:04.050 --> 04:06.050
这边有一个app.json

04:06.050 --> 04:08.050
它整个关心的

04:08.050 --> 04:09.050
就是这个文件

04:09.050 --> 04:10.050
它整个关心的

04:10.050 --> 04:12.050
就是小程序的配置文件

04:12.050 --> 04:14.050
所以你如果说

04:14.050 --> 04:16.050
你现在想做的是小程序

04:16.050 --> 04:18.050
那你就要控制好

04:18.050 --> 04:20.050
这个pagers里面的

04:20.050 --> 04:21.050
第一个页面

04:21.050 --> 04:23.050
如果你像做的是h5

04:23.050 --> 04:24.050
那么你要控制好

04:24.050 --> 04:26.050
你现在在pagers里面的

04:26.050 --> 04:29.050
导入的这个其实页面

04:29.050 --> 04:30.050
ok吧

04:30.050 --> 04:32.050
这点你需要去理解

04:32.050 --> 04:33.050
第二的话呢

04:33.050 --> 04:34.050
那么小程序

04:34.050 --> 04:35.050
我们在学习过程中

04:35.050 --> 04:37.050
我们也知道

04:37.050 --> 04:39.050
你只要把你当前的一个页面

04:39.050 --> 04:40.050
放在第一个页面中

04:40.050 --> 04:42.050
放在第一条的话

04:42.050 --> 04:43.050
就是起始的

04:43.050 --> 04:44.050
就是打开的

04:44.050 --> 04:45.050
但是有时候

04:45.050 --> 04:47.050
我们也会有一些值

04:47.050 --> 04:48.050
所谓的就是

04:48.050 --> 04:50.050
我想直接看后面的页面

04:50.050 --> 04:52.050
我有两个一套作

04:52.050 --> 04:53.050
一个呢

04:53.050 --> 04:54.050
是我现在的

04:54.050 --> 04:56.050
首页lister列表

04:56.050 --> 04:57.050
当我点进去

04:57.050 --> 04:58.050
任何一个列表的时候

04:58.050 --> 05:01.050
我想看到一个详情页

05:01.050 --> 05:03.050
但是详情页的显示

05:03.050 --> 05:05.050
你必须要有一个

05:05.050 --> 05:08.050
首页的一个id的传送过来

05:08.050 --> 05:09.050
但是详情页我还没做好

05:09.050 --> 05:11.050
那这种情况下

05:11.050 --> 05:12.050
你每次都要从

05:12.050 --> 05:13.050
首页往里跳

05:13.050 --> 05:14.050
首页往里跳

05:14.050 --> 05:15.050
那么这时候

05:15.050 --> 05:17.050
你就可以采取什么办法

05:17.050 --> 05:19.050
你还记得起来吗

05:19.050 --> 05:20.050
如果说忘记同学的话

05:20.050 --> 05:22.050
那听我这边说一下

05:22.050 --> 05:23.050
正常情况下

05:23.050 --> 05:26.050
我们是可以改变这个Peters的

05:26.050 --> 05:27.050
改变Peters的

05:27.050 --> 05:28.050
你做两个页面

05:28.050 --> 05:29.050
你把后一个页面

05:29.050 --> 05:31.050
往前移就可以了

05:31.050 --> 05:32.050
但是这种移呢

05:32.050 --> 05:34.050
它只能是直接打开

05:34.050 --> 05:37.050
它没有办法做到往里传参

05:37.050 --> 05:38.050
那么这时候怎么办

05:38.050 --> 05:40.050
这时候在微信小程序

05:40.050 --> 05:41.050
开发上面的话

05:41.050 --> 05:43.050
我们上面有一个编译

05:43.050 --> 05:44.050
我们这边有个编译按钮

05:44.050 --> 05:46.050
这个编译按钮打开以后的话

05:46.050 --> 05:49.050
我们看到默认是叫做普通编译

05:49.050 --> 05:52.050
这边有一个叫做天加编译模式

05:52.050 --> 05:54.050
你对它进行点击

05:54.050 --> 05:58.050
那么你在这个启动页面上面

05:58.050 --> 05:59.050
你看我现在属表一放上来

05:59.050 --> 06:01.050
它下面立马会出现一个

06:01.050 --> 06:03.050
下拉可以选择框

06:03.050 --> 06:04.050
这个选择框里面

06:04.050 --> 06:05.050
由于我现在本身

06:05.050 --> 06:07.050
只有一个页面

06:07.050 --> 06:08.050
只有我有一个页面

06:08.050 --> 06:10.050
如果你有多个页面的话

06:10.050 --> 06:11.050
那么它会在这个

06:11.050 --> 06:13.050
天加编译的启动页面下面

06:13.050 --> 06:14.050
会出现

06:14.050 --> 06:16.050
你选择一个

06:16.050 --> 06:18.050
这个模式名称无所谓

06:18.050 --> 06:20.050
它的名称和你现在的启动页面

06:20.050 --> 06:22.050
是保持一致

06:22.050 --> 06:23.050
你把它改成中文也可以

06:23.050 --> 06:25.050
这个用途就是

06:25.050 --> 06:27.050
当你点开这个箭头的时候

06:27.050 --> 06:30.050
这边你看到这样一个名称而已

06:30.050 --> 06:32.050
那么我们把这个页面

06:32.050 --> 06:34.050
比如说你需要另一个页面

06:34.050 --> 06:35.050
你把它写好以后

06:35.050 --> 06:38.050
然后你这边可以有一个启动参数

06:38.050 --> 06:39.050
咱们有没有看到

06:39.050 --> 06:41.050
势力所给你的

06:41.050 --> 06:44.050
其实就是我们可以通过

06:44.050 --> 06:46.050
自己自服串拼接

06:46.050 --> 06:48.050
所完成的一个叫

06:48.050 --> 06:51.050
连接查询自服串

06:51.050 --> 06:52.050
我们就代表着

06:52.050 --> 06:54.050
你要进这个页面的时候

06:54.050 --> 06:57.050
我们预先给它配了一些参数

06:57.050 --> 06:59.050
这就可以了

06:59.050 --> 07:02.050
我们每次你想通过

07:02.050 --> 07:04.050
我们这时候建一个页面

07:04.050 --> 07:05.050
大家可以来看一下

07:05.050 --> 07:08.050
这是属于它的一个路由的

07:08.050 --> 07:11.050
特别针对于微信小程序的一个操作

07:11.050 --> 07:13.050
我们这边建一个index吧

07:13.050 --> 07:19.560
我们建一个index

07:19.560 --> 07:20.560
文件加

07:20.560 --> 07:22.560
然后我们下面建一下

07:22.560 --> 07:24.560
index.css

07:24.560 --> 07:28.730
再来

07:28.730 --> 07:30.730
index.jxx

07:30.730 --> 07:32.730
两个

07:32.730 --> 07:33.730
紧接着

07:33.730 --> 07:34.730
我们把它里面的

07:34.730 --> 07:35.730
css不用管

07:35.730 --> 07:37.730
jxx的代码给写一下

07:37.730 --> 07:43.470
import tarot

07:43.470 --> 07:57.490
component from tarot

07:57.490 --> 08:10.030
compot view tester

08:10.030 --> 08:15.660
from tarot.js

08:15.660 --> 08:17.660
component

08:17.660 --> 08:22.810
expert default

08:22.810 --> 08:28.720
class index

08:28.720 --> 08:45.800
index extends

08:45.800 --> 08:53.400
component

08:53.400 --> 08:54.400
标准里面

08:54.400 --> 08:55.400
四大件

08:55.400 --> 08:56.400
标准里面

08:56.400 --> 08:57.400
我们做三大件吧

08:57.400 --> 08:58.400
就是

08:58.400 --> 08:59.400
第一个

08:59.400 --> 09:01.400
gozo

09:01.400 --> 09:02.400
gozo

09:02.400 --> 09:10.540
constractor

09:10.540 --> 09:17.720
第二个

09:17.720 --> 09:18.720
生命周期

09:18.720 --> 09:25.250
component mount

09:25.250 --> 09:28.390
重大一下

09:28.390 --> 09:39.000
生命周期

09:39.000 --> 09:41.000
第三

09:41.000 --> 09:58.980
就是我们的jsa返回

09:58.980 --> 10:01.980
它有一个呈现

10:01.980 --> 10:02.980
我们把它

10:02.980 --> 10:04.980
不要它直接出来

10:04.980 --> 10:12.660
return

10:12.660 --> 10:16.260
标准

10:16.260 --> 10:26.990
extends

10:26.990 --> 10:35.550
component

10:35.550 --> 10:37.550
我们看一下

10:37.550 --> 10:38.550
它本身有几个呢

10:38.550 --> 10:39.550
一个是

10:39.550 --> 10:40.550
gozo

10:40.550 --> 10:41.550
constractor

10:41.550 --> 10:42.550
第二个

10:42.550 --> 10:43.550
component

10:43.550 --> 10:44.550
well mount

10:44.550 --> 10:45.550
第三个

10:45.550 --> 10:46.550
randle

10:46.550 --> 10:47.550
返回

10:47.550 --> 10:48.550
保存

10:48.550 --> 10:49.550
然后它告诉你

10:49.550 --> 10:50.550
当前没有被引用

10:50.550 --> 10:51.550
那没有关系

10:51.550 --> 10:53.550
样式先不用管

10:53.550 --> 10:54.550
我们现在

10:54.550 --> 10:55.550
然后我们看到

10:55.550 --> 10:57.550
现在这个已经写好了

10:57.550 --> 10:59.550
我们需要做的事情是

10:59.550 --> 11:02.550
毕然在我们的页面中呈现

11:02.550 --> 11:03.550
我们让它一样

11:03.550 --> 11:04.550
这边改成

11:04.550 --> 11:05.550
在我们的微信中

11:05.550 --> 11:06.550
我们想

11:06.550 --> 11:07.550
直接看到它

11:07.550 --> 11:09.550
但不把它放在第一个

11:09.550 --> 11:12.180
地的

11:12.180 --> 11:13.180
把它做成地的吧

11:13.180 --> 11:17.650
紧接着我们继续来看

11:17.650 --> 11:19.650
我们本身

11:19.650 --> 11:22.650
需要把它放在我们的

11:22.650 --> 11:24.650
这个app.jsa里面

11:25.650 --> 11:27.650
我们about放在第一页

11:27.650 --> 11:28.650
它放第二页

11:29.650 --> 11:30.650
改名

11:34.050 --> 11:35.050
index

11:35.050 --> 11:38.190
改名

11:39.190 --> 11:40.190
它放第二页了

11:40.190 --> 11:42.190
那么此时你打开我们的

11:42.190 --> 11:44.190
整个这个微信小程序的时候

11:44.190 --> 11:46.190
其实你看到的还是第一页

11:46.190 --> 11:47.190
对吧

11:47.190 --> 11:48.190
index在第二页

11:48.190 --> 11:50.190
但是我偏偏想先看index

11:50.190 --> 11:52.190
所以我们在这边

11:52.190 --> 11:54.190
你看天佳的时候点它

11:54.190 --> 11:56.190
我们在这边输

11:56.190 --> 12:02.220
你看啊

12:02.220 --> 12:05.780
我们把这个放进来

12:05.780 --> 12:09.310
index

12:09.310 --> 12:17.300
模式也改一下

12:17.300 --> 12:24.660
我们确定

12:24.660 --> 12:26.660
它说没有找到

12:26.660 --> 12:27.660
我们来看一下

12:27.660 --> 12:29.660
这边有个index

12:30.660 --> 12:31.660
这边index

12:31.660 --> 12:32.660
pader

12:32.660 --> 12:35.100
我们看一下

12:35.100 --> 12:37.610
修改

12:37.610 --> 12:38.610
paders

12:38.610 --> 12:41.690
这个

12:41.690 --> 12:42.690
这个

12:42.690 --> 12:43.690
index

12:43.690 --> 12:44.690
index

12:44.690 --> 12:53.850
确定

12:54.850 --> 12:56.850
我们来看一下

12:57.850 --> 12:59.850
我们看一下页面中

12:59.850 --> 13:01.850
我们继续来看一下

13:01.850 --> 13:03.850
那么这个改变以后

13:03.850 --> 13:04.850
你看

13:04.850 --> 13:05.850
它就能够更新过来

13:05.850 --> 13:06.850
那我来说一下

13:06.850 --> 13:08.850
如果有同学

13:08.850 --> 13:09.850
放上去以后

13:09.850 --> 13:11.850
这边始终没法更新的话

13:11.850 --> 13:13.850
那么有一个原因

13:13.850 --> 13:15.850
就是这个导致的

13:15.850 --> 13:17.850
就是你的abid

13:18.850 --> 13:20.850
如果你要以便衣的方式

13:20.850 --> 13:21.850
来操作

13:21.850 --> 13:23.850
就是你添加一个便衣模式

13:23.850 --> 13:24.850
来操作的话

13:24.850 --> 13:27.850
你一定要更新一下你的abid

13:27.850 --> 13:28.850
你把你的

13:28.850 --> 13:29.850
刚才我们的操作原因

13:29.850 --> 13:31.850
是我用了一个测试id

13:31.850 --> 13:32.850
那么你现在的话

13:32.850 --> 13:34.850
你要用你正式的id

13:34.850 --> 13:35.850
然后放上以后

13:35.850 --> 13:36.850
然后这边

13:36.850 --> 13:39.850
你再去建议这样的一个情况

13:39.850 --> 13:40.850
你来看我现在

13:40.850 --> 13:41.850
把它给删了

13:41.850 --> 13:45.350
删出这模式以后的话

13:45.350 --> 13:48.350
我们添加便衣模式

13:48.350 --> 13:50.350
然后这边我们看一下

13:50.350 --> 13:51.350
我选择到它

13:51.350 --> 13:52.350
我把它给删了

13:52.350 --> 13:54.350
在删到paders的时候

13:54.350 --> 13:56.350
它立马下面会出现这个index

13:56.350 --> 13:58.350
那就代表着系统已经获支了

13:58.350 --> 14:00.350
你这时候去选择它

14:00.350 --> 14:02.350
这时候你再点确定的话

14:02.350 --> 14:04.350
那么系统就会帮助你

14:04.350 --> 14:05.350
把当前的页面

14:05.350 --> 14:06.350
在开始的时候

14:06.350 --> 14:08.350
直接定位到index来

14:08.350 --> 14:09.350
是吧

14:09.350 --> 14:13.350
而你要它下面这边出现的话

14:13.350 --> 14:17.350
你一定要使用你的正式的abid

14:17.350 --> 14:19.350
是这个逻辑

14:19.350 --> 14:21.350
那么这样的话

14:21.350 --> 14:22.350
在我程序中

14:22.350 --> 14:23.350
在我不改变

14:23.350 --> 14:25.350
我原来还是about的时候

14:25.350 --> 14:26.350
about的时候

14:26.350 --> 14:28.350
我就能在微信小程序中

14:28.350 --> 14:31.350
去查看我第二个页面的效果

14:31.350 --> 14:32.350
这种时候

14:32.350 --> 14:34.350
经常是用在我们

14:34.350 --> 14:35.350
调适

14:35.350 --> 14:36.350
带餐

14:36.350 --> 14:37.350
传入页面的时候

14:37.350 --> 14:38.350
你说老师

14:38.350 --> 14:40.350
那现在我想

14:40.350 --> 14:42.350
那我现在再切回去

14:42.350 --> 14:43.350
意味着

14:43.350 --> 14:45.350
我现在回到这个页面

14:45.350 --> 14:48.350
回到普通页面的时候

14:48.350 --> 14:49.350
它的呈现

14:49.350 --> 14:51.350
就直接和你现在的

14:51.350 --> 14:52.350
第一个页面

14:52.350 --> 14:54.350
放置有关

14:54.350 --> 14:57.350
所谓的我们所谓的普通便宜

14:57.350 --> 14:58.350
其实就是我们的

14:58.350 --> 15:00.350
第一个paders页面

15:00.350 --> 15:02.350
而后面是指定便宜

15:02.350 --> 15:03.350
是这个逻辑

15:03.350 --> 15:05.350
大家需要明确一下

15:05.350 --> 15:06.350
那么我们回个头来看

15:06.350 --> 15:09.350
在整个这个代码逻辑中

15:09.350 --> 15:10.350
我们说

15:10.350 --> 15:12.350
这边可以一直往下写

15:12.350 --> 15:13.350
这是没有关系的

15:13.350 --> 15:14.350
你有多少写多少

15:14.350 --> 15:15.350
千万记住

15:15.350 --> 15:17.350
不要去逮后坠

15:17.350 --> 15:18.350
不要去逮后坠

15:18.350 --> 15:20.350
这是我们说到的第一点

15:20.350 --> 15:21.350
第二个

15:21.350 --> 15:23.350
这是所谓的入口

15:23.350 --> 15:26.350
这是一个叫入口路由

15:26.350 --> 15:27.350
路由的概念

15:27.350 --> 15:29.350
直接他只关心一个入口

15:29.350 --> 15:30.350
不需要你去配

15:30.350 --> 15:31.350
因为为什么

15:31.350 --> 15:33.350
因为我们没有办法

15:33.350 --> 15:35.350
在使用微信小镇的时候

15:35.350 --> 15:37.350
去手工的书写

15:37.350 --> 15:39.350
它要跳转的地址栏

15:39.350 --> 15:42.350
它没有一个地址栏给你使用

15:42.350 --> 15:44.350
你也没有办法

15:44.350 --> 15:46.350
在它里面所谓的微信分享

15:46.350 --> 15:48.350
浏览器查看

15:48.350 --> 15:49.350
这种概念都不可以

15:49.350 --> 15:51.350
因为它是一个独立的

15:51.350 --> 15:52.350
在里面

15:52.350 --> 15:54.350
并不是借助微信

15:54.350 --> 15:55.350
某一个比如说

15:55.350 --> 15:57.350
什么公众号服务器的浏览器

15:57.350 --> 15:58.350
来做

15:58.350 --> 16:00.350
如果你看到地址栏

16:00.350 --> 16:02.350
那么微信的一切安全性

16:02.350 --> 16:03.350
就白彻

16:03.350 --> 16:04.350
但你看不到

16:04.350 --> 16:05.350
你也拿不到

16:05.350 --> 16:06.350
你也没法

16:06.350 --> 16:08.350
又见说以网页的方式去获取

16:08.350 --> 16:10.350
那它就是独立封装

16:10.350 --> 16:12.350
在微信小镇讯内的

16:12.350 --> 16:13.350
OK

16:13.350 --> 16:14.350
那我们来说

16:14.350 --> 16:16.350
既然我现在已经有两个页面了

16:16.350 --> 16:18.350
那么我们就开始进行

16:18.350 --> 16:20.350
所谓的第二个路由

16:20.350 --> 16:22.350
这是我们的跳转路由

16:22.350 --> 16:24.350
跳转路由是可以根据我们

16:24.350 --> 16:27.350
现在的页面进行路由跳转

16:27.350 --> 16:28.350
路由跳转

16:28.350 --> 16:30.350
我们说一下

16:30.350 --> 16:32.350
由于你是小程序的跳转

16:32.350 --> 16:33.350
本身来讲

16:33.350 --> 16:35.350
Taro有他自己的跳转模式

16:35.350 --> 16:36.350
小程序也有

16:36.350 --> 16:38.350
他们两者有什么区别

16:38.350 --> 16:40.350
他们本身的用途是否一样

16:40.350 --> 16:42.350
我们来看一下

16:42.350 --> 16:44.350
我们跑到我们的

16:44.350 --> 16:45.350
About页面中

16:45.350 --> 16:48.350
我们来进行跳转

16:48.350 --> 16:58.000
我把这清一下

16:58.000 --> 16:59.000
好

16:59.000 --> 17:02.000
我们就做一个最简单的

17:02.000 --> 17:03.000
我们不是船船

17:03.000 --> 17:05.000
我们直接完成

17:05.000 --> 17:06.000
这个叫做

17:06.000 --> 17:11.400
go to index

17:11.400 --> 17:14.400
go to index

17:14.400 --> 17:16.400
咱们把上面的几个都删掉

17:16.400 --> 17:25.340
Stator里面也没有

17:25.340 --> 17:31.280
然后这两个也不用引进来

17:31.280 --> 17:37.280
好这样的话页面是不是干净多了

17:37.280 --> 17:38.280
咱们看一下

17:38.280 --> 17:43.190
bomb也在对吧

17:43.190 --> 17:44.190
好

17:44.190 --> 17:46.190
我们把这个名称

17:46.190 --> 17:48.190
往这放一下

17:48.190 --> 17:50.190
修改它一下

17:50.190 --> 17:52.190
然后这边去创建一个

17:52.190 --> 17:56.340
这样编一下再看一下

17:56.340 --> 17:59.800
是不是OK了

17:59.800 --> 18:00.800
好

18:00.800 --> 18:01.800
这边有一个按钮

18:01.800 --> 18:02.800
把按钮改一下

18:02.800 --> 18:10.570
我们叫做跳转船直

18:10.570 --> 18:13.900
这个也不要

18:13.900 --> 18:14.900
首先我们来看一下

18:14.900 --> 18:16.900
生命周期里面

18:16.900 --> 18:17.900
go to里面

18:17.900 --> 18:20.900
跳转船直有几种模式

18:20.900 --> 18:25.970
跳转船直

18:25.970 --> 18:26.970
对于我们来讲

18:26.970 --> 18:27.970
我们非常简单

18:27.970 --> 18:29.970
我们首先用第1个

18:29.970 --> 18:32.970
它要去到我们的

18:32.970 --> 18:34.970
叫做index页面

18:34.970 --> 18:38.970
所以我们用的是tarrow

18:38.970 --> 18:40.970
用到的是tarrow的一个

18:40.970 --> 18:46.810
跳转模型

18:46.810 --> 18:47.810
直接写

18:47.810 --> 18:49.810
大写的tarrow

18:49.810 --> 18:51.810
从哪来它是

18:51.810 --> 18:53.810
就上面的它

18:53.810 --> 18:55.810
tarrow里面点

18:55.810 --> 18:57.810
这边给的都是

18:57.810 --> 18:58.810
首先第1个

18:58.810 --> 19:00.810
我们打navigate to

19:00.810 --> 19:01.810
进行跳转

19:01.810 --> 19:04.810
它指的是新开页面的跳转

19:04.810 --> 19:12.540
新打开一个页面

19:12.540 --> 19:14.540
url冒号

19:14.540 --> 19:17.540
然后我们后面跟上的是

19:17.540 --> 19:19.540
你要跳到哪一集

19:19.540 --> 19:20.540
paters

19:20.540 --> 19:21.540
下面的

19:21.540 --> 19:23.540
我们的index

19:23.540 --> 19:26.540
下面的index

19:26.540 --> 19:27.540
这样跳

19:27.540 --> 19:28.540
ok

19:28.540 --> 19:30.540
那我们先来看一下效果

19:30.540 --> 19:36.470
点击跳转

19:36.470 --> 19:37.470
上面箭头出来了

19:37.470 --> 19:39.470
这时候来到index

19:39.470 --> 19:40.470
对不对

19:40.470 --> 19:42.470
那这时候就表示的是

19:42.470 --> 19:43.470
我打开了两个界面

19:43.470 --> 19:44.470
那个是开着

19:44.470 --> 19:46.470
只不过被hitter

19:46.470 --> 19:48.470
隐藏到了我们的

19:48.470 --> 19:49.470
为激活状态

19:49.470 --> 19:50.470
这个打开了

19:50.470 --> 19:53.470
这个把后面再给显示出来

19:53.470 --> 19:54.470
ok

19:54.470 --> 19:55.470
明显

19:55.470 --> 19:56.470
能够跳转

19:56.470 --> 20:01.130
第二步

20:01.130 --> 20:02.130
tarrow

20:02.130 --> 20:04.130
点

20:04.130 --> 20:06.130
redirector

20:06.130 --> 20:08.130
它指的是什么

20:08.130 --> 20:09.130
指的是

20:09.130 --> 20:11.130
重定向

20:11.130 --> 20:13.130
意味着

20:13.130 --> 20:14.130
它完成了一个

20:14.130 --> 20:16.130
在当前页面

20:16.130 --> 20:17.130
打开

20:17.130 --> 20:19.130
并且关闭当前页面

20:19.130 --> 20:21.130
重新指向一个路径的操作

20:21.130 --> 20:26.260
对吧

20:26.260 --> 20:27.260
没有箭头

20:27.260 --> 20:28.260
当前页面打开

20:28.260 --> 20:29.260
你想回去

20:29.260 --> 20:30.260
回不去

20:30.260 --> 20:31.260
它没有回去的概念

20:31.260 --> 20:32.260
就是一个页面

20:32.260 --> 20:33.260
前面的关了

20:33.260 --> 20:34.260
当前的打开了

20:34.260 --> 20:36.260
ok

20:36.260 --> 20:38.260
那么这是我们的

20:38.260 --> 20:40.260
tarrow所给出来的两种写法

20:40.260 --> 20:42.260
再来看

20:42.260 --> 20:44.260
我们那微信呢

20:44.260 --> 20:45.260
你想一下

20:45.260 --> 20:46.260
微信呢

20:46.260 --> 20:47.260
微信的写法

20:47.260 --> 20:48.260
如果我是微信一直过来的

20:48.260 --> 20:50.260
能不能呢

20:50.260 --> 20:51.260
这是重定向

20:51.260 --> 20:52.260
写一下

20:52.260 --> 20:53.260
我们来用一下

20:53.260 --> 21:00.920
微信本身的写法

21:00.920 --> 21:01.920
上面和它是一样的

21:01.920 --> 21:03.920
我们依然是有微信的

21:03.920 --> 21:05.920
微信

21:05.920 --> 21:07.920
点

21:07.920 --> 21:08.920
对吧

21:08.920 --> 21:10.920
我们把上面的这个拿下来

21:10.920 --> 21:12.920
它是否可以拿到

21:12.920 --> 21:14.920
微信的这个接口

21:14.920 --> 21:19.640
它有两种方式处理

21:19.640 --> 21:20.640
对吧

21:20.640 --> 21:21.640
第一种方式是不处理

21:21.640 --> 21:22.640
它给微信

21:22.640 --> 21:23.640
那微信本身自己认识

21:23.640 --> 21:24.640
第二种方式

21:24.640 --> 21:25.640
它强制处理

21:25.640 --> 21:26.640
但是告知

21:26.640 --> 21:27.640
你这个东西

21:27.640 --> 21:29.640
我不识别

21:29.640 --> 21:34.740
我们来看一下程序

21:34.740 --> 21:35.740
看到了吗

21:35.740 --> 21:37.740
它本身就处理了

21:37.740 --> 21:38.740
并且呢

21:38.740 --> 21:39.740
它处理的过程是

21:39.740 --> 21:40.740
把它直接给到微信

21:40.740 --> 21:41.740
由微信来完成

21:41.740 --> 21:42.740
它的跳转

21:42.740 --> 21:43.740
所以这个

21:43.740 --> 21:45.740
它会在taro中报错

21:45.740 --> 21:46.740
但是

21:46.740 --> 21:48.740
taro本身自己

21:48.740 --> 21:49.740
有一个特点

21:49.740 --> 21:51.740
它不会强制处理

21:51.740 --> 21:53.740
你里面所写的代码

21:53.740 --> 21:55.740
因为我们taro并不知道

21:55.740 --> 21:56.740
你最后

21:56.740 --> 21:57.740
你在编写的时候

21:57.740 --> 21:59.740
你并不知道你最后

21:59.740 --> 22:01.740
你输出的那一端

22:01.740 --> 22:02.740
也就是我们所谓的

22:02.740 --> 22:04.740
第二次编译的

22:04.740 --> 22:05.740
程序中

22:05.740 --> 22:06.740
是否有

22:06.740 --> 22:07.740
可解析的部分

22:07.740 --> 22:09.740
什么叫第二次编译呢

22:09.740 --> 22:10.740
就是你像我现在

22:10.740 --> 22:12.740
我写好这段代码以后

22:12.740 --> 22:14.740
我对它进行contrast保存

22:14.740 --> 22:15.740
此时

22:15.740 --> 22:16.740
它是把我们

22:16.740 --> 22:18.740
希望能够出现在

22:18.740 --> 22:20.740
微信中的代码给你编译了

22:20.740 --> 22:21.740
这时候

22:21.740 --> 22:22.740
它并不知道

22:22.740 --> 22:23.740
微信对这段代码

22:23.740 --> 22:25.740
是如何解析的

22:25.740 --> 22:26.740
所以

22:26.740 --> 22:27.740
这个wx

22:27.740 --> 22:28.740
我们

22:28.740 --> 22:29.740
taro认为

22:29.740 --> 22:30.740
这个内容

22:30.740 --> 22:32.740
是由微信来进行

22:32.740 --> 22:33.740
二次编译

22:33.740 --> 22:34.740
呈现

22:34.740 --> 22:35.740
微信

22:35.740 --> 22:37.740
你应该认识wx

22:37.740 --> 22:38.740
是这个逻辑

22:38.740 --> 22:39.740
这样的话

22:39.740 --> 22:41.740
我们就可以非常简单的

22:41.740 --> 22:43.740
你把你所需要写的代码

22:43.740 --> 22:44.740
就是

22:44.740 --> 22:45.740
你中端

22:45.740 --> 22:46.740
也就是微信小程序端

22:46.740 --> 22:48.740
你可能需要的代码

22:48.740 --> 22:49.740
你都可以写在

22:49.740 --> 22:51.740
我们的taro愚法中

22:51.740 --> 22:52.740
这样的话

22:52.740 --> 22:54.740
taro是不处理

22:54.740 --> 22:55.740
把它传到

22:55.740 --> 22:56.740
我们的微信端

22:56.740 --> 22:57.740
微信经过第二次的

22:57.740 --> 22:58.740
对原码的编译

22:58.740 --> 22:59.740
呈现出

22:59.740 --> 23:00.740
你所需要的页面

23:00.740 --> 23:02.740
是形成这样的一个逻辑

23:02.740 --> 23:03.740
我们看到

23:03.740 --> 23:05.740
无论你里面用taro

23:05.740 --> 23:06.740
你如果用taro的方式的话

23:06.740 --> 23:08.740
它会帮你转换成wx

23:08.740 --> 23:10.740
如果你写的是wx的话

23:10.740 --> 23:11.740
它就根本就不管

23:11.740 --> 23:12.740
对设施

23:12.740 --> 23:13.740
当然

23:13.740 --> 23:15.740
你也可以用它来做

23:15.740 --> 23:19.080
这个的话

23:19.080 --> 23:21.080
应该大家很明确

23:21.080 --> 23:25.480
它本身也是能够跳转的

23:25.480 --> 23:26.480
OK

23:26.480 --> 23:27.480
紧接着继续来

23:27.480 --> 23:28.480
那么

23:28.480 --> 23:29.480
我们再往下一步

23:29.480 --> 23:31.480
既然说到了导航

23:31.480 --> 23:33.480
既然说到了跳转

23:33.480 --> 23:36.480
那么我们所谓的路由的

23:36.480 --> 23:37.480
这一部分就有了

23:37.480 --> 23:39.480
路由本身自己也是形成

23:39.480 --> 23:41.480
你的页面去哪

23:41.480 --> 23:42.480
到哪

23:42.480 --> 23:43.480
从哪来

23:43.480 --> 23:44.480
这样的一个格式

23:44.480 --> 23:46.480
那么紧接着下去的是

23:46.480 --> 23:48.480
我们怎么样去做switch tab

23:48.480 --> 23:49.480
我们可以看一下

23:49.480 --> 23:50.480
因为对taro来讲

23:50.480 --> 23:52.480
它是能够直接

23:52.480 --> 23:53.480
通过它的点击

23:53.480 --> 23:55.480
通过它的

23:55.480 --> 23:57.480
扩展的这样的一个提示服务

23:57.480 --> 24:00.110
看到的

24:00.110 --> 24:02.110
咱们往下看一下

24:02.110 --> 24:03.110
看到没有

24:03.110 --> 24:06.110
当我打sw的时候

24:06.110 --> 24:09.110
它会提示我有个switch tab

24:09.110 --> 24:11.110
switch tab

24:11.110 --> 24:13.110
switch tab是什么

24:13.110 --> 24:14.110
是tabba

24:14.110 --> 24:16.110
是我们在页面中

24:16.110 --> 24:18.110
如果你定义tabba的时候

24:18.110 --> 24:20.110
所应该能够传送的

24:20.110 --> 24:23.110
我们的一个跳转位置

24:23.110 --> 24:24.110
这个是

24:24.110 --> 24:26.110
我们在学导航的时候

24:26.110 --> 24:27.110
我们讲过

24:27.110 --> 24:29.110
导航本身分成两种

24:29.110 --> 24:31.110
第一种就是直接的跳转

24:31.110 --> 24:33.110
从A页面到B页面的跳转

24:33.110 --> 24:35.110
这种跳转都能做

24:35.110 --> 24:36.110
而第二种

24:36.110 --> 24:37.110
如果要传参的话

24:37.110 --> 24:39.110
那么switch tab

24:39.110 --> 24:42.110
它是通过我们的页面之间的

24:42.110 --> 24:43.110
直接的切换

24:43.110 --> 24:44.110
它不存在

24:44.110 --> 24:45.110
数据传送

24:45.110 --> 24:47.110
而其他两个都会有

24:47.110 --> 24:48.110
同时switch tab

24:48.110 --> 24:49.110
只能用在一个上面

24:49.110 --> 24:50.110
是什么

24:50.110 --> 24:52.110
就是tabba

24:52.110 --> 24:53.110
tabba的切换

24:53.110 --> 24:54.110
这里大家

24:54.110 --> 24:55.110
应该要明确

24:55.110 --> 24:57.110
那么我们这个有

24:57.110 --> 24:58.110
我们微信这个也有

24:58.110 --> 24:59.110
所以

24:59.110 --> 25:00.110
当你两个全有的时候

25:00.110 --> 25:02.110
那么由于你现在是在

25:02.110 --> 25:04.110
taro中进行编程

25:04.110 --> 25:05.110
所以

25:05.110 --> 25:06.110
我们还是认为

25:06.110 --> 25:08.110
你用taro的这个许语法

25:08.110 --> 25:09.110
相对而言

25:09.110 --> 25:10.110
会好一点

25:10.110 --> 25:11.110
因为

25:11.110 --> 25:12.110
本身编译器

25:12.110 --> 25:13.110
就应该看到

25:13.110 --> 25:16.110
你这边需要进行跳转内容

25:16.110 --> 25:18.110
而并非盲带

25:18.110 --> 25:19.110
你让编译器

25:19.110 --> 25:21.110
根本就是很识别不了

25:21.110 --> 25:23.110
这是我们说到的

25:23.110 --> 25:25.110
跳转路由

25:25.110 --> 25:27.110
和我们的起始路由

25:27.110 --> 25:28.110
这两个概念

25:28.110 --> 25:29.110
那么紧接着

25:29.110 --> 25:30.110
我们再来看

25:30.110 --> 25:31.110
我们还有一个

25:31.110 --> 25:33.110
就是传参

25:33.110 --> 25:34.110
传参

25:34.110 --> 25:35.110
就是

25:35.110 --> 25:37.110
我们通过一个路由形式

25:37.110 --> 25:39.110
给另一个页面

25:39.110 --> 25:40.110
进行数据传送

25:40.110 --> 25:41.110
参数的过程

25:41.110 --> 25:43.110
那我们是非常简单

25:43.110 --> 25:45.110
我们就利用当前

25:45.110 --> 25:46.110
我们已经写好的这个

25:46.110 --> 25:48.110
来完成一个传参概念

25:48.110 --> 25:49.110
我们redirector

25:49.110 --> 25:50.110
我们index页面

25:50.110 --> 25:52.110
进行数据传送

25:52.110 --> 25:53.110
我们传送的时候

25:53.110 --> 25:55.110
我们在这边就写上

25:55.110 --> 25:57.110
第一个

25:57.110 --> 25:58.110
id

25:58.110 --> 26:00.110
等于

26:00.110 --> 26:02.110
11001

26:02.110 --> 26:03.110
与上

26:03.110 --> 26:05.620
念

26:05.620 --> 26:07.620
等于

26:07.620 --> 26:08.620
烫

26:08.620 --> 26:09.620
与上

26:09.620 --> 26:11.620
念等于烫

26:11.620 --> 26:12.620
保存

26:12.620 --> 26:14.620
那你先到index中取

26:14.620 --> 26:15.620
index我们说过

26:15.620 --> 26:18.620
它可以在它的生命周期里面

26:18.620 --> 26:19.620
去接收你现在

26:19.620 --> 26:21.620
所传送过来的数据

26:21.620 --> 26:22.620
那么有一些生命经济

26:22.620 --> 26:23.620
其实无法操作

26:23.620 --> 26:24.620
但有些可以

26:24.620 --> 26:26.620
比如说我这边写个data.net

26:26.620 --> 26:28.620
那么我们在里面去接收

26:28.620 --> 26:29.620
我们来看一下

26:29.620 --> 26:32.620
我们直接console.log

26:32.620 --> 26:34.620
我们来接收一下data.net

26:34.620 --> 26:35.620
怎么写

26:35.620 --> 26:36.620
router

26:36.620 --> 26:37.620
路由

26:37.620 --> 26:40.620
所传送过来的参数

26:40.620 --> 26:42.620
我们来看一下效果

26:42.620 --> 26:46.760
点击

26:46.760 --> 26:47.760
它要跳转

26:47.760 --> 26:49.760
跳转到第二个页面

26:49.760 --> 26:50.760
怎么看

26:50.760 --> 26:51.760
id.net

26:51.760 --> 26:52.760
是不是接到了

26:52.760 --> 26:53.760
这是路由

26:53.760 --> 26:55.760
所传送过来的参数

26:55.760 --> 26:56.760
这边是不是可以拿到

26:56.760 --> 26:57.760
已经显示出来了

26:57.760 --> 26:59.760
你要拿得详细一点的话

26:59.760 --> 27:01.760
那就是id

27:01.760 --> 27:03.760
然后的话你再去拿它里面的

27:03.760 --> 27:10.760
console.log的拿法

27:10.760 --> 27:11.760
对吧

27:11.760 --> 27:12.760
你这样去拿下来

27:12.760 --> 27:13.760
我觉得这个是

27:13.760 --> 27:16.840
再有

27:16.840 --> 27:19.840
换另外一种写法

27:19.840 --> 27:20.840
也就是说

27:20.840 --> 27:21.840
这些纸

27:21.840 --> 27:22.840
我们都可以用

27:22.840 --> 27:27.370
我们的s6的

27:27.370 --> 27:29.370
自不穿模型

27:29.370 --> 27:30.370
拼接

27:30.370 --> 27:46.290
这种都没有问题

27:46.290 --> 27:47.290
好了

27:47.290 --> 27:49.290
那么这样的传指的话

27:49.290 --> 27:50.290
没有问题

27:50.290 --> 27:52.290
还是强调一点

27:52.290 --> 27:54.290
我们在做跳转过程中

27:54.290 --> 27:56.290
一旦你把这个内容

27:56.290 --> 27:58.290
已经放入到了tabba里面

27:58.290 --> 28:00.290
它是无法进行这样

28:00.290 --> 28:02.290
直接拼接的传指道

28:02.290 --> 28:05.290
我们这边还是强调一下

28:05.290 --> 28:07.290
这边接收纸的过程中

28:07.290 --> 28:08.290
你接收到以后

28:08.290 --> 28:11.290
你后期在当前页面中的处理

28:11.290 --> 28:14.290
那就不在传指范围内了

28:14.290 --> 28:16.290
它就不在传指范围内了

28:16.290 --> 28:20.290
我们需要对到页面的处理过程来说写了

28:20.290 --> 28:22.290
那么额外再说明一下

28:22.290 --> 28:24.290
在做这种传指的时候

28:24.290 --> 28:26.290
我们之前讲过

28:26.290 --> 28:28.290
除了我们这样的一个模型以外

28:28.290 --> 28:30.290
我们其实大家可以想一下

28:30.290 --> 28:31.290
我们还有哪种传指

28:31.290 --> 28:33.290
利用你以前学过的各种语法

28:33.290 --> 28:35.290
如果你能想到全局概念

28:35.290 --> 28:36.290
就ok

28:36.290 --> 28:37.290
如果你能想到书主概念

28:37.290 --> 28:38.290
也是ok

28:38.290 --> 28:40.290
如果你想到的是我们的

28:40.290 --> 28:41.290
各种的

28:41.290 --> 28:43.290
如果说是缓存概念

28:43.290 --> 28:44.290
也是ok

28:44.290 --> 28:46.290
就是我们用一种方式

28:46.290 --> 28:47.290
可以

28:47.290 --> 28:48.290
就传指概念

28:48.290 --> 28:50.290
可以想到更多的一些内容

28:50.290 --> 28:53.290
那么这个就是我们所谓的

28:53.290 --> 28:54.290
就是路由

28:54.290 --> 28:56.290
对于它的路由来讲不难

28:56.290 --> 28:57.290
不需要额外配

28:57.290 --> 28:59.290
只需要简单了解

28:59.290 --> 29:00.290
调转路由

29:00.290 --> 29:02.290
然后页面初始路由

29:02.290 --> 29:03.290
这些都有了

29:03.290 --> 29:04.290
ok

29:04.290 --> 29:05.290
这档课就先讲到这

