WEBVTT

00:00.000 --> 00:02.800
好 我们继续讲解我们的Tarot课程

00:02.800 --> 00:06.360
这节呢 主要给大家讲解一下云操作

00:06.880 --> 00:10.040
之前呢 我们讲解了一些API的接口

00:10.040 --> 00:11.800
并且呢 也举了一些示例

00:11.800 --> 00:15.240
让大家能看到不同的API接口

00:15.240 --> 00:18.120
在不同的程序中的相对应的结合

00:18.120 --> 00:21.280
并且能够完成它现在的一些基础功能

00:21.480 --> 00:25.760
包括是我们的一些无论是媒体的

00:25.840 --> 00:28.600
界面的 网络的 还是设备的

00:28.760 --> 00:29.720
这些都会有

00:30.320 --> 00:33.600
那么 接下来呢 我们讲讲解一下云

00:33.960 --> 00:37.000
因为 对于微信小程序来讲的话呢

00:37.000 --> 00:41.440
云对它来讲是一个非常重要的一种开发模型

00:41.800 --> 00:46.200
无论是你的数据操作还是属于存储操作

00:46.200 --> 00:47.640
还是属于函数操作

00:48.040 --> 00:50.440
在云端 我们本身来讲

00:50.440 --> 00:54.120
就是可以有一个非常好的数据存储的一个地点

00:54.440 --> 00:58.560
同时呢 我们也可以把数据保存在

00:58.560 --> 01:01.520
我们现在的云端形成一个数据库的概念

01:02.080 --> 01:03.720
那么在微信小程序里面呢

01:03.720 --> 01:06.400
云已经作为一个非常重要的部分

01:06.400 --> 01:07.880
但是呢 在Taro中

01:08.080 --> 01:09.600
我们利用它的框架

01:09.600 --> 01:11.800
怎么样来完成云端的操作

01:12.200 --> 01:15.040
这是呢 我们在之前课程中是没有讲过的

01:15.040 --> 01:17.360
那么从今天开始呢 给大家讲一下

01:17.720 --> 01:20.560
云的操作的整个的规范和流程

01:21.560 --> 01:22.360
那么首先

01:22.720 --> 01:26.120
我们要从基础的Taro的框架云开始讲起

01:26.480 --> 01:29.560
因为它的配置结构和我们在

01:29.560 --> 01:32.000
我们的微信小程序原生开发里面呢

01:32.000 --> 01:33.120
是有一定区别的

01:33.560 --> 01:37.680
所以呢 我们需要把这部分内容的基础先给大家讲一下

01:38.200 --> 01:42.360
那么首先 我们先看一下云的整个操作

01:42.840 --> 01:44.680
我们打开这个界面以后

01:44.680 --> 01:45.720
这个不用去管啊

01:46.160 --> 01:47.800
我们首先看到的是什么

01:47.840 --> 01:49.040
首先看到的是

01:49.040 --> 01:52.640
我们需要去用一个我们的真实的

01:53.680 --> 01:55.880
我们要用到真实的一个APPID来做

01:56.760 --> 01:58.560
那么这个真实的APPID呢

01:58.560 --> 02:01.480
其主要的作用是帮助我们来实现

02:01.840 --> 02:04.880
我们有一个云的这样的开发的一个按钮的出现

02:05.520 --> 02:07.000
如果你不是用真实的话

02:07.000 --> 02:09.160
那这个云按钮是没有办法出现的

02:09.400 --> 02:09.920
第二步

02:10.400 --> 02:12.160
点开云开发以后的话呢

02:12.160 --> 02:14.680
我们其实如果看过云操作同学

02:14.680 --> 02:17.000
就会知道这里边的一些结构

02:17.200 --> 02:18.920
我们做一个简单的介绍吧

02:18.920 --> 02:20.040
回顾也就立为这

02:20.600 --> 02:22.920
首先我们看到的是运营分析

02:22.920 --> 02:29.400
这块是你现在用云端操作的一些简单的一个显示图示

02:29.960 --> 02:33.120
我们看到数字库的容量在免费的

02:33.120 --> 02:35.080
也就是我们的测试阶段

02:35.080 --> 02:36.400
我们有两G的容量

02:36.400 --> 02:37.280
这足够了

02:37.880 --> 02:39.440
然后呢 我们访问次数

02:39.440 --> 02:41.920
每天可以访问的次数带5万次

02:42.400 --> 02:44.520
那我们做测试的时候也是足够了

02:45.040 --> 02:46.360
然后容量的话呢

02:46.360 --> 02:47.280
我们说一下

02:47.280 --> 02:48.120
存储容量

02:48.120 --> 02:51.400
也就是说我们可以把一些二经之文件

02:51.400 --> 02:54.200
包括是图片都可以存在这个存储里面

02:54.200 --> 02:55.600
它也是5G的容量

02:56.320 --> 02:57.760
我们注意啊

02:57.760 --> 03:01.680
5G是代表着你可以把你所有的东西加起来

03:01.680 --> 03:03.960
不是说你一个文件达到5G

03:06.420 --> 03:07.900
然后CDN的流量

03:07.900 --> 03:09.500
也就是通讯流量

03:09.900 --> 03:10.700
也在5G

03:11.700 --> 03:14.940
那么云函数的使用流量在4万G

03:15.580 --> 03:16.340
这样的话呢

03:16.340 --> 03:19.260
我们其实我们现在足够这些是没有问题

03:19.860 --> 03:20.740
紧接着的话呢

03:20.740 --> 03:21.580
我们再往下

03:22.020 --> 03:23.500
那么我们看到的是

03:23.500 --> 03:24.980
这边有用户访问啊

03:24.980 --> 03:27.260
你有多少人在访问你的话呢

03:27.260 --> 03:29.340
那么这边都可以有一些显示

03:29.780 --> 03:30.540
我这边呢

03:30.540 --> 03:32.260
是已经有我自己在访问

03:32.260 --> 03:32.540
对吧

03:32.540 --> 03:33.140
就一次

03:33.740 --> 03:35.540
那么同时在这个环节中

03:35.540 --> 03:38.780
我们其实是可以拿到你当前这个用户的

03:38.780 --> 03:39.740
唯一标识

03:39.740 --> 03:40.740
也就是OpenID

03:41.380 --> 03:44.060
那么在我们的介绍云端的时候呢

03:44.100 --> 03:45.220
我们说过一句

03:45.220 --> 03:51.260
就是我们小程序和外部第三方接口进行通讯的时候

03:51.260 --> 03:54.060
我们一定得用到我们的OpenID

03:54.060 --> 03:56.860
也就是能够确保你是哪一个小程序

03:56.860 --> 03:58.660
或者说哪一个客户端

03:59.180 --> 04:01.660
因为小程序本身的客户端呢

04:01.660 --> 04:04.220
它就的标识就是通过OpenID来的

04:04.540 --> 04:07.980
但如果你和自己电力的服务进行通讯的话

04:07.980 --> 04:10.060
你还要用我们的卡的ID啊

04:10.060 --> 04:11.020
keyID啊

04:11.020 --> 04:12.060
去换啊

04:12.180 --> 04:12.780
这些呢

04:12.780 --> 04:14.700
是相对而言比较复杂一点

04:14.700 --> 04:15.980
那么也就意味着

04:15.980 --> 04:20.100
你可能需要是单独的每一个都进入自己开发

04:20.100 --> 04:22.300
你不可以说是公共共享的

04:22.300 --> 04:24.980
你只能说是我公司自己开发一个

04:24.980 --> 04:26.700
用我公司自己内部东西

04:26.700 --> 04:28.140
然后进行操作

04:28.140 --> 04:29.780
但是如果是云端的话呢

04:29.780 --> 04:31.900
由于它本身的登录

04:31.900 --> 04:33.220
就像我们刚才说的

04:33.220 --> 04:34.860
你一定要用一个正确

04:34.860 --> 04:36.860
真实的APPID来做

04:36.860 --> 04:37.420
所以呢

04:37.420 --> 04:39.340
它本身是一个安全的

04:39.340 --> 04:40.220
同时呢

04:40.260 --> 04:43.020
它在云端获取所有数据啊

04:43.020 --> 04:44.540
进行操作的时候

04:44.540 --> 04:48.220
你并非不是需要你去做一个验签啊

04:48.220 --> 04:49.620
做一个握手动作

04:49.620 --> 04:52.940
我们可以直接像使用普通的函数一样

04:52.940 --> 04:54.140
直接调用到

04:54.140 --> 04:55.100
那这个呢

04:55.100 --> 04:58.140
是我们原生开发微信小众所给到的一些

04:58.140 --> 05:00.460
特别大的一个优势

05:00.460 --> 05:01.900
所以我们对于它来讲

05:01.900 --> 05:03.580
操作反而变得简单了

05:03.580 --> 05:05.020
但是安全性你不用管

05:05.020 --> 05:08.220
安全性是微信所给到的一些特别正确的

05:08.220 --> 05:09.020
或者说

05:09.020 --> 05:13.180
一个非常安全的一个模型

05:13.180 --> 05:13.740
同时呢

05:13.740 --> 05:15.100
我们再讲一下

05:15.100 --> 05:17.340
那么这个OPID呢

05:17.340 --> 05:20.540
我们也可以通过你自行的一些

05:20.540 --> 05:22.860
建立云含数的方式

05:22.860 --> 05:23.580
我们来获取

05:23.580 --> 05:25.100
那么之后我们再将云含数的时候

05:25.100 --> 05:26.460
你直接可以获得

05:26.460 --> 05:29.020
我们现在先讲到的是第一块内容

05:29.020 --> 05:30.980
就是数据库

05:30.980 --> 05:32.260
打开数据库以后呢

05:32.260 --> 05:33.300
我们可以看到

05:33.300 --> 05:35.820
在云端的这个数据库呢

05:35.820 --> 05:37.180
它称之为叫集合

05:37.180 --> 05:39.100
也就是我们所谓的collection

05:39.100 --> 05:40.060
它本身呢

05:40.060 --> 05:43.420
是一个我们称之为非关系型的

05:43.420 --> 05:45.420
所以在每个表里面

05:45.420 --> 05:48.220
它存储的内容都是一个杰森对象

05:48.220 --> 05:49.020
就像你看到

05:49.020 --> 05:52.540
我这边有乱七八糟一大堆的测试的表

05:52.540 --> 05:54.300
我们暂时把它称之为表

05:54.300 --> 05:56.060
因为表对我们来讲数据库

05:56.060 --> 05:58.780
更合理或者说更容易理解

05:58.780 --> 06:01.180
然后每个表里面的数据呢

06:01.180 --> 06:05.420
每一个其实都是它的一个杰森对象

06:05.500 --> 06:07.980
每个杰森对象呢都不一定

06:07.980 --> 06:10.700
或者说肯定可以做到的是

06:10.700 --> 06:12.460
每个数据的不一样

06:12.460 --> 06:14.700
这个数据不但是数据内容不一样

06:14.700 --> 06:16.780
你还可以是自断类型不一样

06:16.780 --> 06:20.460
每个自断类型里面的内容也不一样

06:20.460 --> 06:21.660
这是我鼠标对吧

06:21.660 --> 06:23.820
鼠标好像有点问题

06:23.820 --> 06:25.740
紧接着我们再来看

06:25.740 --> 06:27.500
在每一个数据里面

06:27.500 --> 06:29.260
它会有一个下杠ID

06:29.260 --> 06:30.380
那么这个呢

06:30.380 --> 06:34.140
是它自动完成或者称之为自增的一个

06:34.140 --> 06:36.940
在我们的平时的数据库里面

06:36.940 --> 06:38.620
也有自增自断这个概念

06:38.620 --> 06:43.740
统一的去标识唯一代表这一条记录的

06:43.740 --> 06:45.100
一个自断值

06:45.100 --> 06:47.820
那么我们可以自行的在这边添加

06:47.820 --> 06:49.980
也可以通过我们的程序

06:49.980 --> 06:52.860
完成这个数据的往里的添加

06:52.860 --> 06:54.540
那么这里面有一个区别

06:54.540 --> 06:56.060
如果说你直接添加线边

06:56.060 --> 06:58.460
先说一下之后我们还会详细说

06:58.460 --> 07:01.180
就是如果你通过你的程序

07:01.260 --> 07:02.460
往我们的

07:02.460 --> 07:04.700
就是服务器端云开发的这样的

07:04.700 --> 07:06.620
一个数据库里添加的话

07:06.620 --> 07:09.260
每一个自断或者每一个的我们的

07:09.260 --> 07:10.300
JSON格式

07:10.300 --> 07:12.460
它都会有一个OpenID

07:12.460 --> 07:15.260
这个OpenID就是你当前谁

07:15.260 --> 07:17.300
来进行这个数据操作的

07:17.300 --> 07:18.060
主要

07:18.060 --> 07:19.340
我的前提是

07:19.340 --> 07:22.700
你是要通过我们现在的这个所谓的

07:24.700 --> 07:27.020
程序往里添加

07:27.020 --> 07:29.340
如果你是手动往里添加的话

07:29.420 --> 07:31.500
它是不会有这个叫做

07:31.500 --> 07:32.780
OpenID的

07:32.780 --> 07:34.060
那么这样的话

07:34.060 --> 07:35.020
我们在后面

07:35.020 --> 07:37.820
特别是针对于全线操作的时候

07:37.820 --> 07:39.420
会有一些区别

07:39.420 --> 07:40.540
这是第二点

07:40.540 --> 07:41.660
第三点

07:41.660 --> 07:43.820
那么我们这里边的数据

07:43.820 --> 07:44.860
导入导出

07:44.860 --> 07:46.620
这个很简单

07:46.620 --> 07:47.500
导出的话

07:47.500 --> 07:49.100
那我们直接点击导出

07:49.100 --> 07:51.340
那么它会以两种格式

07:51.340 --> 07:52.860
这两种格式的区别是什么

07:52.860 --> 07:54.700
我这边介绍一下

07:54.700 --> 07:55.420
第一

07:55.420 --> 07:56.860
导出JSON格式的话

07:56.860 --> 07:58.460
它其实是个文本

07:58.540 --> 08:00.460
JSON格式是一个文本结构

08:00.460 --> 08:03.420
还有个CSV

08:03.420 --> 08:04.380
CSV的话

08:04.380 --> 08:05.580
它其实也是文本

08:05.580 --> 08:06.780
只不过

08:06.780 --> 08:08.060
这个CSV的话

08:08.060 --> 08:09.740
它可以用XL打开

08:09.740 --> 08:11.580
形成一个所谓的

08:11.580 --> 08:13.660
表结构

08:13.660 --> 08:16.140
所以这个根据你记得情况来显示

08:16.140 --> 08:17.740
比如说我就导出CSV

08:17.740 --> 08:19.180
我们导一个看一下

08:19.180 --> 08:21.100
字段之间导出CSB田

08:21.100 --> 08:21.900
然后的话

08:21.900 --> 08:24.140
你需要用英文的逗号格开

08:24.140 --> 08:25.740
我们写一个逗号

08:25.740 --> 08:26.940
这样的结构

08:26.940 --> 08:27.820
导出位置

08:27.900 --> 08:29.340
那么随便你去选一下

08:29.340 --> 08:32.060
我们导出在我们的桌面上面吧

08:32.060 --> 08:32.780
就是这样一个

08:32.780 --> 08:33.820
导出桌面位置上

08:33.820 --> 08:35.660
保存

08:35.660 --> 08:36.380
然后

08:36.380 --> 08:37.420
此时保存

08:37.420 --> 08:39.500
只是把这个路径给写上了

08:39.500 --> 08:41.340
然后我们点确定

08:41.340 --> 08:43.260
它就会把这个珠腰

08:43.260 --> 08:45.900
它导出并不是导一个文件

08:45.900 --> 08:46.860
那我们来看一下

08:46.860 --> 08:48.300
我们打开界面

08:48.300 --> 08:51.180
我们的这个文件出来

08:51.180 --> 08:52.140
就是这个

08:52.140 --> 09:05.880
双击我们打开它

09:05.880 --> 09:07.080
这是我本地的

09:07.080 --> 09:10.920
它需要我登录对吧

09:10.920 --> 09:12.360
我们先通过那个

09:12.360 --> 09:15.480
因为我现在是未经授权的这样一个

09:15.480 --> 09:16.520
我们右键

09:16.520 --> 09:18.120
它其实是计识本文件

09:18.120 --> 09:23.610
所以我们通过我们的计识本方式

09:24.970 --> 09:26.730
它里面这边没数据对吧

09:26.730 --> 09:31.560
我们来看一下

09:31.560 --> 09:32.280
导出

09:32.280 --> 09:38.060
我们拿Jason的方式导出

09:38.060 --> 09:39.180
Jason方式导出

09:39.180 --> 09:48.310
依然在桌面上面

09:48.310 --> 09:55.290
我们来看一下

09:55.290 --> 09:58.470
这个

09:58.470 --> 09:59.190
看

09:59.190 --> 10:01.990
Jason格式就把这两个数据给导出来了

10:01.990 --> 10:02.870
对吧

10:02.870 --> 10:04.070
那么刚才那个的话

10:04.070 --> 10:06.070
依然我们再来试一次

10:06.070 --> 10:07.670
删掉它

10:07.670 --> 10:08.230
导出

10:08.230 --> 10:09.750
我们导COS

10:09.750 --> 10:11.750
英文都好隔开

10:11.750 --> 10:25.320
我们现在

10:25.320 --> 10:33.160
导在桌面上

10:33.160 --> 10:36.760
因为我这边的那个

10:36.760 --> 10:39.750
是一个

10:39.750 --> 10:40.950
默认的就是一个

10:40.950 --> 10:42.070
我是没有注册的

10:42.070 --> 10:43.030
所以这个的话呢

10:43.030 --> 10:44.230
我们说

10:44.230 --> 10:45.270
它需要你注册

10:45.270 --> 10:46.790
不然的话你是可以直接打开的

10:46.790 --> 10:48.230
这些时候

10:48.230 --> 10:48.630
看到吗

10:48.630 --> 10:50.390
就是很多功能已经被禁用

10:50.390 --> 10:51.910
这个不是说

10:51.910 --> 10:53.030
这个文件的问题

10:53.030 --> 10:55.430
而是属于我这个版本问题

10:55.430 --> 10:56.070
那么这样的话

10:56.070 --> 10:58.230
大家如果说你那边是一个

10:58.230 --> 11:00.470
就是免稽伙板或者说绿色板的话

11:00.470 --> 11:01.350
你直接可以打开

11:01.350 --> 11:02.790
是一个表格形式

11:02.790 --> 11:03.430
OK吧

11:03.430 --> 11:04.870
我这边就这么说一下

11:04.870 --> 11:06.310
因为我这边的

11:06.310 --> 11:07.270
全线问题

11:07.270 --> 11:08.950
这个的我是一个

11:08.950 --> 11:09.990
咱们就了解

11:09.990 --> 11:10.870
这个

11:10.870 --> 11:11.270
OK

11:11.270 --> 11:12.790
那我们继续来看

11:12.790 --> 11:14.150
这是一个普通功能

11:14.150 --> 11:15.430
导出的

11:15.430 --> 11:15.990
然后呢

11:15.990 --> 11:18.150
一旦你有数据进来以后的话呢

11:18.150 --> 11:19.110
如果没有出现

11:19.110 --> 11:20.630
你可以点一下刷新

11:20.630 --> 11:21.910
然后看一下这个数据

11:21.910 --> 11:22.630
因为

11:22.630 --> 11:24.230
这个云平台的刷新

11:24.230 --> 11:27.750
不会说是像跟着你现在数据一样那么快

11:27.750 --> 11:30.230
如果你现在进行了数据的路入

11:30.230 --> 11:31.590
你还是在这个界面的时候

11:31.590 --> 11:32.950
它是不会出来的

11:32.950 --> 11:34.150
那么做法很简单

11:34.150 --> 11:35.510
第一步要不你点刷新

11:35.510 --> 11:37.110
要不你贴换一个页面

11:37.110 --> 11:38.150
再回来

11:38.150 --> 11:40.230
那么它会把数据给显现出来

11:40.230 --> 11:40.550
好

11:40.550 --> 11:41.910
是这样的一个过程

11:41.910 --> 11:44.310
那么这是我们说到的云的

11:44.310 --> 11:46.950
云数据库的一个简单介绍

11:46.950 --> 11:47.670
同时呢

11:47.670 --> 11:48.870
我们可以看到

11:48.870 --> 11:50.310
这边还有两个操作

11:50.390 --> 11:52.070
一个叫索影管理

11:52.070 --> 11:53.030
其实我们呢

11:53.030 --> 11:55.030
现在你可以去建立索影

11:55.030 --> 11:56.150
对数据库来讲

11:56.150 --> 11:58.470
索影其实是加快你现在

11:58.470 --> 12:00.070
一个查找速度的

12:00.070 --> 12:01.590
我们默认的索影呢

12:01.590 --> 12:03.110
是拿着id来的

12:03.110 --> 12:03.830
所以呢

12:03.830 --> 12:06.710
你如果以id作为查找的话呢

12:06.710 --> 12:07.750
那么很简单

12:07.750 --> 12:08.790
不用建立

12:08.790 --> 12:11.510
如果你字型还有一些其他的

12:11.510 --> 12:12.150
要求

12:12.150 --> 12:13.590
比如说我想根据他的

12:13.590 --> 12:15.270
学号进行建立的话

12:15.270 --> 12:17.830
那么你得看你的数据有多少

12:17.830 --> 12:19.030
如果你的数据

12:19.110 --> 12:20.630
比如说10条20条

12:20.630 --> 12:22.070
那你也不用建索影

12:22.070 --> 12:24.390
如果你现在数据已经超过了1万条

12:24.390 --> 12:26.950
那这时候你去建一个学号索影

12:26.950 --> 12:27.590
这时候呢

12:27.590 --> 12:29.110
也是非常方便的

12:29.110 --> 12:30.710
你可以自行添加索影

12:30.710 --> 12:31.590
对吧

12:31.590 --> 12:32.390
再有一个

12:32.390 --> 12:35.830
那么更重要的是这样的一个全线设置

12:35.830 --> 12:37.110
全线设置呢

12:37.110 --> 12:42.630
其实他是帮助我们来针对于你现在的所有数据

12:42.630 --> 12:44.790
进行是否可访问

12:44.790 --> 12:47.110
可读写的一个设定

12:47.110 --> 12:50.950
我们全线设置是针对于当前这个数据

12:50.950 --> 12:51.430
集合

12:51.430 --> 12:52.470
也就是数据表的

12:52.470 --> 12:53.990
我们来看一下

12:53.990 --> 12:54.870
所谓的全线

12:54.870 --> 12:56.550
它其实给了四个全线

12:56.550 --> 12:57.430
第一呢

12:57.430 --> 12:59.990
就是我们由于我们这里面

12:59.990 --> 13:02.550
你使用了你的路路

13:02.550 --> 13:04.390
所以你的obid是你的

13:04.390 --> 13:05.590
张三是张三的

13:05.590 --> 13:07.670
李四在录这表的时候也是李四的

13:07.670 --> 13:11.110
他们的区别是在于用一个obid区分的

13:11.110 --> 13:11.990
理解吧

13:11.990 --> 13:13.270
所以这样的话呢

13:13.270 --> 13:15.110
我们在做全线的时候

13:15.110 --> 13:15.750
也可以

13:15.750 --> 13:17.750
如果说我是通过这样的记录添加的

13:17.750 --> 13:19.430
那就没有obid

13:19.430 --> 13:20.870
所以我们会看到

13:20.870 --> 13:22.150
默认状态下

13:22.150 --> 13:26.150
我们一般性就是仅创建这可读写

13:26.150 --> 13:28.150
张三你在对张表操作的时候

13:28.150 --> 13:32.710
你所有的操作只能针对于obid是你自己的那条记录进行操作

13:32.710 --> 13:34.870
或者那一些记录

13:34.870 --> 13:37.190
你对李四记录是不可操作的

13:37.190 --> 13:39.030
但是有时候我们的表啊

13:39.030 --> 13:43.030
我们需要的是所有人都能看

13:43.030 --> 13:43.830
那么这种时候

13:43.830 --> 13:45.510
比如说我录了一个新闻表

13:45.510 --> 13:46.470
我希望都能看

13:46.470 --> 13:48.630
所以你应该选择下面这个

13:48.630 --> 13:50.230
所有用户可读

13:50.230 --> 13:53.590
这是适合于比如说相频信息这种东西对吧

13:53.590 --> 13:56.390
但如果说你现在还有的呢

13:56.390 --> 13:59.110
是属于我们只存在于

13:59.110 --> 14:01.830
比如说我打开我现在的云

14:01.830 --> 14:03.830
然后通过导出以后才能做的

14:03.830 --> 14:05.830
那所有用户不可读

14:05.830 --> 14:09.830
这是属于我后端的一个数据的维护的

14:09.830 --> 14:12.150
必须打开这个平台才能看到

14:12.150 --> 14:14.150
还有的就是上面这种

14:14.230 --> 14:15.350
上面这个呢

14:15.350 --> 14:17.350
就是我们所有用户可读

14:17.350 --> 14:21.270
但是仅创建者可写自己的

14:21.270 --> 14:22.790
这个场景在哪里呢

14:22.790 --> 14:25.110
一般性我们比如说论坛

14:25.110 --> 14:26.230
论坛上面的话呢

14:26.230 --> 14:28.310
大家发内容我都可以看

14:28.310 --> 14:29.030
但是呢

14:29.030 --> 14:30.630
我想评论的话也可以

14:30.630 --> 14:33.830
但是我想去修改或者删除评论

14:33.830 --> 14:35.430
你只能做自己的

14:35.430 --> 14:35.990
对吧

14:35.990 --> 14:36.870
这个概念

14:36.870 --> 14:39.190
所以全线的概念对我们来讲呢

14:39.190 --> 14:41.110
是非常的重要的

14:41.110 --> 14:42.310
那么在测试阶段

14:42.310 --> 14:45.110
首先我们刚才是讲了几个环境

14:45.110 --> 14:46.630
或者说场景

14:46.630 --> 14:50.790
那么如果你现在需要有一些测试的话

14:50.790 --> 14:53.990
那么你完全是可以把它换成这个内容

14:53.990 --> 14:56.230
根据你现在的里面数据

14:56.230 --> 14:58.070
所以大家之后在开发的时候

14:58.070 --> 14:59.910
发现如果你的程序是对的

14:59.910 --> 15:02.070
但是这边数据始终没有出来

15:02.070 --> 15:03.270
你第一看一下

15:03.270 --> 15:05.270
你当前这个表的全线

15:05.270 --> 15:09.030
是不是配着你可以去进行读取

15:09.030 --> 15:09.830
这个

15:09.830 --> 15:11.030
当然请注意一下

15:11.030 --> 15:13.590
这边我们再强调一下

15:13.590 --> 15:15.510
它从来没有一个叫做

15:15.510 --> 15:18.070
所有用户可读写

15:18.070 --> 15:20.790
它没有这样的一个全线

15:20.790 --> 15:22.310
别人的数据

15:22.310 --> 15:23.990
你最多最多

15:23.990 --> 15:25.750
你是只能读

15:25.750 --> 15:27.750
但你不能去改的

15:27.750 --> 15:30.230
所以有时候我们大家会说

15:30.230 --> 15:32.230
我不是选择所有用户吗

15:32.230 --> 15:32.790
你看一下

15:32.790 --> 15:34.150
它的所有用户可读

15:34.150 --> 15:35.910
没有所可读写

15:35.910 --> 15:36.550
ok

15:36.550 --> 15:39.030
这点你需要理解或者说知道就可以了

15:39.030 --> 15:39.910
好了

15:39.910 --> 15:42.630
明端的整个这个数据库的概念

15:42.630 --> 15:43.590
我们先介绍到这

15:43.590 --> 15:48.140
然后我们开始看程序

15:48.140 --> 15:50.700
我们首先建立一个我们的

15:50.700 --> 16:00.090
cloud demo

16:00.090 --> 16:01.050
cloud

16:01.050 --> 16:01.450
哎

16:01.450 --> 16:01.850
不对啊

16:01.850 --> 16:11.780
我们在Peters里面

16:11.780 --> 16:26.490
这个是

16:26.490 --> 16:32.380
我们往这来

16:32.380 --> 16:35.100
建立一个cloud demo

16:35.100 --> 16:38.060
然后我们在里面建立

16:38.060 --> 16:39.740
cloud demo的

16:39.740 --> 16:47.220
jxx

16:47.220 --> 17:10.140
它要重新启动一下

17:10.140 --> 17:14.360
稍等一下它编译一下

17:15.320 --> 17:15.960
然后呢

17:15.960 --> 17:23.940
我们依然可以建立它的样式

17:23.940 --> 17:30.680
cloud demo.css

17:30.680 --> 17:32.200
然后我们做的方式是

17:32.200 --> 17:33.880
我们把它进行一个

17:33.880 --> 17:36.680
简单化的页面设定

17:36.680 --> 17:42.120
taro

17:42.120 --> 17:45.610
component

17:45.610 --> 17:50.390
taro

17:50.390 --> 17:50.870
注意啊

17:50.870 --> 17:53.110
我们这是做一个基础的

17:53.110 --> 17:55.350
怎么把taro连接到我们数据库

17:55.350 --> 17:57.590
和数据库的操作上面

17:57.590 --> 17:58.230
然后呢

17:58.230 --> 17:59.190
我们后面的话

17:59.190 --> 18:01.670
我们还会不团的举案例

18:01.750 --> 18:04.630
然后这边我们写上的是

18:04.630 --> 18:23.050
component

18:23.050 --> 18:25.130
compote

18:25.130 --> 18:27.450
or import

18:27.450 --> 18:29.450
导入

18:29.450 --> 18:30.890
cloud

18:30.890 --> 18:33.210
demo

18:33.210 --> 18:36.810
样式

18:36.810 --> 18:38.410
expert

18:38.410 --> 18:39.770
default

18:39.770 --> 18:44.060
class

18:44.060 --> 18:47.750
cloud demo

18:47.750 --> 18:50.390
extends

18:50.390 --> 18:53.990
component

18:53.990 --> 18:58.310
random

18:58.310 --> 19:01.610
return

19:01.610 --> 19:03.050
return

19:03.130 --> 19:05.050
然后这边我们给上的是

19:06.890 --> 19:08.570
view

19:08.570 --> 19:09.210
然后呢

19:09.210 --> 19:10.650
我们给一个简单的

19:11.690 --> 19:12.170
view

19:12.170 --> 19:12.890
我们称之为

19:14.250 --> 19:14.970
cloud

19:16.330 --> 19:17.050
写大一点

19:18.090 --> 19:19.210
data demo

19:19.210 --> 19:20.570
运数据操作

19:22.920 --> 19:23.960
保存

19:23.960 --> 19:26.040
把这cloud demo写到我们的

19:35.670 --> 19:36.870
界面里面来

19:36.870 --> 19:38.310
就是那个全局里面

19:45.210 --> 19:45.930
别关啊

19:56.660 --> 19:58.900
同时把我们当前这个

19:59.460 --> 20:00.500
页面的

20:00.500 --> 20:01.060
这部分

20:02.980 --> 20:03.860
在我们的

20:05.140 --> 20:06.020
标题改一改

20:11.240 --> 20:11.960
咱们叫做

20:14.390 --> 20:14.790
云

20:16.550 --> 20:17.590
数据库操作

20:20.460 --> 20:21.660
好来看一下页面

20:26.580 --> 20:27.540
对吧出来了

20:28.980 --> 20:30.020
这也有我们不用管

20:30.660 --> 20:32.020
接下去我们在这个页面

20:32.020 --> 20:33.780
做简单的几个设置

20:33.780 --> 20:35.060
我们作业按钮

20:35.060 --> 20:37.780
我们去读取一个数据库数据

20:37.780 --> 20:38.180
这样呢

20:38.180 --> 20:39.540
我们来表示

20:39.620 --> 20:42.420
我们和数据库保持通讯已经开启

20:44.260 --> 20:44.900
作业按钮

20:47.750 --> 20:50.470
随便读取我们上面任何一个表的数据

20:52.760 --> 20:53.640
读取数据

20:54.440 --> 20:55.720
数据读出来显示一下

20:57.080 --> 20:58.520
然后 on click

21:00.940 --> 21:01.900
这张disc点

21:02.700 --> 21:06.060
get cloud data

21:16.020 --> 21:20.500
读取云数据库数据

21:22.180 --> 21:22.420
好

21:23.140 --> 21:25.540
当然我们应该这边会有一个

21:27.300 --> 21:27.860
state

21:27.860 --> 21:28.340
为什么

21:28.900 --> 21:30.020
我们读到的数据

21:30.020 --> 21:31.060
我们可以存进去

21:37.500 --> 21:39.660
这是一个数据结构

21:39.660 --> 21:41.340
或者称之为速足结构

21:42.300 --> 21:43.420
然后这个结构呢

21:43.420 --> 21:45.100
我们在当前这下面

21:45.100 --> 21:46.460
我们到时候把它列出来

21:52.120 --> 21:53.080
显示数据

21:53.800 --> 21:55.480
把这个先隐藏一下

21:59.100 --> 21:59.900
我们这里边呢

21:59.900 --> 22:02.220
不做任何的大多样式

22:02.220 --> 22:04.060
我们只是把它数据拿出来

22:04.060 --> 22:05.180
我们来看一下

22:05.260 --> 22:06.860
数据拿出的方式是什么

22:08.780 --> 22:10.860
我们只是显示

22:10.860 --> 22:12.140
因为我们拿哪个表呢

22:12.860 --> 22:14.460
我们到数据库看一下

22:17.260 --> 22:19.340
我们去拿一个数据库3

22:20.220 --> 22:21.580
就拿我们刚才这个表

22:22.140 --> 22:24.060
这里边有一个年龄姓名

22:24.060 --> 22:24.540
对不对

22:24.540 --> 22:25.820
这里有个年龄姓名

22:26.300 --> 22:27.180
那我们就拿它

22:27.820 --> 22:29.820
当然在这个数据库3里面

22:29.820 --> 22:31.180
是所有用户可读

22:31.740 --> 22:32.620
你们看到没有

22:33.260 --> 22:34.460
在这个上面

22:34.460 --> 22:36.540
这是某一个人创建进来的

22:37.340 --> 22:38.220
它有个OpenID

22:38.780 --> 22:39.660
然后这边呢

22:40.220 --> 22:41.260
是没有的

22:41.260 --> 22:42.380
所以这两条记录

22:42.380 --> 22:43.980
一条是我手动添加的

22:43.980 --> 22:45.260
一条是我现在

22:45.900 --> 22:47.260
通过程序添加的

22:47.260 --> 22:47.900
那我不管

22:47.900 --> 22:49.260
反正我的权限设定

22:49.260 --> 22:50.780
是我的所有用户可读

22:51.340 --> 22:51.900
对吧

22:51.900 --> 22:53.580
所以我就把这两个姓名

22:53.580 --> 22:54.780
和年龄给读出来

22:57.160 --> 22:57.560
好了

22:57.560 --> 22:59.320
那么我先把界面写一下

22:59.320 --> 22:59.800
首先

23:09.860 --> 23:10.180
view

23:12.020 --> 23:12.420
姓名

23:14.180 --> 23:14.820
写上一个

23:17.930 --> 23:18.330
view

23:20.940 --> 23:22.300
年龄写上一个

23:23.180 --> 23:24.620
就这样一个结构

23:24.620 --> 23:28.060
为什么我空两行呢

23:28.060 --> 23:28.860
都知道

23:28.860 --> 23:30.380
待会儿可能需要寻到

23:30.380 --> 23:31.100
map 操作

23:31.660 --> 23:32.060
好了

23:32.060 --> 23:33.100
界面结构

23:33.100 --> 23:34.460
简单就这么定义好了

23:34.460 --> 23:36.060
我们不做复杂的结构

23:36.540 --> 23:37.180
这上面

23:37.180 --> 23:37.980
我读取以后

23:37.980 --> 23:39.420
下面就一行一行的两个

23:39.420 --> 23:40.300
都呈现出来

23:41.100 --> 23:42.460
样式的话呢

23:42.460 --> 23:43.980
我们把它集中一下

23:44.460 --> 23:48.180
咱们称它为

23:48.180 --> 23:48.500
title

23:49.060 --> 24:06.980
不不

24:06.980 --> 24:07.780
高度不是

24:07.780 --> 24:08.740
高度80

24:09.300 --> 24:13.240
LineHeight

24:13.240 --> 24:14.520
80Apx

24:15.400 --> 24:16.120
然后

24:16.280 --> 24:16.840
然后

24:19.980 --> 24:20.540
高度

24:20.540 --> 24:21.340
宽度

24:21.340 --> 24:21.980
那个

24:23.340 --> 24:24.140
背景色

24:30.760 --> 24:31.720
Background Color

24:37.000 --> 24:37.640
黄色

24:40.360 --> 24:40.840
Font

24:42.440 --> 24:43.000
Wise

24:47.380 --> 24:47.780
Bolder

24:49.700 --> 24:50.900
Jaxonlight Center

24:50.900 --> 24:51.220
好了

25:02.580 --> 25:03.060
就这样

25:04.020 --> 25:04.900
读取数据

25:04.900 --> 25:05.700
我们使用

25:11.000 --> 25:11.480
绿色

25:21.430 --> 25:22.230
那开始

25:22.230 --> 25:23.750
首先我们要讲的是

25:23.750 --> 25:25.030
在原生开发里面

25:25.030 --> 25:26.630
我们其实要做一个功能

25:26.630 --> 25:27.430
也就是说

25:27.430 --> 25:28.790
我们需要去做一个

25:29.350 --> 25:30.630
所谓的初始化

25:31.350 --> 25:33.430
针对当前的这个

25:33.430 --> 25:34.470
我们要进行

25:34.470 --> 25:35.350
数据库的操作

25:35.350 --> 25:36.550
我们要做一个初始化

25:37.110 --> 25:38.070
原生初始化

25:38.070 --> 25:40.390
我们是在App.js里面做的

25:40.390 --> 25:41.110
所以呢

25:41.110 --> 25:42.390
我们也需要找到

25:43.190 --> 25:45.430
title所针对的App.js

25:45.430 --> 25:46.950
title的App.js在哪

25:47.590 --> 25:48.310
你还记得吗

25:49.110 --> 25:50.230
title的App.js

25:50.230 --> 25:52.790
其实就是在SRC下面的

25:52.790 --> 25:53.670
我们的这里

25:54.390 --> 25:56.390
就是我们的App.Jaxx里面

25:57.190 --> 25:58.630
但是在这个里面的话

25:58.870 --> 25:59.590
我们说一下

25:59.590 --> 26:01.670
它究竟在哪能够写呢

26:02.230 --> 26:02.790
那我们说

26:03.350 --> 26:05.590
正常的我们都在App里面写

26:05.590 --> 26:07.830
但是其实我们现在依然可以在

26:07.830 --> 26:09.590
外部来定义这个结构

26:10.550 --> 26:13.190
title的云操作的初始化

26:13.190 --> 26:14.630
title有一个云格式

26:14.630 --> 26:15.110
咱们来看

26:15.110 --> 26:15.910
我在这边写

26:16.710 --> 26:17.670
title.

26:19.110 --> 26:19.510
看到吗

26:20.070 --> 26:21.350
title是有一个云的

26:21.990 --> 26:22.870
这个云呢

26:22.870 --> 26:24.230
它有一个叫做Init

26:25.270 --> 26:26.390
有一个这个方法

26:26.390 --> 26:27.030
咱们看一下

26:27.670 --> 26:28.150
title

26:28.630 --> 26:29.750
那个Init

26:29.750 --> 26:30.950
初始化操作

26:31.750 --> 26:32.870
初始化操作

26:32.870 --> 26:34.070
它需要一个参数

26:34.070 --> 26:34.870
是Objector

26:35.830 --> 26:37.430
那么这个参数呢

26:37.430 --> 26:39.190
我们至少我们能知道的

26:39.190 --> 26:40.630
有一个重要的值

26:40.630 --> 26:42.230
就是看一下这里边

26:42.710 --> 26:43.750
有一个env

26:44.310 --> 26:44.950
env

26:45.510 --> 26:46.790
就是Environment

26:47.190 --> 26:47.750
这个词

26:48.310 --> 26:49.590
所谓的Environment

26:49.830 --> 26:50.790
成为环境

26:51.590 --> 26:52.310
它是指

26:52.310 --> 26:54.150
我们现在你要用

26:54.150 --> 26:56.550
哪一个云端数据户

26:57.510 --> 26:59.350
这个就要回到云端来讲

27:00.070 --> 27:01.190
在云端里面

27:01.670 --> 27:03.110
我们的数据库

27:03.110 --> 27:03.990
设置里面

27:04.470 --> 27:06.150
我们其实是可以创建

27:06.150 --> 27:07.430
两个数据库的

27:08.150 --> 27:10.150
一个是我们比如说

27:10.150 --> 27:10.870
看到吗

27:10.870 --> 27:12.470
环境我现在有个箭头

27:12.470 --> 27:13.590
但是我现在只有一个

27:14.070 --> 27:15.670
你还可以再创建一个

27:15.670 --> 27:17.430
一般我们现在都可以有两个

27:17.430 --> 27:18.790
一个是测试环境

27:18.790 --> 27:20.070
一个是证实环境

27:20.070 --> 27:21.190
你可以写两个出来

27:21.750 --> 27:22.790
每个环境

27:22.790 --> 27:24.470
都会有一个环境ID

27:24.470 --> 27:26.310
这个是系统自动分配给你的

27:27.030 --> 27:28.310
我们不可以修改

27:28.310 --> 27:29.670
那我们直接拿这个来

27:29.670 --> 27:30.710
进行操作就可以

27:30.710 --> 27:32.470
所以我们需要把这个内容

27:33.030 --> 27:34.230
直接写在

27:34.230 --> 27:36.310
我们当前的Environment

27:36.310 --> 27:37.430
这个属性后面

27:38.390 --> 27:39.670
如果你不写

27:39.670 --> 27:40.630
像我现在一样

27:41.190 --> 27:43.110
我只有一个配置环境

27:43.750 --> 27:44.550
那么没关系

27:45.030 --> 27:46.390
但你有两个的话

27:46.390 --> 27:47.670
那么你必须要写上

27:47.670 --> 27:48.550
让系统知道

27:48.550 --> 27:50.070
你到底连到哪个上面

27:50.710 --> 27:52.470
所以我们把这个拿下来

27:53.350 --> 27:53.910
写在这儿

27:56.140 --> 27:56.780
好

27:56.860 --> 27:57.980
这是我们完成了

27:57.980 --> 27:59.660
当你这样写好以后的话

28:00.140 --> 28:01.660
那我们的Terror

28:01.660 --> 28:03.580
在使用云端操作的时候

28:03.580 --> 28:04.780
就会非常的简单

28:05.340 --> 28:07.020
它就像用普通的一样

28:07.020 --> 28:08.460
就可以直接调用

28:08.460 --> 28:11.020
我们本地的一些云开发

28:11.020 --> 28:13.580
特别是数据库开发的一些方法

28:13.580 --> 28:14.620
来完成

28:14.620 --> 28:16.380
像我们在本地做数据库

28:16.380 --> 28:17.740
增三改查一样的结构

28:18.540 --> 28:19.260
第一步

28:19.260 --> 28:20.220
我这边写一下

28:22.060 --> 28:22.860
初始化

28:25.220 --> 28:26.020
云开发

28:28.630 --> 28:29.030
好

28:29.030 --> 28:30.470
把这个我们关一下

28:31.590 --> 28:33.110
在app.dxx里面

28:33.910 --> 28:34.790
第二步

28:34.790 --> 28:36.150
在当前界面上面

28:36.950 --> 28:37.990
我们需要做的是

28:38.550 --> 28:41.350
我们让当前的整个这个开发节奏

28:41.910 --> 28:43.830
把它直接写在了

28:43.830 --> 28:45.110
当前的我们的这个

28:45.110 --> 28:46.950
叫做事件里面

28:46.950 --> 28:47.590
那我们来看

28:48.230 --> 28:49.910
在做这个事件之前

28:49.910 --> 28:51.670
我们要去在这儿

28:51.670 --> 28:53.030
再定义一下

28:53.030 --> 28:54.550
主要我们这边写注释

28:54.550 --> 28:55.510
等会儿直接写代码

28:56.390 --> 28:58.150
你需要去定义

28:58.150 --> 28:59.910
你现在的或者创建

29:02.200 --> 29:04.120
云数据库对象

29:05.560 --> 29:08.040
你是要创建一个云数据库对象出来

29:09.480 --> 29:09.880
taro

29:10.440 --> 29:11.640
只有初始化以后

29:12.280 --> 29:13.640
你这个语音里面

29:13.640 --> 29:15.000
可以得到这个词

29:15.000 --> 29:15.960
看到吗

29:15.960 --> 29:17.400
有一个database

29:18.040 --> 29:19.000
这是一个方法

29:22.440 --> 29:23.800
当你这样写好以后

29:23.800 --> 29:26.040
那在整个当前页面中

29:26.040 --> 29:27.560
你就可以直接使用

29:27.560 --> 29:30.360
我们现在的云对象来操作

29:30.360 --> 29:32.440
那么云对象就是db

29:32.440 --> 29:34.120
此时我们在这里面来写

29:35.160 --> 29:35.560
db

29:36.360 --> 29:37.960
我们先做第一个事情

29:38.600 --> 29:44.420
获取云数据库

29:45.380 --> 29:49.300
数据库3的所有记录

29:53.900 --> 29:54.380
写法

29:55.660 --> 29:57.260
先连数据库

29:57.260 --> 29:58.780
也就是我们所谓的集合

29:59.500 --> 30:00.940
把你数据库名写上去

30:01.500 --> 30:04.140
我们把数据库名写在我们的

30:04.140 --> 30:05.020
status里面

30:05.740 --> 30:07.500
或者你在外部定义也行

30:10.360 --> 30:11.480
我们就先写吧

30:11.480 --> 30:12.440
因为我做测试

30:12.440 --> 30:14.840
我们待会的话可以写得更细一点

30:15.640 --> 30:17.240
数据库3

30:17.240 --> 30:18.120
它就是自付串

30:19.720 --> 30:21.080
当你这样找到以后

30:21.080 --> 30:22.360
它反回是

30:23.320 --> 30:25.160
指向数据库3

30:25.720 --> 30:27.960
这个glection的一个对象

30:28.600 --> 30:32.280
由它来做一个读取gat操作

30:33.960 --> 30:35.560
在这个gat里面

30:35.640 --> 30:38.200
我们用一个object数据结构

30:38.200 --> 30:39.400
来获取

30:39.400 --> 30:41.800
你现在是否能得到数据的

30:41.800 --> 30:43.080
success 函数返回

30:47.220 --> 30:47.780
res

30:49.220 --> 30:49.700
返回

30:50.900 --> 30:51.700
我们在这里面

30:51.700 --> 30:52.660
我们可以看一下

30:52.660 --> 30:54.580
console.log res

30:54.580 --> 30:55.780
看一下这个数值

30:55.780 --> 30:57.060
是不是我们那两条

31:01.450 --> 31:01.930
点开

31:03.370 --> 31:04.570
咱们由于没有显示

31:04.570 --> 31:05.530
所以看控制台

31:08.660 --> 31:08.900
看

31:09.700 --> 31:10.660
array2

31:11.220 --> 31:11.780
是不是两条

31:11.780 --> 31:12.500
它告诉你

31:12.500 --> 31:14.500
glectiongatok

31:14.580 --> 31:15.140
表示

31:15.140 --> 31:17.140
获取数据整个动作

31:17.140 --> 31:17.540
完成

31:18.180 --> 31:18.900
打开一下

31:19.540 --> 31:20.420
它有个data

31:20.900 --> 31:21.780
在data中

31:21.780 --> 31:22.740
我们再打开

31:23.380 --> 31:24.100
咱们看

31:24.100 --> 31:26.020
是不是jason 25岁

31:26.580 --> 31:27.460
这边还有一个

31:28.740 --> 31:29.940
这个叫啥来着

31:29.940 --> 31:30.660
这个我们打开

31:31.460 --> 31:32.180
这个叫做

31:34.180 --> 31:35.220
jason 19岁

31:35.220 --> 31:36.260
是不是这个两个人是

31:36.820 --> 31:37.620
名称是一样的

31:37.620 --> 31:39.220
我们来到云端看一下

31:39.220 --> 31:39.780
就可以了

31:42.950 --> 31:43.830
看是不是

31:43.830 --> 31:44.550
19岁

31:45.110 --> 31:45.990
25岁

31:45.990 --> 31:46.710
是不是有了

31:46.710 --> 31:47.990
我们把这名称改一改

31:47.990 --> 31:49.030
我们改成不同的人

31:49.670 --> 31:50.230
它叫time

31:53.660 --> 31:54.060
好了

31:54.620 --> 31:55.180
那么

31:55.180 --> 31:55.820
此时

31:55.820 --> 31:57.180
我们再来取一次

32:01.850 --> 32:03.450
jason 19岁

32:04.010 --> 32:05.290
time 25岁

32:05.290 --> 32:05.930
是不是

32:05.930 --> 32:06.490
这样的话

32:06.490 --> 32:08.010
是不是我给取到数据了

32:09.210 --> 32:10.730
那么取到数据的操作

32:10.730 --> 32:11.930
我们把刚才的作业

32:11.930 --> 32:12.330
想一下

32:12.970 --> 32:13.450
首先

32:13.450 --> 32:14.650
我们刚才的操作

32:14.650 --> 32:17.290
是在app.js里面出实化

32:18.250 --> 32:19.290
基础知识

32:19.290 --> 32:21.690
出实化我们现在的云端结构

32:22.570 --> 32:23.210
第二步呢

32:23.690 --> 32:25.690
我们在当前的页面中

32:25.690 --> 32:26.910
我们在最上

32:27.450 --> 32:30.410
定义一个数据库的云对象

32:30.410 --> 32:33.610
就是terror.cloud database

32:33.610 --> 32:35.530
给出你现在的一个云对象

32:36.330 --> 32:37.130
第三步

32:37.130 --> 32:39.130
利用云对象的collection

32:39.130 --> 32:41.770
找到当前你要操作的数据库

32:41.770 --> 32:44.170
对它执行一个get命令

32:44.170 --> 32:45.210
get就是获取

32:45.850 --> 32:47.370
当然我们没有给参

32:47.370 --> 32:48.570
或者说没有给条件

32:49.130 --> 32:49.610
所以呢

32:49.610 --> 32:51.370
它是完整的全部获取

32:51.930 --> 32:52.970
获取好以后的话

32:52.970 --> 32:53.450
我们看

32:53.450 --> 32:56.010
它就可以把数值全部的存储

32:56.010 --> 32:57.610
在它的回调函数

32:57.610 --> 32:58.730
success里面

32:58.730 --> 32:59.850
我们这样就拿到了

33:00.730 --> 33:01.130
对吧

33:01.690 --> 33:02.250
接下来

33:02.250 --> 33:04.090
我们一旦拿到数据以后的话

33:04.090 --> 33:05.770
我们就应该呈现了

33:05.770 --> 33:07.610
我们把它整个这个

33:07.610 --> 33:08.490
你一定要看一下

33:09.290 --> 33:10.890
它的整个这个area

33:10.890 --> 33:11.850
我们把它全部

33:12.410 --> 33:14.250
就是它的data下面的

33:14.250 --> 33:15.850
存储到我们现在的这个

33:15.850 --> 33:17.210
叫做datalist里面去

33:21.190 --> 33:22.630
那么这边还是要说一下

33:22.630 --> 33:24.230
我把这个以错误的方式

33:24.230 --> 33:25.110
给它打一下

33:25.190 --> 33:28.550
this.setData

33:28.950 --> 33:29.830
dataStator

33:32.420 --> 33:33.300
你要这样去调

33:33.860 --> 33:34.500
然后呢

33:34.500 --> 33:36.020
你把里面内容放进去

33:40.360 --> 33:45.180
让res.date

33:45.820 --> 33:48.940
看一下你现在的date

33:48.940 --> 33:49.420
对不对

33:51.340 --> 33:52.140
你这样写好

33:52.780 --> 33:53.580
你来看运行

34:02.330 --> 34:03.130
我们这边没有

34:03.850 --> 34:04.570
没没显示

34:05.290 --> 34:06.810
那么这里千万要注意一下

34:06.810 --> 34:07.450
有个问题

34:08.170 --> 34:09.770
它这边抱你是什么意思

34:10.730 --> 34:11.930
它说你的datalist

34:11.930 --> 34:13.290
这边没有被使用

34:13.290 --> 34:14.010
是这意思

34:14.490 --> 34:15.530
并不是没有抱错

34:16.010 --> 34:18.010
那么这边额外说明一下

34:18.010 --> 34:19.610
这一边的话呢

34:19.610 --> 34:21.370
因为它在回掉函数里面

34:21.850 --> 34:23.530
所以你的整个操作

34:23.530 --> 34:26.570
你应该需要使用到两种方式

34:26.570 --> 34:28.410
要不你这边给箭头

34:28.410 --> 34:29.290
要不你这边

34:30.010 --> 34:31.690
给这样的结果来写

34:32.330 --> 34:32.970
要不呢

34:32.970 --> 34:34.570
箭头会有一个提升概念

34:34.570 --> 34:35.850
也就是this可以提升

34:36.330 --> 34:38.490
要不你要明确这个概念的话呢

34:38.490 --> 34:39.930
this的操作很危险

34:40.170 --> 34:42.090
所以呢我们这边可以给一个

34:42.490 --> 34:43.050
lat

34:43.850 --> 34:45.450
你可以用这样的方式

34:45.450 --> 34:47.770
把你的zat在回掉之前

34:47.770 --> 34:48.570
先定义好

34:49.210 --> 34:51.290
然后用ta来完成send

34:51.530 --> 34:52.410
stater的调取

34:53.050 --> 34:55.210
你看这样的话就ok了

34:55.210 --> 34:55.850
理解吧

34:57.130 --> 34:58.650
这是一个很危险的一个点

34:58.650 --> 35:00.330
当然你去用的话呢

35:00.330 --> 35:02.970
你需要用箭头服有个提升dist的作用

35:03.690 --> 35:04.170
ok

35:04.490 --> 35:05.930
现在我们警觉着往下看

35:05.930 --> 35:08.250
我把数据已经放到了date list里面

35:08.730 --> 35:09.210
然后呢

35:09.210 --> 35:10.730
我们回到我们的界面

35:10.730 --> 35:12.970
跑到我们的jx里面来

35:20.340 --> 35:21.780
进行我们现在的

35:23.060 --> 35:23.700
map操作

35:24.900 --> 35:30.580
当前的stater里面的datalist.map

35:31.860 --> 35:32.820
然后来

35:32.820 --> 35:34.900
首先第一个里面是item

35:34.900 --> 35:36.420
第二个里面是index

35:37.140 --> 35:38.180
然后用箭头

35:39.940 --> 35:42.100
我们里面做一个返回

35:42.100 --> 35:43.460
返回情况是

35:43.540 --> 35:46.900
我们把整个这个jx插代码放进去

35:56.250 --> 35:56.970
放进去

36:04.520 --> 36:05.400
我们看一下啊

36:07.720 --> 36:09.240
这边是都好啊

36:10.680 --> 36:11.560
警觉着

36:11.560 --> 36:12.600
姓名位置

36:14.600 --> 36:16.200
我们在这里边

36:16.200 --> 36:18.120
我们这边先给一个view

36:23.380 --> 36:24.260
然后呢

36:24.260 --> 36:26.260
把它整体的往里扒

36:26.260 --> 36:27.620
然后这边我们写上

36:28.660 --> 36:29.460
taro key

36:30.260 --> 36:30.740
整育

36:35.160 --> 36:35.720
index

36:37.080 --> 36:37.800
再来一个

36:38.360 --> 36:38.920
这边

36:39.960 --> 36:51.190
item.nitem.ager

36:52.390 --> 36:52.950
这样写

36:54.980 --> 36:55.540
来看一下

37:03.130 --> 37:03.770
出来了吧

37:04.810 --> 37:06.490
这样就把云端的一个数据

37:06.490 --> 37:07.690
我们把它给拿下来了

37:08.330 --> 37:09.130
ok

37:09.130 --> 37:10.970
这个相对而言比较简单吧

37:12.490 --> 37:13.450
特别是注意啊

37:13.450 --> 37:16.970
taro的两个云端数据操作的一个结构

37:17.930 --> 37:19.370
这是获取全部记录

37:20.010 --> 37:20.490
拿到了

37:21.130 --> 37:21.850
警觉着

37:21.850 --> 37:22.890
我们来看一下

37:22.890 --> 37:25.530
怎么去做获取单条记录

37:27.290 --> 37:28.170
单条记录呢

37:28.170 --> 37:28.810
由于这个呢

37:28.810 --> 37:29.370
代码呢

37:29.370 --> 37:30.890
我就把它放在这了啊

37:30.890 --> 37:32.250
我们再写一个按钮出来

37:34.780 --> 37:36.060
咱们一个个往上加

37:49.800 --> 37:50.920
获取单条记录

37:59.160 --> 38:02.140
一条记录

38:04.740 --> 38:06.900
此时你也需要通过棒的方式

38:08.100 --> 38:08.980
你要给它传

38:09.700 --> 38:10.660
那条记录的

38:11.540 --> 38:11.940
id

38:13.220 --> 38:15.140
那么我们先固定死

38:15.140 --> 38:16.820
那么我们要拿这条记录

38:19.860 --> 38:21.700
我们把这条记录的id

38:21.700 --> 38:23.780
以自服串的方式丢给它

38:25.460 --> 38:27.300
此时我们再回来

38:28.820 --> 38:29.300
去写

38:29.860 --> 38:31.620
获取单条记录的

38:31.620 --> 38:32.020
注意

38:32.660 --> 38:34.020
这是我们写上的id

38:39.260 --> 38:39.740
获取

38:41.020 --> 38:42.780
单条记录操作

38:49.140 --> 38:49.700
获取

38:50.660 --> 38:51.460
需要

38:52.500 --> 38:54.100
执行命令的

38:56.120 --> 38:56.680
记录

38:57.240 --> 38:57.720
id

39:04.920 --> 39:05.560
dataid

39:06.120 --> 39:07.240
形成这样一个结构

39:09.910 --> 39:10.470
警觉着

39:10.870 --> 39:12.070
这个结构你好了

39:12.070 --> 39:13.670
那么我们后面就很简单

39:13.670 --> 39:15.030
我们只需要的是

39:15.030 --> 39:16.390
依然唤起这个

39:16.870 --> 39:18.070
那个数据库操作

39:18.070 --> 39:18.950
我们来看一下啊

39:19.510 --> 39:20.710
数据库操作里面

39:20.710 --> 39:21.990
我们要做的是

39:21.990 --> 39:23.350
我们查询的时候

39:23.350 --> 39:24.630
加一个条件判断

39:25.430 --> 39:25.830
来

39:27.190 --> 39:28.390
由于db呢

39:28.470 --> 39:30.630
我被定义在了全局上面

39:30.630 --> 39:32.150
所以我可以直接使用

39:33.110 --> 39:36.900
db.collection

39:46.820 --> 39:47.860
给出doc

39:48.580 --> 39:50.820
doc是我们现在的一个

39:50.820 --> 39:52.580
查找记录的一个关键字

39:53.140 --> 39:54.900
我们把dataid给它

39:55.700 --> 39:56.500
再做get

39:58.020 --> 39:58.820
再做get

39:59.940 --> 40:01.060
然后我们做一个

40:01.620 --> 40:02.020
then

40:02.020 --> 40:03.220
用这样的方式来写

40:03.940 --> 40:05.220
我们把它换下来啊

40:05.220 --> 40:06.340
不然太长了

40:13.830 --> 40:14.230
then

40:23.050 --> 40:23.930
这边我们来

40:24.730 --> 40:25.450
做一个

40:26.010 --> 40:26.570
console

40:29.430 --> 40:30.070
is

40:30.070 --> 40:30.790
来看一下

41:06.180 --> 41:07.460
它后面发了一个错

41:10.580 --> 41:11.060
catch

41:13.370 --> 41:13.850
catch

41:14.250 --> 41:15.610
不是那个

41:15.610 --> 41:15.930
file

41:15.930 --> 41:17.050
file是success file

41:22.010 --> 41:22.890
得到了吧

41:22.890 --> 41:23.290
看一下

41:23.930 --> 41:25.130
是不是这条记录25

41:25.130 --> 41:25.930
他们就出来了

41:26.810 --> 41:27.770
所以这样的话呢

41:27.770 --> 41:28.890
对我们来讲

41:28.890 --> 41:30.010
非常的简单

41:30.010 --> 41:31.930
我们只需要传入这样一个值

41:32.410 --> 41:34.330
那么这个值在前台怎么传

41:34.330 --> 41:35.210
那更简单

41:35.930 --> 41:36.970
我们就借助于

41:36.970 --> 41:38.250
当前的这个命令

41:38.250 --> 41:39.850
我们把两个结合起来就可以

41:39.850 --> 41:40.730
我现在比如说

41:41.290 --> 41:43.130
我没有现在这个人年龄

41:43.610 --> 41:45.210
他呈现的时候没有他年龄

41:45.850 --> 41:48.330
你想点击这样的一个标题

41:48.330 --> 41:50.010
然后你去拿他的年龄

41:50.650 --> 41:51.690
这时候可不可以

41:51.690 --> 41:52.410
可以呀

41:52.410 --> 41:54.090
所以我们结合这两个操作

41:54.090 --> 41:55.690
你就可以知道这个值该怎么拿

41:56.730 --> 41:57.530
我们首先来

41:58.570 --> 41:59.530
或者说

41:59.530 --> 42:01.770
我们把这个隐藏掉

42:03.770 --> 42:04.890
我们结合两个来做

42:05.370 --> 42:06.970
首先我们枪材是做了一步

42:07.530 --> 42:08.330
两个分开做

42:09.130 --> 42:10.810
然后现在我们就点击

42:10.810 --> 42:12.410
当前的这个

42:13.930 --> 42:14.170
on

42:15.850 --> 42:16.330
click

42:20.460 --> 42:21.340
我们做一个

42:24.780 --> 42:27.260
就把你上面的这个操作拿过来

42:33.750 --> 42:34.710
this点这个

42:35.910 --> 42:36.310
bound

42:37.110 --> 42:37.510
this

42:37.830 --> 42:39.190
但他后面不是固定的

42:39.750 --> 42:41.350
他后面这个值呢

42:41.350 --> 42:43.110
是你现在item里面拿出的

42:43.670 --> 42:44.390
下钢id

42:51.290 --> 42:52.010
下钢id

42:52.570 --> 42:53.290
是这个值的

42:55.380 --> 42:56.660
那么这样的话呢

42:56.660 --> 42:58.340
我点击这个操作时候

42:58.340 --> 42:59.060
到这来

43:01.060 --> 43:02.340
我这边拿到的id

43:02.340 --> 43:03.460
我们就能看一下了

43:03.460 --> 43:04.660
我把下面的先给

43:05.220 --> 43:05.780
屏蔽掉

43:06.420 --> 43:07.700
先来看一下这个操作

43:29.510 --> 43:31.030
咱不点下面这按钮了

43:31.590 --> 43:33.030
咱们先点读取记录

43:33.030 --> 43:34.310
读到了姓名

43:34.310 --> 43:36.630
点击上面一个得到他的id

43:36.630 --> 43:38.470
点击下面一个得到他的id

43:38.470 --> 43:38.790
是不是

43:39.430 --> 43:41.190
那我就可以凭借这个id

43:41.190 --> 43:42.390
来反悔这个格式

43:43.590 --> 43:45.030
是不是这样就可以了

43:45.110 --> 43:45.830
里面不用动

43:54.570 --> 43:54.970
当然

43:55.370 --> 43:56.170
做的好看一点

43:56.170 --> 43:57.930
我们这边还能做一些提示

43:59.930 --> 44:00.570
读取记录

44:03.160 --> 44:04.760
看他能读到对不对

44:05.080 --> 44:06.920
这条记录又可以重新被读取出来

44:06.920 --> 44:07.800
读单条记录

44:09.720 --> 44:11.240
这条的19岁的这条

44:11.880 --> 44:13.000
然后呢换一下

44:14.200 --> 44:15.000
他们这个人

44:17.000 --> 44:17.960
25岁的对吧

44:18.520 --> 44:19.400
所以我们可以

44:19.400 --> 44:20.680
这边的话就这么样操作

44:20.680 --> 44:22.040
我们把两个读取记录

44:22.040 --> 44:22.840
结合在一起

44:23.400 --> 44:25.080
所以这个值不是固定的

44:25.080 --> 44:26.680
它是通过这样的方式

44:27.080 --> 44:29.000
继续进行后去的操作的

44:30.280 --> 44:32.440
这是读取记录的一个操作格式

44:33.960 --> 44:35.080
那么如果说

44:35.640 --> 44:37.720
你需要获取多条记录

44:38.200 --> 44:39.320
就像我们刚才说的

44:39.320 --> 44:40.600
但这个多条记录呢

44:41.160 --> 44:43.000
比如说有一些要求的

44:43.560 --> 44:44.360
get a doc

44:44.760 --> 44:45.240
注意一下

44:45.400 --> 44:46.280
我这边说一下

44:46.920 --> 44:47.640
doc操作

44:48.120 --> 44:50.520
它是可以返回某一条记录

44:51.240 --> 44:52.600
但是呢多条记录

44:52.600 --> 44:53.800
我们就可以用where

44:54.600 --> 44:56.200
你用where的方式来写

44:57.000 --> 44:57.880
这个都可以的

44:58.920 --> 45:00.600
把doc位置

45:00.600 --> 45:04.260
我们把这个取消掉

45:08.020 --> 45:10.100
你把在这里面的doc位置

45:10.100 --> 45:10.820
换成where

45:10.820 --> 45:12.820
后面用一个小固号里面

45:12.820 --> 45:14.020
给出一个接参对象

45:14.420 --> 45:16.500
把你要的参数往里写就可以了

45:17.060 --> 45:19.300
这是多条记录的一个格式方式

45:20.580 --> 45:21.540
然后紧接着

45:21.540 --> 45:22.500
我们再来说一下

45:23.060 --> 45:24.660
那么我们录入操作

45:40.140 --> 45:40.940
录入数据

46:10.170 --> 46:10.970
录入数据

46:22.490 --> 46:24.010
数据我们就先写在这边

46:24.810 --> 46:26.250
我们后期可以从外面传

46:26.250 --> 46:27.370
那么外面的数据的话

46:27.370 --> 46:28.170
我们可以通过

46:28.650 --> 46:29.690
各种方式获取到

46:33.640 --> 46:34.120
collection

46:40.650 --> 46:40.970
add

46:46.920 --> 46:47.320
data

46:52.250 --> 46:52.650
id

46:54.410 --> 46:55.210
我们写上

47:00.760 --> 47:01.960
id不要去写它

47:01.960 --> 47:02.520
我们想

47:03.240 --> 47:04.680
我们本身来写的时候呢

47:04.680 --> 47:06.840
我们就把我们所需要的两项

47:06.840 --> 47:08.120
adge跟nand写上

47:08.120 --> 47:09.320
id让它自动生成

47:13.030 --> 47:13.350
nand

47:25.240 --> 47:27.000
写上我们的比如说

47:27.000 --> 47:27.560
marry

47:31.780 --> 47:32.420
id

47:32.420 --> 47:32.900
adge

47:35.690 --> 47:36.810
它是23岁

47:39.660 --> 47:40.380
你这样去写

47:41.900 --> 47:43.100
当你这样写好以后

47:48.840 --> 47:49.880
用zn的方式

47:56.390 --> 47:56.950
我们来看

47:57.510 --> 47:59.430
它会返回一个

47:59.430 --> 48:01.190
我们在记录中

48:01.190 --> 48:02.950
新创建的那个id

48:17.770 --> 48:19.370
它这边是指的是

48:19.370 --> 48:19.930
括号吗

48:23.540 --> 48:24.420
我们来对一下

48:33.690 --> 48:35.130
这边少个zn的括号

48:39.770 --> 48:40.410
来看一下

48:44.120 --> 48:45.240
数据故先刷一下

48:48.940 --> 48:49.740
两条记录

48:52.920 --> 48:54.120
新的一条记录

48:54.120 --> 48:54.760
5b

48:54.760 --> 48:55.640
5864

48:59.140 --> 48:59.700
进来了吧

49:00.740 --> 49:01.060
好

49:01.060 --> 49:02.180
数据会陆入

49:02.180 --> 49:02.580
这是

49:05.000 --> 49:06.120
数据户的更改

49:06.680 --> 49:07.880
那么这边说一下

49:07.880 --> 49:09.880
我们更改单条记录

49:10.440 --> 49:11.320
也就是更新

49:12.600 --> 49:14.680
我们的更新单条记录

49:14.680 --> 49:15.720
那是没有问题的

49:15.720 --> 49:16.840
但是如果说

49:16.840 --> 49:18.680
你要多记录操作的话

49:18.680 --> 49:19.320
那么这边

49:20.120 --> 49:20.840
有一个说法

49:20.840 --> 49:21.800
必须要去到

49:21.800 --> 49:23.160
我们云端进行操作

49:23.160 --> 49:24.760
那么就是要到云含数的时候

49:24.760 --> 49:25.560
我们再来说

49:25.560 --> 49:27.320
所以我们更新单条记录

49:50.390 --> 49:50.950
update

49:52.470 --> 49:52.790
date

50:04.600 --> 50:05.400
更新记录

50:08.380 --> 50:09.340
那么更新记录

50:09.340 --> 50:11.020
首先我们要说明一下

50:11.020 --> 50:12.300
你要更新什么记录

50:12.300 --> 50:13.340
更新哪一条

50:13.340 --> 50:14.460
我们这边一起来

50:17.180 --> 50:18.060
我们通过外部

50:18.060 --> 50:19.660
依然把这个字给传进来

50:24.870 --> 50:25.190
this

50:29.210 --> 50:30.250
还是更新这一条

50:38.490 --> 50:38.970
接着

50:46.260 --> 50:46.660
更新

50:50.310 --> 50:51.990
db.collection

50:55.350 --> 50:56.230
数据互散

50:57.990 --> 50:58.950
找到这条记录

51:04.310 --> 51:04.790
更新

51:06.790 --> 51:07.990
更新里面的什么

51:07.990 --> 51:08.950
放在data中

51:11.430 --> 51:12.550
我们看一下数据库

51:15.290 --> 51:17.530
这条记录的年龄是25岁

51:17.530 --> 51:18.890
所以我们把Ager改一下

51:20.810 --> 51:21.530
27岁

51:33.500 --> 51:33.820
then

51:43.830 --> 51:44.790
看一下这个数据

51:52.650 --> 51:54.810
它返回你说更新成功

51:55.690 --> 51:58.650
但是更新几条数据已经更新了0条

51:58.650 --> 51:59.930
那么这就代表着

51:59.930 --> 52:01.770
其实命令执行了

52:01.770 --> 52:03.130
但是数据没有被

52:03.290 --> 52:04.170
额外的记录

52:04.170 --> 52:04.650
或者说

52:05.210 --> 52:05.690
操作

52:05.690 --> 52:06.490
我们来看一下

52:09.130 --> 52:10.410
我们的那个

52:11.450 --> 52:12.890
数据咱们再看一下

52:12.890 --> 52:15.530
我们这里边更新的那一条的id

52:15.530 --> 52:16.090
号是

52:19.930 --> 52:23.130
abd403d7

52:23.130 --> 52:23.930
我们来看一下

52:27.370 --> 52:27.850
是这个

52:28.890 --> 52:30.410
abd403d7

52:30.410 --> 52:31.850
然后Ager等于25

52:31.850 --> 52:33.290
那么它的主要的问题

52:33.290 --> 52:34.490
是在于它没有更新

52:34.490 --> 52:35.450
我们来找一下

52:39.540 --> 52:41.220
它为什么没有更新呢

52:41.220 --> 52:42.180
其实这个原因

52:42.820 --> 52:43.700
其实很简单

52:43.700 --> 52:44.980
并不是代码有问题

52:44.980 --> 52:45.460
你看

52:45.460 --> 52:46.340
它说更新了

52:46.340 --> 52:47.380
永远更新0条

52:48.500 --> 52:50.740
那么这个原因就在于

52:50.740 --> 52:51.700
我们来看一下

52:52.580 --> 52:54.660
我们要更新的这条记录

52:54.660 --> 52:55.380
我们是

52:57.300 --> 52:58.180
adb

52:58.180 --> 52:59.620
adb的这条

52:59.620 --> 53:02.180
那么我们到数据库来看一下

53:05.060 --> 53:06.660
adb的这条

53:06.660 --> 53:07.300
你注意

53:07.300 --> 53:08.260
这条记录

53:09.460 --> 53:10.580
它不是你的

53:11.220 --> 53:12.740
它没有一个open id

53:12.740 --> 53:13.860
而我们的权限是

53:14.740 --> 53:16.020
所有的用户可读

53:16.020 --> 53:17.700
但你不可以去写

53:17.700 --> 53:18.580
看到吗

53:18.580 --> 53:20.100
所以我们改成这条

53:20.740 --> 53:21.540
你就可以了

53:22.500 --> 53:23.300
记住吗

53:23.300 --> 53:24.020
这个逻辑

53:24.820 --> 53:25.700
这条记录

53:26.340 --> 53:28.100
你是属于你自己的

53:28.100 --> 53:29.140
你才可以改

53:30.020 --> 53:31.700
这条记录是属于你的

53:31.700 --> 53:33.700
但是这条记录不是你的

53:34.660 --> 53:36.900
所以从这个逻辑来看

53:37.540 --> 53:39.540
我们的更新操作

53:39.540 --> 53:41.540
它会返回给你说成功

53:41.540 --> 53:42.820
但是它并不代表着

53:42.900 --> 53:45.060
这条记录真正的会更新

53:45.060 --> 53:45.780
一

53:45.780 --> 53:47.700
从逻辑余法角度考虑

53:47.700 --> 53:48.500
第二

53:48.500 --> 53:51.300
从它现在的权限角度考虑

53:51.300 --> 53:57.750
那我们再来看

53:57.750 --> 53:58.790
看到了吗

53:58.790 --> 53:59.750
这样就更新了

54:01.190 --> 54:02.550
我们这边刷一下

54:02.550 --> 54:05.450
不是这样

54:05.450 --> 54:06.250
刷一下

54:06.250 --> 54:07.130
看这条

54:07.130 --> 54:07.770
而起了

54:08.970 --> 54:10.650
所以我们说一下

54:10.650 --> 54:12.010
再强调一下

54:12.010 --> 54:13.130
更新记录

54:13.130 --> 54:14.490
不是它没有更新

54:14.490 --> 54:15.050
不是它

54:15.050 --> 54:16.730
不是它逻辑余法错误

54:16.730 --> 54:17.210
而是

54:18.410 --> 54:19.290
在你逻辑余法

54:19.290 --> 54:20.490
对的情况下

54:20.490 --> 54:21.610
它要去找到

54:21.610 --> 54:23.450
它当前符合

54:23.450 --> 54:25.610
权限更新的这个概念

54:26.170 --> 54:26.970
那么紧接着

54:26.970 --> 54:27.850
我们还有一个

54:28.650 --> 54:30.330
这是四个基础操作

54:30.330 --> 54:30.810
删除

54:39.740 --> 54:40.540
删除数据

54:41.180 --> 54:41.900
删除记录

54:44.700 --> 54:45.420
删除记录

54:45.420 --> 54:46.780
我们通过这儿走

54:46.780 --> 54:48.220
我们来做一个

54:48.220 --> 54:48.860
on

54:48.860 --> 54:49.420
click

54:51.100 --> 54:56.890
this.deletedata

54:58.010 --> 54:59.290
this.deletedata

55:00.170 --> 55:00.970
然后呢

55:01.050 --> 55:02.570
我们给它这条记录

55:02.970 --> 55:03.370
this

55:04.010 --> 55:06.010
我们把下面这个数据给它

55:13.660 --> 55:15.340
然后去创建一个

55:16.060 --> 55:17.500
deleteupdate

55:19.340 --> 55:21.740
通过我这样的四个式的讲解

55:21.740 --> 55:22.860
那么我们会知道

55:22.860 --> 55:25.260
在taro中你怎么去操作数据

55:25.260 --> 55:25.980
传参

55:25.980 --> 55:26.460
对吧

55:26.700 --> 55:27.340
这个结构

55:31.270 --> 55:32.070
删除数据

55:33.110 --> 55:34.950
然后我们把当前的

55:36.070 --> 55:36.630
db

55:40.390 --> 55:40.950
来啊

55:41.270 --> 55:42.310
db.

55:44.550 --> 55:47.990
那么其实你也可以直接把这个给拿到外面去

55:47.990 --> 55:49.270
你也能行啊

55:49.270 --> 55:50.710
你在这上面

55:50.710 --> 55:51.990
你也可以去订一个

55:54.260 --> 55:54.820
conceptor

55:55.460 --> 55:56.340
咱们称之为

56:00.500 --> 56:00.980
就是

56:02.260 --> 56:02.820
database

56:05.320 --> 56:08.040
database等于你可以去这样定义啊

56:08.040 --> 56:12.040
我们写成db.collection

56:12.040 --> 56:13.560
你把数据

56:13.560 --> 56:14.200
q3

56:14.760 --> 56:15.480
全订在这

56:16.440 --> 56:17.480
那么你这样的话

56:17.480 --> 56:18.840
你在下面操作时

56:18.840 --> 56:19.960
你只要是database

56:20.760 --> 56:23.160
你直接去操作你现在里面的dog

56:24.120 --> 56:25.320
然后传进来

56:25.320 --> 56:25.880
id

56:27.800 --> 56:28.200
e

56:29.320 --> 56:30.440
id传进来

56:31.960 --> 56:32.440
remove

56:34.200 --> 56:34.760
删除

56:36.440 --> 56:37.160
每一参

56:37.160 --> 56:37.960
直接跟上

56:47.370 --> 56:48.010
让我们来看

56:55.860 --> 56:56.740
删除了一条

57:00.330 --> 57:00.730
是吧

57:00.730 --> 57:01.450
就两条了

57:02.170 --> 57:03.850
所以我们现在通过

57:03.850 --> 57:06.090
刚才我的这个简单的演示

57:06.090 --> 57:07.450
我们就把现在

57:08.010 --> 57:09.530
通过tarrow方式

57:09.530 --> 57:11.050
怎么传参

57:11.050 --> 57:12.570
怎么配置

57:12.570 --> 57:15.130
怎么去完成数据云端的

57:15.130 --> 57:16.890
一个操作的基本

57:16.890 --> 57:18.730
4个数据库的操作结构

57:18.730 --> 57:20.250
就给大家展现出来了

57:20.250 --> 57:20.890
好

57:20.890 --> 57:22.090
那么之后呢

57:22.090 --> 57:23.770
我们会扩展这些内容

57:23.770 --> 57:25.930
并且更多的来讲解它里面

57:25.930 --> 57:27.770
怎么样更有意思的一些操作

57:27.770 --> 57:28.410
我们呢

57:28.410 --> 57:30.330
在后面的案例中给大家讲解

57:30.330 --> 57:31.370
那么这节课呢

57:31.370 --> 57:34.010
我们就把4个简单基础部分

57:34.010 --> 57:35.130
给大家讲解一下

57:35.130 --> 57:35.930
那么这节课呢

57:35.930 --> 57:36.410
就到这

