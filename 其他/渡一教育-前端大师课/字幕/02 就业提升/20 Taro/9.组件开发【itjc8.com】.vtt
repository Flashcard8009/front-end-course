WEBVTT

00:00.050 --> 00:02.650
好 我们继续讲解Tarot的策略课程

00:02.650 --> 00:05.650
策略课程给大家讲解一下组建开发

00:05.650 --> 00:08.050
组建开发在我们的任何框架里面

00:08.050 --> 00:10.850
其实都是作为比较重要的一个元素存在

00:10.850 --> 00:17.850
因为组建是让我们的框架能帮助我们把整个页面进行我们的代码风装化

00:17.850 --> 00:22.450
并且能够形成我们代码的一个偶和性的一个极低化

00:22.450 --> 00:24.650
好 我们说Tarot的组建开发呢

00:24.650 --> 00:27.050
其实相对于其他的一些功能来讲

00:27.050 --> 00:29.650
其实它更像于或者这么讲

00:29.650 --> 00:34.450
它是或者说利于微信的自定义组建开发性能

00:34.450 --> 00:37.050
它是利于微信的自定义组建开发

00:37.050 --> 00:40.250
那么我们有时候也可以把它想象成

00:40.250 --> 00:43.650
因为组建的概念在我们的view一中

00:43.650 --> 00:45.650
也会是一个重要的部分

00:45.650 --> 00:46.850
所以我们讲一下

00:46.850 --> 00:51.250
就是当前的Tarot它本身组建模式

00:51.250 --> 00:55.450
应该讲和我们平时所看到的做的页面

00:55.450 --> 00:58.050
就是在我们Tarot中去做一个PagerYear

00:58.050 --> 00:59.050
基本上是一样的

00:59.050 --> 01:01.250
你来看一下我的BBT的讲解

01:01.250 --> 01:02.650
我的组建开发呢

01:02.650 --> 01:04.850
组建开发里面是可以放置任意内容

01:04.850 --> 01:06.650
你可以把组建放在任意位置

01:06.650 --> 01:08.050
没有规定哪里

01:08.050 --> 01:09.650
但是我们建议

01:09.650 --> 01:12.050
就是在我们的SRC下面

01:12.050 --> 01:14.350
你去建了一个Component的目录

01:14.350 --> 01:17.650
然后我们把我们的组建都放在这个里面

01:17.650 --> 01:18.850
那么这个里面

01:18.850 --> 01:20.250
如果你组建少

01:20.250 --> 01:21.750
那么你就可以直接放上去

01:21.750 --> 01:23.150
一个两个就可以了

01:23.150 --> 01:24.650
但如果你组建多的话

01:24.650 --> 01:26.850
还是建议以目录的形式

01:26.850 --> 01:30.450
来进行组建的一个代码规范化

01:30.450 --> 01:32.450
那么一个组建里面同样

01:32.450 --> 01:34.050
也存在着两个文件

01:34.050 --> 01:34.950
你可以是

01:34.950 --> 01:36.450
一个是我们的JS

01:36.450 --> 01:40.050
也就是我们所谓的一个逻辑代码

01:40.050 --> 01:42.150
或者称之为我们的完整代码文件

01:42.150 --> 01:44.150
一个是我们的样式文件

01:44.150 --> 01:45.850
那么在我们的JS

01:45.850 --> 01:48.050
或者现在的编译出来以后

01:48.050 --> 01:49.250
称之为JSX

01:49.250 --> 01:50.650
这样的一个文件中

01:50.650 --> 01:54.550
我们可以去完成和页面一样的编写

01:54.550 --> 01:56.550
只不过我们说到是

01:56.550 --> 01:58.650
一般性我们组建的操作

01:58.650 --> 02:01.350
都是不需要有任何的

02:01.350 --> 02:04.050
所谓的一个样式

02:04.050 --> 02:05.650
配置什么都不需要做

02:05.650 --> 02:07.450
因为你组建里面

02:07.450 --> 02:11.250
你就可以完整呈现出这样的一个效果

02:11.250 --> 02:12.750
我们强调组建一点

02:12.750 --> 02:16.150
就是组建本身是一个高度封装化的

02:16.150 --> 02:17.650
它的样式

02:17.650 --> 02:20.350
它的行为和它的展示

02:20.350 --> 02:23.750
都有这个组建自己完成

02:23.750 --> 02:25.150
它不像我们有一些

02:25.150 --> 02:28.550
比如说微信里面有一个叫做模板

02:28.550 --> 02:29.550
template

02:29.550 --> 02:33.850
那么它只能完成你现在的一个展示行为

02:33.850 --> 02:35.350
你把它导入到哪里以后

02:35.350 --> 02:38.150
你哪里都可以做一些展示

02:38.150 --> 02:39.950
但是它的样式结构

02:39.950 --> 02:42.750
我们依然是可以写在主程序里面的

02:42.750 --> 02:43.850
那么它的数据

02:43.850 --> 02:46.250
也是在主程序处理完以后传给它的

02:46.250 --> 02:47.950
它只是做个样式

02:47.950 --> 02:49.450
但是模板本身自己

02:49.450 --> 02:50.950
它的样式

02:50.950 --> 02:52.250
它的行为

02:52.250 --> 02:53.850
也就是它能够做什么

02:53.850 --> 02:59.050
以及我们所谓的就是它所出现的一个结构

02:59.050 --> 03:03.050
它都有它自己这个组建全部自己干完了

03:03.050 --> 03:05.650
你只需要进行封装的展示

03:05.650 --> 03:07.150
当然我们在后面的时候

03:07.150 --> 03:09.550
我们今天的课程也会给它讲解一下

03:09.550 --> 03:14.450
我们如何将我们的调用端 引用端

03:14.450 --> 03:16.450
传数据进主节

03:16.450 --> 03:18.150
这个也会去讲一下

03:18.150 --> 03:19.850
好 那么呢

03:19.850 --> 03:20.850
我们来看一下

03:20.850 --> 03:21.950
官方的文档

03:21.950 --> 03:24.250
其实这个组建的文档还是比较简单

03:24.250 --> 03:26.850
组建的话前面也是简单的

03:26.850 --> 03:29.550
和我刚才的说明是一样的

03:29.550 --> 03:31.150
那么这里呢

03:31.150 --> 03:32.150
注意一下

03:32.150 --> 03:35.750
我们有一个using components

03:35.750 --> 03:36.550
它是在哪里

03:36.550 --> 03:40.050
在当前页面的config里面

03:40.050 --> 03:42.250
你如果自行去编写代码

03:42.250 --> 03:43.050
那就没问题

03:43.050 --> 03:44.350
你觉得在组建里面用

03:44.350 --> 03:47.650
但如果说你现在需要去引用

03:47.650 --> 03:50.850
原生小程序的自定义组建

03:50.850 --> 03:51.750
注意一下

03:51.750 --> 03:55.250
你是引用的是原生小程序的components

03:55.250 --> 03:58.950
那么这时候你需要去做一个using components

03:58.950 --> 04:02.950
做一个这个在config里面设定一下

04:02.950 --> 04:04.150
它里面做法就是

04:04.150 --> 04:05.450
自己写个组建名称

04:05.450 --> 04:06.950
加上它的路径

04:06.950 --> 04:07.950
这样的方式就可以了

04:07.950 --> 04:09.550
KV结构

04:09.550 --> 04:12.450
一般我们现在很少去这样去用

04:12.450 --> 04:16.350
因为组建我们自行可以在里面去编写

04:16.350 --> 04:19.250
除非是你现在微信给了

04:19.250 --> 04:20.650
就是我们的公司

04:20.650 --> 04:22.050
有一个技术站

04:22.050 --> 04:23.050
然后在它里面

04:23.050 --> 04:25.550
把我们的微信小程序的整个组建

04:25.550 --> 04:26.450
进行了封装

04:26.450 --> 04:28.450
也把它放在这里边了

04:28.450 --> 04:30.550
那么你需要的是通过这个命令

04:30.550 --> 04:31.350
去完成

04:31.350 --> 04:32.550
不需要你自己写

04:32.550 --> 04:33.950
那么这时候你采取用

04:33.950 --> 04:35.950
不然的话就是一个组建

04:35.950 --> 04:38.450
我们本身就是一个组建的写法

04:38.450 --> 04:40.250
我们在里面自己写就可以了

04:40.250 --> 04:41.250
看一下下面结构

04:41.250 --> 04:42.250
其实你这样一看

04:42.250 --> 04:44.550
我觉得还没有什么难度的

04:44.550 --> 04:45.350
为什么

04:45.350 --> 04:47.750
它就是一个页面的形式

04:47.750 --> 04:49.150
导入Terror

04:49.150 --> 04:50.050
然后完成

04:50.050 --> 04:52.050
你现在页面中需要用到的

04:52.050 --> 04:54.050
component的组建是哪些

04:54.050 --> 04:55.850
是我们的微信里面的

04:55.850 --> 04:58.050
text on view

04:58.050 --> 04:58.950
imager button

04:58.950 --> 05:00.450
用这些可以使用

05:00.450 --> 05:02.050
它其实也没有权用到

05:02.050 --> 05:04.350
然后这边是Tab CSS

05:04.350 --> 05:05.750
就是样式结构

05:05.750 --> 05:07.550
里面由于你是完成

05:07.550 --> 05:10.450
依然要完成一个component之类的继承

05:10.450 --> 05:14.050
所以你的里面的事件方法

05:14.050 --> 05:16.750
包括是你现在的生命周期

05:16.750 --> 05:18.850
包括你的Rendle

05:18.850 --> 05:20.350
是和页面配置

05:20.350 --> 05:23.950
几乎没有区别

05:23.950 --> 05:24.850
只不过

05:24.850 --> 05:26.750
组建的生命周期有一两个

05:26.750 --> 05:28.250
可能是页面没有

05:28.250 --> 05:30.250
换一个生命周期概念就是

05:30.250 --> 05:30.850
咱们看

05:30.850 --> 05:32.250
组建的引用

05:32.250 --> 05:34.950
其实你只需要在哪里想用它了

05:34.950 --> 05:37.350
做一个import引入

05:37.350 --> 05:40.050
然后你就可以直接作为

05:40.050 --> 05:42.750
像普通的一个标签一样

05:42.750 --> 05:44.450
直接去使用了

05:44.450 --> 05:45.650
所以它这边说的是

05:45.650 --> 05:48.050
组建依然返回XX代码

05:48.050 --> 05:48.650
OK

05:48.650 --> 05:50.150
那我们来做一下

05:50.150 --> 05:52.950
生命周期待会再来看

05:52.950 --> 05:55.450
那么我们就打开我们的项目

05:55.450 --> 05:57.750
首先我们也想用一个组建

05:57.750 --> 05:59.050
我们把它关了

05:59.050 --> 05:59.450
关了

05:59.450 --> 06:01.350
我们从头开始

06:01.350 --> 06:02.850
从这打开以后的话

06:02.850 --> 06:03.750
我们来看一下

06:03.750 --> 06:05.750
我们希望在这里边

06:05.750 --> 06:07.250
去创建一个组建

06:07.250 --> 06:09.050
所以我们刚才讲法是什么

06:09.050 --> 06:11.250
在它下面去创建一个component

06:11.250 --> 06:12.250
对不对

06:12.250 --> 06:14.250
所以我们在src下面

06:14.250 --> 06:21.560
我们创建一个component

06:21.560 --> 06:25.760
src下面我们创建component的文件夹

06:25.760 --> 06:27.960
这不是文件夹

06:27.960 --> 06:28.560
我们删掉它

06:28.560 --> 06:30.360
重新创建一下

06:30.360 --> 06:31.260
src

06:31.260 --> 06:37.950
我们找到它创建文件夹

06:37.950 --> 06:40.350
component

06:40.350 --> 06:41.450
在component之下

06:41.450 --> 06:42.050
我们说过

06:42.050 --> 06:45.350
我们可以去创建我们的目录

06:45.350 --> 06:47.850
比如说我想创建一个什么呢

06:47.850 --> 06:52.480
对话框

06:52.480 --> 06:54.180
dialogue

06:54.280 --> 06:56.180
我想创建一个dialogue对话框

06:56.180 --> 06:57.180
这个很简单吧

06:57.180 --> 06:59.680
我们想手动做一个小对话框

06:59.680 --> 07:01.980
其实应该更讲的是漂浮

07:01.980 --> 07:03.780
漂在页面中的一个

07:03.780 --> 07:05.180
它里面应该有两个文件

07:05.180 --> 07:05.680
对吧

07:05.680 --> 07:12.680
一个是dialogue.css

07:12.680 --> 07:16.920
第二个我们再创建一个

07:16.920 --> 07:20.320
dialogue.xs

07:20.320 --> 07:24.320
那么我们完成我们的导入

07:24.320 --> 07:28.320
先在完成一个import

07:28.320 --> 07:30.120
taro

07:30.120 --> 07:37.610
它是要component继承的

07:37.610 --> 07:42.520
from

07:42.520 --> 07:45.920
taro.js

07:45.920 --> 07:48.460
taro

07:48.460 --> 07:50.160
第二个

07:50.160 --> 07:52.860
我们可以把它当前面我们用个view

07:52.860 --> 07:54.960
所以我

07:54.960 --> 08:04.330
定量把view给拿出来

08:04.330 --> 08:05.930
taro.js

08:05.930 --> 08:11.680
component

08:11.680 --> 08:14.580
然后我们做一个

08:14.580 --> 08:15.880
借口暴露

08:15.880 --> 08:18.080
expert.default

08:18.080 --> 08:19.080
暴露的是什么

08:19.080 --> 08:22.090
暴露的是个类

08:22.090 --> 08:24.700
dialogue

08:24.700 --> 08:28.540
extends

08:28.540 --> 08:30.040
components

08:30.040 --> 08:32.980
继承一下

08:32.980 --> 08:34.680
接下去我们其实这里面

08:34.680 --> 08:36.980
我们暂时先不去涉及生命周期

08:36.980 --> 08:38.780
和其他的一些事件操作

08:38.780 --> 08:40.980
所以呢我们只要做输出

08:40.980 --> 08:44.780
那么我们就完成一个randle

08:44.780 --> 08:48.140
我们完成一个randle

08:48.140 --> 08:51.430
里面做return

08:51.430 --> 09:05.160
我们做一个view

09:05.160 --> 09:07.660
然后呢我们可以订个样式

09:07.660 --> 09:09.060
样式等会咱们订

09:09.060 --> 09:13.630
现在我们先把样式的名称写一下

09:13.630 --> 09:16.630
紧接着我们里面写上我们的

09:16.630 --> 09:17.930
我

09:17.930 --> 09:18.930
是

09:18.930 --> 09:22.730
一个弹窗

09:22.730 --> 09:24.430
我们这样写上

09:24.430 --> 09:26.830
你当你现在写完以后它有个警告

09:26.830 --> 09:30.230
就是说你现在是写了一个我们的dialogue

09:30.230 --> 09:31.930
这样的extends

09:31.930 --> 09:34.030
你写在了component里面

09:34.030 --> 09:35.430
但是这个文件呢

09:35.430 --> 09:37.330
我们没有把它列入到哪里

09:37.330 --> 09:40.530
我们列入到我们的paders的管理箱里面

09:40.530 --> 09:42.030
所以它会认为

09:42.030 --> 09:42.730
这一项

09:42.730 --> 09:44.330
你现在没有被引用到

09:44.330 --> 09:46.830
没有引用到就意味着不会被便宜

09:46.830 --> 09:48.830
它会有这个提示给你

09:48.830 --> 09:49.430
ok

09:49.430 --> 09:52.130
那这样的话呢我们就可以自行

09:52.130 --> 09:54.530
我们看一下

09:54.530 --> 09:55.930
没有关系

09:55.930 --> 09:56.830
那么这样的话呢

09:56.830 --> 09:58.930
我们就可以自行的来完成

09:58.930 --> 10:00.830
我们现在的一个引入

10:00.830 --> 10:02.130
现在先不做样式

10:02.130 --> 10:04.130
样式的话等会咱们再来加

10:04.130 --> 10:05.230
引入的方式

10:05.230 --> 10:06.630
就是我跑到页面中

10:06.730 --> 10:08.930
我们随便打开一个页面

10:08.930 --> 10:10.930
比如说就打首页吧

10:12.230 --> 10:12.930
打开以后

10:12.930 --> 10:14.330
第一步

10:14.330 --> 10:20.650
inpart

10:20.650 --> 10:22.050
我现在是测试

10:22.050 --> 10:23.750
测试过程中我们就可以空开一点

10:23.750 --> 10:25.150
等我全部完成以后的话

10:25.150 --> 10:28.150
咱们就可以把它给格式化一点

10:28.150 --> 10:29.050
inpart

10:29.050 --> 10:32.350
然后呢我们里面去做的是导入

10:32.350 --> 10:33.750
我现在叫做

10:33.750 --> 10:37.550
dialogue from

10:37.550 --> 10:38.850
dialogue from

10:38.850 --> 10:40.850
那么它来自哪里呢

10:40.850 --> 10:42.850
我们看一下路径

10:42.850 --> 10:45.950
它的路径是点点点点点

10:45.950 --> 10:47.950
上的component

10:47.950 --> 10:49.650
两级

10:49.650 --> 10:50.750
component

10:50.750 --> 10:53.150
下面是一个文件家叫dialogue

10:53.150 --> 10:58.550
在dialogue文件家里面的这个文件

10:58.550 --> 11:00.650
注意不要去跟后坠

11:00.650 --> 11:03.650
那个JSX这种东西不用跟

11:03.650 --> 11:04.550
写上dialogue

11:04.550 --> 11:06.650
然后呢我们对它进行使用

11:06.650 --> 11:08.150
使用的方式

11:08.150 --> 11:09.950
我们其实只需要

11:09.950 --> 11:12.650
直接在我们的JSX的random里面用就行了

11:12.650 --> 11:15.950
我们不需要对它进行额外的其他配置了

11:15.950 --> 11:18.750
所以我们去到我们最终的这个里面

11:18.750 --> 11:19.750
下面是按钮

11:19.750 --> 11:21.050
我们现在的页面的话呢

11:21.050 --> 11:22.150
呈现出来是这样的

11:22.150 --> 11:25.050
上面有我们想给它就这个位置

11:25.050 --> 11:26.550
给它看一个

11:26.550 --> 11:29.650
一个浮在空中的div

11:29.650 --> 11:38.310
我们在这边就写上我们的dialogue

11:38.310 --> 11:39.910
好什么都不敢

11:39.910 --> 11:41.810
就直接运行一下

11:41.810 --> 11:43.810
这边有一个

11:43.810 --> 11:47.020
codefi

11:47.020 --> 11:51.540
我们来看一下页面

11:51.540 --> 11:52.540
这边有个错对吧

11:52.540 --> 11:55.340
他说

11:55.340 --> 11:56.940
没有找到这个吗

11:56.940 --> 12:07.220
我们来看一下是否是拼错了

12:07.220 --> 12:08.720
component

12:08.720 --> 12:09.420
dialogue

12:09.420 --> 12:10.220
dialogue

12:10.220 --> 12:13.720
它那么我们往里看一集

12:13.720 --> 12:17.220
这个view是从我这引进来的

12:17.220 --> 12:18.020
啊啊

12:18.020 --> 12:19.620
不是这个代码错

12:19.620 --> 12:20.920
是这个

12:20.920 --> 12:24.520
我们的return这边返回的是个扩号

12:24.520 --> 12:26.520
不是大的是小的

12:26.520 --> 12:28.220
是这样的

12:28.220 --> 12:29.620
好我们再说一下啊

12:29.620 --> 12:32.320
就是我们在做里面代码的时候

12:32.320 --> 12:33.820
如果你是单行代码的话

12:33.820 --> 12:35.720
你就不需要去做这样的格式

12:35.720 --> 12:37.220
但是你是多行代码的时候

12:37.220 --> 12:38.020
请注意

12:38.020 --> 12:39.520
这外面可以打一个扩号

12:39.520 --> 12:40.520
可以打一个扩号

12:40.520 --> 12:42.920
但我们刚才给了一个大扩号对吧

12:42.920 --> 12:43.820
然后此时的话呢

12:43.820 --> 12:45.220
我们看它的编译上面

12:45.220 --> 12:47.420
我们再往下看一下

12:47.420 --> 12:49.120
它是警告这个文件

12:49.120 --> 12:51.420
我们再保存一下

12:51.420 --> 12:53.220
看是不是这个就没有了

12:53.220 --> 12:54.520
没有这个警告了

12:54.520 --> 12:55.120
对吧

12:55.120 --> 12:55.320
好

12:55.320 --> 12:57.520
我们来看一下页面

12:57.520 --> 12:58.220
看一下

12:58.220 --> 12:59.820
我是一个弹窗

12:59.820 --> 13:02.020
是不是这样文字就出来了

13:02.020 --> 13:02.620
对吧

13:02.620 --> 13:03.320
那代表的是

13:03.320 --> 13:04.920
我现在已经把一个

13:04.920 --> 13:07.020
我们字型写的一个组件

13:07.020 --> 13:09.920
把它给形成了现在的一个展示

13:09.920 --> 13:11.520
请接着我们来看一下啊

13:11.520 --> 13:13.520
现在在这个过程中呢

13:13.520 --> 13:14.520
我们说

13:14.520 --> 13:17.720
我们想把组件的样式完善一下

13:17.720 --> 13:20.820
其实就做一个index

13:20.820 --> 13:21.220
对吧

13:21.220 --> 13:22.020
这边有一个

13:22.020 --> 13:23.920
我们在这边写

13:23.920 --> 13:26.580
第二

13:26.580 --> 13:27.780
我们先第二

13:27.780 --> 13:32.320
然后后面跟上这index

13:32.320 --> 13:33.720
就让它团在中间啊

13:33.720 --> 13:34.720
我们不做其他的

13:34.720 --> 13:36.220
首先

13:36.220 --> 13:39.960
我们做一个position

13:39.960 --> 13:43.440
我们做一个absolutive

13:43.440 --> 13:44.940
做一个absolutive

13:44.940 --> 13:45.440
然后呢

13:45.440 --> 13:47.740
我们做一个zindex

13:47.740 --> 13:48.940
让它浮在上面

13:48.940 --> 13:49.740
所以大一点

13:49.740 --> 13:51.640
99

13:51.640 --> 13:54.040
当然你说999也行啊

13:54.040 --> 13:55.440
然后position好了以后呢

13:55.440 --> 13:57.540
我们给它一个left

13:57.540 --> 13:58.440
我们告诉它

13:58.440 --> 13:59.640
我们就手动定一下

13:59.640 --> 14:01.840
我们不去做这一块了

14:01.840 --> 14:06.040
高左边和上面都离开两百

14:06.040 --> 14:07.440
上面

14:07.440 --> 14:10.440
离开两百abx

14:10.440 --> 14:11.040
然后呢

14:11.040 --> 14:13.340
我们去定一下它的宽度

14:13.340 --> 14:16.040
它的宽度我们定300abx

14:16.040 --> 14:18.640
它的高度我们定200abx

14:18.640 --> 14:20.240
随定一下

14:20.240 --> 14:22.240
然后画个边框

14:22.240 --> 14:26.330
我们为了让它能够出现

14:26.330 --> 14:28.430
就是在中间浮动并且里面

14:28.430 --> 14:30.730
我们待会还会放东西进去

14:30.730 --> 14:32.030
随便写一下啊

14:32.030 --> 14:35.170
这是个灰色对吧

14:35.170 --> 14:36.870
最后一行

14:36.870 --> 14:38.770
back of ground

14:38.770 --> 14:40.170
开了

14:40.170 --> 14:42.170
给它一个

14:42.170 --> 14:43.470
发发发

14:43.470 --> 14:44.070
这什么

14:44.070 --> 14:45.270
白色

14:45.270 --> 14:45.870
奶白

14:45.870 --> 14:46.270
好了

14:46.270 --> 14:46.670
这样的话

14:46.670 --> 14:49.740
我们再来看一下

14:49.740 --> 14:51.540
是不是浮在这里了

14:51.540 --> 14:52.340
对吧

14:52.340 --> 14:53.040
那么注意啊

14:53.040 --> 14:53.640
什么叫浮

14:53.640 --> 14:54.440
你看到吗

14:54.440 --> 14:55.540
我在刷新过程中

14:55.540 --> 14:57.040
它其实后面是不善影响的

14:57.040 --> 14:59.240
它就在固定在前面这位置了

14:59.240 --> 14:59.540
好

14:59.540 --> 15:00.740
现在我们不做页面排板

15:00.740 --> 15:01.840
我们主要是控制它

15:01.840 --> 15:04.640
它我们把它做成的是一个组件

15:04.640 --> 15:05.540
现在大家看到了

15:05.540 --> 15:07.640
组件的做法其实特别简单啊

15:07.640 --> 15:10.740
我们字型写了一个叫components的页面

15:10.740 --> 15:11.440
然后里面呢

15:11.440 --> 15:12.640
我们字型也去定义

15:12.640 --> 15:14.340
我们现在的一个目录

15:14.340 --> 15:15.540
那么每个目录下面

15:15.540 --> 15:17.140
我们都放置了两个文件

15:17.140 --> 15:18.640
一个css样式

15:18.640 --> 15:20.340
一个是jx差的样子

15:20.340 --> 15:21.440
跟那个是

15:21.440 --> 15:22.240
jx差里面呢

15:22.240 --> 15:24.640
基本上它是和我们现在在编写

15:24.640 --> 15:26.440
我们页面的结构保持一致

15:26.440 --> 15:27.240
也就是说

15:27.240 --> 15:29.740
它也继承自我们的components机类

15:29.840 --> 15:32.340
然后完成你现在里面的render

15:32.340 --> 15:34.640
然后完成里面的jx差的输出

15:34.640 --> 15:36.140
jx差的代码结构呢

15:36.140 --> 15:38.640
就是我们现在的微信代码内容

15:38.640 --> 15:40.240
这样的话你就可以直接输出

15:40.240 --> 15:40.940
对吧

15:40.940 --> 15:42.140
紧接着我们再来看

15:42.140 --> 15:43.840
因为我现在view引进来了

15:43.840 --> 15:46.440
所以你就可以使用这个组件

15:46.440 --> 15:48.740
紧接着我们把它做完以后

15:48.740 --> 15:50.040
在我们使用方

15:50.040 --> 15:51.140
首先第一步

15:51.140 --> 15:52.740
把它做一个引用

15:52.740 --> 15:53.640
你把它做一个引用

15:53.640 --> 15:54.540
把它引进来

15:54.540 --> 15:55.940
引到我们现在代码中

15:55.940 --> 15:56.740
第二步呢

15:56.740 --> 15:59.040
界面中你可以不做任何东西

15:59.040 --> 16:01.540
直接在我们接下去的

16:01.540 --> 16:02.540
主页面的

16:02.540 --> 16:04.740
或者主调用页面上面的

16:04.740 --> 16:05.740
我们直接插里面

16:05.740 --> 16:07.740
去写上你现在的

16:07.740 --> 16:10.840
调用那个组件名称

16:10.840 --> 16:12.840
就是我们刚才现在看到的

16:12.840 --> 16:14.540
就是标签对吧

16:14.540 --> 16:15.640
Dialog标签

16:15.640 --> 16:19.040
那么你组件就会在这个位置上呈现了

16:19.040 --> 16:19.540
看一下

16:19.540 --> 16:20.640
组件是不是特别简单

16:20.640 --> 16:23.840
这样就在tel中的引用

16:23.840 --> 16:25.040
那么紧接着

16:25.040 --> 16:26.540
那么看到这个以后呢

16:26.540 --> 16:28.040
我们第二步操作

16:28.040 --> 16:30.940
这是我组件里面做了一个最简单的一个文本

16:30.940 --> 16:32.640
并且把组件的结构化

16:32.640 --> 16:35.740
或者说组件的引用方式给大家讲了一下

16:35.740 --> 16:36.940
接下去第二步

16:36.940 --> 16:39.740
我们想传植给组件

16:39.740 --> 16:41.640
我们想传植给组件

16:41.640 --> 16:43.040
那么组件传植呢

16:43.040 --> 16:44.740
我们永远会想到一个词

16:44.740 --> 16:46.440
B-R-O-P-S

16:46.440 --> 16:47.640
Berberts

16:47.640 --> 16:48.740
属性传植

16:48.740 --> 16:49.540
的确

16:49.540 --> 16:52.240
属性传植是作为组件的一个最基本

16:52.240 --> 16:54.740
也就是最常用的一种方式

16:54.740 --> 16:55.740
我们自己再来写

16:55.740 --> 16:58.640
叫做MyTester

16:58.640 --> 16:59.340
我就这么写

16:59.340 --> 17:01.240
MyTester

17:01.240 --> 17:03.340
我的文本

17:03.340 --> 17:04.840
你写上

17:04.840 --> 17:05.840
我的文本写上

17:05.840 --> 17:08.420
比如说

17:08.420 --> 17:10.920
这是我文本

17:10.920 --> 17:12.120
简单几个字你写上

17:12.120 --> 17:14.220
那么我们到组件里面是怎么样完成

17:14.220 --> 17:15.320
对它的获取呢

17:15.320 --> 17:18.540
进到组件

17:18.540 --> 17:19.940
组件里面对文本的获取

17:19.940 --> 17:21.040
或对它的操作呢

17:21.040 --> 17:21.940
其实

17:21.940 --> 17:24.040
组件里面有一个常用的一种方式

17:24.040 --> 17:26.740
我们在这边写一下

17:26.740 --> 17:29.830
注释

17:29.830 --> 17:30.630
第四点

17:30.630 --> 17:32.630
P-R-O-P-S

17:32.630 --> 17:33.730
点

17:33.730 --> 17:37.010
你的

17:37.010 --> 17:38.310
念

17:38.310 --> 17:42.640
来获取

17:42.640 --> 17:45.600
引用

17:45.600 --> 17:49.270
方的

17:49.270 --> 17:50.870
组件

17:50.870 --> 17:52.070
是这个逻辑

17:52.070 --> 17:52.570
好

17:52.570 --> 17:53.470
那么这样的话呢

17:53.470 --> 17:55.370
我们下面就可以看下去

17:55.370 --> 17:57.270
我们perperts.net来获取

17:57.270 --> 17:57.870
引用方的组件

17:57.870 --> 17:59.570
所以我们这边把我们刚才的内容

17:59.570 --> 18:00.670
再打印出来

18:00.670 --> 18:01.570
直接在这边

18:01.570 --> 18:03.370
第四点

18:03.370 --> 18:05.070
perperts.

18:05.070 --> 18:06.770
我们前面写了什么

18:06.770 --> 18:08.170
MyTester 是不是

18:08.170 --> 18:09.570
我们这边写了一个

18:09.570 --> 18:10.770
MyTester

18:10.770 --> 18:11.870
所以这样的话

18:11.870 --> 18:13.770
我们打上MyTester

18:13.770 --> 18:13.970
好

18:13.970 --> 18:14.870
来看一下

18:14.870 --> 18:17.470
在我是一个弹框里面

18:17.470 --> 18:18.870
后面能不能显示

18:18.870 --> 18:21.170
这是我的文本

18:21.170 --> 18:21.770
出来了吧

18:21.770 --> 18:22.670
这是我的文本

18:22.670 --> 18:23.870
所以这样的话

18:23.870 --> 18:25.470
是不是传进去了

18:25.470 --> 18:26.770
是不是传进去了

18:26.770 --> 18:28.570
那么如果说

18:28.570 --> 18:29.770
你在这个时候

18:29.770 --> 18:31.870
除了一个文本以外

18:31.870 --> 18:35.370
你还想传一个HTML内容

18:35.370 --> 18:35.770
你注意啊

18:35.770 --> 18:37.770
你还想传一个HTML内容

18:37.770 --> 18:39.770
那么你可以在这边

18:39.770 --> 18:44.170
你形成一个我们所谓的

18:44.170 --> 18:45.570
自付串的传送模式

18:45.570 --> 18:47.370
你来看一下

18:47.370 --> 18:50.770
你打上一个大过号

18:50.770 --> 18:52.170
你打上一个大过号

18:52.170 --> 18:53.470
在这里的话呢

18:53.470 --> 18:54.370
我们就写上

18:54.370 --> 18:57.170
比如说我们这边写上

18:57.170 --> 19:04.220
Tester

19:04.220 --> 19:09.470
我们是用ES6的自付串模式

19:09.470 --> 19:10.770
然后在这边进行传送

19:10.770 --> 19:11.670
我们这边的话呢

19:11.670 --> 19:17.830
写上我的Tester

19:17.830 --> 19:19.130
保存

19:19.130 --> 19:22.700
你进在进程区中看一下

19:22.700 --> 19:23.700
看到吗

19:23.700 --> 19:25.200
它会进来

19:25.200 --> 19:26.900
但是有时候同学们就是

19:26.900 --> 19:28.000
用这样的方式

19:28.000 --> 19:31.470
就是你不去给

19:31.470 --> 19:32.670
你不去给这个

19:32.670 --> 19:33.370
然后你用个

19:33.370 --> 19:44.120
比如说你这边也传一个view

19:44.120 --> 19:45.320
你这样传

19:45.320 --> 19:47.620
那么你来看一下

19:47.620 --> 19:49.520
页面

19:49.520 --> 19:50.720
你会发现吗

19:50.720 --> 19:53.820
他这边会告诉你reactor is

19:53.920 --> 19:54.720
not defined

19:54.720 --> 19:55.620
没有找到

19:55.620 --> 19:57.120
这里边的这样的一个内容

19:57.120 --> 19:57.520
所以呢

19:57.520 --> 19:58.620
他会报错

19:58.620 --> 20:00.120
这点记住啊

20:00.120 --> 20:03.120
你要通过我们的属性方式

20:03.120 --> 20:04.820
去传送我们内容的时候

20:04.820 --> 20:08.120
你是以自付串的方式传

20:08.120 --> 20:08.520
那老师

20:08.520 --> 20:10.920
我如果真的想把那个内容传进去

20:10.920 --> 20:11.720
还有什么办法

20:11.720 --> 20:13.420
我能传两个值吗

20:13.420 --> 20:17.340
试一下

20:17.340 --> 20:18.140
我们就以这样的

20:18.140 --> 20:20.640
如果你传自付串的方式

20:20.640 --> 20:22.540
你这样去传自付串

20:22.540 --> 20:24.440
你直接以自付串的方式

20:24.440 --> 20:27.440
作为我的一个

20:27.440 --> 20:30.340
接触的格式去传送

20:30.340 --> 20:31.240
是不是可以的

20:31.240 --> 20:32.540
这样也行的

20:32.540 --> 20:33.540
那么同样的

20:33.540 --> 20:35.940
你继续可以往下

20:35.940 --> 20:44.500
my name Johnson

20:44.500 --> 20:45.500
在里面

20:45.500 --> 20:47.600
我们同样的

20:47.600 --> 20:49.000
你在这边

20:49.000 --> 20:56.440
你去使用你的标签

20:56.440 --> 20:56.640
对吧

20:56.640 --> 20:57.840
你在属进

20:57.840 --> 21:00.540
组件里面去使用

21:00.540 --> 21:01.540
我同样的

21:01.540 --> 21:02.640
我复制一个标签

21:02.640 --> 21:10.360
把我刚才传的第二个字放下来

21:10.360 --> 21:14.160
this, this, preparedness, this

21:14.160 --> 21:15.160
我们叫什么

21:15.160 --> 21:21.160
我们叫做my name

21:21.160 --> 21:21.360
好

21:21.360 --> 21:25.800
你来看一下

21:25.800 --> 21:27.200
这样是可以的

21:27.200 --> 21:28.300
理解吧

21:28.300 --> 21:28.900
好

21:28.900 --> 21:30.700
还有什么样的传送方式

21:30.700 --> 21:31.900
还有

21:31.900 --> 21:33.300
现在我们教了第一种

21:33.300 --> 21:35.400
就是this, this, preparedness

21:35.400 --> 21:36.300
那么老师

21:36.300 --> 21:38.600
这个时候我能传速组吗

21:38.600 --> 21:39.100
他问

21:39.100 --> 21:41.000
这个时候能传速组吗

21:41.000 --> 21:43.200
你通过这个方式

21:43.200 --> 21:44.000
对吧

21:44.000 --> 21:45.900
那么速组的传送来说

21:45.900 --> 21:48.000
这个是ok 肯定可以的

21:48.000 --> 21:49.000
我们比如说

21:49.000 --> 21:50.300
那么我们需要定义速组

21:50.300 --> 21:51.900
然后通过这个方式往里传

21:51.900 --> 21:52.900
然后里面拿到的

21:52.900 --> 21:54.500
无论是json对象和速组

21:54.500 --> 21:56.700
都有这样的一个标签

21:56.700 --> 21:58.300
我们是可以进行传送

21:58.300 --> 22:00.400
我们的一个

22:00.400 --> 22:01.800
打过号的形式

22:01.800 --> 22:02.500
ok

22:02.500 --> 22:03.700
那么我们现在来讲

22:03.700 --> 22:04.700
他的第二种精致

22:04.700 --> 22:12.480
先把第二种想掉

22:12.480 --> 22:14.780
那么我们现在所看到的所有内容

22:14.780 --> 22:16.280
都是在组件的my test

22:16.280 --> 22:18.280
my name 这样的属性里面传送

22:18.280 --> 22:19.280
其实

22:19.280 --> 22:22.180
都作为我们现在的传送的组件来讲

22:22.180 --> 22:24.780
他还能直接传送你现在

22:24.780 --> 22:27.480
对于这个组件标签里面的内容

22:27.480 --> 22:29.080
对于这个组件标签里面内容

22:29.080 --> 22:30.980
他也可以通过这个来传

22:30.980 --> 22:31.680
那我们来看一下

22:31.680 --> 22:33.780
首先我们在这里边写上一个文本

22:33.780 --> 22:36.180
我们写上一个东西

22:36.180 --> 22:36.980
按钮吧

22:36.980 --> 22:40.280
我们写上一个按钮

22:40.280 --> 22:42.080
button

22:42.080 --> 22:43.380
按钮

22:43.380 --> 22:44.380
我想把这个按钮

22:44.380 --> 22:46.580
带标签一起传送过去

22:46.580 --> 22:49.380
那么我们在这边来看

22:49.380 --> 22:52.910
我直接在这边写

22:52.910 --> 22:54.810
this点

22:54.810 --> 22:56.310
pervertise

22:56.310 --> 22:57.210
注意

22:57.210 --> 22:59.310
后面的这一项

22:59.310 --> 22:59.610
注意

22:59.610 --> 23:01.410
他已经提示给你了

23:01.410 --> 23:04.010
你要用一个球运来接

23:04.010 --> 23:05.810
你要用一个球运来接

23:05.810 --> 23:07.110
球运代表的是

23:07.110 --> 23:09.610
当前组件的紫元素

23:09.610 --> 23:14.410
当前组件的紫元素

23:14.410 --> 23:15.610
有点绕

23:15.610 --> 23:16.310
那么这样的话

23:16.310 --> 23:18.110
我们就可以把这个纸给拿进来了

23:18.110 --> 23:20.010
我们来看一下

23:20.110 --> 23:21.610
看到吗

23:21.610 --> 23:22.710
是不是有了

23:22.710 --> 23:24.010
所以我们讲的是

23:24.010 --> 23:27.310
你如果要传送我们所谓的HTML

23:27.310 --> 23:28.810
或者称之为我们JSA

23:28.810 --> 23:32.510
或者称之为我们的微信的原码结构的话

23:32.510 --> 23:37.710
那么你完全使用我们的放在组件的里面

23:37.710 --> 23:40.110
它的开始和结束标签里面

23:40.110 --> 23:43.310
然后通过我们现在的球运的方式

23:43.310 --> 23:45.710
你可以把直接把组件全部放进去

23:45.710 --> 23:46.510
ok吧

23:46.510 --> 23:47.410
这个理解

23:47.410 --> 23:47.910
好

23:47.910 --> 23:48.510
那么这样的话

23:48.510 --> 23:51.110
大家很容易现在一下子能够看懂

23:51.110 --> 23:53.010
其实它的组件开发

23:53.010 --> 23:54.210
没你想象那么难

23:54.210 --> 23:56.610
比起我们其他来讲的话

23:56.610 --> 23:58.610
应该讲很通顺

23:58.610 --> 24:01.510
它不是单独要学一套组件与法

24:01.510 --> 24:02.610
那么我们这样的话

24:02.610 --> 24:04.410
就完成了一个组件的

24:04.410 --> 24:07.410
最简单的数据的操作和运行

24:07.410 --> 24:08.910
那么在后面的我们过程中

24:08.910 --> 24:11.010
我们还会大量的去使用组件

24:11.010 --> 24:13.110
那么需要大家更多的来进行

24:13.110 --> 24:14.710
不断的学习

24:14.710 --> 24:17.210
这就是现在组件的一个简单的用法

24:17.210 --> 24:19.110
调用关系和它的操作

24:19.110 --> 24:19.410
好了

24:19.410 --> 24:20.410
那么这些课

24:20.410 --> 24:21.810
我们对组件的介绍

24:21.810 --> 24:23.210
调用和传直

24:23.210 --> 24:23.910
就先讲到这

