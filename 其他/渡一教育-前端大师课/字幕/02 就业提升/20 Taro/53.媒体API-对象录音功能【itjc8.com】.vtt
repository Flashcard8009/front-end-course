WEBVTT

00:00.000 --> 00:02.800
好 我们继续讲解我们的Tarot系列课程

00:02.800 --> 00:08.000
这些课程给大家讲解一下我们Tarot系列课程从媒体API开始讲解

00:08.000 --> 00:13.500
媒体API里面呢 主要有几个功能啊 有音频 有视频

00:13.500 --> 00:20.000
有我们的那个录音 有地图 有图片 这些都有

00:20.000 --> 00:24.000
Taro的媒体API

00:24.000 --> 00:31.140
它有的是比如说我刚才讲的

00:31.140 --> 00:45.550
音频 视频 图片 地图 相机 录音

00:45.550 --> 00:50.550
这些都属于我们现在的BGM

00:50.550 --> 00:55.120
都属于我们的媒体API结构

00:55.120 --> 00:57.120
那么媒体API的内容还是不少

00:57.120 --> 01:02.620
所以我们在里面有一些内容还是属于我们Tarot特有的

01:02.620 --> 01:05.620
并且写法可能和其他的稍微有点不一样的

01:05.620 --> 01:09.620
那么我们就希望把这些内容一个一个给大家讲全

01:09.620 --> 01:15.460
首先我们从录音开始一个个来

01:15.460 --> 01:20.460
录音的话 其实对于媒体API来讲

01:20.460 --> 01:23.460
还是属于每个手机特有的一些功能

01:23.460 --> 01:26.460
因为在我们的咱们知道

01:26.460 --> 01:31.460
在微信小程序上面

01:31.460 --> 01:34.460
我们很少会采取到一些录音

01:34.460 --> 01:37.460
但是有些场景下面

01:37.460 --> 01:40.460
比如说我们经常做到的是电话录音

01:40.460 --> 01:42.460
但微信小程序本身自己

01:42.460 --> 01:49.460
它可以帮你把当前里面的一些播放出来的内容进行录音

01:49.460 --> 01:51.460
那么比如说你播放个歌

01:51.460 --> 01:57.460
或者说里面有一段很有意思的视频聊天

01:57.460 --> 01:59.460
那么这种可以做录音

01:59.460 --> 02:04.460
当然你也可以去对着你现在的一个说话也进行录音

02:04.460 --> 02:08.460
因为它本身自己会有这样的录音的接口存在

02:08.460 --> 02:13.460
同时又会去调起你现在移动设备的一个录音的接口

02:13.460 --> 02:19.460
那么这双者合一形成了Tarot现在录音的一个特殊的一个书写方式

02:19.460 --> 02:27.040
首先我们来看我们创建页面

02:27.040 --> 02:33.120
我们创建页面我们称之为叫Recorder

02:33.120 --> 02:40.720
Recorder.JXX

02:40.720 --> 02:53.310
基础结构对吧

02:53.310 --> 03:05.400
Tarot

03:05.400 --> 03:11.970
ViewFromComponents

03:11.970 --> 03:13.970
然后我们没有样式

03:13.970 --> 03:29.500
ExtendsComponent

03:29.500 --> 03:34.500
我们在这上面我们去做我们的现在的Rendle

03:34.500 --> 03:43.120
结构搭建出来

03:43.120 --> 03:44.120
好了

03:44.120 --> 03:47.120
把它放在我们整个的Recorder

03:47.120 --> 03:48.120
先写一下

03:48.120 --> 03:52.120
放在我们整个的App.JXX的第一句话

03:52.120 --> 04:05.310
关闭

04:05.310 --> 04:07.310
开始写里面弹吧

04:07.310 --> 04:09.310
我们做基础的

04:09.310 --> 04:12.310
现在先做一个基础版本

04:12.310 --> 04:16.310
之后我们还可以再做一些小案例结构

04:16.310 --> 04:19.310
基础版本的话就实现这三个功能

04:19.310 --> 04:20.310
什么呢

04:20.310 --> 04:21.310
开始录音

04:21.310 --> 04:23.310
停止录音

04:23.310 --> 04:24.310
播放录音

04:24.310 --> 04:26.690
按钮

04:26.690 --> 04:35.270
开始录音

04:35.270 --> 04:40.820
停止录音

04:40.820 --> 04:48.320
播放按钮

04:48.320 --> 04:55.980
把button写上去

04:55.980 --> 04:57.980
最后一个不对对吧

04:57.980 --> 04:59.980
复制一下

04:59.980 --> 05:00.980
好

05:00.980 --> 05:02.980
我们做三个按钮

05:02.980 --> 05:04.980
并且我们用三个颜色表示

05:04.980 --> 05:14.900
默认Default

05:14.900 --> 05:19.260
Primary

05:19.260 --> 05:20.260
Run

05:20.260 --> 05:33.070
Recorder

05:33.070 --> 05:35.070
系统告诉我没有找到这些面

05:35.070 --> 05:37.450
我们来查一下

05:37.450 --> 05:38.450
Peters

05:38.450 --> 05:43.040
Recorder

05:43.040 --> 05:44.040
RE

05:44.040 --> 05:45.040
CORD

05:45.040 --> 05:50.020
RE CORD

05:50.020 --> 05:51.020
Peters

05:51.020 --> 05:59.160
系统看一下有没有错

05:59.160 --> 06:01.160
没有

06:01.160 --> 06:04.160
它警告说这个页面没有被引用

06:04.160 --> 06:06.160
我们来找一下原因吧

06:06.160 --> 06:07.160
Class Recorder

06:07.160 --> 06:11.940
这个是在Peters下面

06:11.940 --> 06:12.940
对的呀

06:12.940 --> 06:14.940
我们到这来看一下

06:14.940 --> 06:21.160
Coder

06:21.160 --> 06:22.160
Favorite Recorder对吧

06:22.160 --> 06:23.160
为什么呢

06:23.160 --> 06:25.160
ICODE我们写的时候

06:25.160 --> 06:28.160
所以我们将错就错

06:28.160 --> 06:29.160
Recorder

06:29.160 --> 06:35.100
不是Coder

06:35.100 --> 06:44.420
让编译再生成一下

06:44.420 --> 06:45.420
OK

06:45.420 --> 06:46.420
此时你在这边保存

06:46.420 --> 06:47.420
一旦保存

06:47.420 --> 06:49.420
它这边出现的是修改编译生成

06:49.420 --> 06:51.420
那就表示对了

06:51.420 --> 06:52.420
再过来

06:52.420 --> 06:57.170
对吧

06:57.170 --> 06:59.170
三个按钮都出来了

06:59.170 --> 07:01.170
我们对这三个按钮进行操作

07:01.170 --> 07:04.170
首先我们在第一个按钮上面

07:04.170 --> 07:07.170
我们去写上我们现在的一个实践

07:07.170 --> 07:13.140
On Click

07:13.140 --> 07:16.140
这是我们的This点

07:16.140 --> 07:17.140
Start

07:17.140 --> 07:18.140
实践

07:18.140 --> 07:20.140
跳出来了

07:20.140 --> 07:22.140
有一些正好是它下面

07:22.140 --> 07:24.140
我们点ESC键

07:24.140 --> 07:26.140
取消它的自动跳出

07:26.140 --> 07:28.140
Bound

07:28.140 --> 07:30.580
This

07:30.580 --> 07:32.580
我们在上面写出来

07:32.580 --> 07:37.100
我们Stator先写出来

07:37.100 --> 07:39.100
肯定都会用到

07:39.100 --> 07:44.910
然后里面写实践

07:44.910 --> 07:51.380
Start

07:51.380 --> 07:54.380
然后这里边我们去完成

07:54.380 --> 07:57.380
现在的开始录音制作

07:57.380 --> 07:59.380
那么在做它之前的话呢

07:59.380 --> 08:01.380
我们先要去获取到

08:01.380 --> 08:04.380
当前录音的管理器

08:04.380 --> 08:05.380
你记住

08:05.380 --> 08:10.400
你需要去获取到当前录音的一个管理器

08:10.400 --> 08:12.400
你可以看到有这个字

08:12.400 --> 08:14.400
我们可以存着

08:14.400 --> 08:23.040
Recorder Manager

08:23.040 --> 08:24.040
Tarot点

08:24.040 --> 08:25.040
Get

08:25.040 --> 08:27.040
咱们有没有看到下面这个

08:27.040 --> 08:29.040
Recorder Manager

08:29.040 --> 08:32.040
它其实就是我们现在称之为的叫做

08:32.040 --> 08:33.040
我们的

08:33.040 --> 08:40.870
就是音频记录管理器

08:40.870 --> 08:41.870
这样记录

08:41.870 --> 08:43.870
然后的话呢

08:43.870 --> 08:45.870
我们现在只要得到了它

08:45.870 --> 08:48.870
我们下面就可以去制作我们所需要的内容了

08:48.870 --> 08:50.870
1点

08:50.870 --> 08:52.870
我们这边需要得到一些参数

08:52.870 --> 08:54.870
我们这个Start

08:54.870 --> 08:56.870
特别是针对于这个管理器来讲

08:56.870 --> 08:57.870
它需要

08:57.870 --> 08:59.870
它来启动Start

08:59.870 --> 09:03.820
我们说一下

09:03.820 --> 09:04.820
首先

09:04.820 --> 09:06.820
先要

09:06.820 --> 09:12.290
获取音频

09:12.290 --> 09:13.290
管理器

09:13.290 --> 09:16.240
对象

09:16.240 --> 09:17.240
通过

09:17.240 --> 09:18.240
字

09:18.240 --> 09:19.240
对象

09:19.240 --> 09:20.240
来

09:20.240 --> 09:21.240
调用

09:21.240 --> 09:22.240
Start

09:22.240 --> 09:24.240
是这样去做的

09:24.240 --> 09:25.240
最后的话

09:25.240 --> 09:27.240
你可以形成的是

09:27.240 --> 09:29.240
Recorder Manager

09:29.240 --> 09:30.240
它有一个Start

09:30.240 --> 09:31.240
看到吗

09:31.240 --> 09:32.240
它有个Start

09:32.240 --> 09:33.240
这个Start的话

09:33.240 --> 09:35.240
它是只开始录音

09:35.240 --> 09:37.240
所以我们真正的Start是这个

09:37.240 --> 09:39.240
这个是我们的实践名

09:39.240 --> 09:41.240
那么当然需要有个参数

09:41.240 --> 09:43.240
我们就要把参数写进去

09:43.240 --> 09:48.300
Options

09:48.300 --> 09:49.300
而这Options

09:49.300 --> 09:50.300
我们需要在前面

09:50.300 --> 09:52.300
给它先定义出来的

09:52.300 --> 09:53.300
Constar

09:53.300 --> 09:54.300
Options

09:54.300 --> 09:57.640
首先

09:57.640 --> 09:58.640
我们有几个持

09:58.640 --> 10:00.640
我们把它一个写出来

10:01.640 --> 10:02.640
Duration

10:02.640 --> 10:06.020
我们写上好秒

10:06.020 --> 10:10.350
这是称之为

10:10.350 --> 10:11.350
指定

10:11.350 --> 10:14.350
录音的时长

10:14.350 --> 10:16.350
它单位是

10:16.350 --> 10:17.350
MS

10:17.350 --> 10:19.350
第二个

10:19.350 --> 10:21.350
Sample

10:21.350 --> 10:23.350
Rate

10:23.350 --> 10:25.350
它是叫采样率

10:25.350 --> 10:27.350
这个是比较专业的一个

10:27.350 --> 10:29.350
也就是一个比率吧

10:29.350 --> 10:31.350
我们现在只要给的是

10:31.350 --> 10:35.560
叫做16000

10:35.560 --> 10:36.560
如果是

10:36.560 --> 10:37.560
音乐有点研究同学

10:37.560 --> 10:39.560
应该会知道这个一个格式

10:39.560 --> 10:42.560
再给一个Number of Changer

10:42.560 --> 10:56.530
Number of Changer

10:56.530 --> 10:58.530
这边给出的是

10:58.530 --> 11:00.530
录音

11:00.530 --> 11:02.530
通道数

11:02.530 --> 11:03.530
因为在录音里面的话

11:03.530 --> 11:04.530
我们讲通道

11:04.530 --> 11:06.530
这个也是一个比较专业的

11:06.530 --> 11:08.530
它会接收几个通道的值

11:08.530 --> 11:10.530
左通道

11:10.530 --> 11:11.530
右通道

11:11.530 --> 11:13.530
但我们现在只要一个就可以

11:13.530 --> 11:18.570
也没有什么立体身的概念

11:18.570 --> 11:20.570
Incode

11:20.570 --> 11:21.570
Bit

11:21.570 --> 11:22.570
Rate

11:22.570 --> 11:23.570
就是编码

11:23.570 --> 11:24.570
码率

11:24.570 --> 11:25.570
有一个

11:25.570 --> 11:26.570
我们给的值

11:26.570 --> 11:28.570
大家以后如果并不了解的话

11:28.570 --> 11:29.570
你就可以按我这个值给

11:29.570 --> 11:32.570
这是一个通用的格式

11:32.570 --> 11:33.570
编码

11:33.570 --> 11:34.570
码率

11:34.570 --> 11:37.580
Format

11:37.580 --> 11:38.580
我们给的是

11:38.580 --> 11:39.580
最后

11:39.580 --> 11:40.580
保存格式

11:40.580 --> 11:45.070
音频

11:45.070 --> 11:47.070
格式

11:47.070 --> 11:49.070
那么有效格式

11:49.070 --> 11:50.070
有几个

11:50.070 --> 11:51.070
两个

11:51.070 --> 11:52.070
一个是AAC

11:52.070 --> 11:54.070
一个是MP3

11:54.070 --> 11:56.070
这两个格式都可以

11:56.070 --> 11:57.070
我们说

11:57.070 --> 11:58.070
换下来

11:58.070 --> 11:59.070
继续

11:59.070 --> 12:00.070
我们还有一个

12:00.070 --> 12:02.070
就是帧数

12:02.070 --> 12:05.070
你到底声音是尖的

12:05.070 --> 12:07.070
还是沉稳的

12:07.070 --> 12:08.070
还是属于什么样

12:08.070 --> 12:11.070
那么我们给一个帧大小

12:11.070 --> 12:12.070
帧越细

12:12.070 --> 12:13.070
越紧

12:13.070 --> 12:15.070
那么声音越尖

12:15.070 --> 12:19.730
我们通用声音

12:19.730 --> 12:20.730
指定

12:21.730 --> 12:22.730
大小

12:22.730 --> 12:24.730
单位是KB

12:24.730 --> 12:25.730
这样给出

12:25.730 --> 12:27.730
当你把这些给完了

12:27.730 --> 12:30.730
那么你把它放在start里面了

12:30.730 --> 12:31.730
那时候

12:31.730 --> 12:33.730
它就可以开始录音了

12:33.730 --> 12:36.730
它就可以开始录音了

12:36.730 --> 12:37.730
那么开始录音的话

12:37.730 --> 12:38.730
它可以有一个

12:38.730 --> 12:44.510
事件在监控是这个录音

12:44.510 --> 12:45.510
Recorded Manager

12:45.510 --> 12:47.510
它有一个on start

12:47.510 --> 12:49.510
它可以有一个事件在做监控

12:49.510 --> 12:51.510
所以我们在这里面

12:51.510 --> 12:54.020
直接来做

12:54.020 --> 12:58.540
consolidate log

12:58.540 --> 12:59.540
recorder start

12:59.540 --> 13:00.540
我们说

13:00.540 --> 13:02.540
开始录音了

13:02.540 --> 13:03.540
当然

13:03.540 --> 13:04.540
录音过程中

13:04.540 --> 13:05.540
如果有问题

13:05.540 --> 13:08.540
它也会有一个recorder

13:08.540 --> 13:11.540
on area

13:11.540 --> 13:14.540
它有一个错误

13:14.540 --> 13:20.120
监控

13:20.120 --> 13:26.990
我们可以把这个错误给打出来

13:26.990 --> 13:27.990
当然

13:27.990 --> 13:28.990
这边我们写上are

13:28.990 --> 13:32.260
好

13:32.260 --> 13:34.260
这样出来

13:34.260 --> 13:35.260
这样的话

13:35.260 --> 13:37.260
我们现在就可以开始对它

13:37.260 --> 13:38.260
进行直接录音

13:38.260 --> 13:39.260
当然

13:39.260 --> 13:40.260
我们

13:40.260 --> 13:41.260
待会儿再来做

13:41.260 --> 13:42.260
我们的

13:42.260 --> 13:43.260
设置演示

13:43.260 --> 13:44.260
因为

13:44.260 --> 13:45.260
一旦开始录音

13:45.260 --> 13:48.260
我们必须有一个能让它停止的功能

13:48.260 --> 13:50.260
所以我们需要把

13:50.260 --> 13:52.260
停止录音这事也做掉

13:52.260 --> 13:54.260
所以on click

13:54.260 --> 13:56.260
再写上

13:56.260 --> 13:58.260
this here

13:58.260 --> 14:05.120
stop

14:05.120 --> 14:07.120
bound this

14:07.120 --> 14:09.120
我们给出这样一个

14:09.120 --> 14:10.120
stop

14:17.230 --> 14:21.820
停止录音操作

14:22.820 --> 14:23.820
咱们先看一下

14:23.820 --> 14:25.820
前面的开始录音

14:31.590 --> 14:35.990
开始录音操作里面的话

14:35.990 --> 14:36.990
我们看一下

14:36.990 --> 14:38.990
首先我们创建了一个对象

14:38.990 --> 14:40.990
然后这个对象

14:40.990 --> 14:42.990
我们给它执行了一些参数

14:42.990 --> 14:43.990
这个参数

14:43.990 --> 14:45.990
直接给到它的一个方法

14:45.990 --> 14:47.990
这个对象的一个方法叫start

14:47.990 --> 14:50.990
然后让这个对象进行开始录音

14:50.990 --> 14:51.990
在录音过程中

14:51.990 --> 14:52.990
我们有两个监控

14:52.990 --> 14:53.990
一个on start

14:53.990 --> 14:54.990
一个on area

14:54.990 --> 14:55.990
两个操作

14:55.990 --> 14:56.990
是吧

14:56.990 --> 14:58.990
那么停止录音其实是一样的

14:58.990 --> 14:59.990
停止录音

14:59.990 --> 15:03.990
它其实也得用到当前的这个对象

15:03.990 --> 15:04.990
那么两者都要用

15:04.990 --> 15:05.990
你不能这么干

15:05.990 --> 15:06.990
你对它来讲

15:06.990 --> 15:08.990
你在这里面再创建一次

15:08.990 --> 15:10.990
那么你就是两个对象

15:10.990 --> 15:12.990
我们不能在这里面这么做的

15:12.990 --> 15:14.990
我们就需要用同一个对象

15:14.990 --> 15:15.990
来做这个事情

15:15.990 --> 15:16.990
那怎么办

15:16.990 --> 15:18.990
我们把对象可以拿出来

15:18.990 --> 15:26.850
我们把对象给拿出来

15:26.850 --> 15:35.730
我们可以拿到最外面去

15:35.730 --> 15:43.970
看一下位置

15:47.970 --> 15:48.970
调整好位置以后

15:48.970 --> 15:49.970
我们拿出来

15:49.970 --> 15:50.970
这样的话

15:50.970 --> 15:51.970
你整个这个

15:51.970 --> 15:54.970
在它内部都可以被使用到

15:54.970 --> 15:55.970
包括是在这

15:55.970 --> 15:56.970
所以我们

15:56.970 --> 15:58.970
如果你放在里面的话

15:58.970 --> 16:00.970
单独对于开始录音件的事

16:00.970 --> 16:01.970
是可以干到了

16:01.970 --> 16:02.970
但是如果你结束录音

16:02.970 --> 16:04.970
还要用同一个的话

16:04.970 --> 16:06.970
我们必须把它给拿出来

16:06.970 --> 16:07.970
OK

16:07.970 --> 16:09.970
此时我们继续

16:09.970 --> 16:11.970
在停止录音里面的话

16:11.970 --> 16:14.970
依然使用这个对象

16:14.970 --> 16:15.970
使用这个对象

16:15.970 --> 16:17.970
然后它有一个方法

16:17.970 --> 16:20.970
叫做stop停止

16:20.970 --> 16:21.970
所以放上去看一下

16:21.970 --> 16:23.970
我觉得现在的这个

16:23.970 --> 16:24.970
做的比较好

16:24.970 --> 16:25.970
它有一些中文提示

16:25.970 --> 16:26.970
对吧

16:26.970 --> 16:27.970
像这些的话

16:27.970 --> 16:28.970
你看

16:28.970 --> 16:29.970
错误以后回

16:29.970 --> 16:30.970
它明知道我现在是一个

16:30.970 --> 16:32.970
就是这个对象所给来的

16:32.970 --> 16:34.970
所以它告诉你录音错误事件

16:34.970 --> 16:35.970
对吧

16:35.970 --> 16:36.970
这个呢

16:36.970 --> 16:37.970
录音开始的一个监听事件

16:37.970 --> 16:38.970
对吧

16:38.970 --> 16:39.970
它还不错

16:39.970 --> 16:41.970
大家可以直接去看一下

16:41.970 --> 16:42.970
当然你也不能

16:42.970 --> 16:44.970
每次都不记去看

16:44.970 --> 16:45.970
那么停止录音的话

16:45.970 --> 16:47.970
依然有一个

16:47.970 --> 16:52.820
我们的onstop

16:52.820 --> 16:56.320
我们有onstopres

16:56.320 --> 16:58.320
我们是

16:58.320 --> 17:00.320
可以去拿到res的值

17:00.320 --> 17:03.760
就是停止以后

17:03.760 --> 17:08.220
停止后的

17:08.220 --> 17:10.220
可以获取

17:10.220 --> 17:17.710
临时存储路径

17:17.710 --> 17:18.710
你可以拿到这个的

17:18.710 --> 17:19.710
所以我们待会看一下

17:19.710 --> 17:21.710
我们先拿出来

17:21.710 --> 17:22.710
然后看一下这个值

17:22.710 --> 17:24.710
到底里面是怎么存储的

17:24.710 --> 17:26.710
看一下运行

17:26.710 --> 17:27.710
结果

17:27.710 --> 17:28.710
打开

17:28.710 --> 17:29.710
它刚才又卡了一下

17:29.710 --> 17:33.020
我们首先来看一下

17:33.020 --> 17:35.020
点击录音

17:35.020 --> 17:37.020
它现在告诉我们

17:37.020 --> 17:39.020
全线不允许

17:39.020 --> 17:40.020
所以我们这边

17:40.020 --> 17:41.020
我们轻一下

17:41.020 --> 17:43.020
清除授权

17:43.020 --> 17:44.020
再点一下

17:44.020 --> 17:45.020
你会发现

17:45.020 --> 17:48.020
它会有一个全线的录音的

17:48.020 --> 17:49.020
这样的一个需求

17:49.020 --> 17:50.020
也就意味着

17:50.020 --> 17:51.020
它需要获得你的麦克风

17:51.020 --> 17:52.020
如果你像刚才

17:52.020 --> 17:53.020
我点了一个取消

17:53.020 --> 17:54.020
那么这就是

17:54.020 --> 17:56.020
Author Decay

17:56.020 --> 17:57.020
表示不允许

17:57.020 --> 17:58.020
如果你点确定

17:58.020 --> 17:59.020
看到吗

17:59.020 --> 18:00.020
这边有个麦克风

18:00.020 --> 18:01.020
在动

18:01.020 --> 18:02.020
表示现在正在录音

18:02.020 --> 18:03.020
Recorder Start

18:03.020 --> 18:04.020
表示现在正在录

18:04.020 --> 18:05.020
然后此时

18:05.020 --> 18:07.020
你点击一下停止录音

18:07.020 --> 18:09.020
这时候你就停住了

18:09.020 --> 18:10.020
停住以后

18:10.020 --> 18:11.020
你会发觉

18:11.020 --> 18:12.020
这边会给你一个东西

18:12.020 --> 18:13.020
这就是一个

18:13.020 --> 18:14.020
Temper

18:14.020 --> 18:16.020
Fi Pass

18:16.020 --> 18:17.020
这是一个临时路径

18:17.020 --> 18:18.020
这个临时路径

18:18.020 --> 18:19.020
它会告诉你

18:19.020 --> 18:20.020
你当前

18:20.020 --> 18:22.020
你把现在的这个录音

18:22.020 --> 18:24.020
存在哪里了

18:24.020 --> 18:25.020
存在哪里了

18:25.020 --> 18:27.020
然后只要这个存毫

18:27.020 --> 18:28.020
知道以后

18:28.020 --> 18:29.020
我们待会点播放的时候

18:29.020 --> 18:30.020
就从这个临时文件

18:30.020 --> 18:31.020
你可以来看

18:31.020 --> 18:32.020
当然

18:32.020 --> 18:34.020
由于它是临时文件

18:34.020 --> 18:35.020
所以在你下一次

18:35.020 --> 18:36.020
启动录音的时候

18:36.020 --> 18:37.020
前一段录音的

18:37.020 --> 18:39.020
临时文件就无效了

18:39.020 --> 18:40.020
你如果需要

18:40.020 --> 18:42.020
更多的存储的话

18:42.020 --> 18:43.020
你可以把它进行

18:43.020 --> 18:44.020
文件的存储

18:44.020 --> 18:45.020
这个操作

18:45.020 --> 18:47.020
紧接着我们来看一下

18:47.020 --> 18:48.020
我们这个里面

18:48.020 --> 18:50.020
还有Duration

18:50.020 --> 18:51.020
就是它的整个的

18:51.020 --> 18:53.020
时间周期

18:53.020 --> 18:55.020
我们应该在9秒左右

18:55.020 --> 18:56.020
然后我们现在有一个

18:56.020 --> 18:58.020
Fi Pass

18:58.020 --> 19:00.020
表示这个文件的大小

19:00.020 --> 19:02.020
是以字节为技术

19:02.020 --> 19:03.020
那个单位的

19:03.020 --> 19:04.020
那么这样的话

19:04.020 --> 19:05.020
我们看到了

19:05.020 --> 19:06.020
原来这样的存储

19:06.020 --> 19:07.020
就可以得到这个值

19:07.020 --> 19:08.020
对吧

19:08.020 --> 19:09.020
那么当然

19:09.020 --> 19:10.020
我现在是听不到了

19:10.020 --> 19:12.020
因为我还没做播放了

19:12.020 --> 19:13.020
看一下

19:13.020 --> 19:14.020
先看一下整个这结构

19:14.020 --> 19:15.020
对吧

19:15.020 --> 19:16.020
我们把它放在外面

19:16.020 --> 19:17.020
然后这边能用到了

19:17.020 --> 19:18.020
这边也能用到了

19:18.020 --> 19:19.020
对吧

19:19.020 --> 19:20.020
这样的结构

19:20.020 --> 19:21.020
注意要一定有这样的一个

19:21.020 --> 19:22.020
管理器存在

19:22.020 --> 19:24.020
紧接着我们再来做

19:24.020 --> 19:29.960
播放按钮

19:29.960 --> 19:32.960
this.play

19:32.960 --> 19:34.960
by this

19:34.960 --> 19:48.000
播放

19:48.000 --> 19:50.000
我们把播放做起来

19:50.000 --> 19:53.000
播放其实相对而言

19:53.000 --> 19:54.000
它只是因为

19:54.000 --> 19:55.000
刚才我们的路径

19:55.000 --> 19:56.000
是不是已经拿到了

19:56.000 --> 19:58.000
所以拿到以后的话

19:58.000 --> 19:59.000
我们只要把

19:59.000 --> 20:01.000
这路径给存储下来

20:01.000 --> 20:02.000
对吧

20:02.000 --> 20:03.000
把路径存储下来以后

20:03.000 --> 20:05.000
然后我们直接显示为停止录音

20:05.000 --> 20:06.000
然后呢

20:06.000 --> 20:07.000
在播放里面

20:07.000 --> 20:09.000
我们去找这段录音出来

20:09.000 --> 20:10.000
是吧

20:10.000 --> 20:11.000
这个逻辑

20:11.000 --> 20:12.000
ok

20:12.000 --> 20:13.000
所以我们第一件事情

20:13.000 --> 20:19.300
你得这里面存储这个录音

20:19.300 --> 20:20.300
文件

20:21.300 --> 20:27.550
存储这个录音文件

20:27.550 --> 20:28.550
你在这里边

20:28.550 --> 20:30.550
你说你能玩这个吗

20:30.550 --> 20:32.550
glad

20:32.550 --> 20:34.550
我们在这边去存储

20:34.550 --> 20:39.210
咱们叫做

20:39.210 --> 20:43.860
fi

20:43.860 --> 20:44.860
parse

20:44.860 --> 20:52.660
我们把它还是放在我们的

20:52.660 --> 20:53.660
这样的话

20:53.660 --> 20:54.660
我等会调用的时候

20:54.660 --> 20:56.660
我们其实方便直接可以拿

20:56.660 --> 20:58.660
它的调用规则

20:58.660 --> 20:59.660
我们直接放这

20:59.660 --> 21:00.660
然后呢

21:00.660 --> 21:01.660
它里面是个空

21:01.660 --> 21:02.660
紧接着

21:02.660 --> 21:03.660
我们拿到它的值

21:03.660 --> 21:06.660
先进行数据存储的改变

21:06.660 --> 21:10.100
就是

21:10.100 --> 21:11.100
我们外部

21:11.100 --> 21:12.100
因为它是箭头

21:12.100 --> 21:13.100
可以this

21:13.100 --> 21:14.100
但是我们更清晰的话

21:14.100 --> 21:16.100
我们希望能够在外部

21:16.100 --> 21:17.100
做一个

21:17.100 --> 21:18.100
that

21:18.100 --> 21:19.100
这样的话呢

21:19.100 --> 21:20.100
我们其实看起来

21:20.100 --> 21:21.100
也会更简单一点

21:21.100 --> 21:23.100
就是代表着

21:23.100 --> 21:24.100
这是外部的

21:24.100 --> 21:27.100
调用外部的这个set status data

21:27.100 --> 21:29.470
然后呢

21:29.470 --> 21:30.470
在这边

21:30.470 --> 21:32.470
我们去写上

21:33.470 --> 21:35.470
刚才我们写进去的这个tempor

21:35.470 --> 21:36.470
tempor5parse

21:36.470 --> 21:38.470
修改一下

21:38.470 --> 21:41.300
这边

21:41.300 --> 21:42.300
我们去跟上

21:42.300 --> 21:43.300
你现在

21:43.300 --> 21:44.300
这边读进来的

21:44.300 --> 21:45.300
res里面

21:45.300 --> 21:46.300
哪个呢

21:46.300 --> 21:47.300
刚才还记得吗

21:47.300 --> 21:48.300
它就是tempor5parse

21:49.300 --> 21:54.300
tempor5parse

21:54.300 --> 21:55.300
就是这个值

21:55.300 --> 22:01.420
然后我们显示一下

22:03.420 --> 22:04.420
不在这儿

22:04.420 --> 22:09.740
在这儿

22:09.740 --> 22:13.740
我们给它做一个标记

22:13.740 --> 22:16.740
录音停止

22:16.740 --> 22:18.740
这样对吧

22:18.740 --> 22:19.740
然后呢

22:19.740 --> 22:26.000
我们把这个录进给它

22:26.000 --> 22:27.000
这样你就存好了

22:27.000 --> 22:28.000
存好以后的话

22:28.000 --> 22:31.950
那我从play里面

22:31.950 --> 22:32.950
读取

22:33.950 --> 22:34.950
在

22:34.950 --> 22:36.950
stater中的

22:36.950 --> 22:38.950
录音

22:38.950 --> 22:40.950
临时文件

22:41.950 --> 22:51.990
并完成播放

22:51.990 --> 22:52.990
我们来看一下

22:52.990 --> 22:56.500
在做这个功能的时候呢

22:56.500 --> 22:58.500
我们想读取文件可以

22:58.500 --> 23:00.500
它的播放是什么

23:00.500 --> 23:02.500
本身的这个控制器

23:02.500 --> 23:03.500
我们看一下

23:03.500 --> 23:04.500
它有没有什么播放功能

23:04.500 --> 23:11.710
拿过来看

23:11.710 --> 23:16.140
看这

23:16.140 --> 23:17.140
play

23:18.140 --> 23:19.140
play它本身自己

23:19.140 --> 23:20.140
咱们来看一下

23:20.140 --> 23:22.140
它在里面的时候很有意思

23:23.140 --> 23:24.140
我们如果说

23:24.140 --> 23:25.140
我们去做其他的

23:25.140 --> 23:26.140
比如说start

23:28.140 --> 23:30.140
这些它都可以直接完成

23:30.140 --> 23:31.140
它的播放

23:31.140 --> 23:33.140
但是我们现在的这个play呢

23:33.140 --> 23:35.140
它不能直接播放的

23:35.140 --> 23:36.140
所以呢

23:36.140 --> 23:37.140
我们现在的播放

23:37.140 --> 23:39.140
要借助于

23:39.140 --> 23:40.140
第2个

23:40.140 --> 23:41.140
注意一下

23:41.140 --> 23:42.140
我们要借助于

23:42.140 --> 23:43.140
我们的第2个空间来做

23:43.140 --> 23:44.140
哪个空间呢

23:44.140 --> 23:46.140
就是我们叫in audio context

23:47.140 --> 23:49.140
我们要借助于一个叫in audio context

23:49.140 --> 23:50.140
来完成

23:50.140 --> 23:51.140
所以

23:51.140 --> 23:53.140
我们需要在播放的时候

23:53.140 --> 23:55.140
音频设备

23:55.140 --> 23:57.450
都需要

23:57.450 --> 23:59.450
添加

23:59.450 --> 24:02.760
音频

24:02.760 --> 24:04.760
播放器对象

24:04.760 --> 24:06.760
你需要去做这个动作

24:06.760 --> 24:08.760
那我们来看一下

24:08.760 --> 24:09.760
怎么写

24:09.760 --> 24:11.760
terror

24:11.760 --> 24:13.760
点

24:13.760 --> 24:16.200
create

24:16.200 --> 24:17.200
in the

24:17.200 --> 24:19.200
拿出来

24:19.200 --> 24:21.200
我们拿出当前这样一个对象

24:21.200 --> 24:23.200
这个就是音频播放器对象

24:23.200 --> 24:25.200
我们把它存一下

24:25.200 --> 24:27.200
它不能动

24:27.200 --> 24:34.500
in audio context

24:34.500 --> 24:36.500
我们把它这个对象拿出来

24:36.500 --> 24:37.500
要用它来播放

24:37.500 --> 24:38.500
我们记住一下

24:38.500 --> 24:40.500
那么只有用它的话

24:40.500 --> 24:42.500
我们下面就可以开始

24:42.500 --> 24:44.500
调用它的方法来完成播放器

24:44.500 --> 24:45.500
举

24:45.500 --> 24:47.500
首先第1个

24:47.500 --> 24:48.500
它的播放的话

24:48.500 --> 24:49.500
需要完成

24:49.500 --> 24:50.500
首先第1步

24:50.500 --> 24:51.500
播放

24:51.500 --> 24:53.500
设定一下它几个属性值

24:53.500 --> 24:55.500
第1个

24:55.500 --> 24:57.500
in audio context

24:57.500 --> 24:59.500
是否是自动播放

24:59.500 --> 25:01.500
就是一旦进到这里面以后

25:01.500 --> 25:02.500
它是否不自动播

25:02.500 --> 25:03.500
我们说当然可以

25:03.500 --> 25:04.500
true

25:04.500 --> 25:06.500
第2个

25:06.500 --> 25:08.500
它播放的内容

25:08.500 --> 25:09.500
src

25:09.500 --> 25:10.500
在哪里

25:10.500 --> 25:11.500
那我们说

25:11.500 --> 25:14.700
就是当前的

25:14.700 --> 25:16.700
stater里面的

25:16.700 --> 25:17.700
tenfit5

25:17.700 --> 25:18.700
这个路径

25:18.700 --> 25:21.700
再来

25:22.700 --> 25:26.620
play

25:26.620 --> 25:36.220
开始播放

25:36.220 --> 25:40.560
播放有问题呢

25:40.560 --> 25:41.560
监控

25:41.560 --> 25:47.580
ary

25:47.580 --> 25:59.180
conceler log

25:59.180 --> 26:00.180
ary

26:00.180 --> 26:01.180
我们写上

26:03.180 --> 26:05.180
好形成这样一个结构

26:05.180 --> 26:06.180
我们注意到

26:06.180 --> 26:08.180
我们的播放需要调用到一个新的

26:08.180 --> 26:10.180
播放的音频的对象

26:10.180 --> 26:11.180
上下文

26:11.180 --> 26:13.180
注意要一般性我们的一些

26:13.180 --> 26:14.180
特别的

26:14.180 --> 26:16.180
可以使用的一些对象的话

26:16.180 --> 26:18.180
我们都可以称之为context

26:18.180 --> 26:20.180
ok 那我们现在来

26:20.180 --> 26:22.180
做一下这样的一个功能

26:22.180 --> 26:23.180
然后首先

26:23.180 --> 26:25.180
我们让页面刷新一下

26:25.180 --> 26:27.180
看一下有没有一些问题

26:27.180 --> 26:29.180
这边编译是没有问题的

26:29.180 --> 26:30.180
这边刷新的话

26:30.180 --> 26:31.180
我们看到

26:31.180 --> 26:32.180
没有问题

26:32.180 --> 26:34.180
也没有错误出现对吧

26:34.180 --> 26:35.180
首先我们开始

26:35.180 --> 26:37.180
好 123

26:37.180 --> 26:38.180
321

26:38.180 --> 26:39.180
1234567

26:39.180 --> 26:41.180
我们就做了这样的一个音频

26:41.180 --> 26:42.180
然后停止播放

26:42.180 --> 26:43.180
停止录音

26:43.180 --> 26:45.180
这时候你看到了录音停止

26:45.180 --> 26:46.180
给出一个路径

26:47.180 --> 26:48.180
那这时候

26:48.180 --> 26:50.180
你的整个的耳机里

26:50.180 --> 26:52.180
会有这个音频存在

26:52.180 --> 26:53.180
这是我这边

26:53.180 --> 26:56.180
这是大家的录音的这个视频里面

26:56.180 --> 26:57.180
大家很难去听到

26:57.180 --> 26:59.180
ok 这个是我这边

26:59.180 --> 27:00.180
给大家的

27:00.180 --> 27:02.180
那么大家可以去试一下

27:02.180 --> 27:04.180
拿着这个去增进模拟测试

27:04.180 --> 27:05.180
去测一下

27:05.180 --> 27:06.180
那这样的话

27:06.180 --> 27:07.180
你就能听到完整的

27:07.180 --> 27:09.180
你自己先说一段话

27:09.180 --> 27:10.180
然后再停止录音

27:10.180 --> 27:11.180
再去做一个播放

27:11.180 --> 27:13.180
这样你就看到了整个

27:13.180 --> 27:14.180
这个基础功能

27:14.180 --> 27:15.180
也就是说

27:15.180 --> 27:17.180
我的音频的第一部分

27:17.180 --> 27:18.180
就是录音

27:18.180 --> 27:20.180
然后加上播放的一个操作

27:20.180 --> 27:22.180
在这个案例里面

27:22.180 --> 27:23.180
在这个小功能里面

27:23.180 --> 27:26.180
我们认识到了两个东西

27:26.180 --> 27:27.180
第一个

27:27.180 --> 27:28.180
对于音频的操作来讲

27:28.180 --> 27:29.180
我们会有一个

27:29.180 --> 27:31.180
所谓的一个管理器

27:31.180 --> 27:33.180
这个是一个录音管理器

27:33.180 --> 27:34.180
我们有一个叫做

27:34.180 --> 27:36.180
我们的recorder manager

27:36.180 --> 27:37.180
recorder manager

27:37.180 --> 27:38.180
第二的话

27:38.180 --> 27:40.180
我们现在的这个管理器

27:40.180 --> 27:41.180
它会是

27:41.180 --> 27:43.180
控制我们整个

27:43.180 --> 27:44.180
开始录音

27:44.180 --> 27:46.180
以及结束录音

27:46.180 --> 27:48.180
还有我们的

27:48.180 --> 27:49.180
播放录音

27:49.180 --> 27:50.180
现在没法用

27:50.180 --> 27:52.180
它是控制开始和结束的

27:52.180 --> 27:53.180
然后呢

27:53.180 --> 27:54.180
它只要得到了

27:54.180 --> 27:55.180
这个路径以后的话

27:55.180 --> 27:56.180
我们就可以

27:56.180 --> 27:58.180
利用播放录音的第二个空间

27:58.180 --> 27:59.180
我们创建一个

27:59.180 --> 28:01.180
Create in Audio Contextor

28:01.180 --> 28:03.180
来完成你现在的播放

28:03.180 --> 28:04.180
那么这个播放

28:04.180 --> 28:06.180
主要的是配置几个参数

28:06.180 --> 28:08.180
就是我一旦点击功能以后

28:08.180 --> 28:09.180
我们并不是要出发

28:09.180 --> 28:10.180
什么其他的东西

28:10.180 --> 28:11.180
而只是

28:11.180 --> 28:12.180
一旦执行到这一句话

28:12.180 --> 28:14.180
就马上可以播音

28:14.180 --> 28:15.180
播的内容就是

28:15.180 --> 28:16.180
这段mp3

28:16.180 --> 28:18.180
或者说aac都可以

28:18.180 --> 28:20.180
那么开始和结束的

28:20.180 --> 28:21.180
本身的操作

28:21.180 --> 28:22.180
也就是说

28:22.180 --> 28:23.180
我们所有的

28:23.180 --> 28:25.180
这种所谓的那个管理器

28:25.180 --> 28:26.180
它的监控格式

28:26.180 --> 28:28.180
永远是在它对象后面

28:28.180 --> 28:30.180
会带有一个叫on的

28:30.180 --> 28:31.180
这样一个事件

28:31.180 --> 28:33.180
在它带有一个on的事件

28:33.180 --> 28:34.180
这个on呢

28:34.180 --> 28:36.180
比如说on start on airy

28:36.180 --> 28:37.180
或者说

28:37.180 --> 28:38.180
我们的像这个on stop

28:38.180 --> 28:40.180
或者说我们这里的on play

28:40.180 --> 28:42.180
这样的格式

28:42.180 --> 28:43.180
监控

28:43.180 --> 28:44.180
是我们能够看到

28:44.180 --> 28:46.180
它里面的一个运行轨迹

28:46.180 --> 28:47.180
ok

28:47.180 --> 28:48.180
这是基础操作

28:48.180 --> 28:49.180
那么接下来

28:49.180 --> 28:50.180
我们待会儿

28:50.180 --> 28:51.180
可以给大家去讲解一下

28:51.180 --> 28:53.180
我们拿一个实例出来

28:53.180 --> 28:54.180
完整的给大家

28:54.180 --> 28:55.180
完整的过一下

28:55.180 --> 28:56.180
那么现在

28:56.180 --> 28:57.180
它举一个小案例

28:57.180 --> 28:59.180
那么基础部分

28:59.180 --> 29:00.180
我们就先到这里了

