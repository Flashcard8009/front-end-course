WEBVTT

00:00.940 --> 00:02.940
Hello 大家好

00:02.940 --> 00:06.940
上一集咱们说来构建了虚拟动物树

00:06.940 --> 00:08.940
虚拟动物树

00:08.940 --> 00:12.940
然后我们说要把动物树来进行渲染

00:12.940 --> 00:14.940
我们要给它渲染出来

00:14.940 --> 00:16.940
把我们这个纸给它添上去

00:16.940 --> 00:18.940
就像我们之前这样不行

00:18.940 --> 00:21.940
我们不能把变量显示在这个页面上

00:21.940 --> 00:26.940
我们得把节点里的内容给它渲染上去

00:26.940 --> 00:28.940
把它对成这个纸给渲染上去

00:28.940 --> 00:31.940
然后我们说挂载了之后

00:31.940 --> 00:32.940
在这儿是吧

00:32.940 --> 00:35.940
进行挂载了之后要进行什么

00:35.940 --> 00:37.940
预备渲染是吧

00:37.940 --> 00:40.940
我现在假设说我要写一个方法吧

00:40.940 --> 00:42.940
我们新建一个文件写个rander

00:42.940 --> 00:49.390
进行rander

00:49.390 --> 00:53.390
我们在这个rander里面写一个prepare

00:54.390 --> 00:56.390
export

00:56.390 --> 00:58.390
function

00:59.390 --> 01:01.390
prepare 准备的意思

01:02.390 --> 01:03.390
rander

01:03.390 --> 01:05.390
准备渲染

01:05.390 --> 01:07.390
我们传进来一个vnode

01:07.390 --> 01:08.390
就是根结点

01:08.390 --> 01:10.390
我们要传进来一个根结点

01:10.390 --> 01:12.390
然后我要对这个东西来进行渲染

01:12.390 --> 01:14.390
那我就调用它吧

01:15.390 --> 01:17.390
prepare

01:17.390 --> 01:18.390
rander

01:18.390 --> 01:20.390
vm

01:20.390 --> 01:23.390
然后vm.vnode

01:23.390 --> 01:24.390
是吧

01:24.390 --> 01:26.390
这个vnode就是根结点是吧

01:26.390 --> 01:29.390
因为咱如果同学听过我的算法课的话

01:29.390 --> 01:30.390
你会知道

01:30.390 --> 01:31.390
我们说什么

01:31.390 --> 01:33.390
传入一颗数形结构

01:33.390 --> 01:35.390
就是传入它的根结点是吧

01:35.390 --> 01:36.390
只要你把根结点传进去了

01:36.390 --> 01:38.390
这个数形结构的每一个结点我都能得到

01:38.390 --> 01:41.390
所以说当我们需要传入虚拟道目数的时候

01:41.390 --> 01:43.390
我们指的是啥

01:43.390 --> 01:45.390
传入虚拟道目数的根结点

01:45.390 --> 01:48.390
然后就到prepare的是吧

01:48.390 --> 01:49.390
首先

01:49.390 --> 01:51.390
如果你给我传入这个结点为空

01:51.390 --> 01:52.390
就啥也别干了

01:52.390 --> 01:54.390
如果vnode等于空

01:55.390 --> 01:56.390
就return

01:56.390 --> 01:58.390
严谨性判断是吧

01:58.390 --> 02:01.390
然后什么样的情况下我需要分析

02:01.390 --> 02:03.390
什么情况下我需要继续往下找呢

02:03.390 --> 02:05.390
我们来看一下这种情况

02:05.390 --> 02:07.390
你看

02:07.390 --> 02:08.390
我这个

02:08.390 --> 02:09.390
这个母版

02:09.390 --> 02:11.390
我们所谓的母版字符串

02:11.390 --> 02:12.390
花过号content

02:12.390 --> 02:14.390
它是不是一个文本

02:14.390 --> 02:16.390
这是不是一个文本

02:16.390 --> 02:17.390
文本

02:17.390 --> 02:19.390
是不是只能在文本的结点里

02:19.390 --> 02:21.390
文本不可能在标签的结点里是吧

02:21.390 --> 02:23.390
咱们上上级课就说过了是吧

02:23.390 --> 02:25.390
标签这里面就不可能有文本

02:25.390 --> 02:26.390
是吧

02:26.390 --> 02:28.390
标签这里面就没有text这么个东西

02:28.390 --> 02:30.390
文本这种东西

02:30.390 --> 02:32.390
它就只能在文本结点里

02:32.390 --> 02:33.390
对吧

02:33.390 --> 02:34.390
所以说我们怎么来判断

02:34.390 --> 02:35.390
它这里面有没有文本

02:35.390 --> 02:37.390
就是看它的类型是吧

02:37.390 --> 02:40.390
如果vnode的node type

02:40.390 --> 02:42.390
等于3

02:42.390 --> 02:43.390
证明它是个啥

02:43.390 --> 02:45.390
是个标签是吧

02:45.390 --> 02:46.390
标签里

02:46.390 --> 02:48.390
我们可以现在暂时不管是吧

02:48.390 --> 02:50.390
如果

02:50.390 --> 02:52.390
可以

02:52.390 --> 02:54.390
那个node type等于3

02:54.390 --> 02:55.390
是个文本结点

02:55.390 --> 02:59.220
这个如果是1的话

02:59.220 --> 03:01.660
它是个标签

03:01.660 --> 03:02.660
如果是1的话

03:02.660 --> 03:03.660
它是个标签

03:03.660 --> 03:07.220
我们就暂时来写一下

03:07.220 --> 03:09.220
node type

03:09.220 --> 03:11.220
等于1

03:11.220 --> 03:13.220
表示标签

03:13.220 --> 03:15.220
如果3的话是文本结点

03:15.220 --> 03:17.220
如果3的话是文本结点

03:17.220 --> 03:19.220
我们是不是就需要来

03:19.220 --> 03:21.220
怎么来分析一下这个文本

03:21.220 --> 03:22.220
是吧

03:22.220 --> 03:24.220
我们来写一个方法来进行分析

03:24.220 --> 03:26.220
Analysis

03:26.220 --> 03:28.220
这是分析的意思

03:28.220 --> 03:29.220
Analysis

03:29.220 --> 03:30.220
这个意外命名了之后

03:30.220 --> 03:31.220
就给大家来翻译一下

03:31.220 --> 03:32.220
因为有很多同学

03:32.220 --> 03:34.220
这个英文水平可能不太好

03:34.220 --> 03:36.220
对这些单词可能不太理解

03:36.220 --> 03:38.220
Timeblade

03:38.220 --> 03:40.220
分析模板

03:40.220 --> 03:41.220
自负刷是吧

03:41.220 --> 03:42.220
分析模板自负刷

03:42.220 --> 03:43.220
我们来把这个结点传进来

03:43.220 --> 03:45.220
我们来把这个结点传进来

03:45.220 --> 03:46.220
那我们在下面

03:46.220 --> 03:47.220
就雕用一下

03:47.220 --> 03:49.220
在上面就雕用一下

03:49.220 --> 03:51.220
Analysis

03:53.220 --> 03:54.220
你说我这个里面

03:54.220 --> 03:56.220
都要分析什么

03:56.220 --> 03:57.220
分析什么

03:57.220 --> 03:58.220
我首先得看看

03:58.220 --> 03:59.220
这个里面

03:59.220 --> 04:01.220
它到底有没有模板自负刷是吧

04:01.220 --> 04:02.220
我们认为什么

04:02.220 --> 04:03.220
我们认为所有的

04:03.220 --> 04:05.220
用两个花块号中间包围的

04:05.220 --> 04:07.220
它就是模板自负刷是吧

04:07.220 --> 04:08.220
有两个花块号之间

04:08.220 --> 04:10.220
包围的就是模板自负刷是吧

04:10.220 --> 04:12.220
所以我需要来匹配

04:12.220 --> 04:13.220
匹配出来

04:13.220 --> 04:14.220
这一个自负刷里面

04:14.220 --> 04:15.220
到底有

04:15.220 --> 04:16.220
有没有

04:16.220 --> 04:17.220
这个东西

04:17.220 --> 04:18.220
是吧

04:18.220 --> 04:19.220
我们来打印一下

04:19.220 --> 04:22.660
We know the text

04:22.660 --> 04:23.660
是吧

04:23.660 --> 04:24.660
如果它是

04:25.660 --> 04:26.660
文本结点的话

04:26.660 --> 04:27.660
它是有text的

04:27.660 --> 04:28.660
对吧

04:29.660 --> 04:33.580
我调用了吗

04:35.580 --> 04:36.580
还没调用完是吧

04:36.580 --> 04:37.580
当前的这个结点

04:37.580 --> 04:39.580
是不是这个当前的结点

04:39.580 --> 04:41.580
如果它不是文本结点

04:41.580 --> 04:43.580
是不是它就有可能是

04:43.580 --> 04:44.580
标签结点

04:44.580 --> 04:45.580
一副

04:47.580 --> 04:49.580
We know the node type

04:49.580 --> 04:52.580
代表它是标签结点是吧

04:52.580 --> 04:54.580
标签结点怎么样

04:54.580 --> 04:56.580
我们要看标签结点的

04:56.580 --> 04:58.580
下面它还有没有

04:58.580 --> 04:59.580
结点

05:00.580 --> 05:02.580
所以我们要看它的复讯环

05:03.580 --> 05:04.580
为什么复讯环

05:04.580 --> 05:05.580
要看它的字节点是吧

05:05.580 --> 05:06.580
标签结点

05:06.580 --> 05:07.580
结点我们不用看

05:07.580 --> 05:08.580
因为标签结点里面

05:08.580 --> 05:09.580
没有文本是吧

05:09.580 --> 05:11.580
我们要看标签结点的

05:11.580 --> 05:12.580
字节点是吧

05:15.210 --> 05:17.210
来一个light i等于0

05:17.210 --> 05:18.210
i小于

05:18.210 --> 05:20.210
We know the children

05:22.210 --> 05:23.210
the lines

05:26.210 --> 05:28.210
然后我们往下面传

05:28.210 --> 05:29.210
prepare render

05:29.210 --> 05:30.210
看什么

05:30.210 --> 05:32.210
辨历数形结构就是

05:32.210 --> 05:33.210
辨历数形结构

05:33.210 --> 05:34.210
你就用地规

05:34.210 --> 05:35.210
就没有什么问题

05:35.210 --> 05:36.210
只要这个结点数目

05:36.210 --> 05:37.210
不是超级大

05:37.210 --> 05:39.210
没有这个几十万个

05:39.210 --> 05:40.210
就没有事

05:40.210 --> 05:41.210
丘水

05:43.210 --> 05:44.210
把它的这个N个

05:44.210 --> 05:45.210
接点给它传进去

05:45.210 --> 05:46.210
把这个N个接点

05:46.210 --> 05:47.210
给它传进去

05:47.210 --> 05:48.210
这样的话

05:48.210 --> 05:49.210
我们来试试打印一下

05:50.210 --> 05:51.210
是吧

05:51.210 --> 05:52.210
一个这个

05:52.210 --> 05:53.210
一个这个

05:53.210 --> 05:54.210
一个这个

05:54.210 --> 05:55.210
打印了四下是吧

05:55.210 --> 05:56.210
打印了四下是吧

05:56.210 --> 05:57.210
因为它有四个文本结点

05:57.210 --> 05:58.210
是吧

05:58.210 --> 05:59.210
然后你会发现

05:59.210 --> 06:00.210
就会有这个

06:00.210 --> 06:01.210
你好这些东西是吧

06:02.210 --> 06:03.210
我们来修改一下

06:06.160 --> 06:07.160
咱们来修改一下

06:07.160 --> 06:08.160
哪儿呢

06:09.160 --> 06:10.160
这是吧

06:10.160 --> 06:12.160
来个doll号

06:12.160 --> 06:14.160
再来一个content

06:15.160 --> 06:17.160
或者来一个disk rib什么

06:17.160 --> 06:20.980
disk rib

06:20.980 --> 06:21.980
咱过来吧

06:22.980 --> 06:23.980
是吧

06:23.980 --> 06:24.980
我这一个文本里面

06:24.980 --> 06:25.980
是不是也可以有两个标签

06:25.980 --> 06:26.980
是吧

06:26.980 --> 06:28.980
那我们再找到一个结点

06:28.980 --> 06:30.980
里面有几个标签的时候

06:30.980 --> 06:32.980
我们是不是得把这些标签都找出来

06:32.980 --> 06:34.980
我只找出来一个不行

06:34.980 --> 06:35.980
是吧

06:35.980 --> 06:37.980
我们怎么样把这些标签给它找出来

06:37.980 --> 06:39.980
怎么把这标签给它找出来

06:39.980 --> 06:41.980
政策去匹配

06:41.980 --> 06:43.980
最简单一个方式用政策匹配

06:43.980 --> 06:45.980
就是匹配这个字符创意是吧

06:45.980 --> 06:46.980
因为我在这打印的吧

06:46.980 --> 06:48.980
拥有把这个字符创意给它匹配出来是吧

06:49.980 --> 06:51.980
vnode.x

06:51.980 --> 06:52.980
是吧

06:52.980 --> 06:53.980
点什么呢

06:53.980 --> 06:54.980
match

06:54.980 --> 06:55.980
匹配

06:55.980 --> 06:57.980
匹配什么呢

06:57.980 --> 06:59.980
里面写个政策

06:59.980 --> 07:00.980
干上去

07:00.980 --> 07:01.980
匹配全局的

07:01.980 --> 07:02.980
把所有的东西都匹配出来

07:02.980 --> 07:03.980
如果不写干上去的话

07:03.980 --> 07:05.980
咱们先看一下

07:05.980 --> 07:06.980
匹配什么呢

07:06.980 --> 07:07.980
以夸夸号开头

07:07.980 --> 07:09.980
以夸夸号结尾

07:09.980 --> 07:11.980
然后带有这个的

07:11.980 --> 07:12.980
里面什么字符

07:12.980 --> 07:13.980
小一到小贼

07:13.980 --> 07:15.980
大一到大贼

07:15.980 --> 07:17.980
然后0到9

07:17.980 --> 07:18.980
除了这些字符之外

07:18.980 --> 07:20.980
还允许出现下滑线

07:20.980 --> 07:21.980
还允许出现点

07:21.980 --> 07:22.980
总之有什么字符

07:22.980 --> 07:24.980
你往里写就行了

07:24.980 --> 07:26.980
然后这边写个加号

07:26.980 --> 07:28.980
政责我就不多说了

07:28.980 --> 07:29.980
你们应该都会

07:29.980 --> 07:31.980
代表的至少得有个字符

07:31.980 --> 07:32.980
变量至少得有一个

07:32.980 --> 07:33.980
字母作为名字

07:33.980 --> 07:34.980
是吧

07:34.980 --> 07:36.980
然后我把它作为一个什么呢

07:36.980 --> 07:40.980
time plate string list

07:40.980 --> 07:42.980
然后我们打印一下

07:42.980 --> 07:48.700
看一下

07:48.700 --> 07:50.700
我这里面打印了几个

07:50.700 --> 07:52.700
打印了一个

07:52.700 --> 07:53.700
是吧

07:53.700 --> 07:54.700
打印了一个是吧

07:54.700 --> 07:57.700
这里面也打印了一个是吧

07:57.700 --> 07:58.700
一个字符串

07:58.700 --> 08:00.700
这里面也是一个字符串

08:00.700 --> 08:01.700
但是有的人说

08:01.700 --> 08:03.700
你这里面不是两个字符串吗

08:03.700 --> 08:04.700
为什么只打印出来一个呢

08:04.700 --> 08:06.700
因为我们这样的一个政策

08:06.700 --> 08:07.700
只能查询出来一个

08:07.700 --> 08:09.700
所以说我们要在后面加上一个g

08:09.700 --> 08:11.700
代表的是global

08:11.700 --> 08:13.700
这样的话是插照所有的

08:13.700 --> 08:15.700
这样的话

08:15.700 --> 08:17.700
这个接点里面就有两个

08:17.700 --> 08:18.700
这个接点有一个

08:18.700 --> 08:19.700
这个接点有一个

08:19.700 --> 08:20.700
这个接点也没有

08:20.700 --> 08:22.700
是吧

08:22.700 --> 08:23.700
第一个文本里面

08:23.700 --> 08:25.700
就会有两个母版字符串

08:25.700 --> 08:27.700
有两个母版字符串

08:27.700 --> 08:29.700
然后我们要干嘛

08:29.700 --> 08:30.700
我们要建立一个

08:30.700 --> 08:31.700
硬射关系是吧

08:31.700 --> 08:33.700
我们要建立一个硬射关系

08:33.700 --> 08:37.700
我们要能够通过母版

08:37.700 --> 08:41.700
找到哪些

08:41.700 --> 08:43.700
节点

08:43.700 --> 08:46.700
用到了这个母版

08:46.700 --> 08:48.700
这是第一个是吧

08:48.700 --> 08:49.700
第二个呢

08:49.700 --> 08:52.700
我们要通过节点

08:52.700 --> 08:53.700
找到

08:53.700 --> 08:55.700
这个节点

08:55.700 --> 08:57.700
节点下

08:57.700 --> 09:01.660
有哪些母版

09:01.660 --> 09:02.660
说白了

09:02.660 --> 09:03.660
就是要做一个母版和节点

09:03.660 --> 09:04.660
这是这件硬射

09:04.660 --> 09:05.660
通过母版找节点

09:05.660 --> 09:07.660
通过节点找母版

09:07.660 --> 09:08.660
然后我们就要

09:08.660 --> 09:09.660
创建两个变量

09:09.660 --> 09:11.660
第一个是通过母版找节点

09:11.660 --> 09:13.660
light

09:13.660 --> 09:16.660
template2

09:16.660 --> 09:18.660
这是一个规范的鞋法

09:18.660 --> 09:20.660
我们正当英文啥

09:20.660 --> 09:21.660
too是吧

09:21.660 --> 09:23.660
从母版

09:23.660 --> 09:24.660
到节点是吧

09:24.660 --> 09:26.660
但是在这个敲带码的时候

09:26.660 --> 09:28.660
too一般都这么写

09:29.660 --> 09:31.660
这是规范的一种

09:31.660 --> 09:33.660
成熟的一种鞋法

09:33.660 --> 09:37.420
比如说too

09:37.420 --> 09:40.420
我们一般会变成too

09:40.420 --> 09:42.420
或者是然后是fo

09:42.420 --> 09:44.420
我们会一般写成fo

09:44.420 --> 09:46.420
如果你看到一般的英文写的

09:46.420 --> 09:47.420
a2b

09:47.420 --> 09:49.420
不是说a比较2b

09:49.420 --> 09:51.420
是指的是a倒b

09:51.420 --> 09:53.420
a2b

09:53.420 --> 09:56.420
如果是a4c

09:56.420 --> 09:58.420
那不是a4c

09:58.420 --> 10:00.420
你说是不是乱起名

10:00.420 --> 10:02.420
它指的是a4c

10:02.420 --> 10:04.420
它实际上是一种缩写

10:06.420 --> 10:07.420
好了

10:07.420 --> 10:08.420
这是第一个

10:08.420 --> 10:09.420
我们是一个mab

10:09.420 --> 10:11.420
第二个我们也是一个mab

10:11.420 --> 10:13.420
vnode2template

10:13.420 --> 10:22.190
是吧

10:22.190 --> 10:24.190
两组应设

10:24.190 --> 10:27.820
两组应设

10:27.820 --> 10:28.820
然后我们是

10:28.820 --> 10:30.820
开始来写下面这个了是吧

10:30.820 --> 10:32.820
分析出来的母版自付串了之后

10:32.820 --> 10:34.820
我们这里面可能是多个是吧

10:34.820 --> 10:36.820
因为这是个数组

10:36.820 --> 10:38.820
它会给我们一个数组

10:38.820 --> 10:42.650
辨历它

10:42.650 --> 10:44.650
light i等于零

10:44.650 --> 10:46.650
i小于template list的land

10:46.650 --> 10:48.650
i加加

10:48.650 --> 10:50.650
辨历这个数组

10:50.650 --> 10:52.650
辨历这个数组了之后

10:52.650 --> 10:53.650
干嘛呀

10:53.650 --> 10:55.650
这里面就是母版自付串了是吧

10:55.650 --> 10:57.650
我们要用两个方法

10:57.650 --> 10:59.650
分别来设置这个

10:59.650 --> 11:00.650
往这里面设置

11:00.650 --> 11:01.650
还有往这里面设置

11:01.650 --> 11:03.650
咱们在下面写两个方法

11:03.650 --> 11:04.650
方式

11:04.650 --> 11:06.650
set

11:06.650 --> 11:07.650
template

11:07.650 --> 11:10.650
to vnode

11:10.650 --> 11:11.650
set

11:11.650 --> 11:13.650
template to vnode

11:13.650 --> 11:15.650
传入

11:15.650 --> 11:16.650
template一个

11:16.650 --> 11:18.650
传入 vnode一个

11:18.650 --> 11:19.650
再写一个

11:19.650 --> 11:20.650
方式

11:20.650 --> 11:21.650
set

11:21.650 --> 11:23.650
vnode

11:23.650 --> 11:25.650
to template

11:25.650 --> 11:27.650
传入一个

11:27.650 --> 11:29.650
template

11:29.650 --> 11:31.650
传入一个 vnode

11:31.650 --> 11:36.110
我们有写这两种方法

11:36.110 --> 11:38.110
分别用来设置这两样

11:38.110 --> 11:39.110
设置这两样东西

11:39.110 --> 11:41.110
我们就传入就得了是吧

11:41.110 --> 11:42.110
我们有了一个母版

11:42.110 --> 11:43.110
有了一个节点了之后

11:43.110 --> 11:45.110
我们要分别往这里面设置是吧

11:45.110 --> 11:47.110
一个是template

11:47.110 --> 11:49.110
to node是吧

11:49.110 --> 11:50.110
vci

11:50.110 --> 11:51.110
这是母版是吧

11:51.110 --> 11:53.110
node就是当前 vnode是吧

11:53.110 --> 11:56.110
然后还要设置一个 vnode

11:56.110 --> 11:58.110
to template是吧

11:58.110 --> 12:00.110
我们要写一个

12:00.110 --> 12:02.110
也是这么传的

12:02.110 --> 12:03.110
有的同学说

12:03.110 --> 12:04.110
这个前后顺域的事

12:04.110 --> 12:05.110
参数前后顺域的事

12:05.110 --> 12:06.110
没啥用

12:06.110 --> 12:07.110
你就这么传就行

12:07.110 --> 12:09.110
在里面反正用就行

12:09.110 --> 12:11.110
这样传好看

12:11.110 --> 12:15.110
然后说template vnode的这个事

12:15.110 --> 12:17.110
这个是母版到极点的应设

12:17.110 --> 12:18.110
是吧

12:18.110 --> 12:19.110
母版到极点的应设

12:19.110 --> 12:21.110
你只要把母版和极点传进来就ok

12:21.110 --> 12:24.110
然后我们传进来的这个母版

12:24.110 --> 12:27.110
看好了传进来的这个母版

12:27.110 --> 12:29.110
传进来的这个母版是啥

12:29.110 --> 12:34.770
打印一下看一下

12:38.680 --> 12:42.680
这块好像不太对

12:42.680 --> 12:45.680
这块前提必须得是有的

12:45.680 --> 12:48.680
因为有的地方是空的

12:48.680 --> 12:49.680
是吧

12:49.680 --> 12:51.680
带画货号的是吧

12:51.680 --> 12:52.680
带画货号的

12:52.680 --> 12:55.680
所以我们第一个步骤人要解掉画货号

12:55.680 --> 12:57.680
要把这个画货号要解掉

12:57.680 --> 13:00.680
我们写一个小小的工具类

13:00.680 --> 13:05.680
guide template name

13:06.680 --> 13:07.680
传入一个template

13:07.680 --> 13:08.680
要解掉画货号

13:08.680 --> 13:10.680
这个template假设是吧

13:10.680 --> 13:12.680
我们有可能传入的是带画货号的

13:12.680 --> 13:14.680
有可能是传入的是不带画货号的

13:14.680 --> 13:16.680
我们要写一个比较万能的

13:16.680 --> 13:18.680
要写一个比较万能的

13:18.680 --> 13:20.680
要先判断

13:20.680 --> 13:24.680
判断是否有画货号

13:24.680 --> 13:29.680
如果有则解掉

13:29.680 --> 13:34.680
如果没有则直接返回

13:34.680 --> 13:40.820
怎么判断template是否有画货号

13:40.820 --> 13:43.970
if

13:43.970 --> 13:51.700
这两个什么

13:51.700 --> 13:54.700
如果template的前两位

13:54.700 --> 13:57.700
template的substitute

13:57.700 --> 14:00.700
0.2

14:00.700 --> 14:02.700
等于这个

14:02.700 --> 14:06.010
并且

14:06.010 --> 14:09.900
template的后两位

14:09.900 --> 14:11.900
template的substitute

14:11.900 --> 14:13.900
后两位是多少

14:13.900 --> 14:15.900
后两位是多少

14:15.900 --> 14:22.580
template的del length

14:22.580 --> 14:23.580
-2

14:23.580 --> 14:28.530
到template的del length

14:28.530 --> 14:32.540
等于

14:32.540 --> 14:33.540
这个

14:33.540 --> 14:35.540
代表的是有画货号是吧

14:35.540 --> 14:40.430
这个代表的是有画货号

14:40.430 --> 14:43.810
我就不知道好了

14:43.810 --> 14:47.810
这代表的是有画货号

14:47.810 --> 14:49.810
iHouse

14:50.810 --> 14:52.810
代表的是没有用母版

14:52.810 --> 14:54.810
这个拦住是吧

14:54.810 --> 14:56.810
我们这里面就传template

14:56.810 --> 14:58.810
就是template

14:58.810 --> 14:59.810
没有用画货号包裹的

14:59.810 --> 15:00.810
就直接返回

15:00.810 --> 15:02.810
如果用画货号包裹的

15:02.810 --> 15:04.810
那我们就怎么样

15:04.810 --> 15:05.810
我们要给它

15:05.810 --> 15:07.810
结取了之后再返回是吧

15:07.810 --> 15:09.810
给它结取了之后再返回

15:09.810 --> 15:11.810
rechange

15:11.810 --> 15:13.810
template的substitute

15:13.810 --> 15:15.810
从第二个开始

15:15.810 --> 15:17.810
把前两位挑过

15:17.810 --> 15:18.810
template的del length

15:19.810 --> 15:21.810
把后两位

15:24.810 --> 15:27.810
所以我们再往里面存的时候

15:27.810 --> 15:29.810
我们再往这里面存的时候

15:29.810 --> 15:31.810
比如说我现在要往

15:31.810 --> 15:33.810
time to node里面设置

15:33.810 --> 15:35.810
time to node里面设置

15:35.810 --> 15:37.810
我要首先来获取到什么

15:37.810 --> 15:40.810
来获取到名字是吧

15:40.810 --> 15:43.810
来看一下里面有没有

15:43.810 --> 15:46.810
先获取到母版的名字吧

15:46.810 --> 15:47.810
gettemplate的name

15:47.810 --> 15:49.810
把template的传进去

15:58.800 --> 16:00.800
然后我往这里面设置

16:00.800 --> 16:02.800
往这里面设置这个node是吧

16:02.800 --> 16:05.800
要先看一下这个里面现在有没有

16:05.800 --> 16:07.800
要先看一下这个里面有没有

16:07.800 --> 16:08.800
怎么看这里面有没有

16:08.800 --> 16:10.800
先从这里面拿下

16:10.800 --> 16:13.800
template to node

16:13.800 --> 16:16.800
点get

16:16.800 --> 16:18.800
先从这里面拿出来

16:19.800 --> 16:22.800
看看之前这里面的一个set是吧

16:22.800 --> 16:25.800
let一个time plate set

16:25.800 --> 16:28.370
这是什么set

16:28.370 --> 16:30.370
这是vnode set

16:31.370 --> 16:33.370
先从这里面查出来一波

16:33.370 --> 16:35.370
先从这里面查出来一波

16:35.370 --> 16:38.370
看看这一波里面有没有

16:40.370 --> 16:46.450
如果有的话

16:46.450 --> 16:48.450
那就直接添加是吧

16:48.450 --> 16:49.450
那就直接添加是吧

16:49.450 --> 16:51.450
那就是time plate

16:51.450 --> 16:53.450
vnode set

16:53.450 --> 16:56.450
vnode set.push

16:58.450 --> 16:59.450
如果有的话

16:59.450 --> 17:00.450
我们这里面是个数组是吧

17:00.450 --> 17:03.450
因为一个模板不只对应着一个

17:03.450 --> 17:04.450
节点是吧

17:04.450 --> 17:06.450
一个模板有可能对应着多个节点

17:06.450 --> 17:08.450
所以我们是往里面push一下

17:08.450 --> 17:09.450
这个vnode

17:09.450 --> 17:11.760
else

17:13.760 --> 17:15.760
else那就是我们往这个

17:16.760 --> 17:18.760
就相当于我们拿不出来

17:18.760 --> 17:21.760
这个没法根据这个节点

17:21.760 --> 17:22.760
没法根据这个模板名称

17:22.760 --> 17:24.760
拿出来这个结合是吧

17:24.760 --> 17:26.760
那我们就证明这个硬设里面

17:26.760 --> 17:28.760
没有关于这个节点的信息

17:28.760 --> 17:29.760
那我就得set了一个

17:29.760 --> 17:30.760
是吧

17:30.760 --> 17:31.760
我就得set一个

17:31.760 --> 17:34.760
set一个time plate name

17:34.760 --> 17:35.760
多号

17:35.760 --> 17:36.760
看好了

17:36.760 --> 17:37.760
我要把这个vnode

17:37.760 --> 17:38.760
放到一个数组里面去

17:38.760 --> 17:40.760
放到一个结合里面去

17:40.760 --> 17:42.760
我一定要让它这个值是一个数组

17:42.760 --> 17:44.760
我一定要让它这个值是一个数组

17:44.760 --> 17:46.760
因为一个模板

17:46.760 --> 17:47.760
不只对应着一个节点

17:47.760 --> 17:49.760
就像我刚才这个

17:49.760 --> 17:50.760
我这一个discription

17:50.760 --> 17:51.760
对应着两个节点

17:51.760 --> 17:52.760
对吧

17:52.760 --> 17:53.760
一个discription

17:53.760 --> 17:54.760
对应着两个节点

17:54.760 --> 17:57.140
这样的话

17:57.140 --> 17:59.140
我们就能把这个东西给它设置进去

17:59.140 --> 18:00.140
反过来也是

18:00.140 --> 18:01.140
这是用node

18:01.140 --> 18:03.140
刚才是用这个节点

18:03.140 --> 18:04.140
去查这个time plate的

18:04.140 --> 18:06.140
那我们现在来查这个node

18:06.140 --> 18:08.140
那light一个

18:10.140 --> 18:11.140
什么呢

18:11.140 --> 18:14.580
time plate set

18:15.580 --> 18:16.580
等于

18:16.580 --> 18:18.580
vnode to time plate的

18:18.580 --> 18:19.580
guide

18:19.580 --> 18:21.580
用这个vnode去查

18:21.580 --> 18:22.580
这是用node去查模板

18:22.580 --> 18:23.580
是吧

18:23.580 --> 18:24.580
我这一个节点下

18:24.580 --> 18:26.580
会有哪些模板

18:26.580 --> 18:30.660
如果

18:30.660 --> 18:31.660
它存在的话

18:31.660 --> 18:33.660
那就还是往里面添加是吧

18:33.660 --> 18:38.350
time plate set.push

18:38.350 --> 18:39.350
push.i

18:39.350 --> 18:41.350
把我这个当前的time plate

18:41.350 --> 18:43.350
给它传进去是吧

18:43.350 --> 18:45.350
怎么给它传进去

18:45.350 --> 18:47.350
guide time plate name

18:47.350 --> 18:49.350
time plate的传进去

18:49.350 --> 18:51.350
我一定要传的是这个模板的名字

18:51.350 --> 18:52.350
这个值

18:52.350 --> 18:53.350
不是代画画号的这个

18:53.350 --> 18:55.350
我不要传代画画号的这个

18:57.350 --> 18:59.350
否则的话我怎么办

18:59.350 --> 19:01.350
vnode to time plate的点

19:01.350 --> 19:02.350
set是吧

19:02.350 --> 19:04.350
以vnode作为key

19:04.350 --> 19:05.350
然后

19:06.350 --> 19:07.350
里面也得是个数字

19:07.350 --> 19:09.350
guide time plate的name

19:13.690 --> 19:14.690
搞定了是吧

19:14.690 --> 19:16.690
这就是set的这个

19:16.690 --> 19:17.690
我经过这一两轮

19:17.690 --> 19:19.690
我经过这一两轮

19:19.690 --> 19:21.690
我就能把这个给处置画完

19:21.690 --> 19:23.690
我经过这两轮

19:23.690 --> 19:25.690
我就能把这个给处置画完

19:25.690 --> 19:27.690
这就是这两个方法

19:27.690 --> 19:29.690
这就是这两个方法

19:29.690 --> 19:31.690
处置画完了之后

19:31.690 --> 19:33.690
可以我们来可以来打印一下这个

19:33.690 --> 19:35.690
可以来打印一下这两个mine

19:35.690 --> 19:42.900
咱哪儿打印呢

19:42.900 --> 19:47.180
这个prepire吧

19:47.180 --> 19:49.180
我们看一下这个prepire在哪儿掉的

19:49.180 --> 19:54.150
我们往这里面写一个方法

19:57.150 --> 19:59.150
导出两个测试方法

19:59.150 --> 20:00.150
方个什么

20:00.150 --> 20:01.150
guide

20:03.980 --> 20:05.980
time plate

20:06.980 --> 20:09.980
to vnode

20:11.980 --> 20:12.980
return

20:12.980 --> 20:18.020
再来一个xpart

20:18.020 --> 20:21.650
function

20:21.650 --> 20:22.650
guide

20:22.650 --> 20:23.650
vnode to

20:23.650 --> 20:25.650
time plate

20:27.650 --> 20:28.650
return

20:28.650 --> 20:30.650
vnode to time plate

20:33.790 --> 20:34.790
这些东西

20:34.790 --> 20:36.790
有很多同学可能

20:36.790 --> 20:38.790
看这个课比较累

20:38.790 --> 20:40.790
或者是感觉有点不太会

20:40.790 --> 20:41.790
确实

20:41.790 --> 20:43.790
这种东西必须要有一个

20:43.790 --> 20:46.790
比较雄厚的算法基础

20:46.790 --> 20:47.790
像这样的东西

20:47.790 --> 20:49.790
必须得有一个雄厚的算法基础

20:49.790 --> 20:50.790
你想什么都不学

20:50.790 --> 20:52.790
直接就把这些复杂东西给搞出来

20:52.790 --> 20:53.790
那是不可能的

20:53.790 --> 20:56.790
你就像什么力学的东西

20:56.790 --> 20:57.790
都不会

20:57.790 --> 20:58.790
你想造成一个火箭

20:58.790 --> 20:59.790
那是不可能的

20:59.790 --> 21:00.790
所以说对于算法

21:00.790 --> 21:01.790
还是必须得有一个

21:01.790 --> 21:03.790
稍微好一点的了解

21:05.790 --> 21:06.790
然后在这个mount里面

21:06.790 --> 21:07.790
用了之后

21:07.790 --> 21:15.140
我们来打印一下

21:22.970 --> 21:24.970
console.log

21:27.970 --> 21:28.970
好吧

21:28.970 --> 21:29.970
我们挂载了之后

21:29.970 --> 21:30.970
来打印一下这两个map

21:32.970 --> 21:34.970
打印了两个map是吧

21:34.970 --> 21:35.970
第一个map是

21:35.970 --> 21:36.970
模板

21:36.970 --> 21:38.970
到节点的是吧

21:38.970 --> 21:42.340
有两个模板

21:42.340 --> 21:43.340
一个是content

21:43.340 --> 21:44.340
一个是discription是吧

21:44.340 --> 21:46.340
content下面对应了几个呢

21:46.340 --> 21:47.340
对应着一个是吧

21:47.340 --> 21:48.340
content

21:49.340 --> 21:50.340
对应的value

21:50.340 --> 21:51.340
只有这一个vnode

21:51.340 --> 21:53.340
对应了哪个vnode呢

21:53.340 --> 21:54.340
就这个是吧

21:54.340 --> 21:55.340
现在选中的这个是吧

21:55.340 --> 21:56.340
上面已经选中了

21:56.340 --> 21:58.660
蓝的是吧

21:58.660 --> 22:06.770
那看第二个

22:06.770 --> 22:09.770
第二个discription的这个

22:09.770 --> 22:10.770
discription的这个

22:10.770 --> 22:12.770
它对应着两个节点是吧

22:12.770 --> 22:13.770
node1node2

22:13.770 --> 22:14.770
node1是这个

22:14.770 --> 22:15.770
你好

22:15.770 --> 22:16.770
上面这一串是吧

22:16.770 --> 22:18.770
node2是只有discription的这一串

22:18.770 --> 22:19.770
是吧

22:19.770 --> 22:20.770
所以说

22:20.770 --> 22:22.770
我们就建立好了

22:22.770 --> 22:23.770
两个所以

22:26.770 --> 22:27.770
备用

22:27.770 --> 22:29.770
现在还不进行挂载是吧

22:29.770 --> 22:31.770
上面还没有发命令的是吧

22:31.770 --> 22:33.770
现在只是进行挂载

22:33.770 --> 22:35.770
没有说进行渲染是吧

22:35.770 --> 22:36.770
现在只进行挂载

22:36.770 --> 22:37.770
没有说进行渲染

22:37.770 --> 22:39.770
所以我们现在现在按兵不动

22:39.770 --> 22:41.770
那这就是一个挂载

22:41.770 --> 22:43.770
下面的这个预备渲染

22:43.770 --> 22:45.770
预备渲染

22:45.770 --> 22:46.770
主要来做的是建立

22:46.770 --> 22:48.770
所以到了时候渲染的时候

22:48.770 --> 22:50.770
好能够直接的

22:50.770 --> 22:52.770
来把这个值给弄出来

22:52.770 --> 22:53.770
渲染的时候

22:53.770 --> 22:55.770
好能直接把这个值给弄出来

22:55.770 --> 22:57.770
下一步

22:57.770 --> 22:59.770
我们应该可以开始来进行渲染了

22:59.770 --> 23:00.770
下一步

23:00.770 --> 23:02.770
我们就可以开始来进行渲染了

23:02.770 --> 23:03.770
下一集

23:03.770 --> 23:06.770
我们来写如何把值渲染上去

23:06.770 --> 23:07.770
下一集

23:07.770 --> 23:09.770
我们来写如何把值渲染上去

