WEBVTT

00:01.260 --> 00:03.260
Hello 大家好啊

00:03.260 --> 00:05.260
上一集的最后我们说到

00:05.260 --> 00:08.260
我们这一集来讲Vigar Model是吧

00:08.260 --> 00:11.260
Vigar Model是一个非常简单的一个功能

00:11.260 --> 00:13.260
我们感觉这种可能稍微比较难

00:13.260 --> 00:14.260
可能想起来比较复杂

00:14.260 --> 00:16.260
但是写起来真的超级简单

00:16.260 --> 00:19.260
这样我们来新建一个路径

00:19.260 --> 00:22.260
Grammer 语法

00:23.260 --> 00:25.260
然后我新建一个GIS文件

00:25.260 --> 00:27.260
就叫Vmodel

00:27.260 --> 00:29.260
这个文件干嘛的呢

00:29.260 --> 00:31.260
就是来做什么呢

00:31.260 --> 00:33.260
来做Vigar Model

00:33.260 --> 00:35.260
就是来做Vigar Model

00:35.260 --> 00:37.260
然后我来export一个方式

00:37.260 --> 00:39.260
Vmodel

00:39.260 --> 00:41.260
我得让人传进来一些东西是吧

00:41.260 --> 00:44.260
一个是我们整个VUE对象

00:44.260 --> 00:46.260
再一个是Element

00:46.260 --> 00:48.260
哪个元素

00:48.260 --> 00:50.260
对码哪个元素进行监听

00:50.260 --> 00:52.260
然后呢他跟哪一个直进行绑定

00:52.260 --> 00:53.260
是吧

00:53.260 --> 00:55.260
要有这么三个东西

00:55.260 --> 00:57.260
元素对象

00:57.260 --> 00:58.260
对应的属性

00:58.260 --> 01:00.260
元素对象对应的属性

01:00.260 --> 01:02.260
然后其实就很简单是吧

01:02.260 --> 01:06.260
我给他来添加一个on趁这时间

01:06.260 --> 01:08.260
on趁这时间

01:08.260 --> 01:11.260
他只要一修改

01:11.260 --> 01:13.260
怎么样

01:13.260 --> 01:17.260
我就把这个对应的直给改了就行了

01:17.260 --> 01:19.260
我就把这个对应的直给改了就行了

01:19.260 --> 01:21.260
然后我们写一个set value

01:21.260 --> 01:23.260
之前我在这里面有个guide value

01:23.260 --> 01:26.260
我在这边来一个set value

01:31.140 --> 01:33.140
这块得传三个东西是吧

01:33.140 --> 01:36.140
一个是obj哪个对象

01:36.140 --> 01:40.140
然后哪个属性

01:40.140 --> 01:44.510
然后直是什么

01:44.510 --> 01:47.510
比如说我们对象是这样的

01:47.510 --> 01:49.510
一个obj对象

01:49.510 --> 01:53.510
obj等于

01:53.510 --> 01:56.510
我们属性

01:56.510 --> 02:00.510
是content等于panel

02:03.140 --> 02:06.140
然后description等于

02:06.140 --> 02:10.140
abcd

02:10.140 --> 02:12.140
然后obj

02:12.140 --> 02:14.140
等于

02:14.140 --> 02:16.140
obj又是个对象是吧

02:16.140 --> 02:19.140
xv1,yv2

02:19.140 --> 02:20.140
是吧

02:20.140 --> 02:21.140
你如果说

02:21.140 --> 02:24.140
如果你给我传的头一个obj

02:24.140 --> 02:26.140
是girn data

02:26.140 --> 02:29.140
然后第二个data你给我传content

02:29.140 --> 02:30.140
这样我好找是吧

02:30.140 --> 02:32.140
data.content

02:32.140 --> 02:36.140
但是如果你给我传的是obj.ex

02:36.140 --> 02:38.140
我是不是就不好找了

02:38.140 --> 02:41.140
我是不是就不是很容易的能找到直了

02:41.140 --> 02:43.140
所以得怎么办

02:43.140 --> 02:46.140
所以我们需要有这样的set value

02:46.140 --> 02:48.140
跟我们的guide value很像

02:48.140 --> 02:50.140
跟我们的guide value很像

02:50.140 --> 02:51.140
但是有点不一样

02:51.140 --> 02:52.140
看一下我们写一下

02:52.140 --> 02:53.140
首先

02:53.140 --> 02:54.140
如果obj

02:54.140 --> 02:55.140
什么东西都没有

02:55.140 --> 02:57.140
那就return obj

03:01.820 --> 03:02.820
反正或者return一个空

03:02.820 --> 03:03.820
把它无所谓

03:03.820 --> 03:04.820
就给它return就回去了

03:04.820 --> 03:05.820
就ok

03:05.820 --> 03:06.820
然后呢

03:06.820 --> 03:08.820
我们用点来拆分这个

03:08.820 --> 03:10.820
因为它毕竟是可以写点谁的

03:10.820 --> 03:11.820
没有点也不要紧

03:11.820 --> 03:12.820
没有点就拆不开了

03:12.820 --> 03:13.820
对吧

03:13.820 --> 03:14.820
attr list

03:15.820 --> 03:20.780
data.split

03:21.780 --> 03:22.780
点

03:26.690 --> 03:28.690
给它拆成一个

03:30.690 --> 03:32.690
给它拆成一对的

03:32.690 --> 03:34.690
这个一块一块的

03:34.690 --> 03:35.690
然后呢

03:35.690 --> 03:37.690
还是跟这个上边这个很像

03:37.690 --> 03:39.690
跟上面这个guide value很像

03:39.690 --> 03:41.690
guide value是通过复语循环

03:41.690 --> 03:42.690
一层一层的往下找

03:42.690 --> 03:43.690
我们这个也是

03:43.690 --> 03:44.690
也是通过复语循环

03:44.690 --> 03:48.640
一层一层的往下找

03:48.640 --> 03:49.640
但是啊

03:49.640 --> 03:51.640
它们两个还是有点区别的

03:51.640 --> 03:53.640
你说你这个找到最后一层了

03:53.640 --> 03:54.640
就找到啥了

03:54.640 --> 03:56.640
这找到最后一层都找到直了

03:56.640 --> 03:57.640
是吧

03:57.640 --> 03:58.640
我要不要修改

03:58.640 --> 03:59.640
我要那个直

03:59.640 --> 04:00.640
又没有用是吧

04:00.640 --> 04:03.640
我要的是它上一层的那个属性

04:03.640 --> 04:04.640
我要的是

04:04.640 --> 04:06.640
它上一层的那个属性

04:06.640 --> 04:08.640
所以我不能到最后

04:08.640 --> 04:09.640
我就减了一

04:09.640 --> 04:11.640
我到到属第二层我就停了

04:11.640 --> 04:12.640
二了

04:12.640 --> 04:14.640
我到到属第二层我就停

04:14.640 --> 04:19.940
其他困它一样

04:19.940 --> 04:21.940
我到属到到这个

04:21.940 --> 04:26.270
到属第二层就停

04:26.270 --> 04:27.270
啊

04:27.270 --> 04:28.270
没有问题了是吧

04:28.270 --> 04:29.270
我这一层

04:29.270 --> 04:30.270
如果有这个属性

04:30.270 --> 04:31.270
我就太不等于

04:31.270 --> 04:32.270
太不能这个属性

04:32.270 --> 04:33.270
是吧

04:33.270 --> 04:34.270
往下走一层

04:34.270 --> 04:35.270
如果下一层

04:35.270 --> 04:36.270
还有这个属性

04:36.270 --> 04:37.270
我就再往下走一层

04:37.270 --> 04:38.270
一直走到到属第二层

04:38.270 --> 04:39.270
啊

04:39.270 --> 04:40.270
他们能有

04:40.270 --> 04:41.270
能让你走

04:41.270 --> 04:42.270
我也不走了

04:42.270 --> 04:43.270
能让你走

04:43.270 --> 04:44.270
我也不走了

04:44.270 --> 04:45.270
然后我来看

04:45.270 --> 04:46.270
这个属性

04:46.270 --> 04:48.270
它到底微不微空

04:48.270 --> 04:49.270
太不

04:50.270 --> 04:51.270
太不哪个属性的

04:51.270 --> 04:52.270
ATTR

04:54.270 --> 04:55.270
List

04:56.270 --> 04:57.270
在i

04:57.270 --> 04:59.270
i这里少玩不到是吧

04:59.270 --> 05:02.270
A-T-T-R-List的烂词建议

05:03.270 --> 05:05.270
要它的最后一个属性

05:05.270 --> 05:06.270
要它的最后的一个指

05:06.270 --> 05:07.270
因为太不

05:07.270 --> 05:08.270
现在是最后一层了

05:08.270 --> 05:09.270
看看这个有没有这个属性

05:09.270 --> 05:10.270
就完事了

05:11.270 --> 05:12.270
这个TEM

05:12.270 --> 05:14.270
比如说是obg.a.x

05:15.270 --> 05:16.270
那这个时候

05:16.270 --> 05:17.270
这个TEM都已经相当于是A了

05:17.270 --> 05:18.270
我最后看看

05:18.270 --> 05:19.270
有没有这个A

05:19.270 --> 05:21.270
A下面有没有这个x就行

05:22.270 --> 05:23.270
我看看

05:23.270 --> 05:24.270
如果是不等于空的

05:25.270 --> 05:27.270
那这个就得给它设置直了是吧

05:27.270 --> 05:28.270
不等于空的话

05:28.270 --> 05:30.270
就代表现在已经有直了是吧

05:30.270 --> 05:32.270
那我就让它设置为Value

05:34.580 --> 05:36.580
我就给它设置为Value

05:36.580 --> 05:38.580
这就是setValue

05:38.580 --> 05:40.580
然后我们在Vmodule里面

05:40.580 --> 05:41.580
来引入一下

05:44.580 --> 05:45.580
setValue

05:49.940 --> 05:50.940
setValue

05:50.940 --> 05:52.940
传入Vm对象

05:52.940 --> 05:53.940
传入element

05:54.940 --> 05:56.940
传入data

05:58.940 --> 05:59.940
把这三个一传进去

05:59.940 --> 06:00.940
就OK

06:00.940 --> 06:03.940
然后我们光有Vmodule不行

06:03.940 --> 06:04.940
我们得分析

06:04.940 --> 06:05.940
在哪儿分析

06:05.940 --> 06:07.940
在生成道目数的时候

06:07.940 --> 06:08.940
就开始分析

06:08.940 --> 06:10.940
我们俩人不是要生成道目数吗

06:11.940 --> 06:12.940
对吧

06:12.940 --> 06:14.940
在这个之前

06:14.940 --> 06:16.940
在这样的位置

06:16.940 --> 06:17.940
然后我们分析什么

06:17.940 --> 06:18.940
来分

06:18.940 --> 06:19.940
专门来分析它的属性

06:19.940 --> 06:21.940
专门来分析它的属性

06:21.940 --> 06:24.940
我们应该需要一个方法

06:24.940 --> 06:25.940
写一个吧

06:26.940 --> 06:27.940
方式

06:27.940 --> 06:29.940
initiasatr

06:30.940 --> 06:31.940
是吧

06:31.940 --> 06:32.940
分析属性

06:32.940 --> 06:33.940
Vm

06:34.940 --> 06:35.940
element

06:36.940 --> 06:37.940
parange

06:38.940 --> 06:41.940
来分析在东西的属性

06:42.940 --> 06:44.940
initiasatr

06:44.940 --> 06:45.940
Vm

06:45.940 --> 06:46.940
element

06:46.940 --> 06:47.940
parange

06:47.940 --> 06:49.940
把这三个属性都给透出来下去

06:50.940 --> 06:51.940
然后

06:52.940 --> 06:54.940
我们要判断的是什么

06:54.940 --> 06:55.940
eif

06:57.940 --> 06:58.940
eif啥

06:58.940 --> 07:00.940
我得吃个标签

07:00.940 --> 07:02.940
我才能有属性是吧

07:02.940 --> 07:03.940
我如果是个文本节点

07:03.940 --> 07:05.940
我根本不可能有属性是吧

07:05.940 --> 07:07.940
所以我要看到load type

07:07.940 --> 07:08.940
是不是等于1

07:08.940 --> 07:10.940
load type唯一的时候是标签

07:10.940 --> 07:11.940
是吧

07:11.940 --> 07:13.940
然后我们来看一下

07:13.940 --> 07:15.940
lightatr

07:16.940 --> 07:17.940
nims

07:18.940 --> 07:19.940
等于

07:19.940 --> 07:20.940
element

07:21.940 --> 07:22.940
the

07:22.940 --> 07:23.940
gettribute

07:25.940 --> 07:26.940
nims

07:27.940 --> 07:32.940
tribute

07:33.940 --> 07:34.940
nims

07:37.770 --> 07:39.770
gettribute

07:40.770 --> 07:41.770
nims

07:42.770 --> 07:43.770
我没写错吧

07:46.210 --> 07:48.210
element.gettribute.nims

07:49.210 --> 07:51.210
我来输出一下

07:51.210 --> 07:59.280
没写错是吧

07:59.280 --> 08:01.280
能打理出来一堆是吧

08:01.280 --> 08:03.280
然后我们要看什么

08:05.660 --> 08:06.660
我要看一下

08:06.660 --> 08:08.660
这个里面包不包含

08:08.660 --> 08:09.660
vgmod

08:12.480 --> 08:13.480
index

08:13.480 --> 08:14.480
ov

08:15.480 --> 08:17.480
vgmod

08:18.480 --> 08:19.480
是否是

08:20.480 --> 08:21.480
大于附一的

08:21.480 --> 08:23.480
如果大于附一就代表有是吧

08:24.480 --> 08:25.480
那怎么办

08:27.480 --> 08:28.480
vmod

08:30.480 --> 08:31.480
调用它呗

08:31.480 --> 08:32.480
这个节点是吧

08:32.480 --> 08:35.480
然后要调用什么来ilement是吧

08:35.480 --> 08:37.480
成为一个元素

08:37.480 --> 08:39.480
然后以及这个元素对应的值是吧

08:41.480 --> 08:43.480
它想要的是啥

08:43.480 --> 08:44.480
它要的是date是吧

08:44.480 --> 08:46.480
比如说这个vgmod

08:46.480 --> 08:49.480
我想要的是它关联的这个属性是吧

08:49.480 --> 08:51.480
那我就把这个属性的值读出来给你

08:51.480 --> 08:52.480
好吧

08:53.480 --> 08:54.480
读出来怎么读

08:54.480 --> 08:58.480
element.gettribute

09:00.480 --> 09:01.480
传个参数是吧

09:03.480 --> 09:05.480
vgmod

09:07.790 --> 09:08.790
这样的话我们就传给看

09:08.790 --> 09:10.790
这样的话vgmod就关联上了

09:10.790 --> 09:11.790
是吧

09:11.790 --> 09:12.790
我们来试一下看看好不好使

09:13.790 --> 09:14.790
不一定好使

09:18.580 --> 09:19.580
这会儿得有点见

09:24.960 --> 09:25.960
好了是吧

09:25.960 --> 09:26.960
然后我们比如写一个

09:27.960 --> 09:28.960
asd

09:31.270 --> 09:33.270
data.split is not a function

09:33.270 --> 09:34.270
看到这是哪儿

09:38.310 --> 09:40.310
data.split is not a function

09:42.310 --> 09:43.310
它第二个

09:46.310 --> 09:48.310
它这个我们传的是这个

09:51.310 --> 09:52.310
传的是ilement

09:52.310 --> 09:54.310
我第二点传的是date

09:55.310 --> 09:57.310
第三个传的是element的Value

10:01.100 --> 10:02.100
是吧

10:02.100 --> 10:04.100
第三个飞并对是vv1对象

10:06.790 --> 10:08.790
然后以及它这个

10:10.790 --> 10:11.790
该元素

10:14.420 --> 10:15.420
绑定的属性

10:19.020 --> 10:20.020
最后一个是

10:21.020 --> 10:23.020
该元素的Value

10:23.020 --> 10:24.020
新Value

10:26.020 --> 10:28.020
然后我们要从

10:28.020 --> 10:30.020
这个对象里面找到这个属性

10:31.020 --> 10:33.020
然后我这个点

10:35.020 --> 10:37.020
从这个对象里面

10:37.020 --> 10:38.020
找到这个属性

10:38.020 --> 10:40.020
然后把它指给设设上

10:40.020 --> 10:41.020
这样应该就可以

10:42.020 --> 10:46.180
再看一下

10:47.180 --> 10:48.180
输入一个asd

10:49.180 --> 10:50.180
是吧

10:50.180 --> 10:51.180
这会儿一个人变了对吧

10:52.180 --> 10:53.180
我输入一个

10:53.180 --> 10:54.180
123

10:54.180 --> 10:55.180
是吧

10:55.180 --> 10:56.180
这会儿就变了

10:56.180 --> 10:58.180
当我这会儿一按回车的时候

10:58.180 --> 10:59.180
出发了按趁着时间

10:59.180 --> 11:01.180
出发了按趁着时间了之后

11:01.180 --> 11:03.180
它这个对象就被我们

11:03.180 --> 11:04.180
被我们改变

11:04.180 --> 11:05.180
现在是123

11:05.180 --> 11:06.180
你看这个

11:06.180 --> 11:10.180
pys.obj.x

11:10.180 --> 11:11.180
它就是123

11:11.180 --> 11:15.180
pys.date.obj.x

11:15.180 --> 11:16.180
它也是123

11:16.180 --> 11:17.180
对吧

11:17.180 --> 11:18.180
当我们一输入这个的时候

11:18.180 --> 11:20.180
它就出发了按趁着时间

11:20.180 --> 11:21.180
趁着了之后

11:21.180 --> 11:22.180
我们就把这个值给改

11:22.180 --> 11:23.180
这边值一旦给改了

11:23.180 --> 11:25.180
就调用在这个sides方法

11:25.180 --> 11:27.180
然后就出发了新的runner

11:27.180 --> 11:29.180
就把这个属性给选择了

11:29.180 --> 11:30.180
选择了

11:30.180 --> 11:32.180
所以它就实现了这个联动

11:32.180 --> 11:33.180
实现了这个联动

11:34.180 --> 11:35.180
这样的话

11:35.180 --> 11:36.180
我们就实现了一个

11:36.180 --> 11:38.180
非常基本的一个为干model

11:38.180 --> 11:41.180
比如说我们要把panel给改了

11:41.180 --> 11:45.180
比如说我们test.content

11:45.180 --> 11:47.180
不再是panel

11:47.180 --> 11:48.180
而是multi

11:49.180 --> 11:50.180
它也能改

11:52.180 --> 11:54.180
之前的功能都是好使的

11:54.180 --> 11:56.180
然后我们新加了一个为干model

11:56.180 --> 11:57.180
新加了一个为干model

11:57.180 --> 11:58.180
好了

11:58.180 --> 11:59.180
这就是为干model

11:59.180 --> 12:00.180
为干model

12:00.180 --> 12:02.180
实际上没有什么很难的是吧

12:02.180 --> 12:04.180
还是比较简单的

12:04.180 --> 12:06.180
下一节我们开始来说一个

12:06.180 --> 12:07.180
稍微难一些的

12:07.180 --> 12:10.180
下一节课的东西应该做的是比较难的

12:10.180 --> 12:11.180
是vifle

12:11.180 --> 12:13.180
vifle你可以看到

12:13.180 --> 12:14.180
就写一个节点

12:14.180 --> 12:16.180
它要给你生成很多的新的节点

12:16.180 --> 12:19.180
基本上是我们这一块比较难的

12:19.180 --> 12:20.180
下一节课

12:20.180 --> 12:22.180
我们来说vifle

