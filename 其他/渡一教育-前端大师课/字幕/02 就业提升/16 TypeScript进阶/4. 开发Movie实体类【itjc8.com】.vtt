WEBVTT

00:00.750 --> 00:05.750
那么咱们就开始来开发这么一个服务系统的系统

00:06.750 --> 00:13.950
在开发之前呢 我们会发现这里面有很多的事情要做啊 比如说有什么数据库要处理对吧

00:14.750 --> 00:19.430
这里又ts 订者他啊 检测出来代码风格有问题啊 我们看一下什么问题

00:20.550 --> 00:27.950
他说有两个问题出现了 第一个问题呢 说你这个注释啊 必须要有一个空格开头

00:28.950 --> 00:35.950
如果你不喜欢这种风格的话 可以把去掉 就配置这个东西啊 把这个配置去掉就行了 这里我加个空格吧

00:36.950 --> 00:47.550
还有另外一个问题呢 就是说他说文件啊 一个文件应该以一个空行结尾啊 必须以一个空行结尾 也就是说这里要加个空行

00:48.670 --> 00:53.790
呃 总之呢 我们后边开发过程中啊 肯定会出现很多很多这种

00:54.590 --> 00:59.390
ts 订者他的错误 这些错误呢 有的时候你会觉得非常非常的烦人

01:00.150 --> 01:07.430
但是呢 实际上是这样子的啊 如果我是一个人做开发的话 我一个人做开发 我不会去使用ts

01:08.510 --> 01:13.630
嗯 因为我一个人的话 风格是统一的啊 基本上是统一的 我不太会去使用ts

01:14.310 --> 01:22.230
但是呢 如果你是在公司里边做团队的开发的话 为了保证每一个成员之间写代码风格呢都是一致的

01:22.710 --> 01:31.150
所以说呢 需要有一个强约数 咱们学习ts 也不就是为了强约数嘛 对吧 有了内询检查过后 强制里

01:31.870 --> 01:38.230
书写正确的代码 那么ts 订者也是这样子啊 他会强制里书写统一的代码风格

01:38.910 --> 01:42.070
总之呢 虽然觉得有点烦人 但是他确实是有必要的

01:42.990 --> 01:50.150
好 这里呢 我们要处理数据库 还要处理啥呢 还要处理什么 还要处理express 对吧

01:51.030 --> 01:54.670
就是API的接口 还要处理啥呢

01:55.790 --> 02:03.990
还要处理验证 还要处理验证 总要验证 就是我们科普端发送的请求 发送的一些数据过来

02:04.590 --> 02:12.750
这些数据你能信任吗 肯定是不能信任的 因为这些数据不知道他怎么发过来的 有可能是在浏览器里边发过来的

02:13.030 --> 02:20.790
有可能是直接用poster man 或者是使用一些控制台给你发过来的 所以他的数据是不能被信任的

02:21.150 --> 02:25.830
因此呢 我们还要对数据进行验证 那么这里边我们先做啥呢

02:26.950 --> 02:32.550
我这里边想先做验证 先把验证给做了 而验证这一块呢 我打算使用

02:33.150 --> 02:36.150
我们之前学过了这个内啊 这个库class

02:36.790 --> 02:39.750
Vanitator 用这个库来对他进行验证

02:40.750 --> 02:47.150
好 那么我们现在呢 就来安装这么一个库classVanitator 先来安装它

02:48.350 --> 02:53.420
这里停止 然后呢 使用ya

02:54.260 --> 02:56.740
add 然后是class

02:57.460 --> 03:02.740
Vanitator 先安装它 安装好了之后呢 我们就可以用这个库呢

03:03.500 --> 03:09.220
使用装饰器的方式对一个内进行验证 好 对哪个内进行验证呢

03:09.820 --> 03:16.220
我们要验证的是谁 验证的 是不是电影 对吧 我们验证的是这个电影

03:16.980 --> 03:22.580
因此呢 我们要 我们要编写的内其实就是电影内啊 就是电影内

03:23.180 --> 03:30.820
好 我们这里呢 可以在这里面建立一个文件夹 这里面专门来存放各种各样的模型内啊

03:30.980 --> 03:35.220
我们可以给它取名为mod 模型也可以给它取名为 entities

03:36.020 --> 03:39.940
实体都是一样的意思 就是有一些实体数据

03:40.580 --> 03:47.540
有一些实体数据 比方说电影 比方说用户 比方说愿先啊文章 这些都是属于实体数据

03:48.180 --> 03:54.580
好 我们建立这么一个文件夹 但是呢 我们都系统里边只关心啊 只关心电影 其他的我们不管

03:55.580 --> 03:58.940
好 新建个文件movie.ts

03:59.940 --> 04:06.940
在这里边呢 我们导出export 导出一个classmovie 导出一个电影

04:08.620 --> 04:17.260
好 这里面它给你报错了啊 报错了 我们看什么错误 它说标志服movie重复啊 标志服movie重复

04:18.060 --> 04:25.140
哪里有重复啊 我们看一下啊 哪里有重复 好啊 这个vsc的关啊 重新打开一下 重新打开试一下

04:29.280 --> 04:39.280
啊 好了啊 好了 刚才应该出了问题 好 那么这里边呢 我们书写什么呢 可以书写上一些属性 我们来看一下电影里边有哪些属性

04:40.400 --> 04:45.360
啊 首先是电影的名称啊 电影的名称 ok 我们这里书写一下啊

04:47.480 --> 04:50.600
设计啊 就是内 内情是设计 置物串

04:51.560 --> 04:56.280
好 这里面也是ts令 它又出来了啊 又出来了 它说

04:57.160 --> 05:05.160
你这样子也不行啊 你应该在属性前边 每一个成员前边都必须要手动的指定 它的访问权限

05:05.720 --> 05:13.560
是public 还是private 还是protected 应该手动的指定访问权限 我觉得这个这个是对的啊 说的是对的真的

05:14.200 --> 05:23.160
因为你这样子手动指定过后 你可以非常非常清楚的可以看到啊 这里边每一个成员它的访问权限是什么

05:23.560 --> 05:32.240
如果你没有手动指定的话 你可能要想一想 这个默认默认是public 对吧 你可能要想一想 你手动指定过后呢 就非常清楚的看的

05:33.280 --> 05:40.600
好 第一个属性啊 public name 好 我们来首先想一想啊 name 这个属性呢 有什么样的验证规则呢

05:41.240 --> 05:44.360
什么样的验证规则 好 我们这里呢 先把它倒入进来啊

05:45.320 --> 05:53.080
倒入这个 倒入这个啥 就是class validator 倒入进来 看一下这个name属性 它有什么样的验证规则

05:53.960 --> 06:02.600
首先它不能维空吧 一个电影它怎么能维空呢 对不对 所以说这里呢 我们应该写上这么个验证规则 is not

06:03.080 --> 06:08.760
amity 写上它 加个错误消息 message

06:10.520 --> 06:19.880
电影名称不可以维空 好 咱们马上试一下啊 马上试一下这个验证规则 写一点代码呢 我们就测试一下

06:20.920 --> 06:22.920
好 这里我们创建这么一个电影

06:23.960 --> 06:25.960
六一个movie 创建一个电影

06:27.000 --> 06:31.960
好 然后呢 给这个电影啊 复辞name出现 先不复辞吧 先不复辞直接验证

06:32.600 --> 06:40.280
validate 验证这个电影 验证这个电影 验证完了过后得到一个验证结果

06:41.160 --> 06:48.440
得到一个验证结果 我们之前做过了 对吧 得到验证结果 那么这个结果如果有错误的话 这个数组里面就有值

06:48.760 --> 06:53.720
如果没有错误的话 这个数组里面就没有值 我们直接把这个arrow 输出

06:54.760 --> 06:58.040
直接把它输出 好 这里又遇到了一些

06:58.760 --> 07:03.320
ts令程的错误 其实我们通过这个项目呢 也可以学习到很多的ts令程的配置

07:04.040 --> 07:05.000
咱们首先看一下这个

07:06.680 --> 07:08.360
他说啥呢 他说

07:10.920 --> 07:15.320
你这个导入的顺序啊 就是你导入的模块的顺序

07:15.960 --> 07:20.600
应该呢 按照字母排序啊 应该按照字母排序

07:21.240 --> 07:24.680
这是啥意思呢 就说这个这个玩意啊 应该写到这前面去

07:25.640 --> 07:27.960
他就这个意思 应该写到这前面去

07:28.360 --> 07:34.280
因为啥呢 因为你这个模块啊 他是以c开头的 看没 你这个模块是以c开头的

07:34.840 --> 07:37.880
而我这个模块呢 是以m开头的

07:38.520 --> 07:42.920
是以m开头的 所以说呢 他认为这个模块的导入顺序啊

07:43.320 --> 07:49.560
应该是c在前边啊 字母表的顺序 m在后边啊 就这么个意思啊 就这么个意思

07:50.200 --> 07:52.200
我觉得这个东西太扯淡了啊

07:52.680 --> 07:57.320
这个这个风格也太扯淡了 所以说这里呢 我算了吧 不过有的时候确实很有用

07:57.480 --> 08:01.960
比方说公司里边 由于有的时候导入的模块很多啊 导入于大长串

08:02.280 --> 08:05.160
那么我们为了阅读方便啊 我们可以让他

08:05.640 --> 08:08.760
强行让他按照字母的顺序来进行排列导入

08:10.040 --> 08:14.280
啊 这个地方呢 我算了吧 我把这个把这个地方 把这个

08:15.240 --> 08:17.240
配置关掉

08:17.560 --> 08:19.800
这样写起来的太烦 我觉得太烦了

08:20.760 --> 08:24.920
啊 这个东西不是你说了算 也不是我说了算 应该是在公司里边啊 公司的要求

08:26.120 --> 08:29.400
按照公司的要求来进行风格检查

08:30.920 --> 08:35.080
啊 好 这里又出了风格的问题 什么问题呢 他说

08:35.960 --> 08:40.520
尖头寒树啊 他的参数应该用两个小扩号扩起来

08:41.080 --> 08:42.280
啊 这个地方我不太喜欢

08:42.760 --> 08:47.800
说实话我不太喜欢啊 尖头寒树我喜欢 如果只有一个参数的话 我喜欢这样子写

08:48.280 --> 08:49.880
因此呢 这个我也把他关掉吧

08:51.720 --> 08:52.200
关掉

08:55.160 --> 08:55.320
好

08:57.160 --> 09:02.120
好 那我们看一下啊 这里也分号结束 好来看一下他有没有错误

09:03.720 --> 09:06.520
运行 这里我把这个打开运行

09:09.100 --> 09:12.540
npm装的来运行看一下啊

09:14.060 --> 09:14.780
看有没有错误

09:15.500 --> 09:19.740
啊 现在出现了一个错误 他告诉你 滇泳铭舱不可以为空

09:20.380 --> 09:27.660
啊 是不是正确了啊 应该也是错误啊 那么我们再试一下啊 比方说我们再给他直接手动给他复制一个闹 看一下行不行

09:28.940 --> 09:29.740
啊 保存

09:30.620 --> 09:31.100
啊 这里

09:31.740 --> 09:38.460
哦 他这里已经出了问题了 对吧 不允许复制为闹啊 不允许复制为闹 也不允许复制为安迪范 那比方说我给他复制一个空置无串

09:39.500 --> 09:40.620
空置无串看一下啊

09:41.580 --> 09:49.180
啊 也出现了个错误 滇泳铭舱不可以为空 你看 这就是我们想要的啊 想要的验证啊 给他写上一些词

09:49.820 --> 09:50.300
保存

09:51.820 --> 09:54.220
啊 就是空数主了 表示没有错误

09:55.020 --> 10:00.060
好 OK啊 那么咱们这个验证了就搞定了啊 我们继续来写啊 继续写

10:00.860 --> 10:02.380
然后呢 下一个属性

10:03.100 --> 10:06.300
下一个属性 我看一下内行啊 内行

10:07.100 --> 10:15.180
内行这一块呢 我们直接给他一个制服串吧啊 就直接给一个制服串 当然也可以用一个制服串数主啊 看你自己 我们这里

10:15.980 --> 10:22.220
看怎么弄啊 制服串数主啊 我们就制服串数主 好来public内行taps

10:22.940 --> 10:28.460
一个制服串数主啊 他有可能有很多的内行 对吧 每个内行的就是一个制服串

10:29.100 --> 10:33.500
好 那么这里呢 也给他进行一下验证 首先不能为空啊 不能为空

10:34.220 --> 10:34.700
message

10:35.020 --> 10:39.420
电影内行不可以为空

10:40.540 --> 10:43.740
好 咱们来看一下这个验证啊 我们到这边来

10:44.620 --> 10:48.140
呃 这个名字已经搞定了 我们来看一下内行taps

10:48.940 --> 10:54.780
啊 如果不给他复职 肯定是验证通不过 这个比毫无疑问 我们来看一下吧 不给他复职 肯定是验证通不过的

10:55.500 --> 11:01.900
啊 电影内行不可以为空 然后呢 我们该写上内行复职 复职为一个空数主 我们来看一下啊

11:02.860 --> 11:03.340
保存

11:04.620 --> 11:08.460
好 你会发现空数主呢 他是能够通过验证的

11:09.180 --> 11:14.940
这是不是我们想要的 不是 对吧 空数主我们也希望他不能通过验证

11:15.580 --> 11:20.780
好 那么这个时候怎么处理呢 由于这个东西他只能验证啊 你没有复职的情况

11:21.260 --> 11:25.900
那我们要得到空数主 我们可以使用另外一个啊 我们来看一下这个行不行

11:26.620 --> 11:33.980
这个叫做minnance最小长度啊 最小长度 最小长度为1

11:34.780 --> 11:36.380
然后给他设置个message

11:38.060 --> 11:38.300
呃

11:40.220 --> 11:46.060
同样的错误消息吧 我们同样的错误消息 我们现在可以先暂时用不一样的电影内行

11:47.180 --> 11:49.980
至少有一个啊 至少得有一个

11:50.780 --> 11:54.860
好 写好之后呢 我们来看一下啊 看一下这边 我们来打开看一下

11:55.660 --> 12:00.460
啊 你会发现他现在呢验证呢已经通不过了啊 电影内行至少得有一个

12:01.340 --> 12:06.620
好 真的是这样子吗 我们来试一下啊 我们在这里边给他加一个电影内行 比方说喜剧

12:07.580 --> 12:10.620
加一个 那现在应该验证通过了 对吧 我们来看一下保存

12:11.900 --> 12:17.500
你会发现他仍然有错误啊 仍然有错误 那么这这是怎么回事呢

12:17.900 --> 12:23.100
其实你看一下他的官方文档 看一下这class validator的官方文档 他说的很清楚

12:23.660 --> 12:29.660
这个minnance啊 其实你指着他已经发现了啊 指着他已经发现了 他说

12:30.700 --> 12:35.980
嗯 他他判断的是啥 判断的是一个制幅串的长度 是不是

12:37.100 --> 12:45.020
比你给的数字小啊 判断的是制幅串的长度 注意啊 是判断制幅串的长度 那如果是你要判断

12:45.980 --> 12:46.940
那个就是

12:47.900 --> 12:56.140
数组怎么办呢 数组怎么办呢 你要用另外一个啊 耳锐min size啊 耳锐min size

12:56.860 --> 13:03.820
数组的最小长度尾一啊 最小长度尾一应该用这个啊 好 我们这里把负责一下

13:04.220 --> 13:10.380
放过来 就不能用这个minnance啊minnance判断制幅串的 好 保存一下 我们这里看一下啊

13:11.100 --> 13:15.500
好 那现在就没有错误了 如果这个数组里面尾空

13:16.540 --> 13:22.860
看一下 至少也有一个 我们再加上 再看一下

13:23.980 --> 13:26.860
就没有错误了 OK啊 这是这里的判断

13:27.500 --> 13:31.980
好 我们继续来啊 继续来 那这个东西搞定了 下一个啊 下一个地区

13:32.700 --> 13:36.860
啊 地区这里是不是也是一样的 对不对 复制一下啊 地区这里

13:37.500 --> 13:44.300
arrear 啊arrear地区 它也是一个制步设数组 那么这里呢啊 上上应

13:45.660 --> 13:51.340
上应地区不可以尾空 那这里下面也是一样啊 上应地区至少得有一个

13:52.140 --> 13:58.300
好 这这个属性 再来 时长 时长是啥啊 时长

13:59.180 --> 14:00.540
时长是啊

14:01.500 --> 14:07.020
我们用time-down啊 表示电影的播放时长 它是一个数字 对吧 它是一个数字

14:07.580 --> 14:10.540
那么它又哪些验证规则呢 还是一样啊 不能尾空

14:11.260 --> 14:14.380
首先不能尾空 时长不可以尾空

14:15.500 --> 14:20.780
时长不可以尾空 你可能觉得这样子 学习来很繁琐 但是你想一想

14:21.020 --> 14:26.860
如果你 这里不写的话 将来在另外一个地方去写验证 更加繁琐 更加恐怖

14:27.580 --> 14:32.460
所以说 这里的繁数呢 这里的花费的时间是完全值得的 是完全值得的

14:33.260 --> 14:39.100
好 这里时长不可以尾空 并且的时长 它能不能是小数啊 我们已经精确到分钟了

14:39.100 --> 14:43.740
所以说不能是小数 因此呢 我们这里给大家加这么个验证规则啊 叫意思

14:44.380 --> 14:45.980
印子啊 意思印子

14:46.700 --> 14:47.900
啊 它必须是一个整数

14:48.860 --> 14:54.220
如果它不是整数的话 给它个错误消息啊 时长必须是整数

14:55.180 --> 14:56.220
啊 必须是整数

14:57.500 --> 15:02.780
好了 时长这也搞定了啊 时长这里也搞定了 那么我们继续来啊

15:03.740 --> 15:07.500
看一下时长还有什么 还有个最小值 对吧 还有个最小值命

15:08.540 --> 15:09.660
时长的最小值

15:11.740 --> 15:17.420
一分钟得有吧 一分钟得有吧 一分钟啊 给它个错误消息

15:18.380 --> 15:19.420
Message

15:20.540 --> 15:24.140
啊 这是时长最小一分钟

15:25.740 --> 15:27.580
然后还有个最大值 最大值

15:28.380 --> 15:29.500
哎 最大值就算了

15:30.140 --> 15:34.940
最大值就算了 还是给个最大值吧 不然它可能会给你一些非常夸张的值

15:35.660 --> 15:36.700
呃 最大值的话

15:38.060 --> 15:39.180
1800分钟吧

15:39.740 --> 15:41.980
多少小时啊 30个小时

15:43.420 --> 15:44.940
啊 我们再来再多一点吧

15:47.380 --> 15:49.060
这样子吧 给一个

15:49.860 --> 15:53.140
已经算是非常夸张的数字了啊 你不要超过这个值就行了

15:54.660 --> 15:55.140
时长

15:56.580 --> 15:57.700
时长过长

15:58.500 --> 16:02.340
如果你超过这个值啊 验证错误过后呢 我给你提示啊 时长过长

16:03.220 --> 16:08.900
好 这是时长对时长的验证啊 你看现在验证了啊 已经出了很多的验证错误了 对吧

16:09.140 --> 16:11.060
时长这些验证错误都出现了

16:11.460 --> 16:13.220
好 先增正啊 先增正

16:14.020 --> 16:16.580
然后呢 再来看啊 下面还有三个属性

16:17.140 --> 16:22.500
正在热印即将上映 经典影片 那么每一个属性呢 它有两种状态

16:23.300 --> 16:24.260
没有和有

16:25.060 --> 16:25.780
到什么类型

16:26.500 --> 16:31.380
是布尔类型对吧 好 那这里下面三三个属性呢 就非常好写了 一个是

16:32.020 --> 16:32.180
呃

16:32.900 --> 16:33.620
is hot

16:35.220 --> 16:35.620
不利

16:36.340 --> 16:42.100
啊 表示的是是否啊 是否在热印啊 是否在热印中 那么我们这里给它加上一个

16:42.500 --> 16:44.340
is is not empty

16:44.740 --> 16:45.860
is not empty

16:49.180 --> 16:51.420
上就是是否热印

16:52.780 --> 16:53.820
不可以为空

16:54.780 --> 16:58.380
好 加上这个 好一次我们来写 剩下的三个属性

16:59.580 --> 17:00.540
好 这是意思

17:01.340 --> 17:02.060
come in

17:02.060 --> 17:03.660
是否即将上映啊

17:04.140 --> 17:05.500
是否即将上映

17:05.980 --> 17:06.940
即将上映

17:08.940 --> 17:10.700
好 下边这个是 is

17:11.420 --> 17:12.220
classic

17:13.500 --> 17:15.020
是否是经典影片

17:15.260 --> 17:16.140
是否是

17:16.700 --> 17:19.580
经典影片不可以为空

17:20.780 --> 17:23.340
好 这三个属性写完 还有啥呢

17:24.140 --> 17:24.700
还有啥

17:25.260 --> 17:26.380
好像就没啥了啊

17:27.260 --> 17:28.460
我看一下基本信息里边

17:29.100 --> 17:30.220
好像就没啥了啊

17:31.020 --> 17:32.060
还有一个简介

17:32.300 --> 17:33.420
啊 简介来吧啊

17:33.660 --> 17:34.380
那个简介

17:34.940 --> 17:35.820
public

17:36.300 --> 17:38.620
啊 简介是可以为空的啊 description

17:39.340 --> 17:39.980
简介

17:40.300 --> 17:41.340
简介可以为空

17:41.340 --> 17:42.220
所以说呢

17:42.220 --> 17:44.140
我这里呢就不强制要求了啊

17:44.140 --> 17:45.340
就不强制要求了

17:45.900 --> 17:47.420
甚至呢你可以在这里打个问号

17:47.420 --> 17:48.780
表示这里是可选的啊

17:48.780 --> 17:50.300
表示这里是可选的啊

17:50.300 --> 17:50.780
都可以

17:51.500 --> 17:53.260
好 这是关于简介

17:54.140 --> 17:55.180
好 还有啥呢

17:56.460 --> 17:57.660
还有啥就没啥了啊

17:57.660 --> 17:58.460
还有一个图片

17:58.460 --> 17:59.580
海报图啊

17:59.580 --> 18:00.140
海报图

18:01.500 --> 18:02.700
public poster

18:03.100 --> 18:03.420
啊

18:03.980 --> 18:04.700
电影的图片

18:05.180 --> 18:05.980
是一个制服串

18:06.620 --> 18:08.140
海报图的话

18:08.620 --> 18:09.580
我想想啊

18:09.580 --> 18:10.460
可不可以为空

18:10.940 --> 18:13.020
如果可以为空的话

18:13.020 --> 18:15.180
我们可以给他一个默认图片对吧

18:15.180 --> 18:16.300
可以给他一个默认图片

18:16.860 --> 18:17.660
如果有空的话

18:17.660 --> 18:19.100
可以给给个默认图片

18:19.100 --> 18:20.140
那么这里可以为空吧

18:20.940 --> 18:21.740
可以为空

18:21.740 --> 18:22.860
这是海报图

18:22.860 --> 18:25.100
当然那你可以给每一个属性的打上一个注释

18:25.660 --> 18:27.100
可以给每个属性打上注释

18:27.100 --> 18:28.860
来标注每个属性的意思

18:28.860 --> 18:29.820
我这里不做了啊

18:30.380 --> 18:31.900
因为一个单词命名好的话

18:31.900 --> 18:32.700
也知道什么意思

18:33.260 --> 18:34.700
包括这里有这个

18:35.260 --> 18:36.460
装饰器上面有文字

18:36.540 --> 18:38.140
也可以提示你这个属性啥意思

18:39.100 --> 18:40.300
好写好之后呢

18:40.300 --> 18:42.140
我们在这里去测试一下啊

18:42.140 --> 18:42.780
测试一下

18:43.740 --> 18:44.300
然后呢

18:44.300 --> 18:46.540
比方说给他收置一些地区啊

18:46.540 --> 18:47.900
地区中国大陆

18:49.260 --> 18:49.660
然后呢

18:49.660 --> 18:51.500
还有什么还有什么属性啊

18:51.500 --> 18:52.220
还有

18:52.220 --> 18:53.260
is classic

18:53.740 --> 18:54.460
is classic

18:55.260 --> 18:56.380
我的单词写对没有啊

18:57.100 --> 18:58.780
is classic好像那个单词写的

18:59.580 --> 19:00.380
好像不太对啊

19:00.860 --> 19:02.300
好像这里要加个s啊

19:02.300 --> 19:03.100
这个s

19:03.100 --> 19:03.900
其实这些属性呢

19:03.900 --> 19:05.340
可以给他付一个默认字

19:05.420 --> 19:06.940
可以给他付一个默认字

19:06.940 --> 19:08.380
比方说都是force

19:08.380 --> 19:09.340
啊都是force

19:10.700 --> 19:12.620
啊这里给他付一个默认字

19:12.620 --> 19:14.140
哎不对啊这上面

19:14.860 --> 19:16.060
默认情况啊都是force

19:17.420 --> 19:18.700
好那么这三个属性呢

19:18.700 --> 19:19.580
我可以不设置啊

19:19.580 --> 19:20.780
也可以把它设置为粗

19:20.780 --> 19:21.260
都可以

19:22.300 --> 19:23.100
然后还有啥呢

19:23.660 --> 19:24.300
还有啥

19:24.300 --> 19:25.420
poster可以不写啊

19:25.420 --> 19:26.540
descript可以不写

19:26.540 --> 19:27.420
好咱们来看一下

19:27.420 --> 19:28.460
验证试捧通过

19:28.460 --> 19:29.100
保存一下

19:31.180 --> 19:32.780
好现在是有时长啊

19:32.780 --> 19:33.980
时长验证没有通过

19:33.980 --> 19:35.260
好我们给他写上时长

19:35.500 --> 19:36.060
Time now

19:36.700 --> 19:37.100
时长

19:37.660 --> 19:39.100
时长的话比方说我写上0

19:40.780 --> 19:41.340
保存一下

19:42.300 --> 19:43.980
好时长最小一分钟

19:43.980 --> 19:45.340
ok那么我们写上2

19:47.640 --> 19:48.520
好验证通过了

19:49.320 --> 19:50.840
好其实我们花了多少时间呢

19:50.840 --> 19:51.800
没有花多少时间

19:51.800 --> 19:53.800
也就是配置了一下验证规则

19:53.800 --> 19:55.320
具体的验证方式呢

19:55.320 --> 19:56.360
它可以帮我们搞定

19:56.920 --> 19:58.760
好有了这样的验证规则之后呢

19:58.760 --> 20:00.280
咱们后边做系统的时候

20:00.280 --> 20:02.680
你安全感都要好很多对吧

20:02.680 --> 20:04.120
我们写代码的时候

20:04.120 --> 20:05.800
后边你能够信任

20:05.800 --> 20:06.680
你得到了数据

20:06.840 --> 20:08.120
因为经过了验证

20:08.120 --> 20:09.960
如果没有这个验证框架

20:09.960 --> 20:11.400
没有这个验证库的话

20:11.400 --> 20:13.560
你写起来新面都是悬的对不对

20:13.560 --> 20:14.520
所以我们首先呢

20:14.520 --> 20:16.920
把这个验证功能先给他搞定

20:16.920 --> 20:18.600
好搞定了验证功能之后呢

20:18.600 --> 20:19.960
我们再说后边的事情

20:19.960 --> 20:20.600
好吧

20:20.600 --> 20:22.600
好那么这里可能就到这里了

20:22.600 --> 20:23.080
拜拜

