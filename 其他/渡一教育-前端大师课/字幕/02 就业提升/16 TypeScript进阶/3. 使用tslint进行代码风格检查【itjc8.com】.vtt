WEBVTT

00:00.050 --> 00:04.850
好 这些课呢 我们在具体的做开发之前呢

00:04.850 --> 00:07.850
我们先来讲一个东西叫做

00:08.850 --> 00:10.850
ES Nint

00:10.850 --> 00:11.850
ES Nint

00:11.850 --> 00:14.850
这个东西呢 跟TS Nint

00:14.850 --> 00:18.850
它和ES Nint呢 差不多

00:18.850 --> 00:20.850
相似

00:20.850 --> 00:23.850
用于什么呢 是用于

00:23.850 --> 00:25.850
检查

00:25.850 --> 00:27.850
代码风格的

00:28.450 --> 00:31.450
就是说我们有的时候呢 编写程序啊

00:31.450 --> 00:34.450
不是说你把它运行出来就完事了

00:34.450 --> 00:38.450
我们要的我们编写的程序呢 是给人看的 是给人阅读的

00:38.450 --> 00:40.450
因此呢 我们在编写程序的时候呢

00:40.450 --> 00:44.450
一些命名规范啊 一些代码格式啊等等啊

00:44.450 --> 00:46.450
我们要满足一定的风格

00:46.450 --> 00:49.450
这个风格呢 不同公司有不同的要求

00:49.450 --> 00:52.450
所以说我们ES Nint之前大家应该接触过对吧

00:52.450 --> 00:56.450
接触过这么一个东西啊 就是来检查介石的代码风格的

00:56.850 --> 00:59.450
那我们的TS呢 TypeScript呢

00:59.450 --> 01:03.450
它也有它的代码风格检测器啊 就是TS Nint

01:03.450 --> 01:06.450
要用这个东西呢 其实非常非常简单啊

01:06.450 --> 01:09.450
因为我这里想到了就把它加进来讲

01:09.450 --> 01:11.450
不然的话我就真不知道什么时候讲了

01:11.450 --> 01:13.450
好 我把这个东西

01:13.450 --> 01:15.450
我们把在服务端里边去安装

01:15.450 --> 01:19.450
然后呢 让它去检测我们服务端的TS代码

01:19.450 --> 01:23.450
好 这个玩意呢 我们安装一下啊 非常非常简单

01:23.450 --> 01:28.450
然后我们这里找到服务器端啊 注意目录啊 找到这个服务器端

01:28.450 --> 01:32.450
然后我们安装一下啊 用这个ER ADD

01:32.450 --> 01:36.450
呃 横杠地 安装一下这个TS Nint

01:36.450 --> 01:38.450
由于它依赖TypeScript

01:38.450 --> 01:41.450
所以说我们这里还要安装TypeScript

01:41.450 --> 01:43.450
两个都安装

01:43.450 --> 01:45.450
稍微等一下啊

01:46.450 --> 01:50.450
安装完成之后呢 我们就可以去来配 做一些配置

01:50.450 --> 01:53.450
然后我们对我们的风格 代码风格呢 进行检查

01:53.450 --> 01:57.450
呃 关于配置的话 大家可以去参与它的官方文档啊

01:57.450 --> 02:00.450
它的官方文档 就是这个

02:00.450 --> 02:03.450
啊 这里 关闭啊

02:03.450 --> 02:06.890
这个关闭掉

02:06.890 --> 02:08.890
这个官方文档里边呢 它就有说到了啊

02:08.890 --> 02:11.890
首先它怎么安装 怎么开始使用啊 都说到了

02:11.890 --> 02:13.890
那么这里呢 有一个ROOS

02:13.890 --> 02:16.890
就它的规则 这里面有很多很多的规则啊

02:16.890 --> 02:19.890
大家呀 可以去看一下 我讲的话 肯定不会

02:20.890 --> 02:22.890
没有这个意义啊 没有什么意义

02:22.890 --> 02:25.890
我只是说一下啊 有这么一个官方文档 大家可以去看一下

02:25.890 --> 02:28.890
我这里安装好了之后呢 怎么来用它呢

02:28.890 --> 02:30.890
首先呢 我要生成一个配置文件

02:30.890 --> 02:32.890
要生成这么一个配置文件

02:32.890 --> 02:34.890
生成配置文件的方式呢 是使用啊

02:34.890 --> 02:36.890
TS Nint这个命令

02:36.890 --> 02:39.890
这个命令呢 由于我不是全具安装啊

02:39.890 --> 02:41.890
我们之前好多命令都是全具安装对吧

02:41.890 --> 02:43.890
那么现在呢 这个命令呢

02:43.890 --> 02:45.890
它不是全具安装的

02:45.890 --> 02:49.890
我这个命令呢 要使用NTX来执行

02:49.890 --> 02:51.890
好 执行这个命令呢

02:51.890 --> 02:54.890
然后给它加上一个参数 两个横杆

02:54.890 --> 02:56.890
表示初始化

02:56.890 --> 02:59.890
初始化呢 其实它就是帮我们生成这么一个文件

02:59.890 --> 03:01.890
这个配置文件

03:01.890 --> 03:04.890
好 这个配置文件里边呢 它有一些配置啊

03:04.890 --> 03:06.890
有一些配置 这些配置呢 我们指着它

03:06.890 --> 03:08.890
发现没有智能提示

03:08.890 --> 03:10.890
我们自己写这个配置的时候呢

03:10.890 --> 03:12.890
也没有什么智能提示

03:12.890 --> 03:16.890
这里呢 我推荐给大家安装一个VSCode的插件

03:16.890 --> 03:20.890
这些插件呢 可以帮助我们来编写这个配置文件

03:20.890 --> 03:22.890
好 这个插件的名字

03:22.890 --> 03:24.890
就叫做TS Nint

03:24.890 --> 03:26.890
就叫做TS Nint

03:26.890 --> 03:28.890
就第二个 加上那个新新的

03:28.890 --> 03:31.890
把安装就行了 安装

03:31.890 --> 03:33.890
好 安装完成

03:33.890 --> 03:36.890
安装完成之后呢 我们再看一下这个配置文件啊

03:36.890 --> 03:38.890
我们指着它的时候 你看 是不是有提示了

03:38.890 --> 03:40.890
这配置文件里边 每个配置干嘛用的

03:40.890 --> 03:41.890
它就有提示了啊

03:41.890 --> 03:44.890
第一个配置呢 它告诉我们说

03:44.890 --> 03:47.890
默认的 就是如果发生了问题啊

03:47.890 --> 03:49.890
如果检测没有通过的话

03:49.890 --> 03:53.890
默认的 就是危险级别应该是什么

03:53.890 --> 03:55.890
默认的危险级别应该是什么

03:55.890 --> 03:58.890
它默认的就是error 表示报错 报一个错误

03:58.890 --> 04:00.890
下边这个是继承

04:00.890 --> 04:03.890
表示这个配置文件呢 它可以继承其他的配置

04:03.890 --> 04:06.890
就是 如果以书写的其他的配置文件的话

04:06.890 --> 04:07.890
可以写到这个书组里边

04:07.890 --> 04:09.890
表示这个配置文件 继承其他的配置

04:10.890 --> 04:13.890
这里呢 它写的一个 就是默认的TS领程配置

04:13.890 --> 04:16.890
叫recommended 表示的是推荐的配置

04:16.890 --> 04:18.890
它继承了推荐的配置

04:18.890 --> 04:21.890
然后下边这个呢 是配置的是GS的规则

04:21.890 --> 04:23.890
GS的检查规则 它说

04:23.890 --> 04:29.890
你这里的规则配置的过程呢 会用于检查GS的文件

04:29.890 --> 04:32.890
好 下面这个配置呢 就是检查的是TS文件

04:32.890 --> 04:36.890
它会检查TS和TSX的文件

04:36.890 --> 04:39.890
好 于是呢 我们主要的规则都是写到这里边

04:39.890 --> 04:41.890
主要的规则都写到这里边

04:41.890 --> 04:43.890
这里边可以写哪些规则呢

04:43.890 --> 04:45.890
可以写我们这里

04:45.890 --> 04:47.890
你看 这些规则在这里面去找

04:47.890 --> 04:49.890
各种各样的规则 你可以进行配置

04:49.890 --> 04:52.890
这些规则呢 每一个规则都有一个默认值

04:53.890 --> 04:56.890
好 下面这个配置 下面这个配置呢 是指的是

04:56.890 --> 05:00.890
还有哪些规则 还有哪些规则是放到其他目录的

05:00.890 --> 05:02.890
那么你可以在这里进行配置

05:02.890 --> 05:04.890
我们主要呢 就配置这

05:04.890 --> 05:08.890
主要是配置这 比方说吧 我们就随便写个配置吧

05:10.890 --> 05:13.890
比方说啊 这个 我记得有这么一个配置

05:13.890 --> 05:15.890
no empty

05:15.890 --> 05:18.890
表示呢 把这个配置开启过后呢

05:18.890 --> 05:20.890
表示呢 它不允许出现空的块

05:20.890 --> 05:22.890
不允许出现空的块

05:22.890 --> 05:24.890
什么叫空的块呢

05:24.890 --> 05:26.890
先不管 先不管 下面的报处

05:26.890 --> 05:28.890
比方说 我们这里

05:29.890 --> 05:30.890
这就是个空的块

05:30.890 --> 05:32.890
你看这个判断里边 啥都没写

05:32.890 --> 05:35.890
啥都没写 它说这个block 这个块呢 是空的

05:35.890 --> 05:37.890
它认为这个代码呢 没什么意义

05:37.890 --> 05:40.890
就是类似于这种风格检查

05:40.890 --> 05:42.890
而前面出了什么问题呢

05:42.890 --> 05:44.890
前面这里的问题呢 是指的是

05:44.890 --> 05:48.890
它说内形呢 和这个帽号之间

05:48.890 --> 05:51.890
内形和帽号之间 应该给一个空格

05:51.890 --> 05:53.890
应该给一个空格

05:53.890 --> 05:54.890
它是有这么一个检查

05:54.890 --> 05:56.890
其实我这里 只要代码格式化一下

05:56.890 --> 05:58.890
把空格加上就完事了

05:58.890 --> 05:59.890
空格加上就完事了

05:59.890 --> 06:01.890
那么下面我把它删除掉

06:01.890 --> 06:02.890
然后这里也报错了

06:02.890 --> 06:04.890
不是报错 就是报错

06:04.890 --> 06:06.890
就是风格 这个绿色的下滑线

06:06.890 --> 06:10.890
波浪线表示 风格没有检查 没有通过

06:10.890 --> 06:13.890
它说什么呢 它说

06:13.890 --> 06:16.890
不允许你使用输出语句

06:16.890 --> 06:18.890
不允许你使用输出语句

06:18.890 --> 06:21.890
相关的配置像是no console

06:21.890 --> 06:24.890
如果你像我们开发中 经常会使用输出语句

06:24.890 --> 06:26.890
对吧 我们可以这样子

06:26.890 --> 06:29.890
像这个配置呢 我们经常是这样子处理的

06:29.890 --> 06:33.890
先把它关闭

06:33.890 --> 06:36.890
关闭了之后 我们 把它关了 重新打开

06:36.890 --> 06:38.890
关闭之后 我们输写代码

06:38.890 --> 06:40.890
输写代码 输写完了之后

06:40.890 --> 06:42.890
我们的工程已经完成之后了

06:42.890 --> 06:43.890
我再把它开启

06:43.890 --> 06:45.890
我再把这个配置开启

06:45.890 --> 06:47.890
开启之后 它就会提示我

06:47.890 --> 06:50.890
提示我哪里出了一些问题

06:50.890 --> 06:51.890
哪里出了问题

06:51.890 --> 06:52.890
它就会提示我

06:52.890 --> 06:55.890
提示我之后 我们把这些问题更改掉就行了

06:55.890 --> 06:58.890
OK 我们这里先把它关闭

06:59.890 --> 07:01.890
大概讲一下这个TSLint

07:01.890 --> 07:04.890
更多的关于TSLint的配置

07:04.890 --> 07:06.890
大家可以去参与这个文档

07:06.890 --> 07:08.890
这里面有很多很多

07:08.890 --> 07:09.890
可以进行的配置

07:09.890 --> 07:12.890
后边 如果我们开发过程中

07:12.890 --> 07:14.890
遇到了一些 比方说一些

07:14.890 --> 07:15.890
约束之类的东西

07:15.890 --> 07:17.890
我们可以进行相关的配置

07:17.890 --> 07:20.890
比方说 这个配置我觉得挺有意思的

07:20.890 --> 07:23.890
有这么一个配置 叫做interface

07:23.890 --> 07:25.890
我记得是interface开头的

07:25.890 --> 07:27.890
interface

07:30.200 --> 07:32.200
就这个玩意

07:32.200 --> 07:33.200
他指的是怎么意思呢

07:33.200 --> 07:36.200
他说 如果你开启了这个配置的话

07:36.200 --> 07:38.200
他要求每一个接口

07:38.200 --> 07:41.200
都应该以一个大写字母I开头

07:41.200 --> 07:43.200
其实这种风格是

07:43.200 --> 07:45.200
csharp这个语言的风格

07:45.200 --> 07:46.200
我们来看一下吧

07:46.200 --> 07:48.200
比方说我这里开启了这个配置

07:48.200 --> 07:50.200
我写了一个接口

07:50.200 --> 07:52.200
随便写个A

07:52.200 --> 07:54.200
这个A里面有很多问题

07:54.200 --> 07:55.200
它是空的块

07:55.200 --> 07:56.200
空的块肯定不行

07:56.200 --> 07:58.200
我们随便写个属性吧

07:59.200 --> 08:00.200
这样写了之后呢

08:00.200 --> 08:01.200
我们来看一下

08:01.200 --> 08:03.200
这个A他告诉我

08:03.200 --> 08:05.200
他必须

08:05.200 --> 08:06.200
必须是什么呢

08:06.200 --> 08:08.200
必须是一个大写字母I

08:08.200 --> 08:10.200
看到没 下面提示

08:10.200 --> 08:12.200
必须是一个大写字母I开头

08:12.200 --> 08:13.200
那么我们这里可以写一个

08:13.200 --> 08:15.200
I A

08:15.200 --> 08:17.200
然后继续爆错

08:17.200 --> 08:18.200
我们看一下

08:18.200 --> 08:19.200
又是什么问题的

08:19.200 --> 08:20.200
他现在说什么呢

08:20.200 --> 08:21.200
他又说的是

08:21.200 --> 08:24.200
你这个A也应该大写

08:24.200 --> 08:25.200
也应该大写

08:25.200 --> 08:26.200
这个风格其实是

08:26.200 --> 08:28.200
csharp语言的风格

08:28.200 --> 08:29.200
这一下语言的风格

08:29.200 --> 08:30.200
那么后边的暗词呢

08:30.200 --> 08:31.200
你可以随便

08:31.200 --> 08:32.200
头风命运法

08:32.200 --> 08:34.200
好 下面他又爆错

08:34.200 --> 08:35.200
下面又爆错

08:35.200 --> 08:36.200
他说

08:36.200 --> 08:37.200
这个语句呢

08:37.200 --> 08:39.200
应该以分号结尾

08:39.200 --> 08:41.200
这条语句应该以分号结尾

08:41.200 --> 08:44.200
你看 像这些细致末节的检查

08:44.200 --> 08:45.200
就是tsnint

08:45.200 --> 08:46.200
帮我们来做的

08:46.200 --> 08:47.200
好了 简单说一下

08:47.200 --> 08:49.200
这个tsnint

08:49.200 --> 08:51.200
好 我们把这个tsnint

08:51.200 --> 08:52.200
弄好了过后

08:52.200 --> 08:53.200
我们再来开始写单吧

08:53.200 --> 08:54.200
好吧 我们这一刻

08:54.200 --> 08:56.200
讲一个tsnint

