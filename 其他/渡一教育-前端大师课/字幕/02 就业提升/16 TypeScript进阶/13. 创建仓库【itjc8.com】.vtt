WEBVTT

00:00.750 --> 00:04.030
大家好 我是主义教育 微博全程讲师 元静

00:04.030 --> 00:07.230
我们这些课呢 继续来开发Redux

00:07.230 --> 00:11.830
上一课呢 我明明码码的写了这么多的代码啊 都没有去运行

00:11.830 --> 00:15.190
是因为上一课呢 还没有到测试的时候

00:15.190 --> 00:19.190
我们得把这个X型的Reducer写出来过后呢 再进行测试

00:19.190 --> 00:23.190
这里呢 我们上一课呢 已经写好了这个Reducer对吧

00:23.190 --> 00:27.190
X型也写好了 那么现在呢 我们把这些X型进行合并

00:27.670 --> 00:31.030
原来上去说 我这里只有一个X型 只有一个Reducer

00:31.030 --> 00:36.630
应该是把Reducer进行合并啊 只有一个Reducer合并啥呢 有什么好合并的呢

00:36.630 --> 00:40.990
但是我们考虑的问题呢 要考虑的长远一点啊 将来呢

00:40.990 --> 00:45.110
我们还有隐缘的Reducer对吧 还有用户的Reducer

00:45.110 --> 00:48.590
所以说各种各样的Reducer 我们把它进行合并之后呢

00:48.590 --> 00:53.670
产生一个根节点的Reducer 产生一个Reducer的根节点

00:53.710 --> 00:57.350
这也是我们之前啊 学习Reducer的时候的做法

00:57.350 --> 01:00.870
好 那么这里呢 我们还是想了深远一点啊

01:00.870 --> 01:04.750
不要偷懒 我们还是给它建立一个Reducer的根节点

01:04.750 --> 01:09.070
我们就在这个Reducer是这个文件夹下边 去新建这么一个文件

01:09.070 --> 01:14.430
给它取个名字叫做RootReducer 给它取这么一个名字

01:14.430 --> 01:20.390
那么做建立一个根节点的Reducer是非常非常简单的啊

01:20.430 --> 01:23.910
直接来就行了啊 export export

01:23.910 --> 01:29.190
然后呢 导出啊 给它取个名字叫RootReducer

01:29.190 --> 01:31.950
好 用什么样的方式呢 来创建一个

01:31.950 --> 01:36.630
把之前的Reducer来全部进行合并呢 就使用create

01:36.630 --> 01:40.150
应该叫做combine 对吧 combine 这里没有智能提示

01:40.150 --> 01:43.830
我们先把这个导入进来再说 先把这个dunk导入进来

01:43.830 --> 01:46.510
让它可以触发智能提示

01:46.510 --> 01:49.990
create 怎么老是create

01:50.030 --> 01:55.710
combine reducers 导入进来就行了啊 这就不要了

01:55.710 --> 01:59.830
好 然后呢 我们通过这个函数啊 来创来进行合并

01:59.830 --> 02:03.030
怎么合并呢 我们这里就可以把刚才我们

02:03.030 --> 02:06.510
使用的电影的Reducer导入进来啊

02:06.510 --> 02:10.910
movie reducer导入进来

02:10.910 --> 02:15.630
from movie reducer

02:15.630 --> 02:17.630
好 那么这边呢 我该完成复制啊

02:17.670 --> 02:22.630
movie 比如说movie 里边呢 使用这个movie reducer

02:22.630 --> 02:27.870
当然呢 也可以直接在这里写个movie 对吧 也可以 也没问题

02:27.870 --> 02:31.150
诶 这里报错啊 报错 我们看一下

02:31.150 --> 02:33.790
明白了 就是像这种错误啊

02:33.790 --> 02:36.470
如果在GS里面 他有没有可能可以报错

02:36.470 --> 02:38.510
他绝对不可能可以报错的

02:38.510 --> 02:40.590
这明明是我们代码写错了

02:40.590 --> 02:43.190
他的错误消息是说

02:43.190 --> 02:45.390
我这个Reducer啊 这个movie reducer

02:45.470 --> 02:47.110
他返回的是void

02:47.110 --> 02:50.030
他返回的是void 他说的是这么一个意思

02:50.030 --> 02:51.270
返回的是void

02:51.270 --> 02:53.070
那么我们检查一下之前的代码

02:53.070 --> 02:55.150
你看一下我们之前的movie reducer

02:55.150 --> 02:56.710
是不是没有返回啊

02:56.710 --> 02:58.430
之前上季课的时候 应该有同学啊

02:58.430 --> 03:01.910
这就是路播 路播不太好的地方就在这儿

03:01.910 --> 03:03.510
我没有办法给你们互动

03:03.510 --> 03:05.390
应该有同学已经看出来了啊

03:05.390 --> 03:06.910
我这里没有返回啊

03:06.910 --> 03:10.310
我应该在这里呢 把这些各种情况给他返回

03:10.350 --> 03:15.350
这里也是reducer 返回 复制一下吧

03:17.710 --> 03:19.630
根据他的不同的情况呢

03:19.630 --> 03:22.630
我们去调用函数 把函数的结果返回

03:22.630 --> 03:24.590
如果上面的都没有匹配到

03:24.590 --> 03:26.670
那么可能是影院的X型

03:26.670 --> 03:27.950
可能是其他的X型 对吧

03:27.950 --> 03:29.670
如果这些X型没匹配到的话

03:29.670 --> 03:31.830
那么默认情况下就返回

03:31.830 --> 03:33.990
当前对象就完事了

03:33.990 --> 03:36.230
当前的State就完事了

03:36.230 --> 03:38.590
这里把这个bug更改掉

03:38.590 --> 03:40.270
你看现在有TS过后

03:40.350 --> 03:42.190
他就会时时刻刻提醒我们

03:42.190 --> 03:44.430
哪个地方出了问题

03:44.430 --> 03:45.710
那么为什么他能提示呢

03:45.710 --> 03:47.510
因为这个combi reducer

03:47.510 --> 03:49.190
它是有内询系统的

03:49.190 --> 03:50.590
这个内询系统

03:50.590 --> 03:51.710
如果你看着老伙的话

03:51.710 --> 03:52.830
你可以不用去看它

03:52.830 --> 03:53.950
总之你清楚的知道

03:53.950 --> 03:55.310
它有内询系统就行了

03:55.310 --> 03:56.470
它进行了约束

03:56.470 --> 03:58.830
因此这里每一个属性呢

03:58.830 --> 04:01.870
它必须要符合满足格式的要求

04:01.870 --> 04:02.470
好吧

04:02.470 --> 04:03.070
那么这里呢

04:03.070 --> 04:06.470
我们把这些reducer进行联合 联合了起来

04:06.470 --> 04:08.190
联合起来之后呢

04:08.230 --> 04:11.230
就产生了这个reducer的根结点了

04:11.230 --> 04:13.350
然后我们这里去倾见一个仓库

04:14.350 --> 04:17.750
Stone 倾见一个仓库

04:17.750 --> 04:18.990
这里仓库的话

04:18.990 --> 04:20.350
怎么来倾见

04:20.350 --> 04:21.430
怎么来倾见一个仓库

04:21.430 --> 04:24.030
是不是craze导入进来

04:24.030 --> 04:26.510
先把这个redux导入进来

04:27.630 --> 04:28.830
怎么来创建仓库呢

04:28.830 --> 04:30.550
就是craze

04:32.030 --> 04:34.470
仓库创建是怎么创建的

04:34.470 --> 04:38.190
redux我们来看一下

04:38.190 --> 04:39.230
它的API一点忘了

04:40.310 --> 04:42.270
这里应该是create stone

04:42.270 --> 04:43.470
应该就写对了的

04:43.470 --> 04:44.830
应该是没有智能提示

04:44.830 --> 04:45.470
create stone

04:46.910 --> 04:47.830
它这里爆错的话

04:47.830 --> 04:49.470
我看一下它的错误

04:49.470 --> 04:51.470
它的标识符这个重复

04:51.470 --> 04:55.070
因为我这里的这个文件还没有把它做成一个模块

04:55.070 --> 04:56.110
还没把它做成一个模块

04:56.110 --> 04:57.270
所以说出了这个问题

04:57.270 --> 04:58.190
你把它做成模块的话

04:58.190 --> 04:59.550
就不会出问题了

04:59.550 --> 05:01.950
我们导出一个仓库

05:01.950 --> 05:03.270
导出一个仓库

05:03.270 --> 05:05.230
就导出一个default

05:05.230 --> 05:06.670
或者是不用default

05:06.670 --> 05:08.190
const stone

05:08.190 --> 05:09.310
导出一个仓库

05:09.350 --> 05:11.150
这个仓库呢通过在创建

05:11.150 --> 05:12.590
create stone来创建

05:12.590 --> 05:13.950
创建这么一个仓库

05:13.950 --> 05:17.150
这个仓库里面要传一个redux的根结点

05:17.150 --> 05:17.830
对吧

05:17.830 --> 05:20.110
那么导入这个route

05:20.110 --> 05:21.390
我们回来在这里写吧

05:21.390 --> 05:23.470
这里写应该有智能提示

05:23.470 --> 05:25.190
route reducer

05:25.190 --> 05:26.430
导入进来

05:26.430 --> 05:28.230
这里要导入进来

05:28.230 --> 05:34.030
route reducer from reducers

05:34.030 --> 05:35.230
route reducer

05:35.230 --> 05:35.830
把它扩起来

05:36.830 --> 05:42.020
route reducer

05:42.020 --> 05:42.780
导入进来

05:42.780 --> 05:44.820
看一下怎么回事呢

05:44.820 --> 05:46.940
它说route reducer重复

05:46.940 --> 05:48.820
我把这个应该是

05:48.820 --> 05:50.460
这里有个bug

05:50.460 --> 05:52.500
我把这个工具关了的重新打开一下

05:52.500 --> 05:55.220
这代码应该是没有错的

05:55.220 --> 05:57.940
好了

05:57.940 --> 05:59.140
OK

05:59.140 --> 06:01.740
那么现在我们创建了这么一个仓库

06:01.740 --> 06:03.780
根据reducer的根结点

06:03.780 --> 06:05.260
来创建了这么一个仓库

06:05.260 --> 06:06.700
创建好这个仓库之后

06:06.700 --> 06:09.340
那么我们前面就可以去测试了

06:09.540 --> 06:10.940
就可以去测试了

06:10.940 --> 06:11.220
好

06:11.220 --> 06:13.540
这边到了这个index里边来

06:13.540 --> 06:15.140
我们来测试一下这个仓库

06:15.140 --> 06:16.140
测试一下

06:16.140 --> 06:17.740
为了能够看到测试效果的话

06:17.740 --> 06:19.900
我这里可以用这种方式

06:19.900 --> 06:20.620
storm

06:20.620 --> 06:21.860
导入进来

06:21.860 --> 06:25.180
首先给它注册一个监听器

06:25.180 --> 06:28.260
当每一次状态发生变化的时候

06:28.260 --> 06:30.540
我们输出一下console log

06:30.540 --> 06:33.620
输出一下get state

06:33.620 --> 06:35.620
输出一下

06:35.620 --> 06:36.860
然后呢

06:36.860 --> 06:38.820
我们这里去改变一下状态吧

06:38.860 --> 06:41.140
比方说我们这里呢

06:41.140 --> 06:42.580
改变两次状态

06:42.580 --> 06:43.820
改变两次状态

06:43.820 --> 06:46.060
用dispatch来改变状态

06:46.060 --> 06:46.220
好

06:46.220 --> 06:47.380
我们可以通过

06:47.380 --> 06:50.500
x的创建函数来产生一个x

06:50.500 --> 06:53.100
比方说我们这里先产生这么一个x

06:54.780 --> 06:56.180
moviex

06:56.180 --> 06:57.500
找到这里面的创

06:57.500 --> 06:59.060
x创建函数

06:59.060 --> 07:01.140
set loading吧

07:01.140 --> 07:02.860
set loading这个简单一点

07:02.860 --> 07:04.540
把它设为去

07:04.540 --> 07:04.780
好

07:04.780 --> 07:05.980
咱们来看一下

07:05.980 --> 07:07.700
看一下我们dispatch过后

07:07.740 --> 07:09.820
状态会不会发生变化

07:09.820 --> 07:10.060
好

07:10.060 --> 07:12.020
咱们把它运行出来

07:12.020 --> 07:16.500
这里我们进入这个client

07:16.500 --> 07:19.260
然后使用npm start

07:19.260 --> 07:24.820
启动起来看一下

07:24.820 --> 07:28.800
运行出来了

07:28.800 --> 07:29.520
运行出来了

07:29.520 --> 07:31.160
咱们来看一下控制台

07:31.160 --> 07:32.560
控制台的状态

07:32.560 --> 07:33.400
它怎么变化的

07:35.120 --> 07:35.720
好

07:35.720 --> 07:36.800
现在我们打印出来了

07:36.800 --> 07:39.360
整个应用程序的就是状态

07:39.360 --> 07:40.360
我们看一下

07:40.360 --> 07:41.520
你看里面有个movie

07:41.520 --> 07:42.040
对吧

07:42.040 --> 07:43.440
这个movie是挂在哪的

07:43.440 --> 07:44.680
挂在根结点下面的

07:44.720 --> 07:45.920
movie属性里边的

07:45.920 --> 07:46.720
对不对

07:46.720 --> 07:47.360
好

07:47.360 --> 07:48.400
那么movie得到了

07:48.400 --> 07:49.840
movie里面有哪些东西呢

07:49.840 --> 07:50.920
你看这些数组

07:50.920 --> 07:51.480
对吧

07:51.480 --> 07:52.840
电影的数组是空的

07:52.840 --> 07:53.800
condition

07:53.800 --> 07:54.960
有默认值

07:54.960 --> 07:55.560
is loading

07:55.560 --> 07:57.080
你看是不是把它变成粗了

07:57.080 --> 07:57.480
对不对

07:57.480 --> 07:58.720
就把它变成粗了

07:58.720 --> 07:59.120
好

07:59.120 --> 07:59.480
接下来

07:59.480 --> 08:01.880
我们再来dispatch一个状态

08:01.880 --> 08:02.760
我们来测试一下

08:04.880 --> 08:06.640
下边我们再继续

08:06.640 --> 08:07.960
stom

08:07.960 --> 08:09.200
dispatch

08:09.200 --> 08:11.080
然后movie action

08:11.080 --> 08:11.800
movie action

08:11.800 --> 08:13.400
set condition

08:14.720 --> 08:16.640
你看现在有内容检查了

08:16.640 --> 08:17.760
那么这里面要传个啥

08:17.760 --> 08:19.080
传一个condition

08:19.080 --> 08:20.920
传一个condition的对象

08:20.920 --> 08:22.080
那么我们传递呗

08:22.080 --> 08:24.080
传递condition的对象

08:24.080 --> 08:25.760
condition条件

08:25.760 --> 08:27.160
它每一个地方都是可选的

08:27.160 --> 08:28.480
所以说它现在没爆错

08:28.480 --> 08:30.320
就它里边的属性是可以不写的

08:30.320 --> 08:31.800
可以不写这些属性的

08:31.800 --> 08:33.800
但是如果你乱写些属性的

08:33.800 --> 08:34.560
它是要爆错的

08:34.560 --> 08:36.760
你不能写些错误的属性

08:36.760 --> 08:37.000
好

08:37.000 --> 08:40.000
这里我们可以给它写一个Page

08:40.000 --> 08:41.800
Page设为2

08:41.800 --> 08:42.680
保存一下

08:42.680 --> 08:43.800
看一下

08:43.840 --> 08:44.960
第二次状态改变过后

08:44.960 --> 08:46.640
我们来看一下它的condition

08:46.640 --> 08:47.560
其他的不变

08:47.560 --> 08:48.560
Page变成了2

08:48.560 --> 08:49.000
对吧

08:49.000 --> 08:50.000
这都是正确的

08:50.000 --> 08:51.600
都是正确的

08:51.600 --> 08:52.120
好了

08:52.120 --> 08:54.200
那么其实我们这里的就是打印

08:54.200 --> 08:55.880
监听它状态的变化

08:55.880 --> 08:57.560
其实我们可以安装一个中间键

08:57.560 --> 08:57.760
对吧

08:57.760 --> 08:59.800
我们之前学习过Stom

08:59.800 --> 09:01.480
它里面可以安装一些中间键

09:01.480 --> 09:06.200
我们这里其实可以用中间键的方式来打印

09:06.200 --> 09:07.120
这中间键的名字

09:07.120 --> 09:08.760
大家应该都接触过

09:08.760 --> 09:10.120
我们用亚兰安装

09:10.120 --> 09:10.960
安装啥呢

09:10.960 --> 09:11.800
安装个中间键

09:11.800 --> 09:14.360
中间键的名字叫做Redux

09:14.360 --> 09:15.960
叫Local

09:15.960 --> 09:17.280
Local

09:17.280 --> 09:17.720
好

09:17.720 --> 09:21.300
安装

09:21.300 --> 09:22.260
安装好了之后

09:22.260 --> 09:24.420
我们创建仓库的时候

09:24.420 --> 09:27.100
就顺便把中间键给大家加进去

09:30.100 --> 09:31.460
稍等一下

09:31.460 --> 09:32.660
这个有点

09:33.940 --> 09:35.140
好

09:35.140 --> 09:36.060
安装好了

09:36.060 --> 09:36.820
安装好了过后

09:36.820 --> 09:40.900
这边我们把导入进来

09:40.900 --> 09:41.540
叫什么名字

09:41.540 --> 09:43.020
叫Redux

09:43.060 --> 09:43.580
Local

09:43.580 --> 09:44.900
把导入进来

09:44.900 --> 09:46.780
那么这个Local里边

09:46.780 --> 09:50.340
它有这么一个叫Creat

09:50.340 --> 09:50.820
不是

09:50.820 --> 09:51.780
它直接就是Local

09:51.780 --> 09:52.580
对吧

09:52.580 --> 09:54.300
Local

09:54.300 --> 09:55.540
Front

09:55.540 --> 09:56.620
它导入进来

09:56.620 --> 09:57.660
导入进来过后

09:57.660 --> 10:00.380
我们通过Local

10:00.380 --> 10:00.540
好

10:00.540 --> 10:01.660
这个是没有智能提示

10:01.660 --> 10:03.060
为什么没有智能提示呢

10:03.060 --> 10:06.260
是因为它是不是用TS写的

10:06.260 --> 10:07.620
它没有声明文件

10:07.620 --> 10:08.660
它不是用TS写的

10:08.660 --> 10:09.900
它没有声明文件

10:09.900 --> 10:11.060
因此对这一块

10:11.100 --> 10:13.380
我们可以安装一个这个东西

10:13.380 --> 10:14.580
ADD

10:14.580 --> 10:15.620
安装啥呢

10:15.620 --> 10:16.220
大家都见过了

10:16.220 --> 10:16.500
对吧

10:16.500 --> 10:17.420
Types

10:17.420 --> 10:19.340
然后找到Redux

10:19.340 --> 10:20.580
Local

10:20.580 --> 10:22.060
安装它的内容

10:22.060 --> 10:24.980
就这个中间键

10:24.980 --> 10:25.860
做的事情很简单

10:25.860 --> 10:28.900
就是把一些日字打印到控制台就完事了

10:30.260 --> 10:35.130
稍微等一下

10:35.130 --> 10:36.610
安装好了之后

10:36.610 --> 10:38.570
我们就可以获得智能提示了

10:38.570 --> 10:39.930
也获得了内容检查

10:41.170 --> 10:44.050
然后你现在去使用鼠标子的Local

10:44.050 --> 10:44.890
你看一下

10:44.890 --> 10:46.490
它就能识别出来了

10:46.490 --> 10:47.250
它是个啥呢

10:47.250 --> 10:48.610
它是一个Medware

10:48.610 --> 10:49.930
它本身就是个中间键的

10:49.930 --> 10:50.570
对吧

10:50.570 --> 10:52.970
那么我们就知道怎么用了

10:52.970 --> 10:54.370
因为它本身就是中间键

10:54.370 --> 10:57.610
所以说我们这里创建仓库的时候

10:57.610 --> 10:59.890
使用ApplyMedware

10:59.890 --> 11:01.530
你看都有智能提示的

11:01.530 --> 11:05.330
然后这里把Local传进去

11:05.330 --> 11:06.650
把Local传进去

11:06.650 --> 11:07.490
换个行吧

11:09.330 --> 11:09.970
再换个行

11:11.290 --> 11:14.010
这样子我们来创建这么一个仓库

11:14.890 --> 11:16.490
创建好了之后保存一下

11:16.490 --> 11:18.730
那么到了到这个index里面来

11:19.970 --> 11:21.810
像这里我们自己写的就不要了

11:21.810 --> 11:23.090
这个就不要了

11:23.090 --> 11:25.450
因为已经有日字系统了

11:25.450 --> 11:26.090
保存一下

11:26.090 --> 11:27.370
我们重新启动

11:27.370 --> 11:29.370
npm start

11:29.370 --> 11:30.170
重新启动一下

11:31.250 --> 11:40.170
看一下有没有日字记录

11:40.170 --> 11:44.860
稍微等一下

11:44.860 --> 11:47.020
一会发现现在已经有日字记录了

11:47.020 --> 11:48.860
已经有日字记录了

11:48.860 --> 11:51.660
首先我们第一课一开始调用了一个Action

11:51.660 --> 11:53.180
是Movie says loading

11:53.180 --> 11:54.740
你看之前的状态

11:54.740 --> 11:56.140
它可以打印出来

11:56.140 --> 11:58.220
is loading the way force

11:58.220 --> 12:00.140
然后我们传了一个Action进去

12:00.140 --> 12:02.860
Action的内容是Payloader

12:02.860 --> 12:03.740
we true

12:03.740 --> 12:05.940
然后NextStateState

12:05.940 --> 12:07.740
就是下一个状态变成了True

12:07.740 --> 12:10.460
你们可以自己去看一下

12:10.460 --> 12:11.740
就是有这么一个中间键

12:11.740 --> 12:15.500
可以通过它来产生日字记录

12:15.500 --> 12:16.220
好了

12:16.220 --> 12:17.820
那么这就可能就差不多了

12:17.820 --> 12:18.340
就到这了

12:18.340 --> 12:21.380
我们就是把这个Redux和Reducer

12:21.460 --> 12:22.980
把它使用起来

12:22.980 --> 12:23.220
好

12:23.220 --> 12:25.300
其实下节课我们还有一件事情要做

12:25.300 --> 12:26.820
大家应该都想到了

12:26.820 --> 12:28.180
还有什么事情要做呢

12:28.180 --> 12:29.820
还要处理异部的问题

12:29.820 --> 12:31.740
就处理副作用的问题

12:31.740 --> 12:33.340
那么处理副作用

12:33.340 --> 12:34.620
我们下节课再说吧

12:34.620 --> 12:35.220
好吧

12:35.220 --> 12:38.220
我们下节课来搞定副作用的问题

12:38.220 --> 12:38.460
好吧

12:38.460 --> 12:39.820
那么这也可到这里了

12:39.820 --> 12:42.620
大家下来把这个东西拿去测试一下

12:42.620 --> 12:43.260
测试一下

