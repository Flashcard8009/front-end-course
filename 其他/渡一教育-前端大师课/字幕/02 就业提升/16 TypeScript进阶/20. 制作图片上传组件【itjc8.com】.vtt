WEBVTT

00:00.750 --> 00:03.570
大家好 我是杜亦教育 微博学生 讲师 元静

00:04.070 --> 00:07.910
我们现在还剩下什么呢 还剩下添加电影

00:08.430 --> 00:09.970
和修改电影 对吧

00:10.470 --> 00:13.550
无论是添加电影 还是修改电影啊

00:13.810 --> 00:14.830
我们在这边啊

00:15.090 --> 00:16.870
无论是添加电影 还是修改电影

00:17.130 --> 00:18.930
其实他的表单呢 都是一样的

00:19.430 --> 00:23.530
因此呢 我们到时候呢 打算把它做成一个统一的逐渐

00:23.790 --> 00:26.090
就整个表单 把它做成一个统一的逐渐

00:26.350 --> 00:30.450
就完事了 那么添加电影可以用 修改电影了也可以用

00:31.210 --> 00:33.770
但是这一块呢 表单东西还是蛮多的啊

00:34.030 --> 00:37.370
表单里边设计到一个问题啊 设计到一个东西就是

00:38.130 --> 00:39.150
图片的上传

00:39.670 --> 00:42.470
无论是修改还是添加

00:42.730 --> 00:44.790
他都会设计到这个上传图片

00:45.550 --> 00:50.670
我们这里呢 打算把这个上传图片这一块呢 给它封装一下啊 封装成一个组件

00:51.190 --> 00:54.770
于是呢 我们这节课呢 我们先不着急去做这个表单啊

00:55.030 --> 00:59.890
我们先把这个上传图片这个组件给他做好啊 就这个上传图片的组件

01:00.350 --> 01:04.970
在nd里边呢 他有这么一个东西啊 他有这么一个上传组件

01:05.230 --> 01:08.550
只不过呢 他这个上传组件呢 可能跟我们的需求呢

01:09.310 --> 01:16.750
还是有一点差异 所以说呢 我们这里把它封装一下啊 封装成一个我们自己的组件 专门来实现图片的上传

01:17.670 --> 01:23.990
好 这里呢 我们就在这个Client里边啊 找到这个src啊 在这里边 给他建一个文件

01:24.350 --> 01:26.110
给他取个名字叫做img

01:26.710 --> 01:27.430
uploader

01:28.410 --> 01:33.810
专门来处理图片上传的这么一个东西 把它统一的封装一下 后边用起来那就比较简单了啊

01:35.050 --> 01:36.050
嗯 导出一个内

01:37.010 --> 01:37.570
it's tend

01:38.610 --> 01:39.210
react

01:41.850 --> 01:48.930
好 这个是一个图片上传的这么一个主线 好 这个主线呢 我们要首先要使用到啊react

01:49.370 --> 01:50.570
首先要使用到react

01:52.370 --> 01:52.770
react

01:53.770 --> 01:54.450
导入进来

01:56.130 --> 01:57.090
什么问题 我看一下啊

01:58.410 --> 02:01.210
他说什么 标识符react重复

02:02.010 --> 02:09.850
这有啥问题 一个模块不能有多个默认导出 这里应该又是这个编辑器的bug啊 把关掉重新打开

02:14.660 --> 02:15.380
啊 重新打开

02:16.220 --> 02:21.900
好了 应该就没问题了啊 那这里我又得重新去进入那个src文件夹 把服务器运行起来

02:22.900 --> 02:24.500
编辑器还有时候会出这个bug

02:25.940 --> 02:30.300
啊 这里进入Client文件夹 然后运行起来

02:31.780 --> 02:37.140
好 这个组件怎么做呢 我们就是 其实这个组件啊 就是把这个东西封装一下

02:37.900 --> 02:46.100
关于这个商船组件呢 如果你之前用过nd的话 我觉得应该是接触过的啊 就算你没有接触 也没关系啊 我们这几课就来看一下他怎么来使用

02:46.980 --> 02:50.220
嗯 这个组件里边呢 我们可以选择嘛 他下面有一些势力

02:50.780 --> 02:55.940
可以选择一个 我们自己觉得比较可以的势力 照到他来做就行了

02:56.760 --> 03:05.680
不要说我们选择这个吧 选择这个好吧 我选择这个照片墙这么一个势力 我们把这个东西实现啊 可以预兰啊 可以预兰可以删除

03:06.520 --> 03:11.160
啊 然后添加的话 他这个照片墙的话 他这里我看一下 默认是加几张

03:11.920 --> 03:20.800
他是加几张图片我看一下啊 他是加三张图片 三张图片加了过后呢 就不能再加了 那我们这里呢只加一张啊 只能加一张图片

03:21.420 --> 03:23.580
好 我们来实现这么一个功能啊 实现这么一个功能

03:24.180 --> 03:31.780
好 首先呢 我们要用到这个组件啊 我们看一下他的代码是什么格式 其他的代码也很简单的啊 一共就用到这么三个组件

03:32.260 --> 03:40.420
upload icon和model 对吧 一共用到这么三个组件 其实我们这里就直接把个代码复制一下不完那么对吧 复制一下

03:41.820 --> 03:44.620
啊 算了 算了 我们还是一点点做吧 一点点做

03:45.400 --> 03:47.440
嗯 这里呢 我们先导出啊 云道

03:48.800 --> 03:51.600
先导出 先测试一下啊 这个组件

03:52.600 --> 03:53.080
导出

03:55.320 --> 03:59.600
呃 测试一下 水面先先水面写一个 图片上传

04:00.960 --> 04:06.760
然后去在home里边啊 水面找个印面啊 我们先测试一下 就在这吧 就在这我们注射掉

04:07.700 --> 04:14.900
啊 然后这里导出一个啊 导出一个就是emguploader啊 把这个组件导入进来

04:15.580 --> 04:19.740
好 来测试一下啊 一边做一边测试 哎 这要启动起来

04:24.010 --> 04:30.890
好 一边做一边测试 好 这里呢 图片上传呢 我们看一下能不能显示出来啊 先看一下这个组件能不能正常显示出来

04:32.610 --> 04:33.290
稍微等一下啊

04:34.270 --> 04:43.230
呃 我们用到的也就是这个uploader 其实这个组件用起来很简单 下面有一些api啊 它东西也不多 稍微配置一下也就差不多了啊 也就差不多了

04:46.190 --> 04:50.350
嗯 怎么回事 我们看一下 爆错了 也没有爆错 刷新一次

04:51.350 --> 04:55.350
好 出来了啊 好 这里显示出来了 图片上传于是个组件显示出来了

04:55.910 --> 05:01.750
好 那么呢 咱们来实现这个组件啊 这个组件呢 要用到upload 所以说我们这里呢 直接书写一个

05:02.590 --> 05:03.110
upload

05:03.590 --> 05:04.550
啊 从nd导入

05:05.470 --> 05:10.070
啊 导入这么一个组件 这个组件里边呢 有一些配置啊 可以书写一些配置

05:10.790 --> 05:14.350
呃 这个配置呢 我们首先看一下有哪些配置 首先

05:15.310 --> 05:21.110
要上传一个文件 你肯定要告诉他什么 告诉他上传的地址对吧 我要把这个文件上传到哪儿去

05:21.510 --> 05:26.390
通过哪个属性了 通过这个axing属性来告诉他啊 我这个图片要上传到哪儿去

05:26.870 --> 05:27.990
好 我们先来写这个属性

05:28.770 --> 05:34.250
啊 这个属性上传到哪儿去呢 我们之前服务器呢 写过了这么一个接口 就是API

05:35.170 --> 05:35.490
然后

05:37.010 --> 05:37.850
upload 对吧

05:38.730 --> 05:43.050
啊 这都是我们以前服务器写的接口 好 我们来试一下啊 来试一下 看能不能上传

05:43.730 --> 05:44.250
保存一下

05:45.570 --> 05:51.210
好 现在那里会发现 他没有任何东西啊 看不见 他其实组件已经出来了 但是他看不见

05:51.650 --> 05:56.850
看不见为什么呢 是因为这个组件里面没有加东西 这个组件本身是不参与显示的啊

05:57.150 --> 06:03.470
本身是不参与显示的 他里边需要你自己去控制显示啊 需要你自己控制显示

06:04.070 --> 06:07.270
啊 我们看一下他这边是怎么控制的 他这边显示的是啥

06:08.190 --> 06:09.470
我们照着他来做就行了

06:10.910 --> 06:11.710
啊 来看一下啊

06:13.590 --> 06:15.510
他这边来显 显示的是啥呢

06:16.470 --> 06:21.110
显示的是一个按钮对吧 upload button 是一个按钮 我看一下这个按钮是啥

06:22.090 --> 06:27.610
啊 这个按钮的就是一个diva 一个icon 好 我们就用这个按钮吧 啊 就加这个diva

06:28.490 --> 06:30.490
啊 我们来看一下啊 加这个diva

06:33.430 --> 06:34.630
天下道啊 天下道声明

06:35.590 --> 06:38.670
啊 咱们来试一下啊 看一下 目前的显示出来是什么样子

06:39.790 --> 06:43.830
啊 我们就是这么一个东西 对吧 一个加号啊 一个加号 很简单啊 很简单

06:44.350 --> 06:46.630
我们来先试一下吧 先别关样式了 我们先试一下

06:47.470 --> 06:49.670
看能不能把个数据传出到服务器去

06:50.450 --> 06:52.930
点击 好 这里随便选张图片啊

06:54.210 --> 07:00.250
好 几次一看 数据呢就已经过去了啊 数据已经过去了 但是呢 服务器那边报了一个错误

07:01.050 --> 07:02.250
报了一个什么错误呢 他说

07:03.050 --> 07:04.650
un-aspected field

07:05.450 --> 07:07.850
这啥意思呢 我们再到服务器那边来

07:08.570 --> 07:10.250
啊 我们以前写过这个服务器这一块

07:11.210 --> 07:16.010
啊 服务器这边路由这里一个处理上传的 处理上传的时候呢 你看一下

07:16.670 --> 07:17.470
他这里读的

07:18.550 --> 07:23.950
就是键的名字是什么 是img file 对吧 他读到键的名字是这个名字

07:24.430 --> 07:28.710
但是呢 我上传的时候名字给的啥呢 我们来看一下啊 咱们的名字给的是啥

07:30.230 --> 07:35.270
咱们的名字给的是file 给的是file这个名字 好 键名了它不匹配

07:35.830 --> 07:40.710
所以说呢 这里呢 我们要配置一下啊 你不能去控制服务器啊 服务器可能是别人写的

07:40.990 --> 07:45.270
你没法控制服务器 所以说你在自己配置下客户端这里的上传的键名

07:46.070 --> 07:49.030
键名的话 我们看一下他这里能不能配置键名

07:50.150 --> 07:51.950
嗯 键的名字

07:53.310 --> 07:55.350
呃 应该在哪找一找啊

07:56.470 --> 07:57.470
找一找action

07:58.470 --> 07:59.270
file list

08:00.070 --> 08:05.750
啊 内 啊 内 发送到后 后端服务器的文件参数名 也就是键的名字

08:06.310 --> 08:10.310
好 ok啊 那咱们就这里配置一下 配置一下的Name属性值

08:11.670 --> 08:15.430
Name的属性值为啥呢 就是为这边的啊 img file

08:16.750 --> 08:18.350
img file ok啊

08:19.550 --> 08:22.470
好 配置一下 那么咱们再来看一下能不能上传到服务器了

08:24.730 --> 08:25.370
好 点击

08:26.970 --> 08:27.650
随便选个图片

08:28.450 --> 08:37.410
啊 欧北欧北 ok啊 我们看一下服务器的反回结果 你看现在已经上传到服务器了啊 服务器把图片保存了起来 并且的反回给你给你一个

08:38.010 --> 08:38.610
图片的路径

08:39.650 --> 08:44.930
好 那么这个上传服务器的核心功能是不是就搞定了 就已经搞定了啊 已经搞定了

08:45.350 --> 08:51.950
然后呢 我们再来看一下 还有很多事情要做啊 这里 我们点击过后呢 你会发现他这里选择所有文件

08:52.390 --> 09:01.830
也就是你可能会选择一个非图片文件 比如说一个文本文件啊 一个拼一个计识本文件啊之类的啊 比方在桌面上啊 桌面上我这里呢

09:02.590 --> 09:02.670
去

09:03.790 --> 09:07.150
选建立一个新建的就这个吧 就这个

09:08.110 --> 09:08.590
啊 一个

09:09.470 --> 09:14.350
一个表格文件啊 一个表格文件 那么咱们再来再来一次啊 再来一次看一下

09:15.110 --> 09:22.510
就一个表格文件 我们看一下服务器反回来结果 服务器会告诉你啊 因为服务器那边我们已经处理过了 服务器会告诉你文件的类型

09:22.990 --> 09:32.150
他不正确啊 他不正确 那么这个时候呢 其实我们最好是在客户端这一块就限制啊 不要等到他上上传的服务器过后再进行限制

09:32.470 --> 09:34.950
应该在客户端这里就呢 就进行就进行处理

09:35.630 --> 09:39.230
好 那么客户端这边怎么处理呢 他其实可以配置的啊 就是

09:39.930 --> 09:44.930
我上传这个 这个上传组件呢 可以支持哪些啊 上传的名字

09:45.330 --> 09:47.730
就是后综民我们是可以配置的 就这个东西

09:48.130 --> 09:52.930
except啊 表示可以接受的文件类型 我们可以配置一下

09:53.450 --> 09:58.370
except好 就把这些细致墨角的东西呢 封装到一个组件里边 靠这个组件来完成

09:59.090 --> 10:05.650
好 哪些后综民呢 什么gpg可以啊 什么png可以啊 然后呢

10:06.530 --> 10:08.730
gif啊 这些都可以啊

10:09.030 --> 10:13.070
比方说配置这么三个后综民 好 这样子配置之后 我们再来看

10:14.990 --> 10:19.470
点进上传 你看 其他的那些看不见的那些文件啊

10:20.030 --> 10:23.990
就没用了 对吧 就没用了 那么这里我们就随便找一张 图片都可以

10:25.190 --> 10:28.310
满足这样的格式要求的图片呢 都是可以的 其他的文件那就算了

10:29.590 --> 10:31.590
好 这是关于这一块配置

10:32.270 --> 10:36.310
好 接下来我们来搞定 搞定什么 搞定样式吧 搞定样式

10:36.810 --> 10:44.530
你看一下他的官方文档 官方文档里边呢 他有说到这个样式的问题啊 他样式呢 他给你设置了三个样式

10:45.450 --> 10:48.570
他给你设置了三种可选的样式叫联系Type

10:49.970 --> 10:55.130
就内建样式 当然如果你不希望使用他的内建样式的话 你完全可以自己去做样式

10:55.690 --> 11:00.730
内建样式呢 可以设置的三种 一种是文本的图片的和图片card

11:01.210 --> 11:06.090
picturecard 那么我们看一下他用的是什么 刚才这个实例里边用的是什么样式

11:06.930 --> 11:12.970
看一下啊 他用的是picturecard ok 那我们也用这个样式啊 也用这个样式就得了

11:13.970 --> 11:15.770
啊 这里 加上这个样式

11:16.490 --> 11:20.170
保存 慢一点啊 一个问题一个问题解决 不要着急

11:21.050 --> 11:26.490
哎 就出来了 差不多了 对吧 就差不多了 好了 我们这里呢 把这个upload文字呢 改一下啊

11:27.610 --> 11:31.690
这个 好像没必要了啊 这个没必要 没必要了

11:32.470 --> 11:37.550
那个那个内名我我自己没有写对吧 也没有写这个内名 我看一下他他这个样式做的是啥吗

11:38.910 --> 11:41.470
看一下他这个样式做的是啥 把这个删掉

11:42.590 --> 11:46.390
也差不多的嘛 也差不多的 所以说难得去写这个内名了啊 就给他一个

11:47.190 --> 11:49.590
文字啊 点击上传

11:50.630 --> 11:52.230
点击上传 ok

11:54.980 --> 11:57.700
好 就差不多了 对吧 好差不多了 好

11:58.400 --> 12:03.840
接下来呢 我们看还有那些事情要做呢 点击过后呢 我们上传一张图片啊 上传一张图片

12:04.360 --> 12:05.840
然后呢 他现在弹出来的

12:06.400 --> 12:10.320
就是个图片已经显示出来了 他是怎么显示的呢 他显示的不是服务器的

12:11.040 --> 12:16.360
显示的不是服务器的图片 他是用bass64的方式来显示的 我们来看一下吧 这一块

12:17.360 --> 12:20.600
bass64还是svg啊 我都一点急不得了 我看一下这个图片

12:22.000 --> 12:22.800
A元数里边

12:23.740 --> 12:26.540
一米几 他是用bass64的方式啊

12:27.300 --> 12:34.700
bass64的方式 把这个图片数据啊 堵出来 直接放到这 因为在atm5的5这个标准里边 他是提供了接口

12:35.100 --> 12:43.300
可以让GS能够读取到用户选择的文件数据的 是可以读取到的 那么读取到过后呢 他把转换成bass64的格式 显示到这个位置了

12:44.220 --> 12:51.180
好 那么接下来呢 他一个问题就是 我们只能允许一张图片上传啊 不允许多个多个图片上传

12:51.560 --> 12:58.440
那么我们怎么来限制文件的数量呢 我们这里看一下他是怎么做的 他是怎么来限制文件数量的

12:59.160 --> 13:06.040
好 他这里呢 提供了一个数组 表示我现在已经上传的文件的数组啊 每个数组里面一个对象啊 我不管他啊 不管他

13:06.480 --> 13:08.480
然后我们接着看啊 接着看

13:09.640 --> 13:11.880
当我们啊 当我们

13:12.680 --> 13:16.920
就是点击上传的时候啊 点击上传的时候 他做了这么一个处理

13:17.740 --> 13:25.940
什么处理呢 就是看一下我们已经上传的文件数量啊 咱们已经上传的文件数量是不是大于等于的3

13:27.060 --> 13:33.500
就是目前已经上传的文件数量是不是大于等于的3 如果大于等于的3 那怎么样呢

13:34.300 --> 13:42.540
就啥都不显示啊 就啥都不显示 也就是说如果这一块 这里边的区域这一块啊 这里边这个区域我直接给他写个脑

13:43.520 --> 13:46.640
就啥都不写 原来我啥都不写 咱们来看一下

13:47.440 --> 13:53.520
你就什么都看不到啊 你就什么都看不到 就这个区域里边必须要有东西你才可能能看到 来看到结果

13:54.200 --> 14:02.240
啊 懂我这个意思吗 所以说这里我们怎么处理呢 我们不需要什么三个 也不需要两个 我们就一个文件啊 就一个文件

14:02.800 --> 14:05.920
因此呢 只要我上传过了这个文件

14:06.800 --> 14:09.280
只要我上传过了这个文件 我怎么样

14:10.260 --> 14:13.700
我就把 我就把这一块内容给他清空

14:14.620 --> 14:23.980
所以说这一块内容呢 他要不要显示 这里显示什么东西 实际上是有条件的啊 是有条件的 我们专门来写一个函数来

14:24.940 --> 14:30.860
设置这一块区域的东西 有这一块区域呢 有可能有 有可能没有 我们专门来写个函数来设置啊

14:31.900 --> 14:34.060
get upload

14:35.300 --> 14:35.860
content

14:36.560 --> 14:39.920
得到上传区域这一块的内容 我们写这么一个东西

14:40.760 --> 14:45.680
好 这个东西呢 我们这里怎么怎么返回了 我们就可以用这种方式啊 判断一下

14:47.160 --> 14:51.920
当前是否有上传的图片

14:52.600 --> 14:59.360
如果有上传的图片的话 怎么样了 我就返回 返回就这一块东西 我就把这一块东西返回就完事了

14:59.660 --> 15:07.380
是吧 是这个逻辑吧 如果没有的话 没有的话 我return now

15:07.940 --> 15:13.740
return now 对吧 好 那么我这里呢 就把这个地方写成这个函数的调用

15:15.220 --> 15:21.020
就是this get upload content 写成这个函数的调用就完事了

15:22.140 --> 15:26.180
好 这个函数的内容呢 他可以自动推断出来啊 他可以最终推断出来 他要么是

15:26.800 --> 15:35.760
一个就是元素类型 要么就是个now 可以自动推断 好 关键是这里 我怎么能让知道是否有上传的图片呢

15:37.000 --> 15:45.840
我怎么样知道是否有 不对 不对 反了对吧 如果有上传的图片呢 应该是now啊 什么都不显示 如果没有上传的图片呢 我才

15:46.480 --> 15:49.480
返回这个东西啊 没有上传我才需要上传嘛 对吧

15:50.280 --> 15:53.760
好 那么现在我关键是我怎么来判断是否有上传的图片

15:54.220 --> 15:59.820
就是当前有没有一张图片是已经显示出来的啊 就已经上传过了后的

16:00.580 --> 16:04.780
有没有呢 我们这里可以有两种做法 一种是通过属性

16:05.820 --> 16:11.700
你通过属性告诉我你当前的图片是啥 第二种呢 是通过什么呢 是通过

16:13.780 --> 16:16.180
呃 状态啊 自己的状态

16:17.060 --> 16:22.140
那么到底使用属性还是使用状态呢 我这里呢建议大家使用属性

16:22.520 --> 16:26.360
因为我这里呢 要把它做成一个展示组件 做存展示的

16:26.680 --> 16:31.960
到底上传他目前比较是默认的情况下 有哪些图片的你需要告诉我 对吧 需要告诉我

16:32.520 --> 16:41.000
当我上传的图片的时候呢 我会用一个毁掉函数的方式来告诉你啊 我目前上传的图片是啥 你重新去设置你的职就完事了

16:42.080 --> 16:49.760
好 这里呢 于是我会写这么一个属性啊 这个属性里边于是又到了属性约束的时候了

16:50.220 --> 16:52.660
好 应该要取个名字叫做

16:53.940 --> 16:56.900
i image uploader

16:58.220 --> 16:58.700
probs

16:59.700 --> 17:05.820
啊 有这么一个接口 这个接口里边呢 有一个当前图片路径啊 当前图片地址

17:06.620 --> 17:08.660
当前图片地址刻 image

17:09.180 --> 17:19.140
UIL 是一个字不错啊 是一个字不错 是可选的啊 这个属性是可选的 如果你不传递的话 他就是undefined啊 不传递的话就是undefined

17:19.940 --> 17:25.260
好了 那么现在呢 我再来判断啊 把这个属性进行约束一下啊 约束一下这个属性

17:25.860 --> 17:31.020
那么这里呢 我就可以通过属性来判断了 if this i image

17:31.820 --> 17:33.740
不是 this props

17:34.860 --> 17:40.020
可 image URL 他有没有值 如果有值的话 返回now

17:40.780 --> 17:45.740
如果没有值的话啊 如果没有值的话 那么就要上传就返回这个东西

17:46.720 --> 17:54.240
好了 那么我们看一下这个有了属性可以控制之后啊 我们看一下这个区 你看一开始是点击上传啊 这个没有什么问题

17:54.680 --> 18:03.640
没有什么问题 好 比方说我在使用的时候 可以给他一个图片地址 对吧 这个图片地址呢 是1m 啊 叫做刻1m 啊 他有智能提示的

18:04.320 --> 18:10.720
呃 比方说图片地址 我们随便给一个吧 啊 比方说我已经有了一张图片了 我随便给个图片地址

18:11.140 --> 18:13.540
白度里面去加一个哈斯奇

18:15.180 --> 18:17.460
啊 真的哈斯奇真的是为我们

18:18.700 --> 18:23.340
呃 代码开发做出了不可磨灭的贡献 找一张图片吧

18:24.780 --> 18:25.380
找一张图片

18:26.860 --> 18:31.380
那就是啊 复制图片地址啊 复制图片地址好 把个地址扔过来

18:32.500 --> 18:36.700
好 假设了 我们现在给了他一个地址啊 给了他一个地址 图片地址 你看一下这边

18:37.480 --> 18:45.640
好 给了他图片地址过后 是不是这里就不显示了啊 就不显示任何 就不显示你可以操作的上传空空间了

18:46.720 --> 18:52.520
但是呢 如果你给了他图片地址 是不是要把这个图片显示出来了 你得把这个图片显示出来啊 兄弟

18:53.360 --> 19:02.640
好 那这里又怎么办呢 这里又怎么办呢 如何来显示啊 如何来显示当前的图片呢 其实设置的是啥呢 设置的是这个 file list

19:03.620 --> 19:08.980
设置是这个玩意儿啊 file list 设置的是他 那么他我们来看一下啊

19:09.780 --> 19:15.260
也就这里呢 我要显示的是已经上传的图片 我要设置什么呢 设置 file list

19:15.860 --> 19:20.500
这个是什么类型 我们指着他看一下 现在是用类型系统的 我们试试可可用类型系统来看

19:21.580 --> 19:23.420
看一下啊 他是一个数组

19:24.300 --> 19:28.780
一个叫做什么类型的数组呢 叫up load的 file的这个类型的数组

19:29.320 --> 19:30.480
好 我们转到定义看一下

19:31.160 --> 19:38.440
先研究一下啊 这个属性他是一个数组 他是每个数组的每个类型的是upload的 file 看一下upload的file的类型

19:39.760 --> 19:47.280
每一个upload的file呢 他有一大堆东西啊 一大堆东西 uid 那么就表示的是一个唯一的编号啊

19:47.720 --> 19:51.920
url 表示图片的路径 对吧 图片的路径 然后呢

19:52.420 --> 19:58.220
什么standards 啊standards 那么这里呢 应该是一个啥呢 他又是一个字面量类型啊

19:58.540 --> 20:00.980
是否上转成功 正在上转 端起码到一大的东西

20:01.500 --> 20:06.260
一大的东西 总之呢 他是一个数组 他每个数组的每一项是这么一个对象

20:06.980 --> 20:09.460
我现在就如果有一张图片 是不是叫生成

20:10.100 --> 20:15.220
一个对象的数组 如果有两张图片就生成两个对象的数组 如果没有图片呢

20:15.900 --> 20:16.500
就啥都没有

20:17.480 --> 20:25.040
好 那么这个东西呢 我们要给他一个数组 好 因此呢 我这里呢 可以完全可以专门来写个函数来生成这么一个数组

20:26.280 --> 20:30.640
专门写个函数来生成这么一个数组get file nest

20:31.640 --> 20:36.280
写这么一个函数 这个函数做啥呢 专门来生成数组的 专门来生成数组的

20:36.840 --> 20:42.200
好 这里呢 我就使用这个函数啊 调用这个函数来生成一个数组get file list

20:42.980 --> 20:49.460
调用它 生成一个数组 好 这个函数返回了什么类型呢 返回了就是它说的这个类型 它要啥类型 我就要返回它类型

20:49.740 --> 20:56.540
得到的是一个upload file的数组 甭管我们现在怎么写 先别管 先把类型搞定 类型就是我们实现的目标

20:58.100 --> 21:03.740
好 导致性来 那么这里呢 我们到底要返回个什么东西呢 是不是也要根据属性来判断的

21:04.180 --> 21:09.460
对不对 也要根据属性来判断 好 这里呢 我们判断一下啊 如果

21:10.440 --> 21:17.160
如果 当前这个属性的什么克尔林利级url 如果它有值

21:18.240 --> 21:22.560
是不是要返回一个东西 返回一个数组 对吧 这个数组里面是不是有一项

21:23.480 --> 21:28.040
对不对 是不是应该有一项 一个对象啊 一个对象 好 else

21:28.920 --> 21:32.400
else 的情况 也就是或者不写 else 啊 因为这里面已经返回了

21:33.080 --> 21:37.040
好 如果没有值的话 返回了是不是个空数组 对不对

21:38.020 --> 21:43.500
应该是这么一个逻辑 好 我们这里关键是看有值的时候 返回什么东西

21:44.500 --> 21:50.460
有值的时候 返回什么东西呢 他这里爆错了啊 他告诉你 这个是个对象 对象里面有些属性是必须要复职的

21:50.940 --> 21:56.700
是必须要复职的 第一个值uid 啊uid 我们来看一下这个uid是什么东西

21:57.420 --> 21:59.620
看一下他怎么说的 这个uid是什么东西

22:00.220 --> 22:06.300
啊 这个uid呢 就是就是一个字无错啊 你随便给他一个值啊 保证唯一就行了啊 只要你保证唯一就行了

22:06.520 --> 22:11.360
其实呢 这个uid我们可以给啥 就给这个图片路径 对吧 直接把这个图片路径给他

22:12.120 --> 22:12.920
this probes

22:14.280 --> 22:15.560
this probes

22:16.680 --> 22:17.440
img ur

22:18.760 --> 22:23.000
把这个uid给他就行了 把这个图片路径 这里呢 推断出来就是个字无错了 因为

22:23.800 --> 22:27.320
判断过后了嘛 对吧 有内询保护 所以说他现在是字无错了

22:28.440 --> 22:32.720
好 还有什么属性要复职呢 你看用内询系统过后就非常舒服了 你别看他爆错

22:33.220 --> 22:35.140
他实际上不断的提示你要做什么事情

22:36.020 --> 22:40.940
size size 啥意思呢 就是尺寸啊 这个图片占用了空间

22:42.180 --> 22:49.780
这一块呢 我们就说算了吧 因为这一块我觉得是他应该是没有把他做成一个可选的属性 这个应该是可选的啊 这个属性

22:50.140 --> 22:54.380
因为为啥呢 你看他这个 这个视力里边 你看这个视力里边

22:55.260 --> 23:00.460
他这个对象里边也没有写这个size 也没有写这个size 这个size呢 实际上是可以不用复职的啊

23:01.000 --> 23:07.120
这里要改一下吧 他这里没做好啊 应该是个可选的啊 改一下好 看一下还有什么属性

23:09.320 --> 23:16.160
name 啊name 表示图片的名字啊 图片的名字名字的话我就还是用这个吧 还是用这个

23:16.840 --> 23:21.280
probs code image url 还是用这个 然后还有啥呢

23:22.160 --> 23:26.360
还有啥 还有u url 对吧 啊type

23:27.180 --> 23:28.940
啊require type

23:30.100 --> 23:36.660
type type 表示这个文件的类型啊 表示文件的类型 我们看他他给的啥

23:37.540 --> 23:43.060
他也没有给对吧 说明这个东西也可以不写啊 type 也可以不用写啊也可以不用写的

23:43.700 --> 23:46.460
嗯 那这里呢 type 这里我应该去掉吧

23:47.380 --> 23:47.900
type 这里

23:48.660 --> 23:54.500
因为他文档里边也没有明确的说啊 这些东西应该怎么去怎么去复职 我看一下这里

23:55.120 --> 24:03.040
这个地方fire list 他有没有说明啊fire list 他也没有说明这里fire list 他应该是怎么样一个纸

24:03.720 --> 24:08.400
我看一下啊 下面 如果有官方文章如果有说明的话啊 还好办

24:10.640 --> 24:14.360
那这里没有说明对吧 没有说明这个fire list 应该是啥

24:15.240 --> 24:20.280
好 我看一下这里 哦 这里有说明啊 这里有说明 uid 文件的唯一标识 name 文件名

24:21.140 --> 24:27.780
状态啊 状态我们以后再说 然后呢 服务端响应的内容这个不管啊 他也没说到type 对吧

24:28.220 --> 24:32.900
也没有说到type 好 那这里我们不管啊 不管 那么type 该加上问号就完事了

24:34.380 --> 24:43.180
好 然后呢 其实还有个属性 ui o 我们应该复职啊 ui 要表示图片的链接地址啊 图片链接地址 你不能老是背是六四嘛对吧

24:43.500 --> 24:49.260
有的时候呢 是我们服务隙段的图片啊 所以说我要给他一个链接地址啊 图片链接地址

24:49.640 --> 24:51.320
好 这里呢 我们给啥呢给probs

24:52.120 --> 24:57.240
颗emg完啊 都给这个词 完事了 总之给他一个按照他的格式要求 给他这么一个对象

24:58.000 --> 24:58.520
保存一下

25:00.560 --> 25:08.160
好 咱们来看一下 好 这里这个框框至少出来了 对吧 这个框框至少出来了 好 那么他现在呢

25:09.400 --> 25:13.560
访问不到啊 访问不到 实际上是有这个图片的啊 实际上是有这个图片的

25:14.000 --> 25:16.320
我也不知道为什么现在就是有些图片呢

25:17.180 --> 25:21.860
你只如果通过别的网站访问的话 他访问不到 我们随便再重新找一张图片吧

25:22.420 --> 25:27.700
重新找一张图片 我在这里又见复制图片地址啊 我打开之后来复制图片地址

25:28.580 --> 25:32.380
之前我给同学们一些学生演示的时候呢 也会发生这个问题啊

25:33.020 --> 25:36.100
就是你在浏览器里面可以访问啊 他是做了图片房倒炼的

25:37.060 --> 25:44.220
好 那么得到了对吧 这个图片已经得到了 啊 图片也是怪了 然后我们现在再看一下这个图片的就是这个

25:45.200 --> 25:51.600
这个这个图片的这个区域的这个tiv啊 他里面是个十变 十变里面一个a元数 a元数下面这个

25:52.120 --> 26:00.920
有一个e密集啊 展开一个e密集元素 你看现在e密集元素的src啊src这个署项读的是啥 他读的就是

26:01.560 --> 26:02.360
啊 读的就是

26:03.680 --> 26:06.280
这边这个url啊 读的就是这个东西

26:07.040 --> 26:09.600
明白了吧啊 如果啊 如果

26:10.180 --> 26:17.500
你看我们数到 哎 等一下啊 如果这个图片他读不到的话 他显示的是啥呢 显示就是个name属性

26:18.340 --> 26:20.900
id是唯一的字 我们将来会用可能会用到的

26:22.180 --> 26:26.220
好 那么这个地方是被搞定了啊 搞定了 那么这个这个区呢是根据

26:27.100 --> 26:34.940
什么东西啊 是根据我们的属性来生成出来的啊 是完全受受到属性的控制的 他是受控的

26:35.920 --> 26:40.840
好了 那么这个问题搞定了啊 如果已经有图片的话 那么他会显示出来

26:41.360 --> 26:46.600
好 我们再来回到之前那个问题 如果他没有图片的话 就这个属性没有复制

26:48.040 --> 26:48.920
这里我主持掉

26:50.800 --> 26:52.160
如果这个属性没有复制

26:53.200 --> 26:58.040
那么他这里应该显示的是上传 对不对 上传 好 现在我们再点击上传

26:58.720 --> 27:04.920
上传 因为发现他没有任何反应 为什么没有任何反应呢 因为现在这个这个组件啊

27:05.000 --> 27:10.160
他已经受控了 他一被控制了 被我们 被谁控制了呢 被这个属性所控制了

27:10.880 --> 27:19.000
他这个目前的文件列表呢 目前的文件列表只根据这个属性来啊 这个属性有没有值 有这个值我就生成一个

27:19.880 --> 27:25.600
上传的文件列表 如果没有这个值啊 如果没有这个值 我啥都不管 我啥都不管

27:26.520 --> 27:29.560
所以说呢 现在的问题呢 是要根据啊 他会根据

27:30.020 --> 27:37.940
上传的这个属性来决定 因此呢 现在我们要进行手动控制了 就是真正的完成了上传之后

27:38.820 --> 27:46.260
你要触发事件 触发事件过后 让使用这个组件的人去改变这个属性值

27:47.140 --> 27:47.940
要做这么一件事

27:49.020 --> 27:56.060
好 那么现在问题是我怎么知道他上传完成了呢 什么时候上传完成了 上传完成过 服务端那边有返回那个啥东西

27:56.720 --> 28:00.920
我怎么知道呢 其实他是有个函数的啊 这一块是有个函数的

28:01.640 --> 28:01.880
下边

28:03.280 --> 28:07.160
这个函数的名字叫做on change on change

28:07.720 --> 28:13.480
上传文件改变时的状态 上传文件改变时的状态 好 我来看一下这个函数

28:14.360 --> 28:21.160
on change 好 给他绑定一个事件处理程序啊 咱们这里写个函数啊 写个函数

28:21.640 --> 28:24.600
handle change 写这么一个函数

28:26.880 --> 28:34.320
然后呢 这个on change 我们看他的函数格式啊 他会传一个info进来啊 传一个info进来啊 我们就得到一个这么一个info嘛

28:35.080 --> 28:36.440
好吧 得到这么一个info

28:37.680 --> 28:47.640
一个信息啊 这里不应该这样子写啊 怎么老是这样子写啊 这里呢 我们console log 把这个信息打印出来啊 把这个信息打印出来

28:47.980 --> 28:53.140
看一下是什么 好 这里我们绑定啊 this handle change band

28:53.900 --> 28:58.860
好 绑定 绑定这个函数 我们看一下打印出来什么信息

29:02.650 --> 29:04.970
好 这里点击上传 随便上传一张图片

29:05.970 --> 29:12.410
好 你会看到这里就打印出来了这个文件的信息 对吧 这个信息是谁打印的 是不是在这里打印的

29:12.690 --> 29:18.250
他触发了这个函数 触发了这个on change这个事件 运行了这个函数 打印出来了这些信息

29:18.910 --> 29:25.190
那咱们来看一下这个信息 同学们 这里有个坑 这个坑了真的是反正要死

29:25.990 --> 29:33.790
啊 这个地方呢 他显示了一些关于这个文件的一些信息 我们不管别的 我们来看一下这一块

29:34.430 --> 29:35.150
standards

29:35.990 --> 29:37.350
standards表示状态

29:38.310 --> 29:43.270
表示个图片上传的状态 他是什么状态呢 他是正在上传的状态

29:44.250 --> 29:50.450
而实际上呢 我们的网络请求有没有上传呢 你看一下有没有上传 实际上是有上传的

29:50.930 --> 29:56.490
都已经上传完成了 服务器那边那边呢 已经返回了这个上传的结果

29:57.130 --> 30:03.250
这个上传的结果已经返回了 但他的状态没有发生改变 按理说这里还要触发

30:03.930 --> 30:07.410
还要触发至少一次这个on change事件

30:08.390 --> 30:13.230
刚开始上传触发一次 然后上传完成 服务器得到响应结果 是不是要触发一次

30:13.950 --> 30:16.510
应该还要触发一次 但是呢

30:17.590 --> 30:25.390
他这里没有触发了 这里有个坑 那么这个坑是怎么回事呢 他官方稳道自己都说了 这个地方有坑

30:26.270 --> 30:27.710
嗯 他说在哪呢

30:28.630 --> 30:34.670
嗯 我们看一下啊 在file列车这里 好 在file列车这里呢 他说到这个问题啊

30:35.130 --> 30:35.450
他说

30:36.410 --> 30:43.730
有可能呢 你会遇到这种情况 on change 呢 这个毁掉了 只调用了一次 这个事件只触发了一次的问题

30:44.170 --> 30:49.050
那么这个问题 什么回事呢 他让你去参考这里 我来参考一下这里面

30:49.930 --> 30:51.850
啊 参考一下啊 看他怎么说的

30:52.770 --> 30:58.530
啊 有有个朋友呢 他也遇到了这个问题啊 所以他这个是他这个就是提交了一个issues

30:59.230 --> 30:59.790
啊 他说

31:00.910 --> 31:05.710
啊 他在上传的时候啊 这个on 签几方法只执行了一次 你看我们这里是不是只执行了一次

31:06.430 --> 31:07.310
那是怎么回事呢

31:08.190 --> 31:13.670
他下面解释了一下这个这个问题 他说 因为你现在是处于受控的模式

31:14.750 --> 31:16.550
那我现在是不是处于受控的模式

31:17.390 --> 31:24.110
是不是受控的啊 这个file 历史的这个属性呢 他是受控的 一旦file 历史的这个属性是受控的

31:25.010 --> 31:34.490
就变成了这样的结果了 因为这个组件呢 他始终要保证每一次调用on签几啊 调用了on签几过后了

31:35.210 --> 31:38.850
你得把他做什么了 你得把他加到这个文件列表里面去

31:39.850 --> 31:45.370
但是我现在又不想加进去 我要等他上传完成之后才想加进去啊 我现在不想加进去

31:46.250 --> 31:47.890
那问题是这个怎么处理呢 这个问题

31:48.770 --> 31:50.090
你说这个玩意咋处理呢 这个

31:51.070 --> 31:54.190
啊 想一想呗 我们这一块咋处理

31:56.070 --> 32:01.270
啊 他就也就是说 他现在呢 只有受控的状态 在受控的状态下面

32:01.750 --> 32:08.350
由于我这里状态改变 并没有改变这个数组啊 这个数组呢 并没有得到改变

32:08.790 --> 32:11.990
因此呢 造成了这样的问题啊 这个数组没有得到改变

32:12.470 --> 32:19.230
因此呢 他无法获取后 他无法进行后续的处理 实际上他做后续的处理 其实也应该是没有问题的

32:19.530 --> 32:24.570
但是不知道是什么原因 他没有做啊 没有做这样的后续处理 那么这个时候怎么办呢

32:25.010 --> 32:29.410
我又不希望这个东西啊 我又不希望这个东西能够脱离受控

32:30.650 --> 32:37.410
这个时候我想来想去没有一种特别好的解决办法 我这里只能怎么办呢 只能用这种方式的

32:38.810 --> 32:39.450
用这种方式

32:40.650 --> 32:45.330
custom request 覆盖默认的上传行为

32:46.310 --> 32:50.350
自己实现上传 不用他那个玩意儿了 那没办法

32:51.390 --> 32:52.590
大家如果有什么好的

32:53.310 --> 32:58.270
好的就是想法的话 可以在这里留言啊 我这里呢 能想到的就是用这种方式

32:58.710 --> 33:01.230
custom request 这是我能想到的最好的做法

33:01.870 --> 33:05.270
好 那么这里呢 我就不使用这种方案了 因为这个方案它是有坑的

33:05.990 --> 33:12.070
好 那这里呢 我们使用啊 其实rex这个nd里边坑还不少 真的坑还不少

33:13.050 --> 33:22.930
啊 这里我们使用 custom request啊 使用这个东西这个函数 好 我们同样的绑定一个处理函数啊

33:23.770 --> 33:27.210
handle request

33:28.930 --> 33:29.170
好

33:31.090 --> 33:33.010
看一下 把那个参数打印出来看一下

33:34.570 --> 33:38.730
好 这边 这边 this handle request

33:39.270 --> 33:42.470
band this

33:43.590 --> 33:48.070
打印出来看一下啊 保存 我们换成另外一个函数来做

33:49.910 --> 33:57.390
这里还是选择一张图片啊 好 那么你看一下这个信息啊 打印出来的信息变成了这些这些信息了啊

33:57.870 --> 33:59.030
变成了这些信息

33:59.870 --> 34:04.710
那么现在呢 我要做的事情就是 他现在不会给你发动请求了 你看着啊 看着啊

34:05.370 --> 34:08.330
我们这里把把把关闭啊 再看再来一次啊

34:09.490 --> 34:14.610
上传 你看有请求吗 他不会再帮你发动请求了 你需要自己去完成

34:15.450 --> 34:18.090
自己去完成请求啊 自己去完成请求

34:18.970 --> 34:26.250
好 那么这个时候该怎么来自己怎么来自己完成请求了 他这里有些信息已经告诉你了 这是你请求的地址

34:26.770 --> 34:34.290
啊 配置的地址 这是你请求的这个建的名字 对吧 建的名字 然后呢 现在呢 你要去完成请求

34:34.810 --> 34:43.410
完成请求 那怎么来完成请求 文件的数据呢 已经给力了啊 文件的数据已经给力了 那么接下来就是 你要用这些信息来手动的

34:43.970 --> 34:46.450
去写阿加克斯来上传图片

34:47.090 --> 34:59.410
那么其实呢 如果你们学习过atm5的文件api 那么这一块也可以轻松的搞定 如果你没有学习过 也没有关系啊 也没有关系 跟着我做一遍就完事了啊 跟着我做一遍就完事了

34:59.850 --> 35:02.770
好 那么我们这里的书写啊 首先把类型约束一下吧

35:03.150 --> 35:07.470
类型约束一下 这里的类型呢 我靠他给你使用的是any类型

35:08.150 --> 35:16.950
那any类型那就没办法了啊 那就any吧 我之前不想去做这个类型 那就any好 那么我们这里手动的书写阿加克斯的文件上传

35:18.390 --> 35:26.590
好 这里怎么写呢 首先呢 我们要完成文件上传了 我们要使用atm5的一个api就是formdata这个api

35:27.210 --> 35:34.650
我们这里要首先创建一个对象啊 这个对象呢 我们把它叫做formdata对 要讯留一个form

35:35.650 --> 35:42.850
data对象啊 讯留一个这个对象 相当于是呢 这里用介石建了一个表单出来 建了一个表单出来

35:43.610 --> 35:47.970
好 这个formdata对象里面呢 提供了一些方法啊 比方说其中一个方法叫append

35:48.950 --> 35:53.590
formdata里面可是不是可以加很多的兼职队 对不对 可以加很多的兼职队数据

35:54.070 --> 36:02.910
那么这里的数据 第一个参数来表示兼的名字啊 兼的名字是不是就是p点 我们之前看那个网页里边啊 这里点击上传的时候

36:03.710 --> 36:06.270
哎呦 我这里我把这个打印取消掉了啊

36:07.390 --> 36:14.590
把打印出来看一下啊 因为他这里是any类型 那没办法了啊 那我只能啊 只能去看一下打印出来是啥

36:15.570 --> 36:26.170
就是有的时候一些第三方库啊 他会告诉你他的ts覆盖率是多少 他并不是百分之百啊 很多第三方库他并不是百分之百的覆盖 特别是一些很大的库

36:26.530 --> 36:32.610
像这个nd呢 是一个非常大型的一个库 一个uik库 你知道里边的东西太多了 他可能没有覆盖完

36:33.010 --> 36:38.370
他有些接口了 他就没有给你写那行 那你只能这样子来操作 或者是你自己去给他写那行

36:39.230 --> 36:44.510
好 这里呢 他这个file namefile name就是他的剑的名字

36:45.150 --> 36:49.230
好 这边我们知道了 这里点过后呢 我们这里p点file name

36:50.310 --> 36:56.830
好 这剑的名字好 值呢 值是啥呢 值这里是一个文件 他不是一个字幕创是一个文件

36:57.270 --> 36:59.590
文件是什么类型呢 文件是blog类型

37:00.470 --> 37:08.150
啊 在atm5里边他的app里边他告诉你文件是blog类型 好ok 那么这个文件是实际上是什么呢 实际上你就把这个东西传过去

37:09.270 --> 37:10.990
就把这个file传过去 完事了

37:11.870 --> 37:15.550
好 我们这里传递p点file 啊 传过去

37:17.150 --> 37:25.710
好了 勾结了这么一个表达 那么现在呢 接下来我要上传文件啊 上传文件 上传文件的时候 我要使用肺起api 啊 肺起api

37:27.190 --> 37:31.790
好 这个肺起api具体咋写呢 我们可以用这种写法

37:32.770 --> 37:38.890
首先他创建一个请求对象 六一个request 这也是atm5的app里边提供的啊

37:40.090 --> 37:44.210
创建一个请求对象 请求对象里边呢 首先给他写上请求的地址

37:45.090 --> 37:49.010
请求地址在哪呢 请求地址呢 在这啊 这个x

37:49.450 --> 37:54.170
对吧 这个参数p里边的这个属性x 他就是请求地址 我们之前配置好的

37:54.970 --> 37:58.490
好 我们把这个x 给他传进去 这是请求地址

37:59.230 --> 38:03.150
好 请求地址完了过 第二个参数呢 是对请求到一些额外的配置

38:03.710 --> 38:07.790
好 额外的配置有哪些呢 啊 比方说首先啊 是message

38:08.630 --> 38:15.910
message 表示的是请求方法 那你现在做上传文件 那是不是要用post 对吧 要用这个请求方法

38:16.830 --> 38:21.310
好 然后请求方法配置过后呢 还有上传的数据 这是主观见

38:22.190 --> 38:28.390
就是我上传文件 我要把文件的数据传的给服务器 上传的数据实际上是配置的是什么呢

38:28.630 --> 38:31.750
配置的是请求的消息体 啊 保底

38:32.510 --> 38:37.070
请求的消息体 那么这个消息体呢 配置为啥呢 你就配置为这个玩意

38:37.910 --> 38:38.910
就配置为他就玩算了

38:39.830 --> 38:45.350
他就是就是我们用js 构建的一个表单对象 他里面包含了一个文件信息

38:46.110 --> 38:50.190
当然还可以包含一些其他东西 你可以继续交用Append来包含其他东西

38:50.910 --> 38:52.830
好 把这个数据上传到服务器

38:53.790 --> 38:55.830
好 然后呢 接下来我们可以使用fetch

38:56.570 --> 38:58.170
把这个请求对象传进去

38:59.650 --> 39:02.290
传进去这个请求对象 让他去完成这个请求

39:03.090 --> 39:08.370
好 那么这里是一步的对吧 一步的我们可以把他把这个函数变成sync函数 这里呢

39:09.930 --> 39:18.450
使用z 啊 这些应该都知道吧 fetch API应该都会吧 对吧 我们可以先把服务器的结果用节省解析出来 解析出来

39:18.850 --> 39:23.330
解析出这个节省结果之后 拿到这个数据啊 拿到解析过后的数据

39:25.850 --> 39:31.010
我们这里打印出来啊 打印出来看一下服务器的响应结果 看一下行不行 保存

39:31.450 --> 39:35.650
现在我们是手动的字型来处理这个请求了 因为他那个地方有坑

39:36.690 --> 39:38.330
好 这里选了一张图片

39:39.170 --> 39:39.970
哎 你看

39:40.930 --> 39:48.290
服务器的数据什么拿到了啊 终于拿到服务器数据了 我们的目标无非就是拿服务器数据 结构了这个这个组件他有坑

39:48.970 --> 39:54.930
他一旦这个东西受控之后他就拿不到了啊 又拿不到了 因此呢没办法啊 我们自己手动起 其实手动鞋也好

39:55.430 --> 40:02.790
也好 一式锻炼一下 我们自己这个废弃API 而是呢 讲一讲这个formdata 其实也没有多少代码对吧 代码也不多

40:04.270 --> 40:11.670
呃 所以说我当时为什么一开始做这个地方的功能的时候呢 我就想到我要把它封装成一个组件 我觉得这里面

40:12.870 --> 40:19.910
有些东西啊 因为我其实以前我做过这个东西 我已经忘了忘了 但是我隐隐约约记得这一块好像是有坑的

40:20.770 --> 40:26.530
好 那么这里呢 我就把搞定了啊 拿到服务器的数据过后 那么这个时候呢 我们要继续来操作

40:27.770 --> 40:32.010
操作啥 服务器有没有可能响应失败 有没有可能失败

40:33.450 --> 40:36.250
比方说我给他上传一张特别夸张的图片

40:38.170 --> 40:43.170
fire to knowledge 对吧 是不是有可能失败的啊 服务器那边有可能会失败

40:43.830 --> 40:48.550
所以说呢 我们这里呢 最好是判断一下 服务器到底成功还是失败

40:49.310 --> 40:53.070
好 如果判断啥呢 我这里其实给他约束一下啊 这rest

40:53.630 --> 41:01.070
他是 any 内容 我们给他约束一下 服务器的返回结果啊 上传文件的返回结果 上传文件的返回结果呢 我们这里

41:02.030 --> 41:05.910
呃 看之前写没写啊 写没写这个上传文件的返回结果

41:05.970 --> 41:15.330
comment types response data 写了的对吧 写了的啊 写了这个东西的 ok 那么直接用这个接口啊 用这个接口来约束一下

41:17.330 --> 41:21.530
服务器的响应结果是个置物串啊 就是图片的路径嘛 他是一个置物串

41:22.890 --> 41:28.850
那么约束了过后了 我这里可以智能提示了啊 这边如果这个 error 啊 如果这个 error

41:29.710 --> 41:35.510
如果他没有指啊 不对 他有可能有可能

41:36.830 --> 41:48.030
有可能是这种情况啊 我看这是这是这是错误的结果 这是正常的结果对吧 错误的结果正常的结果 还有两个都有可能 他有可能还有错误

41:48.950 --> 41:50.430
所以说加个联合了一项

41:51.710 --> 41:57.470
他有可能还有错误 我把错误结果也倒进来 好这个 error 呢 他又这个 error 他就有可能是

41:57.730 --> 41:59.410
他就有可能是微空的置物串

42:00.290 --> 42:07.290
好 如果这个 error 有指 表示不是有错误 对不对 有错误 有错误怎么办 我是不是应该给他提示一个错误啊

42:08.090 --> 42:11.210
应该给他提示一个错误啊 这里呢 我们找到啊

42:12.130 --> 42:17.450
找到之前的这个提示 提示好像我们这里有智能提示的message

42:18.690 --> 42:21.250
indie 里面又不是个message吗 你看很有智能提示

42:21.970 --> 42:25.890
好 这里呢 我们给他写写一个就是 error 提示一个错误

42:26.790 --> 42:28.910
好 错误消息 给他个错误消息

42:29.750 --> 42:33.870
错误消息的话 就用这个 error 吧 就用个 error 或者叫上传失败

42:35.230 --> 42:36.430
上传失败

42:39.070 --> 42:41.670
保存 我们看一下有错误的场景能不能提示错误了 现在

42:42.950 --> 42:46.750
点击上传 上传一张非常大的图啊 这边上传

42:47.670 --> 42:47.990
这个图

42:49.190 --> 42:49.670
上传失败

42:50.590 --> 42:51.590
就有错误的提示了

42:52.370 --> 43:01.810
好 如果上传成功的话 哎呦 成功的难得提示了 因为成功我会把这个图片显示出来对吧 我就不提示了 成功的话我要做啥

43:02.810 --> 43:05.930
不要因为走的太远 我忘记了当初为什么要出发

43:06.730 --> 43:12.650
我要做啥了 如果上传成功的话 我是不是要去重新设置这个属性啊

43:13.930 --> 43:17.770
哎 我们图片都上传成功了 我不得重新设置这个属性吗 对不对

43:18.750 --> 43:25.030
我得重新去设置这个属性啊 因此呢 上传成功过后呢 我们需要一个事件 扔出去

43:25.630 --> 43:27.550
一个事件大概取个名字叫Unchanged

43:28.270 --> 43:31.190
这个事件 我会把新的图片录进告诉你

43:32.910 --> 43:33.790
新的图片录进

43:34.350 --> 43:35.350
emg url

43:36.430 --> 43:41.190
一个字不错 新的图片录进告诉你 啊 你去处理吧 我不管了啊 我不管了 你去处理

43:42.470 --> 43:46.350
好了 于是呢 到这边 如果上传成功了之后呢

43:46.930 --> 43:50.250
我要给你一个触发事件 触发回调

43:51.690 --> 43:54.010
this props unchanged

43:54.810 --> 44:01.090
把当前的图片地址扔过去 图片地址在哪儿 就是在data里面 对不对 把当前的图片地址扔过去

44:03.410 --> 44:05.050
哎 这里没错 它说

44:06.450 --> 44:10.890
它说啥呢 它说data呢 有可能没有指 有可能没有 有可能是nau

44:11.650 --> 44:16.010
它有可能是nau 但是我们知道这里data不可能是nau了 对吧 data不可能是nau了

44:16.230 --> 44:18.550
因为data如果是nau的话 那么

44:19.470 --> 44:25.870
应该是进了这个衣服 应该是进了这个衣服 所以说呢 我们这里可以把这个nau去掉啊 可以把这个nau去掉

44:26.910 --> 44:28.590
加感的好 把nau去掉就行了

44:29.750 --> 44:35.270
好 那么这边爆错了啊 这边爆错是因为这边呢 没有给他设置这个事件啊 没有是设置这个事件

44:36.190 --> 44:40.350
比方说 我们这里可以写个测试嘛 每天测试一下state

44:41.330 --> 44:45.290
设置一个啊 state 这里呢 一个img

44:46.210 --> 44:48.650
一开始是空的字五串 然后呢 这边

44:49.450 --> 44:57.410
通过这个属性去设置啊 刻img url 和img url 给他设置为什么呢 设置为这个img

44:58.170 --> 45:03.210
z state 的img 再测试一下 然后它有个回调函数

45:03.850 --> 45:09.490
on change on change这个回调函数 好 这个回调函数里面呢 我们来控制一下

45:09.990 --> 45:12.470
new url 这边呢

45:13.430 --> 45:16.790
z state

45:18.110 --> 45:22.750
好 就是img为new url

45:24.190 --> 45:33.110
ok 好 咱们来试一下啊 那么这个组件是受控的 我要控制他这个图片的路径是啥 当图片改变之后呢 我要给他一个新的路径

45:33.870 --> 45:34.910
啊 给他一个新的路径

45:35.810 --> 45:43.520
咱们来试一下 哎 他说有错误啊 有错误 可以怎么了

45:45.080 --> 45:46.120
又怎么了 我看一下啊

45:47.360 --> 45:51.000
他说on change is missing 他说这个on change的没有配置

45:51.680 --> 45:58.320
但是on change 我实际上是配置啊 是配置啊的 我再重新保存一次 之前好像也遇过遇到过类似的问题 重新保存一下就对了

45:59.960 --> 46:02.400
好 这里点击上传 上传

46:03.380 --> 46:11.220
哎 你看 是不是搞定了啊 这就搞定了啊 我再来刷新试一次啊 再来刷新试一次 点击上传

46:12.660 --> 46:14.060
上传 哎 搞定了

46:15.500 --> 46:19.260
好 那么现在机上传了 并且呢 这个组件又受控了啊 又受控了

46:20.540 --> 46:24.700
好 那么接下来 那么继续来解决这里面的问题啊 这里面还是其实还有一些问题的

46:25.140 --> 46:31.380
但是呢 没关系 我们只要把这个组件开发好了之后呢 后边就可以一直在使用了啊 这个开发辛苦一点都没关系

46:31.400 --> 46:34.680
因为我们可以把它开发成一个通用的 啊 这里呢

46:35.840 --> 46:40.040
搞定这个上传了之后呢 还有一些事情要做 比方说删除

46:41.440 --> 46:49.440
点了删除后 我总得做一件事吧 对吧 我是不是要告诉他啊 我要告诉他这个图片没了 对不对 我要告诉他这个图片没了

46:50.040 --> 46:58.080
好 那么点删除过后呢 我要做啥事了 啊 这里面有事件啊 有事件 这里是unremove

46:58.900 --> 47:03.740
unremove 当你点击移除文件的时候 他会触发这个事件

47:04.740 --> 47:12.780
好 我们配置一下这个事件 啊unremove 其实这个事件我要做啥呢 我要做啥呢 其实我这里做的事情很简单

47:13.820 --> 47:19.420
做啥 我就去雕容一下这个属性的回调 昂签计 把这个图片的地址给它设为空

47:20.220 --> 47:24.780
你想一想 是不是这个道理 把设为空是不是就把图片移除掉了 对不对

47:25.360 --> 47:32.490
好 咱们来看一下 啊 点击 啊 点击 啊 这里删除

47:33.490 --> 47:34.730
你看 点击

47:36.250 --> 47:40.490
这里移除 哎 是不是可以了 对不对 啊 点击

47:41.410 --> 47:46.250
好 最后 还有一件事就是预览 啊 点击过后呢 把这个图片放大啊

47:46.890 --> 47:54.650
我靠 这个预览太可怕了 他给我新打开一个窗口 点击过后呢 把这个图片放大 那么这里呢 也是需要用到一个毁掉啊

47:54.830 --> 48:00.470
upravio 就是点击文件链接会预览图标的时候 它的毁掉啊 我们来看一下

48:03.070 --> 48:08.150
啊 这个地方 我们要完成预览啊 完成预览 好完成预览的话

48:08.910 --> 48:14.390
我们怎么预览呢 我们首先把这个函数先实现吧 先实现这个函数 我们一会再说怎么预览

48:15.270 --> 48:18.230
console log 预览

48:19.990 --> 48:23.950
我看一下 这个函数有没有触发 先搞定这个函数触发的问题

48:24.890 --> 48:27.370
啊 这里 啊 点击预览

48:28.170 --> 48:32.690
你看 现在它没有墨镇行为了啊 它变成了我们的事件调用

48:33.650 --> 48:38.730
好 点击预览的时候 我要做做啥呢 其实你看一下 它在这里的势力 它是怎么做的

48:39.330 --> 48:43.930
它实际上是建了一个盟城啊 建了一个盟城 你看 墨的这个盟城

48:44.490 --> 48:51.610
这个盟城呢 用点击预览过后来控制它 来控制这个盟城是否显示啊 盟城里面有一张图片

48:52.150 --> 48:56.310
那无非就做了这么一件事 好 我们直接复制一下呗 直接复制一下 复制过来

48:57.430 --> 48:59.270
啊 复制过来 好 这边

49:00.190 --> 49:05.710
我们这里呢 加个盟城啊 加个盟城 就是除了有这个upload之外呢 我们这里就建个div吧

49:06.790 --> 49:09.910
这个div里边有个盟城 然后呢 还有一个upload

49:12.720 --> 49:15.800
好 做这么一件事 把这个盟城导入进来啊 导入进来

49:17.440 --> 49:21.200
好 导入这个盟城 盟城里边呢 有一个图片啊 有一个图片

49:21.660 --> 49:29.900
好 这个图片里边src显示啥 是不是就当前属性的图片路径 以米级和以米级uio对吧 就显示这个路径

49:30.780 --> 49:37.180
好 然后呢 这个out out就不要了啊 它适逢显示呢 这个怎么来控制呢

49:38.700 --> 49:45.340
这个东西就不需要让外面控制的 外面也不需要能控制这个数据 对吧 外面控制这个数据干嘛呢

49:45.820 --> 49:51.100
我自己能控制就行了 所以说这个这个展示组件呢 它可以有一个state 有一个状态

49:51.580 --> 49:59.460
注意啊 有些很多交 特别教程里边 老实说展示组件不能有状态 这是不对的啊 展示组件可以有状态的

49:59.900 --> 50:08.980
展示组件的状态呢 一般都是跟存展式相关的 它没有任何的数据逻辑 它是跟存展式相关的 它是可以有状态的啊 没有问题的

50:09.700 --> 50:14.660
好 当然有状态的话 你完全可以把它写成一个接口 对吧 写成个接口 约束一下

50:17.020 --> 50:17.420
state

50:19.140 --> 50:21.140
my state 就是image state

50:22.100 --> 50:22.700
写个接口

50:23.700 --> 50:25.100
这里还是标准明明的

50:26.500 --> 50:35.500
img is i 一个i表示interface 这个i表示img的 i 这里呢 表示示篷显示 show mode model force

50:36.340 --> 50:37.340
不

50:38.940 --> 50:48.220
啊 写这么个接口啊 给它配置一下啊 配置一下 状态的内行是这个 但是我们之前说过啊 这里的配置到过后了 这里也不要忘记

50:48.780 --> 50:51.100
加内行约束 也不要忘记加内行约束

50:51.620 --> 50:54.100
啊 不要忘了 好 这里我们给它设置

50:55.500 --> 50:56.500
img yo

50:57.660 --> 50:58.660
不是 show

50:59.500 --> 51:00.100
show mode

51:01.140 --> 51:02.020
model只为force

51:02.660 --> 51:03.460
model只为force

51:04.420 --> 51:09.060
好 那么这边 萌城示篷显示来自于这个状态 state show mode

51:09.740 --> 51:11.700
示篷显示 如果它为处就表示显示

51:12.260 --> 51:13.140
啊 表示显示

51:14.300 --> 51:20.340
好 on cancel 就是这个萌城取消啊 如果这个萌城取消 我先不管取消吧 先不管取消

51:21.080 --> 51:23.960
啊 咱们先看一下 一开始把这个萌城显示出来会怎么样

51:27.860 --> 51:33.780
啊 看一下啊 你看就这么个萌城啊 只不过现在没有图片啊 只不过现在没有图片 你看不到图片而已

51:34.300 --> 51:42.140
点击过后啊 点击关闭过后就取消了 那么现在我们还没有注册取消事件 对吧 还没有注册取消事件 ok 把这个事件加上

51:43.380 --> 51:48.420
啊 把这个事件加上 on 签计 on签计的时候做啥呢 其实做的事情很简单 就把这个设为force就行了

51:49.860 --> 51:52.020
啊 就是 this state state

51:53.000 --> 51:56.160
啊 设置上了 设置 show mode 为force

51:57.440 --> 52:07.920
就不再显示了 啊 只是显示和取消 萌城的显示和取消 那么这里点预然的时候 无非是我们做啥 无非是做啥 无非就是把这个萌城打开就完事了 对吧

52:11.620 --> 52:13.060
把这个萌城打开就完事了

52:14.340 --> 52:22.290
啊 保存 好看一下啊 点击上传 上传了 然后点预然

52:22.870 --> 52:30.590
啊 打开了啊 关闭啊 三传不小心删除掉了啊 重新上传一个啊 上传一个

52:32.190 --> 52:37.030
点预然 啊 点关闭啊 删除掉

52:38.270 --> 52:43.070
好 那么现在呢 这个组件呢 我们就开发完成了 想想还有啥算了

52:44.230 --> 52:52.110
好像就真没啥了啊 这个组件写起来好像写了很多代码的样子 实际上呢 我们用起来以后用起来就非常非常舒服了 大家

52:52.350 --> 52:57.590
看到没 我们用的时候你看一下 我们 咱们在咱们在页面里边测试的时候 你看用的时候

52:58.030 --> 53:03.470
就非常舒服了 他就一个属性克尔尼米Url 你给他不就完了吗 给他这个属性不完了吗

53:03.990 --> 53:09.230
甚至这个属性呢 我们还可以把它做的更加舒服一点啊 比方说这个属性呢 我们可以给他设置成value

53:10.430 --> 53:14.430
啊 f2 重命名value 一回车

53:15.270 --> 53:15.990
你看一下

53:16.970 --> 53:23.850
你看一下value 你看看是不是全部重命名了 啊 这边重命名了 不仅如此 你看这边是不是也重命名了

53:24.490 --> 53:30.130
对不对 这就是ts的好处 因为ts他用类型观点 他知道这个类型是在哪里在用

53:30.890 --> 53:34.810
因此呢 他能够推到出哪些哪些东西也应该跟着宠购

53:35.890 --> 53:39.010
以前皆是能做到吗 肯定是不能做到的 挨着手动去改呗

53:39.930 --> 53:44.090
对不对 啊 用起来非常舒服 给他个value就像一个就像一个文笨框一样

53:44.430 --> 53:48.710
给他个value值来控制他 然后他改变的时候呢 我们来重新设置

53:49.310 --> 53:51.390
自己的值 那就这就很舒服了

53:52.550 --> 54:00.830
好 那么这一刻完了之后呢 大家把这个逐渐完成 因为我们后面要做表达 要用到这个逐渐的啊 要用到这个伤传文件

54:01.750 --> 54:04.950
好吧 好 那么这一刻呢 我们就到这里了啊 拜拜

