WEBVTT

00:00.620 --> 00:02.920
好 这一刻咱们来做一个小的demo啊

00:03.420 --> 00:05.480
就是再改造一下

00:06.260 --> 00:07.280
又是潮轮犯了啊

00:07.540 --> 00:11.380
再改造一下就是咱们之前做的那个表单组件

00:11.640 --> 00:13.160
就几个group

00:13.420 --> 00:14.440
还有一个是那个

00:14.700 --> 00:17.520
这几个表单组件 它有没有很多相似的地方

00:17.780 --> 00:19.300
咱们大概过一下一个代码

00:19.560 --> 00:22.120
它有没有什么样的相似的地方呢 我们会发现

00:22.900 --> 00:24.940
首先它们的属性非常相似

00:25.200 --> 00:29.300
至少都有一个name属性对吧 都有一个数组对吧data是这么一个数组

00:29.820 --> 00:32.620
这个东西还不一定有 这个东西还不一定有

00:32.880 --> 00:33.660
然后呢

00:33.900 --> 00:35.960
都有一个on-chain级对吧 都有一个on-chain级

00:36.220 --> 00:38.260
就是改变的事件

00:38.780 --> 00:41.580
然后呢 这边也是一样 也是一样

00:41.840 --> 00:44.400
包括这些属性约束呢 也有很多类似的地方

00:44.920 --> 00:48.240
有没有不同点呢 他们当然有不同点 不同点在哪啊

00:48.500 --> 00:50.040
是不是在这个音色的时候啊

00:50.300 --> 00:52.340
音色的时候它这里显色东西不一样

00:52.600 --> 00:54.900
这里要显示什么东西 这个说不准

00:55.400 --> 00:56.180
这个东西说不准

00:56.440 --> 00:57.720
说这是他们

00:57.980 --> 00:59.000
不太一样的地方

00:59.500 --> 01:00.280
不太一样的地方

01:00.540 --> 01:01.560
然后呢

01:02.840 --> 01:07.440
然后就是说他们的Y层容器啊 你看这里DIV 这里是用DIV的

01:07.700 --> 01:10.260
然后深耐克车里边呢 他这里使用的是

01:10.520 --> 01:14.100
深耐克车对吧 它的Y层容器呢

01:14.360 --> 01:15.640
也不太相同

01:15.900 --> 01:16.660
也不太相同

01:16.920 --> 01:19.980
主要呢他们的差一点在这些地方啊

01:20.240 --> 01:21.520
这他们的主要的差一点

01:23.320 --> 01:25.360
那么面对这样的一个情况

01:26.120 --> 01:28.960
我们怎么来去抽离这些功能呢

01:29.500 --> 01:33.100
我们先做一个简单的就是输离就是说

01:33.360 --> 01:36.680
咱们要抽取的是什么东西的到底

01:37.440 --> 01:40.000
我们其实最简单的就是要抽取这个

01:40.760 --> 01:42.040
把这个代码抽取出来

01:42.820 --> 01:44.880
把这个音色的代码抽取出来

01:45.380 --> 01:49.220
我们希望的这三个组件呢 保持尽量的简洁

01:49.740 --> 01:52.540
怎么一个样一个简洁办简洁坊呢

01:52.800 --> 01:55.880
就是三个组件呢 他就不再是什么group了

01:56.640 --> 01:57.420
而是什么呢

01:57.920 --> 01:59.200
而是一个就是

01:59.500 --> 02:00.200
呃

02:01.040 --> 02:01.720
要怎么说

02:01.980 --> 02:03.600
而是只有一个东西

02:03.860 --> 02:04.680
他这里边只有

02:04.940 --> 02:08.980
只有这个checkbox group是个多选框的分组对吧

02:09.240 --> 02:10.000
多选框的一组

02:10.260 --> 02:11.040
一组多选框

02:11.280 --> 02:13.080
那么实际上呢我们希望他这里

02:13.600 --> 02:16.160
变得最简洁变成最简洁的

02:16.400 --> 02:17.680
只有一个多选框

02:18.700 --> 02:20.880
咱们把这个组件呢改造一下啊

02:21.140 --> 02:24.080
把改成只有一个多选框 他不再是有多个多选框了

02:25.120 --> 02:27.920
所以说我们在这个组件里边呢 我们这样子来写

02:28.900 --> 02:29.400
看着啊

02:30.160 --> 02:31.980
我们假是这个多选框吧啊

02:32.220 --> 02:36.840
这里呢肯定你们刚刚开始学习这个玩意的时候呢 肯定

02:37.100 --> 02:41.180
不太容易想到啊 不太容易去抽离这种稍微复杂一点的功能

02:41.700 --> 02:45.020
但是没关系啊 你等于用鼠了过后呢 我相信每一位同学呢

02:45.780 --> 02:46.820
都能用的比我好

02:47.080 --> 02:49.900
像什么高阶主席这些玩法 肯定能玩的比我好

02:50.400 --> 02:52.700
年轻人嘛 要鼓励嘛 对不对 要鼓励啊

02:52.960 --> 02:56.540
好 那咱们这里写个写个内组件啊

02:56.800 --> 02:58.080
给他取个名字叫checkbox

02:58.600 --> 02:59.360
checkbox

03:00.640 --> 03:01.160
extends

03:01.920 --> 03:02.680
component

03:02.940 --> 03:09.340
他只有一个 他只有一个多选框 他不是不再是一组了啊 不再是不再是一组了

03:10.100 --> 03:10.880
然后呢

03:11.380 --> 03:16.760
他给我的他需要什么属性了 他只需要表达多选框 他只需要一个属性就行了

03:17.280 --> 03:19.840
他这些属性都不要啊 都不要 还要一个属性name

03:20.100 --> 03:21.120
name属性需要

03:21.380 --> 03:26.240
我现在不用考虑其他的啊 千万一写这个组件的时候 你就千万不要去考虑什么

03:26.440 --> 03:32.860
就是歪成的 就是歪成的组件 就是高阶组件给我传什么东西 千万不要考虑这个东西

03:33.100 --> 03:34.900
他可能连高阶组件是啥都不知道

03:35.160 --> 03:39.500
他也不知道将来会不会用高阶组件来包装他 他也不知道

03:39.760 --> 03:41.540
总之呢 我做一件事

03:41.800 --> 03:43.860
就是我搞定一个文本框就行了

03:44.120 --> 03:45.900
搞定那么一个文本框就完事了

03:46.420 --> 03:48.220
好 然后还这个 还这个

03:48.980 --> 03:50.760
只需要这么三个属性

03:51.020 --> 03:53.340
我就搞定一个一个多选框

03:54.160 --> 04:01.240
好 我们继续写啊 我们这里把这些属性约束好啊 我只需要个name属性 为什么要那么属性呢 因为多选框他去里边需要连

04:02.000 --> 04:03.280
多选框里边需要连

04:03.800 --> 04:06.600
然后呢 他还需要什么属性呢 还需要一个就是那个

04:08.640 --> 04:10.440
还需要一个就是那个

04:11.200 --> 04:14.920
还需要一个就是单独的一个属性对单独的一个对象啊 单独的一个对象

04:15.320 --> 04:18.080
什么单独的一个对象呢 就是说他具有什么具有

04:18.800 --> 04:19.440
text

04:19.700 --> 04:27.000
具有value值的这么一个对象 因为我一会儿呢要显示出 要渲染出单个 我们现在只考虑单个 不要考虑什么一组

04:27.660 --> 04:34.660
只考虑单个 我们要渲染单个的就是多选框的话 我有一个value值有一个文本对吧 有个value值有个文本

04:34.940 --> 04:36.220
所以说你要把这个东西告诉我

04:36.720 --> 04:39.180
啊 就是一个对象啊 一个对象就是

04:39.780 --> 04:42.860
info嘛 就随便写个手线 他是什么类型的

04:43.460 --> 04:44.580
啊 他什么类型的

04:45.160 --> 04:48.440
他是他的类型是一个prob types

04:49.360 --> 04:51.520
就单个对象的内容啊 单个对象的内容

04:52.080 --> 04:53.640
啊 就是shap

04:55.480 --> 04:55.920
是一个对象

04:57.080 --> 05:01.360
这东西是you require啊 你必须要告诉我啊 必须要告诉我 不然我我没发现的

05:02.000 --> 05:07.120
嗯 然后呢 你告诉我这个对象里边呢 有什么有value value是什么类型prob types

05:07.640 --> 05:07.960
taps

05:08.640 --> 05:09.080
叫什么

05:10.400 --> 05:10.760
text

05:11.120 --> 05:12.880
啊 当然这些东西也可以把抽离出去对吧

05:13.100 --> 05:15.660
也可以抽 呃 实际 is required

05:15.900 --> 05:18.580
也可以把抽离出去 就这样我们不是写过那个

05:19.780 --> 05:20.100
写过啥

05:21.020 --> 05:22.060
我们把抽离出去嘛

05:23.300 --> 05:23.940
把抽离到这

05:24.660 --> 05:25.260
把抽离到这

05:26.660 --> 05:28.820
这里呢 我们许多上就是单个啊

05:29.460 --> 05:29.860
single

05:30.580 --> 05:31.220
single data

05:32.300 --> 05:34.540
单个单个对象就这样的一个类型

05:36.380 --> 05:36.900
单个对象

05:38.380 --> 05:40.900
行吧 哎 我们这样子来处理啊 这样子来处理

05:41.560 --> 05:44.320
行了啊 那么到这边啊 我们这里就直接用single data了

05:46.920 --> 05:47.160
这里

05:48.600 --> 05:49.000
taps

05:49.840 --> 05:50.600
single data

05:51.160 --> 05:51.400
ok

05:52.280 --> 05:57.160
好 我们说再来过一下啊 那个属性肯定要要 我只考虑单个啊 我不去考虑什么一组了

05:57.560 --> 06:04.080
unchained 呢 是个事件啊 unchained 呢 是个事件这个改变的时候要干嘛 我不知道啊 我反正也需要这么一个事件

06:04.480 --> 06:10.200
好 info 呢 就是我们的 我就是这个多选框 一个多选框他要显示什么东西 就是一个单独的对象

06:10.660 --> 06:15.780
然后呢 这里啊 我们当前选动了哪些是一个数组啊 选中了哪些是个数组

06:16.340 --> 06:19.380
好了 有了这个东西呢 我们就可以宣兰了 对吧 就可以宣兰了啊

06:19.860 --> 06:24.780
啊 没有其他的人 什么的事情 就已经可以宣兰了 好 怎么来宣兰了 这里

06:25.500 --> 06:27.940
怎么来宣兰了 我们这里啊 就使用

06:28.780 --> 06:29.780
render 啊 render

06:31.020 --> 06:33.660
return 反回个什么呢 就反回这个东西

06:34.340 --> 06:35.260
就反回一个这个东西

06:37.690 --> 06:39.410
我们只考虑单个啊 只考虑单个

06:40.390 --> 06:41.550
把他扩起来啊

06:42.310 --> 06:43.430
只反回这个

06:44.150 --> 06:48.630
好 key 子呢 这里不需要他们什么 key 子啊 key 子一些玩意就不要了啊 他又不是在数组里边

06:49.110 --> 06:54.030
好 input 呢 它也不得于 checkbox 啊 name 呢 就来自于 props name 对吧 来自于这个

06:54.590 --> 06:59.030
好 然后呢 value 呢 就是来自于这个就是 this props

06:59.590 --> 07:01.590
infoid value 啊 来自于这个

07:02.190 --> 07:07.110
好 check 成了 表示适逢选中 适逢选中 我们从属性里面来自于这对吧

07:07.530 --> 07:09.810
看这个数组里边是不是包含这个value

07:11.530 --> 07:14.330
是不是包含这个infoid value 是包含这个

07:14.850 --> 07:18.250
然后改变的时候怎么怎么做什么事情呢

07:19.130 --> 07:20.570
改变的时候做什么事情呢

07:22.050 --> 07:26.490
改变了就他改变的时候呢 这个这个地方我们要稍微处理一下啊 就是handle change

07:27.090 --> 07:27.770
稍微处理一下

07:29.450 --> 07:36.050
改变之后要做什么事情好 改变之后呢 我们跟之前一样对吧 要得到一个新的数组啊 得到一个新的数组

07:36.510 --> 07:43.510
啊 然后呢 如果他选中了啊 如果这一块他选中了 他自省选中了 选中了过后呢 我们把之前选中了那个呢

07:44.350 --> 07:47.270
他选中了一个加上啊 把之前的选中了给他加上一个

07:47.870 --> 07:48.270
白柳枝

07:49.150 --> 07:57.070
然后呢 如果他没有选中啊 如果他没有选中的话 那么他就把之前那个选中的从数组里面去掉啊 得到一个新的数组

07:57.550 --> 08:03.990
然后呢 看一下这个数这个数项 1000几没有值 如果有值的话 调了一下 对吧 调了一下啊 把这些东西拿起来的东西都给他

08:04.490 --> 08:06.650
啊 给他一个就行了 其他也没什么意义

08:07.570 --> 08:13.850
好了 就完了啊 那咱们就写出来这么一个单个组件啊 单个组件 那么像下面东西就不要了 就全部不要了

08:15.570 --> 08:19.010
啊 变成这个样子 看一下 单码呢 肯定是简积了不少

08:19.730 --> 08:25.650
啊 至少呢 我们没有去用什么数据啊 数据映射了啊 至少没有用这些东西了 我只确认单个

08:26.290 --> 08:33.690
单个的东西 你看是不是最小的 就是数据量是最小的了 还能还能比这个更小吗 没怕比这个更小了啊

08:34.050 --> 08:35.250
这就是最小的数据量了

08:36.370 --> 08:40.250
啊 看到没好 咱们只选了一个就行了啊 一个就行了

08:40.850 --> 08:45.970
那么接下来我们导出 导出的是什么了 导出我们肯定要导出一个组啊 肯定要有多个对不对

08:46.330 --> 08:51.410
好 那么这个多可能我们就利用高阶组件啊 来进行处理好 这里呢我们新建个文件家啊

08:52.570 --> 08:57.410
hoc 这里面呢 我们给他写上一个文件叫做取个名字啊

08:58.390 --> 09:01.150
或者这个这个文件家放这儿了啊 把放这儿

09:02.550 --> 09:10.210
放到common里面 common里面呢 写个hoc hoc 这里面呢 我们写上这么一个

09:11.210 --> 09:13.930
函数叫做vis data list

09:17.210 --> 09:20.130
就是包含数据 包含一组数据的

09:21.570 --> 09:25.760
data group 包含一组数据的

09:26.740 --> 09:32.620
重复渲染的表达组件啊 大家注释嘛 这里指示的是实现

09:34.060 --> 09:38.540
一组数据 实现一根据

09:39.580 --> 09:40.060
数据

09:41.020 --> 09:44.780
渲染出的一组表达组件

09:46.540 --> 09:47.820
好 这里能我们导出一个函数

09:49.100 --> 09:51.420
方形啊default 哎呗

09:52.320 --> 09:59.360
export default 方形 一个函数 函数的名字呢 该取名为比方说啊 就就是个名字啊vis data group

10:00.240 --> 10:04.840
你给我传一个什么呢 你给我传一个组件进来啊 你给我传一个组件进来

10:05.480 --> 10:07.480
我能够帮助你

10:08.120 --> 10:13.840
返回一个新的组件 这个新的组件就是已经分好组的 有很多个表达组件 我会重复的去现场这个东西

10:14.400 --> 10:15.720
啊 我会重复的现场这个玩意儿

10:16.840 --> 10:21.080
好 行了啊 那我们正返回什么 返回个内组件啊 内组件 这里那么导入

10:21.480 --> 10:22.840
import or react

10:24.240 --> 10:25.200
from react

10:26.120 --> 10:30.760
好 这里呢 class data group

10:31.640 --> 10:32.160
wiper

10:33.120 --> 10:35.960
一个天子react 叫component

10:36.520 --> 10:41.240
我们返回一个内组件 你给我一个组件 然后呢 我根据数据来进行重复现场

10:41.720 --> 10:46.720
那么假设我们已经实现好了啊 假设已经实现好了 那么这边呢 我们写上了这么一个单个

10:47.120 --> 10:50.440
单个多小框的组件 我们导出什么呢 导出我们就利用那个

10:50.820 --> 10:53.500
利用这个hoc就利用这个高阶组件

10:56.500 --> 10:56.820
from

11:00.660 --> 11:04.260
就是wis data group from

11:06.480 --> 11:06.960
提示呢

11:07.760 --> 11:09.240
hoc ok

11:10.200 --> 11:16.880
我们就利用这个高阶组件把它包装一下啊 包装一下这个checkbox 把它导出就完事了 那么剩下的事情交给他了

11:17.680 --> 11:23.360
啊 我们就要完成这么一个效果 这样子呢 我就尽量的把重复了 等你乱七八糟的玩意儿呢 就给他去掉了

11:23.880 --> 11:32.680
啊 就去掉了 好 然后在这里边呢 在高阶主线这里边 我们肯定还有一些属性检查对吧 好 我们挨在那来啊 首先呢是

11:33.680 --> 11:34.080
static

11:35.040 --> 11:35.440
static

11:36.320 --> 11:41.480
default props 默认属性值 默认属性值呢 你要传一个data式进来

11:42.840 --> 11:47.880
啊 就是默认属性值呢 他有个data式 就是数组 我根据这个数组来循环宣传这个东西

11:48.600 --> 11:51.960
啊 这是第一个啊 我你要传给我的啊 是一个数组

11:52.580 --> 11:55.220
当然 只能是使用者啊 使用者要传给我的

11:55.740 --> 12:03.540
然后还有什么属性值要传给我了 还有什么属性值呢 还要说属性值呢 就是啊 我想想 之前之前还有哪些 我看一下吧

12:04.460 --> 12:09.100
看一下这里 看一下这里啊 啊 还有name啊 那么属性值你要传给我

12:10.260 --> 12:12.580
啊 那么属性 那么属性我这里有用吗

12:13.460 --> 12:20.540
我这里好像也没啥用啊 我好像也没啥用啊 那我就不要不要了啊 我这里只管一个属一只 至少要把这个东西传给我

12:21.360 --> 12:25.680
好 然后呢 是属性类型 static 属性类型就是prob types

12:26.440 --> 12:31.280
属性类型的话 就是关键是给这个data式约束一下啊 咱们能把这个属性类型挠进来

12:32.240 --> 12:37.990
from 啊 导入utus

12:38.790 --> 12:41.350
common types 啊 从taps里面获取什么

12:42.590 --> 12:44.590
choose data 获取data式

12:45.430 --> 12:50.270
是这个吗 叫什么 啊 group data 是啊 我们把那个类型限制一下

12:51.090 --> 12:58.090
然后接下来是要宣然的啊 宣然的时候啊 render 宣然的时候我怎么来宣然的啊 怎么来宣然的

12:59.610 --> 13:03.050
我们宣然是不是要宣然一组 对吧 我们要宣然一组东西

13:03.690 --> 13:06.490
哎呦我这里 对的 哦 return 没写 return

13:07.610 --> 13:11.370
我们要宣然一组东西 哪一组东西呢 是不是循环宣然这个组件

13:12.170 --> 13:15.770
对吧 我要循环的去宣然这个组件

13:16.650 --> 13:20.090
好 那怎么来循环宣然这个组件了 是不是就是这样子啊

13:20.370 --> 13:24.050
我们可以通过一个data式啊 this props 什么data式

13:25.010 --> 13:29.930
可以通过它 然后呢 通过调用它的什么map

13:32.090 --> 13:39.250
每一次运行是不是宣传一次这个组件 对吧 他是单个组件嘛 那么我们把单个组件宣传一次啊 每一次运行宣传单个组件

13:39.810 --> 13:45.570
然后呢 我们要把什么给他呢 当然首先要给个key 这个呢毫无疑问啊 key 只要给

13:46.550 --> 13:53.830
那么这个里边有value 对吧 把value值啊 因为这个这个类型啊 你始终要注意这个数组的类型了 就是我们之前约束过了啊

13:54.190 --> 13:57.830
里边有外每一个对象 每一个是个对象 对象里边有value 有text

13:58.590 --> 14:04.630
啊 我们把value值给他 还有什么东西要给他呢 还有其他的所有属性啊 当我这里面

14:05.070 --> 14:07.670
其他就是要把属性遥迪一直要传过去

14:08.910 --> 14:14.990
啊 this props 把属性都该传过去 剩下的事情你去搞定吧 反正我我就是重复宣传你 剩下的事情我不管

14:15.870 --> 14:16.750
啊 属性全部传给你

14:18.070 --> 14:24.030
没问题吧 哎 我把属性就一直传给你就完事了 我这里只负了给你重复宣传 其他的事情呢 我管不了

14:24.830 --> 14:28.870
好 然后呢 这边 这边 得到了是一不是一个组件的数组 对不对

14:30.590 --> 14:33.750
comps 组件的数组得到了 那么我们把这个数组呢

14:34.430 --> 14:40.430
放到这 放到这 ok 就完事了 就完事了

14:41.170 --> 14:41.970
这就是个高界组件

14:43.010 --> 14:48.130
那咱们来看一下吧 看一下是不是能够正确的就是执行啊 并且能够得到正确的结果

14:48.970 --> 14:52.250
好 咱们这个组件啊 包这是我们单单个单个就是

14:52.930 --> 14:56.410
哎 这里啊 单个多选框啊 单个多选框

14:56.970 --> 15:02.210
然后呢 这里这里是我们的就是包装组件 它做就做一件非常非常简单的事情 就是来循环宣的

15:02.650 --> 15:06.370
便利来循环宣的 就是便利这件事了 你不用做了啊 我帮你来完成

15:07.110 --> 15:12.070
好 我们这里呢 测试一下 还是导入啊 导入之前的test

15:13.630 --> 15:15.070
import test from

15:15.950 --> 15:19.590
第二component common checkbox group test

15:20.710 --> 15:22.150
导入它 来测试一下啊

15:23.830 --> 15:29.990
啊 你看这里的index最终的功能是没有变化 只不过把一些东西抽离出去了 形成高界组件了 最终是

15:30.310 --> 15:33.510
返回的是什么 返回的是高界组件包装之后的结果

15:34.090 --> 15:39.890
那咱们看一下 哎 出问题了啊 它说什么 cannot read the property value of undefined

15:41.010 --> 15:48.730
呃 它说 哦哦哦哦 明白了 明白了 我这个属性呢 还要稍微改一下啊 还没还不是这样子啊 还要稍微改一下

15:49.010 --> 15:53.050
就除了我要把这些属性全部给你之外呢 你不是还要一个info属性吗 对吧

15:53.490 --> 16:00.690
还有一个info属性 我把这个info属性专民给你 为什么要info属性 你看之前我不是写的时候 是不是多了一个info属性

16:00.990 --> 16:04.910
对吧 我要把这个info属性要全部给你 我要把它全部给你

16:06.030 --> 16:13.530
没问题吧 这里要一字块的啊 我把这些属性要全部给你 好 那么给力呢 我就使用

16:15.690 --> 16:16.370
怎么样了 就

16:17.450 --> 16:20.650
这个info是什么 是不是就这个东西 对吧 就是个it啊 eat

16:21.810 --> 16:27.810
你看这个这个数组 其实首先要清楚的 知道每一部分市场啊 这是个数组 数组原来是每个是个对象 对吧

16:28.010 --> 16:31.650
对象里边是个value和text 而这个info属性是不是就要的是这个

16:32.070 --> 16:36.710
对吧 那么其他的属性我给你嘛 你爱用不用 反正我多给力一点嘛 你可能要用了 对不对

16:37.290 --> 16:38.650
好 你看一下啊 再来

16:39.770 --> 16:42.170
还在爆错啊 他说it is not defend

16:43.010 --> 16:50.490
他说这个东西是是低 他说是未定义的 哎 不在这吗 为什么说未定义啊

16:52.290 --> 16:54.410
我看一下啊 看一下 这是什么回事

16:55.770 --> 17:03.940
再刷新次 他报怎么错啊 他说在哪一行我看一下哪一行爆错的

17:06.430 --> 17:12.630
哦 在这里面啊 在这里面不是我这里的错误 是在这里面错误 之前的有些地方没改过来啊

17:12.910 --> 17:18.590
没有改过来 我看一下这里哪里还在使用 it 哦在这啊 应该是info的

17:19.310 --> 17:22.710
info this crops info their text

17:23.550 --> 17:25.390
啊 这里 在这里出了问题

17:26.630 --> 17:27.630
好 再刷新次啊

17:29.580 --> 17:33.940
再看 好 说出来了 对 我咱们再看一个结构啊

17:34.920 --> 17:38.520
再看几个这个这个这个结构啊 那么现在我们多了一个wiper看到没

17:39.200 --> 17:43.840
啊 我们多了一个wiper啊 那么这里边我们看是选中啊 选中

17:44.400 --> 17:47.200
你看没有 是不是一样的效果啊 我们选中选中选中

17:47.800 --> 17:52.840
你看这里这个task这个就是主件啊 它里边的状态是不是也跟着改了 为什么他能跟着改

17:53.280 --> 18:01.560
为什么 是因为他把这个这个状态呢传给谁了 传给这个data group wiper的啊 他传给传给他了 你看props里边是不是传给他了

18:01.920 --> 18:03.840
choose data 是对啊 传给他了

18:04.400 --> 18:11.200
好 作为属性传给他了 那么他又把这个属性的又传给了这个切个boss 看没有 又把这个属性传过去了 把那些把那属性全部全部扔过去了

18:11.680 --> 18:12.480
全部都扔过去了

18:13.680 --> 18:16.800
好 扔过去了过后 这里边发生了onchain几事件 是不是

18:17.360 --> 18:25.160
是不是onchain几事件哪来的 是他传给他 他又传给他的 那么这里调用onchain几是不是相当于是调用task的onchain几

18:25.600 --> 18:27.920
对吧 taskonchain几里边他又把他状态改了

18:28.340 --> 18:36.900
就是这么一层一层传给过去了 这里边只做他自己需要做的事情就像他 剩下的事情就把一些属性的缘分不动的传过去 让他又去接着做事情

18:38.140 --> 18:45.060
好 这样子呢我们就把至少把什么抽离出去了 把这个循环渲染是不是抽离出去了 对吧 就把这一块抽离出去了

18:45.980 --> 18:47.420
哎 这是关于这一块

18:49.140 --> 18:56.260
那当然我们还可以把这个怎么lame了这些东西啊 也给他抽离出去啊 把这些内行检查了 也给他抽离出去 不过呢我觉得没有必要

18:56.560 --> 19:02.360
有lame属性让他保持自己吧 因为这个切个box呢 他本身他只他只关注自己

19:02.680 --> 19:07.200
只关注一个多权框 那一个多权框他确实需要lame属性啊 他不会去考虑什么

19:07.800 --> 19:15.800
我到时候要高阶主见 他不会去考虑这个问题啊 完全不考虑这个问题 他只把自己的事情做好就行了 他自己需要lame那就ok那就有lame

19:17.160 --> 19:24.440
好 这是这里 这一块 那么现在我们继续来改造啊 那么现在这个radial box group 是不是一样的道理 对吧

19:24.740 --> 19:28.340
这里一样一样的道理啊 那咱们来写一个class

19:30.300 --> 19:32.900
radialradialextence

19:34.220 --> 19:36.060
componentcomponent

19:37.940 --> 19:42.900
好 这里边呢 对的啊 没问题啊 默认属性值 默认属性值

19:44.180 --> 19:50.220
然后就没什么默认属性值啊 对吧 这个东西没有这个白柳值也不需要了 对吧 没有默认属性值

19:50.720 --> 19:51.360
propertypes

19:52.080 --> 19:59.320
这里 这里呢 它只需要lame啊 只需要lame 还有什么 还有value啊 还有value 当然还有text啊 当然还有text

19:59.960 --> 20:04.320
还有这个 所以说呢 这里还是是不是还是要传一个东西进来 就是data

20:05.240 --> 20:08.920
info 啊 要传一个info进来 那么这里的类型呢 是什么

20:09.600 --> 20:12.400
类型是不是跟之前一样的啊 types single data

20:13.160 --> 20:16.520
单一的数据啊 这个昂迁就传过来 其他的没了啊 没了

20:16.980 --> 20:21.220
好 然后呢 render 的时候呢 我做一件事就行了啊 render 的时候做一件事

20:22.300 --> 20:23.580
就是return

20:26.340 --> 20:27.300
对 render

20:28.740 --> 20:29.300
return

20:30.580 --> 20:36.340
反回怎么了 反回这一个啊 这个来自于哪呢 zinfo 点啊 z props

20:36.900 --> 20:39.580
info 点value 这里就 is required

20:40.040 --> 20:46.640
好 这是这一块啊 然后呢 什么文本是 z props info 点text

20:47.200 --> 20:52.320
好 name 属性呢 就来自于name 属性啊 value 呢 就来自于info 点value

20:52.720 --> 20:59.360
好 那么这里呢 适逢选中了 非常非常简单啊 非常非常简单啊 就是当前选中的啊

20:59.840 --> 21:01.920
给我一个当前选中的value

21:03.600 --> 21:04.560
给我一个当前选中的

21:05.520 --> 21:06.000
value 值

21:06.980 --> 21:12.780
好 当前选中的 给我就行了 好 那么这里呢 就是 the props value 是不是等于

21:13.740 --> 21:15.100
this props

21:16.180 --> 21:17.100
info 点value

21:18.780 --> 21:25.180
就是这个info 里边 它保存的是什么呢 保存的是那个 就是这一个单选框 它的value 值

21:25.740 --> 21:32.580
这个value 值呢 表示 当前表单里边选中的value 值啊 是这么个意思啊 这里不能用 不能用那个

21:32.780 --> 21:35.580
不能用双赢好啊 yes props

21:37.840 --> 21:42.520
这个表示的是 当前选中的value 值啊 这是两个意思啊 这个表示

21:43.560 --> 21:45.840
当前选中的value 值

21:47.000 --> 21:50.960
好 这个表示的是 当前单选框的value 值

21:51.640 --> 21:57.520
所以有可能不一样 如果当前选中的 不是这个当前框的value 是不是没有选中 对了 它是切个词 表示的意思就是

21:58.040 --> 21:59.640
有可能没有选中 没有选中

22:00.420 --> 22:03.460
好 handle 签计呢 handle 签计其实没有什么事情可以做

22:04.060 --> 22:10.420
handle 签计直接调用这个 on 签计就行了 on 签计 当然呢 你要把这个数据要传过去啊 就是新的value 值

22:10.740 --> 22:13.940
要传过去 好 这里呢 我们就这样子写吧

22:16.580 --> 22:25.500
就一个 一个函数啊 一个函数 就是 this props on 签计 如果有值的话 那么就调用 this props on 签计

22:25.820 --> 22:28.780
把这个value 值给你传进去啊 this props

22:30.620 --> 22:31.460
infoge.value

22:32.660 --> 22:37.340
就是把我把我当前这个文门框的value 值给你传过去啊 你爱怎么用怎么用

22:38.300 --> 22:43.020
行了啊 那么这个就就写完了 他就不是一组的单选框了啊 你看 带码简洁的不少

22:43.820 --> 22:44.540
只有这么一点点了

22:45.860 --> 22:50.140
好 剩下的事情是不是又来高阶组建 对吧 高阶组建 ok 那咱们

22:50.860 --> 22:51.340
export

22:52.420 --> 22:52.820
default

22:53.360 --> 22:54.160
把导入进来啊

22:55.600 --> 22:56.120
import

22:57.380 --> 23:03.480
就这一块呢 稍微要绕一点啊 大家可能不是那么习惯 因为这里呢 实际上是用到的一种模式 叫做装饰器模式

23:05.640 --> 23:06.440
可能会稍微绕一点

23:08.770 --> 23:09.850
这里hoc

23:11.010 --> 23:15.330
这种原理原理的其实非常简单 原理就是我把那个

23:16.690 --> 23:23.650
数据循环渲染给你搞定了 剩下的事情呢 就当一个地方我肯定搞不进 当个地方鬼知道你要干嘛了 对不对

23:23.830 --> 23:28.750
就是说当个地方的你自己去搞定 我只是把数据循环渲染的这些事情给你搞定了

23:29.630 --> 23:32.030
好 咱们来看一下啊 这里的task 行不行

23:33.430 --> 23:37.310
啊 这里呢 就是radio group

23:38.310 --> 23:40.230
boss group

23:41.110 --> 23:42.830
好 看一下啊 换一下测试

23:44.750 --> 23:50.150
好 这里咱们看一下task 目前的白柳只是空的啊 选中一个啊 你看

23:50.970 --> 23:59.410
是不是也搞定了 练习也搞定了 你看我们这些代码就不用重复继续书写了 对吧 不用重复继续书写了 这套重复渲染的一块就没有必要重复继续书写了

23:59.970 --> 24:00.570
直接来就行了

24:01.690 --> 24:09.050
好 还剩下一个东西就是那个词 那是不是一样的道理 对吧 一样的道理啊 咱们在那个词里面再写一下啊

24:09.970 --> 24:10.090
啊

24:11.570 --> 24:13.770
就不担讯不是担讯框了啊 就是class

24:15.130 --> 24:17.490
option 我们只渲染一个option就行了

24:18.470 --> 24:19.750
啊component

24:22.390 --> 24:27.310
只渲染一个option啊 然后这些东西都没必要了啊 就要一下这个 这个东西要要

24:28.110 --> 24:32.430
这个东西需要 那么属性我都不要了 那么属性对我来说没什么意义 对不对

24:32.990 --> 24:37.070
啊 没有什么意义啊 那么属性都没必要要了 啊 这他属性肯定没必要要了

24:37.510 --> 24:43.590
vendor呢 就当前选中的这个要要啊 这个要要当前选中的是谁 当前选中的是谁去不去啊 好像也不需要了

24:43.930 --> 24:46.370
啊 也不需要了 嗯 当前选了

24:46.930 --> 24:50.850
后来也不需要了 咋的不需要了 这个东西不需要属性 只需要一个属性 就是info

24:51.730 --> 24:58.690
啊info 因为他也不是谁那个策元素 对吧 他不是谁那个策啊 他不是谁那个策 所以说呢 没有必要要这些东西了

24:59.450 --> 25:03.250
好info里边 他是什么呢 他是来自于types里边啊

25:04.330 --> 25:04.890
啊 什么

25:06.410 --> 25:07.010
single data

25:08.290 --> 25:09.690
他是来自于这其他就没了

25:10.890 --> 25:13.490
然后就是vendor了啊 就只剩只剩下vendor了

25:13.890 --> 25:15.730
vendor返回啥呢 就返回这个玩意儿

25:17.650 --> 25:18.850
这极其简单

25:19.330 --> 25:19.610
vendor

25:21.050 --> 25:22.530
就把这再拆分细一点

25:24.210 --> 25:26.410
反回啥就反回这个玩意儿 就反回一个option

25:27.490 --> 25:32.930
没有什么key key没有 就一个value value来自于哪 zs props info 点value

25:33.490 --> 25:38.690
然后呢 这里来自于哪呢 就是zs props info 点tags完了 没了

25:39.250 --> 25:39.530
option

25:41.250 --> 25:42.090
好 咱们来试一下吧

25:42.590 --> 25:43.550
啊 是不是这么诚气呢

25:44.550 --> 25:52.510
啊 这里呢 肯定要多多讨讨讨讨出一些问题啊 肯定要多多讨讨讨出一些问题 没关系啊 咱们来看一下一会儿知道怎么解决了 先把这个高线组件导入进来

25:58.180 --> 26:10.430
import with 复制一下嘛 导入进来 然后这里导出with data group 把这个option放进去

26:11.590 --> 26:17.070
导出 导出这么一个组件 好 保存啊 那咱们看一下这里的tags 这个先注释一下嘛

26:18.750 --> 26:22.550
好 这里呢 再换一个 换一个 换一个测试 就是snext

26:23.230 --> 26:24.150
一边tags测试

26:25.590 --> 26:33.030
好 你会发现他变成这个样子的 为什么 因为他我得到了倒是没有什么问题 得到了是什么 得到了是一组的snext元素 你看一下结构啊

26:33.670 --> 26:38.590
我得到了元素结构 就是组件结构里边呢 他看外面加个包装器啊 这个没啥问题

26:38.990 --> 26:43.150
然后呢 我们关键是在这里面得到全是option看到没 全是这个玩意

26:43.930 --> 26:50.570
那外面没有套容器了 对吧 而且容器里边什么还有什么onchain 这些都都没有套了 对不对 这都没有套进去

26:51.050 --> 26:52.250
那怎么办啊 这个时候

26:53.050 --> 27:00.650
这个时候怎么办啊 你要知道凝活处理啊 这里不是要外面套一个容器吗 容器里边不是还有什么value吗 对不对 还有什么value

27:01.050 --> 27:06.050
啊 这东西我们都现在现在都不是都没有吗 ok 我们再写个组件不完了吗

27:06.810 --> 27:08.970
啊 再写个组件 class 什么

27:09.530 --> 27:12.050
就是snext啊snext

27:12.710 --> 27:13.030
from

27:13.790 --> 27:14.870
哎呦 一个stance

27:16.070 --> 27:16.670
component

27:17.630 --> 27:23.470
再写个组件吧 对不对 我们先把这个option啊 先把这个option包装一下

27:24.270 --> 27:26.750
啊 包装一下得到什么得到一个option

27:28.790 --> 27:29.270
option

27:30.190 --> 27:32.710
嗯 option opt group

27:33.870 --> 27:40.910
把包装一下啊 得到一个就是opt分组的这么一个option 就是得到这么一个东西啊

27:41.450 --> 27:45.010
他这个组件可以把option呢 渲染速度很多个option

27:45.890 --> 27:50.850
啊 我们通过高阶组件把它得到 然后呢 我们在外面再继续包装 怎么来包装呢

27:51.410 --> 27:54.690
render里面反回啥 反回的是一个snext元素

27:56.130 --> 27:58.530
反回的是一个 不是大写的啊

27:59.570 --> 28:05.370
snext元素 啊 反回这个 这个里边呢 写上什么 组件什么opt

28:06.930 --> 28:08.410
group 对吧 写上这么一个组件

28:09.070 --> 28:13.030
这个组件是不是要一些数据信息 对吧 我把我自己属性的所有东西

28:15.460 --> 28:18.540
我把我的属性再包装一次啊

28:19.580 --> 28:25.780
把我的把我的属性的全部给你啊 全部给你啊 我的作用呢 就是在外面套一个snext

28:26.660 --> 28:33.300
好 当然snext是不是有name对不对 name 是不是来自于zs.name 当然这里的也可以加上一些name属性啊

28:33.700 --> 28:36.260
不是有name属性吗 对不对 我们也可以在这里加上

28:37.180 --> 28:38.220
把这个注射去掉

28:38.720 --> 28:40.560
好 name属性啊

28:41.400 --> 28:44.760
name属性了 我说这里只关心name属性 name 那就是什么

28:46.640 --> 28:49.680
prob types of stream is required

28:51.440 --> 28:56.880
还有什么属性呢 value 就当前选中的值 对吧 当前选中的值 当前选中的值呢 是一个字母刺

28:58.120 --> 28:58.920
当前选中的值

28:59.600 --> 29:02.000
value 还有什么呢 还有一个就是unchanged

29:02.720 --> 29:04.920
unchanged 是prob types

29:05.900 --> 29:12.500
放开 我就再包装一层嘛 因为我这个高阶主件他就做一件事 他没有做那么多事情 他就做一件事

29:12.980 --> 29:16.780
就是循环渲染出一个东西 你看吧 这个高阶主件其实里面没啥

29:17.660 --> 29:18.220
哎 好了去

29:19.380 --> 29:24.980
aqc 你看这边是不是其实没啥 对吧 就是循环渲染一个东西 啊 其他的事情他也不做了

29:25.460 --> 29:33.020
所以说呢 我们那就把循环能够循环渲染的那个东西呢 作为主线得到 然后呢 我们把放进来就完事了 对吧 把放进来就完事了

29:33.440 --> 29:40.160
好 我我 然后现在我写这个主件的时候呢 只关心这个主件需要的东西 就是每个主件就做自己的事情 其他事情不要管

29:41.240 --> 29:51.400
好 然后呢 这里边啊 name 啊 这样子渲染 这样子弄出来了 过后了 现在呢 有这么一个属性检查了 然后这里边是不是可以写什么value 了 对吧

29:51.880 --> 29:57.640
收空吧 对不对 来自于s props.value 然后呢 再写什么 再写unchanged

29:58.240 --> 30:00.520
unchanged 他改变的时候呢 干嘛呢

30:01.340 --> 30:02.820
unchanged 干嘛呢 是不是

30:04.140 --> 30:10.420
要做就是跟刚才差不多的事情 跟那个单元光差不多的事情 对不对 这里呢就是z props

30:11.900 --> 30:18.220
unchanged 存在吗 如果存在的话 this props unchanged 把这个参数啊 this props

30:19.380 --> 30:21.540
z 是把当前那个value 值

30:22.040 --> 30:27.560
ok 算一下啊 这样子的话 我们在这里写个e啊 e

30:28.440 --> 30:34.240
把1点target点value 传给你啊 1点target的value 传给你就完事了

30:35.360 --> 30:35.840
没问题吧

30:37.480 --> 30:43.600
没问题吧 总之吧 要改变的value 值传给你 这是我们之前约定好的 好 我最终导书这个玩意就行了

30:44.160 --> 30:49.920
this port default 那就再包装一下 总之呢 我们现在只搞定了一件事 就是把那个

30:50.620 --> 30:55.340
把什么呢 就是把一个重复宣展的数据给他提出来了 给你出问题了

30:57.780 --> 31:01.100
他说什么 only one default export

31:01.900 --> 31:09.990
哦 这导出多了 是吧 下面又导出了一次啊 去掉 好 你看 是不是搞定了 对吧

31:10.990 --> 31:15.750
啊 是一样的效果啊 你看这个value 啊 value 值 你看这里是不是变化了

31:17.070 --> 31:21.230
好 其实我们这里做的事情没有那么多啊 也没有那么复杂 你感觉上好像是绕

31:21.630 --> 31:28.230
挺绕圈的 你始终注意就是我们高階组建的意义在哪 高階组建的就是提取其中一个单个功能

31:28.630 --> 31:33.870
把提成高階组建 千万不要把一大堆功能全部提出去啊 你看我们这里的确就这么一件事情

31:34.390 --> 31:36.590
就是你给我一个数组 然后把它循环宣展出来

31:37.310 --> 31:39.590
虽然事情我也干不了啊 我也也不管我的事

31:40.150 --> 31:44.510
我就是吧 你看我这里没有显示任何其他元素 就是把它进行循环宣了

31:45.230 --> 31:47.190
那其他事情我不做了 我不做了

31:48.170 --> 31:56.530
原来的意思 这就是形成了这么一种结构 那么剩下的事情不要说我得到一个新的组建 你看这你看这里啊 这个东西有的可能不知道这个东西是啥

31:56.770 --> 31:58.530
这个东西相当于是对应到

31:59.410 --> 32:01.730
这个组建啊 相当于是得到这么一个组建

32:02.650 --> 32:06.050
那么你这里就是用这个组建呗 还剩下什么呢

32:07.690 --> 32:07.890
好

32:08.970 --> 32:14.770
总之有了这个高階组建之后呢 我们就可以产生这么一个效果 就是咱们边写组建的时候呢

32:15.230 --> 32:18.750
就关做这个组建相关的事情就行了 跟他没关系的就不用管

32:19.310 --> 32:26.150
可以交给高階组建去做 而高階组建在处理的时候呢 一个高階组建他就做的 他们关心的一件事情就够了

32:26.590 --> 32:31.870
不要关心太多的事情 这样子呢 每一个部分的就不会太复杂 就会变得非常简洁

32:33.070 --> 32:37.510
好吧 那么大家下下下来尝试的写一下啊 这一块写不出来 不管你啊 因为

32:38.390 --> 32:41.310
刚开始学程序 应该学到这的话

32:42.250 --> 32:43.730
没有还没有一年的

32:45.290 --> 32:51.570
经验吧 写成序的经验啊 经历还没有一年吧 所以一开始写不出来这种带模式的东西啊

32:52.250 --> 32:56.410
是很正常的啊 慢慢来嘛 慢慢来 多看啊 多熟悉就行了

32:57.410 --> 32:59.330
好 这是关于高階组建这么一个小的demo

