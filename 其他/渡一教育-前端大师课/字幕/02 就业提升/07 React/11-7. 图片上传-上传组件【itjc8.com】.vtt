WEBVTT

00:00.620 --> 00:05.620
这节课咱们来学习文件上传的界面和功能

00:05.620 --> 00:09.620
因为我们上节课已经了解了文件上传它有个接口的

00:09.620 --> 00:11.620
我给大家提供了这个接口

00:11.620 --> 00:13.620
其实你们以后学到逗的解释之后

00:13.620 --> 00:16.620
你们也能自行去开发这样的一个接口出来

00:16.620 --> 00:19.620
这个也很简单 没有那么的复杂

00:19.620 --> 00:21.620
因为我那边服务器的话

00:21.620 --> 00:23.620
因为我怕我自己的服务器空间不够

00:23.620 --> 00:26.620
所以说我是跟那个漆流云

00:27.620 --> 00:30.620
所以说你这个图片最终是放到漆流云上面

00:30.620 --> 00:34.620
那一块可能你要去读一下它的API

00:34.620 --> 00:35.620
但是呢

00:35.620 --> 00:37.620
如果说你保持到自己的服务器上的话

00:37.620 --> 00:38.620
那么一点都不复杂

00:38.620 --> 00:39.620
你们以后会学习的

00:39.620 --> 00:40.620
总之呢

00:40.620 --> 00:42.620
我们上节课已经有了这么一个接口

00:42.620 --> 00:43.620
那么这一课呢

00:43.620 --> 00:46.620
我们就真实的把这个文件上传给它实现

00:46.620 --> 00:49.620
为了方便我们后边使用了

00:49.620 --> 00:50.620
我决定了

00:50.620 --> 00:53.620
把这个文件上传

00:53.620 --> 00:54.620
主要是上传图片

00:54.620 --> 00:57.620
我们的举例的话都是以图片为例子

00:57.620 --> 00:58.620
因为我那个接口的话

00:58.620 --> 01:00.620
也只能接受图片

01:00.620 --> 01:02.620
我们为了给大家举例的话

01:02.620 --> 01:03.620
这里以图片为例

01:03.620 --> 01:04.620
好

01:04.620 --> 01:05.620
首先呢

01:05.620 --> 01:06.620
我在这个工程下边

01:06.620 --> 01:08.620
src目录下边呢

01:08.620 --> 01:10.620
这个component文件夹里边

01:10.620 --> 01:11.620
在这里边

01:11.620 --> 01:12.620
我们这里呢

01:12.620 --> 01:13.620
新建一个文件夹

01:13.620 --> 01:14.620
新建一个文件夹

01:14.620 --> 01:16.620
给它取名为ervata

01:16.620 --> 01:17.620
表示头像

01:17.620 --> 01:19.620
一个头像逐渐

01:19.620 --> 01:22.620
就只能上传单张图片

01:22.620 --> 01:23.620
我们这里呢

01:23.620 --> 01:25.620
写上这个index.js

01:25.620 --> 01:26.620
先把这个结构写出来

01:26.620 --> 01:28.620
index.css

01:28.620 --> 01:30.620
把结构写出来

01:30.620 --> 01:31.620
一个函数组件

01:31.620 --> 01:33.620
然后再导入

01:33.620 --> 01:37.620
styles from index.css

01:37.620 --> 01:39.620
把结构写出来

01:39.620 --> 01:42.620
那么这个文件里边写

01:42.620 --> 01:44.620
这个组件里边写啥呢

01:44.620 --> 01:45.620
当然呢

01:45.620 --> 01:48.620
我们可以用自己的方式来实现图片上传

01:48.620 --> 01:49.620
行不行

01:49.620 --> 01:50.620
不用那个nd行不行

01:50.620 --> 01:51.620
也可以

01:51.620 --> 01:52.620
因为我们知道了图片上传

01:52.620 --> 01:54.620
无非就是一个index.css请求

01:54.620 --> 01:55.620
对不对

01:55.620 --> 01:56.620
我们用fetchapi

01:56.620 --> 01:57.620
是不是就可以实现了

01:57.620 --> 01:58.620
对吧

01:58.620 --> 01:59.620
发送一个post请求

01:59.620 --> 02:00.620
那么post请求里边

02:00.620 --> 02:01.620
该填什么数据

02:01.620 --> 02:02.620
该填进去

02:02.620 --> 02:03.620
只不过呢

02:03.620 --> 02:04.620
稍险有点麻烦

02:04.620 --> 02:05.620
我们最好了

02:05.620 --> 02:06.620
是可以使用

02:06.620 --> 02:07.620
它给我们提供的

02:07.620 --> 02:09.620
这个uploader这个组件

02:09.620 --> 02:11.620
upload这个组件

02:11.620 --> 02:12.620
那么可以非常方便的

02:12.620 --> 02:14.620
来实现文件上传

02:14.620 --> 02:15.620
好

02:15.620 --> 02:16.620
那么这里呢

02:16.620 --> 02:17.620
我们就直接

02:17.620 --> 02:19.620
书写上这么一个组件

02:19.620 --> 02:21.620
名字呢叫做upload

02:21.620 --> 02:22.620
导入啊

02:22.620 --> 02:24.620
为了一会儿测试

02:24.620 --> 02:25.620
我们先测试一下啊

02:25.620 --> 02:28.620
这是一个投降上传

02:28.620 --> 02:30.620
我们先测试一下

02:30.620 --> 02:31.620
我们在哪个页面测试呢

02:31.620 --> 02:33.620
就在这个index吧

02:33.620 --> 02:34.620
就在这里测试一下

02:34.620 --> 02:35.620
就测试一下吧

02:35.620 --> 02:36.620
或者我们加一个test吧

02:36.620 --> 02:39.620
upload test

02:39.620 --> 02:42.940
upload test

02:44.940 --> 02:46.940
我们这里就导入

02:46.940 --> 02:49.940
upload test

02:50.940 --> 02:52.940
这里导入我们那个组件

02:52.940 --> 02:58.250
import

02:58.250 --> 03:00.250
组件呢在上级目录

03:00.250 --> 03:03.250
component ofata里边

03:03.250 --> 03:05.250
这是我们的组件

03:05.250 --> 03:07.250
导入进来

03:07.250 --> 03:08.250
好

03:08.250 --> 03:09.250
行了啊

03:09.250 --> 03:10.250
咱们把这个放这儿

03:10.250 --> 03:11.250
好

03:11.250 --> 03:12.250
保存

03:12.250 --> 03:13.250
然后我们在页面上

03:13.250 --> 03:14.250
访问一下

03:14.250 --> 03:17.250
咱们的例子是upload test

03:17.250 --> 03:18.250
不是在投降上传吗

03:18.250 --> 03:19.250
对不对

03:19.250 --> 03:20.250
咱们来测试一下

03:20.250 --> 03:21.250
那么现在呢

03:21.250 --> 03:23.250
咱们用心力来写这么一个组件

03:23.250 --> 03:25.250
写这么一个组件

03:25.250 --> 03:26.250
好

03:26.250 --> 03:27.250
那么首先呢

03:27.250 --> 03:28.250
我们不想自己写

03:28.250 --> 03:29.250
所以说呢

03:29.250 --> 03:30.250
我们可以使用

03:30.250 --> 03:32.250
他给我们提供了这个upload的组件

03:32.250 --> 03:34.250
提供了这么一个组件

03:34.250 --> 03:36.250
我们要实现一个投降上传

03:36.250 --> 03:37.250
有点类似于啥呢

03:37.250 --> 03:39.250
类似于他给我们提供了这个

03:39.250 --> 03:40.250
这个例子

03:40.250 --> 03:41.250
用户投降这个例子

03:41.250 --> 03:42.250
我们点击看一下

03:42.250 --> 03:43.250
怎么他写的代码呢

03:43.250 --> 03:45.250
你不是那么容易阅读的懂

03:45.250 --> 03:47.250
大概就这个意思

03:47.250 --> 03:48.250
再点击

03:48.250 --> 03:51.820
换一下

03:51.820 --> 03:53.820
大概就这个意思

03:53.820 --> 03:54.820
好

03:54.820 --> 03:56.820
我们来搞定这件事情

03:56.820 --> 03:57.820
首先

03:57.820 --> 03:58.820
那么用这个组件

03:58.820 --> 03:59.820
这个组件怎么用呢

03:59.820 --> 04:00.820
我就直接告诉大家

04:00.820 --> 04:02.820
因为这节课的东西呢

04:02.820 --> 04:03.820
你能不能读文档了

04:03.820 --> 04:04.820
当然可以读文档

04:04.820 --> 04:05.820
不过呢

04:05.820 --> 04:06.820
可能呢

04:06.820 --> 04:08.820
对初学者来说

04:08.820 --> 04:09.820
要把文件上传

04:09.820 --> 04:10.820
这回搞清楚的话

04:10.820 --> 04:12.820
读文档可能有点费力

04:12.820 --> 04:13.820
我就直接给大家说

04:13.820 --> 04:14.820
好

04:14.820 --> 04:15.820
那么这里呢

04:15.820 --> 04:16.820
我们倒入这个upload的

04:16.820 --> 04:17.820
upload的组件

04:17.820 --> 04:21.190
从nd里面

04:21.190 --> 04:22.190
nd里面

04:22.190 --> 04:23.190
倒入什么呢

04:23.190 --> 04:25.190
倒入这个upload的组件

04:25.190 --> 04:26.190
好

04:26.190 --> 04:27.190
这个组件怎么用呢

04:27.190 --> 04:28.190
直接用

04:28.190 --> 04:29.190
直接用

04:29.190 --> 04:31.190
好我们这里直接用它

04:31.190 --> 04:32.190
就写完了

04:32.190 --> 04:33.190
咱们来看一下吧

04:33.190 --> 04:35.190
看一下界面上有东西吗

04:35.190 --> 04:36.190
说啥东西都没有

04:36.190 --> 04:38.190
什么界面都没有

04:38.190 --> 04:39.190
而且点了有反应吗

04:39.190 --> 04:40.190
没反应

04:40.190 --> 04:41.190
也就是说

04:41.190 --> 04:42.190
这个组件呢

04:42.190 --> 04:45.190
它本身是不参与任何显示的

04:45.190 --> 04:47.190
我们这里说一个组件

04:47.190 --> 04:53.270
关于这个upload的组件

04:55.780 --> 04:57.780
它本身不做任何显示

04:57.780 --> 04:59.780
本身不做

04:59.780 --> 05:01.780
任何显示

05:01.780 --> 05:03.780
仅提供功能

05:03.780 --> 05:05.780
仅提供功能

05:05.780 --> 05:07.780
要显示什么

05:07.780 --> 05:09.780
需要在

05:09.780 --> 05:13.780
需要作为该组件的内容传递

05:13.780 --> 05:16.780
就是作为它的 children 传递进去

05:16.780 --> 05:17.780
也就是它要显示什么

05:17.780 --> 05:18.780
连车里边自己写

05:18.780 --> 05:19.780
随便写它都可以

05:19.780 --> 05:20.780
好比方说

05:20.780 --> 05:21.780
我们就写成一段文字

05:21.780 --> 05:22.780
你看一下

05:22.780 --> 05:23.780
这段文字出来了

05:23.780 --> 05:25.780
然后现在我们点击一下这段文字

05:25.780 --> 05:27.780
你看是不是弹出一个

05:27.780 --> 05:28.780
弹出一个框框

05:28.780 --> 05:29.780
让你选择文件

05:29.780 --> 05:30.780
对吧

05:30.780 --> 05:31.780
是不是就弹出来了

05:31.780 --> 05:32.780
对不对

05:32.780 --> 05:34.780
所以说你这里写啥呢

05:34.780 --> 05:35.780
它就会把它

05:35.780 --> 05:36.780
赋予一个点击过后

05:36.780 --> 05:38.780
能够上传文件的功能

05:38.780 --> 05:39.780
你可以认为

05:39.780 --> 05:40.780
这个upload

05:40.780 --> 05:42.780
它只是给你提供了一个容器

05:42.780 --> 05:43.780
你要显示什么

05:43.780 --> 05:44.780
随便你显示

05:44.780 --> 05:46.780
反正你显示的东西

05:46.780 --> 05:47.780
你只要一点击

05:47.780 --> 05:48.780
不管你显示啥

05:48.780 --> 05:49.780
只要你一点击

05:49.780 --> 05:51.780
它就会给你弹出来这么个框框

05:51.780 --> 05:52.780
让你选择文件

05:53.780 --> 05:54.780
对吧

05:54.780 --> 05:55.780
这就有意思吧

05:55.780 --> 05:56.780
好

05:56.780 --> 05:57.780
接下来我们再来看

05:57.780 --> 05:59.780
我们通常会显示一个啥呢

05:59.780 --> 06:00.780
通常我们在这里

06:00.780 --> 06:02.780
会显示一个按钮

06:02.780 --> 06:03.780
button

06:03.780 --> 06:04.780
我们再导入

06:04.780 --> 06:06.780
导入那个nd里面按钮

06:06.780 --> 06:07.780
它就不提供了按钮吗

06:07.780 --> 06:08.780
组合起来使用

06:08.780 --> 06:10.780
当然你可以显示任何东西

06:11.780 --> 06:12.780
显示个按钮

06:12.780 --> 06:14.780
比方说我们上传头像

06:14.780 --> 06:15.780
上传头像

06:15.780 --> 06:16.780
保存

06:16.780 --> 06:17.780
你看一下

06:17.780 --> 06:19.780
这边一个上传头像的按钮

06:19.780 --> 06:22.780
还可以给它一个什么type值的primary

06:23.780 --> 06:24.780
对吧

06:24.780 --> 06:25.780
上传头像的按钮

06:25.780 --> 06:27.780
点击过后是不是可以上传了

06:27.780 --> 06:28.780
对吧

06:28.780 --> 06:29.780
就实现这么一个功能

06:29.780 --> 06:30.780
要upload了

06:30.780 --> 06:32.780
它只是把它的q准

06:32.780 --> 06:33.780
给它附于一个点击事件

06:33.780 --> 06:34.780
你可以认为它是个容器

06:34.780 --> 06:35.780
给它容器出色的点击事件

06:35.780 --> 06:36.780
点击过后

06:36.780 --> 06:38.780
实际上就是弹出一个

06:38.780 --> 06:40.780
上传的对号框

06:40.780 --> 06:41.780
好

06:41.780 --> 06:42.780
这里边还有很多问题要解决

06:42.780 --> 06:43.780
一个来吧

06:43.780 --> 06:45.780
首先这个按钮呢

06:45.780 --> 06:46.780
我们希望

06:46.780 --> 06:47.780
给它一个图标

06:47.780 --> 06:48.780
对吧

06:48.780 --> 06:49.780
这个东西可有可无

06:49.780 --> 06:51.780
随便你写啥都无所谓

06:51.780 --> 06:52.780
做好看一点吧

06:52.780 --> 06:55.780
图标里边有一个图标叫做upload

06:55.780 --> 06:56.780
upload

06:56.780 --> 06:57.780
有这么一个图标

06:57.780 --> 06:59.780
这个图标显示出来看一下吧

06:59.780 --> 07:00.780
就这个样子

07:00.780 --> 07:02.780
就更加像一个上传按钮了

07:02.780 --> 07:04.780
更加像一个上传按钮

07:05.780 --> 07:08.780
然后我们还希望呢

07:09.780 --> 07:11.780
我们还希望呢就是

07:13.780 --> 07:14.780
我们点击一下

07:14.780 --> 07:15.780
点击一下

07:15.780 --> 07:16.780
先用一下功能

07:16.780 --> 07:17.780
我们选择当图片

07:18.780 --> 07:20.780
那个图片是不是出现在下面的

07:20.780 --> 07:21.780
对吧

07:21.780 --> 07:22.780
你看一下下面

07:22.780 --> 07:24.780
图片是不是出现在下面的

07:24.780 --> 07:25.780
对不对

07:25.780 --> 07:26.780
这个样式呢

07:26.780 --> 07:29.780
可能不是我们想要的一个样式

07:29.780 --> 07:30.780
看没

07:30.780 --> 07:31.780
图片它说

07:31.780 --> 07:32.780
它是以文本的形式

07:32.780 --> 07:33.780
我上传哪些图片

07:33.780 --> 07:35.780
是不是以文本的形式

07:35.780 --> 07:37.780
一条一条的列出来的

07:37.780 --> 07:38.780
对吧

07:38.780 --> 07:39.780
是不是这个意思

07:39.780 --> 07:41.780
它是一条一条列出来的

07:41.780 --> 07:42.780
可能呢

07:42.780 --> 07:44.780
我们不太希望

07:44.780 --> 07:46.780
是这么一种格式

07:46.780 --> 07:47.780
不太希望是这么一种格式

07:47.780 --> 07:49.780
那这个格式能不能换呢

07:49.780 --> 07:51.780
就是它已经上传的图片

07:51.780 --> 07:53.780
它的格式能不能换呢

07:53.780 --> 07:55.780
它提供了几种切换

07:55.780 --> 07:59.780
文件列表样式的属性

07:59.780 --> 08:01.780
叫做NestTap

08:01.780 --> 08:02.780
这个呢

08:02.780 --> 08:04.780
它里边提供了三种格式

08:04.780 --> 08:05.780
一个是Text

08:05.780 --> 08:06.780
默认值就是Text

08:06.780 --> 08:07.780
就这种格式

08:07.780 --> 08:09.780
有它文件列表啊

08:09.780 --> 08:10.780
你看这一块

08:10.780 --> 08:12.780
是不是我们已经上传的文件列表

08:12.780 --> 08:14.780
这个文件列表

08:14.780 --> 08:16.780
这一块使用什么样的样式

08:16.780 --> 08:18.780
它是可以选择的

08:18.780 --> 08:19.780
可以选择的

08:19.780 --> 08:20.780
那么怎么选择呢

08:20.780 --> 08:22.780
在upload里边使用这个属性

08:22.780 --> 08:23.780
叫NestTap

08:23.780 --> 08:24.780
它复职

08:24.780 --> 08:25.780
它有三种曲子

08:25.780 --> 08:26.780
要么Text

08:26.780 --> 08:27.780
就是文本

08:27.780 --> 08:28.780
文本格式

08:28.780 --> 08:29.780
显示文件列表

08:29.780 --> 08:30.780
它控制的是啥

08:30.780 --> 08:31.780
我再说一下

08:31.780 --> 08:34.780
控制的是文件列表的格式

08:34.780 --> 08:35.780
看没

08:35.780 --> 08:36.780
是吧

08:36.780 --> 08:37.780
文件列表的格式

08:37.780 --> 08:38.780
好

08:38.780 --> 08:40.780
如果说你这里换一个格式

08:40.780 --> 08:43.780
比方说换成其他的Picture

08:43.780 --> 08:45.780
保存

08:45.780 --> 08:46.780
咱们来看一下

08:46.780 --> 08:48.780
你这里上传的时候

08:48.780 --> 08:49.780
你看

08:49.780 --> 08:51.780
是不是有一个缩列图

08:51.780 --> 08:52.780
对吧

08:52.780 --> 08:53.780
有个缩列图

08:53.780 --> 08:55.780
只是看起来不是那么好看而已

08:55.780 --> 08:56.780
你看一下

08:56.780 --> 08:57.780
有一个缩列图

08:57.780 --> 08:58.780
对吧

08:58.780 --> 09:00.780
这就是文件列表

09:00.780 --> 09:02.780
就是你已经上传的文件列表

09:02.780 --> 09:03.780
明白这个意思吗

09:03.780 --> 09:05.780
这是第二种模式

09:05.780 --> 09:07.780
第三种模式叫PictureCard

09:07.780 --> 09:08.780
这个还比较好看一点

09:08.780 --> 09:10.780
我们就用这个PictureCard

09:10.780 --> 09:12.780
就是以卡片的形式

09:12.780 --> 09:14.780
显示你上传的文件

09:14.780 --> 09:16.780
咱们这里刷新一次

09:16.780 --> 09:18.780
它这里多一个样式

09:18.780 --> 09:20.780
然后我们这里点击上传

09:20.780 --> 09:23.780
你看一张图片

09:23.780 --> 09:25.780
第二张图片

09:25.780 --> 09:28.780
你看是不是可以实现多个文件的上传

09:28.780 --> 09:31.780
是不是非常简单

09:31.780 --> 09:33.780
两下配置就完事了

09:33.780 --> 09:35.780
那么这里还可以删除

09:35.780 --> 09:37.780
还可以删除

09:37.780 --> 09:38.780
你看

09:38.780 --> 09:40.780
但是跟我们的要求

09:40.780 --> 09:42.780
是不是有点冲突

09:42.780 --> 09:43.780
跟我们的要求是啥

09:43.780 --> 09:44.780
我们的要求

09:44.780 --> 09:46.780
因为头像它只能上传一个

09:46.780 --> 09:47.780
你看这里

09:47.780 --> 09:49.780
我们点击上传过后

09:49.780 --> 09:51.780
是不是头像只能有一个

09:51.780 --> 09:52.780
对吧

09:52.780 --> 09:53.780
是不是只有一个头像

09:53.780 --> 09:54.780
它不可能有多个

09:54.780 --> 09:55.780
它不可能有多个头像

09:55.780 --> 09:58.780
你看这里是不是列表的形式

09:58.780 --> 09:59.780
显示出来的

09:59.780 --> 10:00.780
你看

10:00.780 --> 10:02.780
这里是文件列表的形式

10:02.780 --> 10:03.780
显示出来的

10:03.780 --> 10:05.780
这一块我现在我框住着一块

10:05.780 --> 10:10.780
指的是已经上传的文件列表

10:10.780 --> 10:12.780
这个地方是我们自己写的

10:12.780 --> 10:14.780
是我们自己写的

10:14.780 --> 10:15.780
逻辑分开

10:15.780 --> 10:16.780
这里表示的是

10:16.780 --> 10:18.780
已经上传的文件列表

10:18.780 --> 10:21.780
这个人表示的是上传区域

10:21.780 --> 10:24.780
我们现在由于使用的是头像

10:24.780 --> 10:26.780
它只能有一个

10:26.780 --> 10:27.780
只能有一个的话

10:27.780 --> 10:30.780
那么这个文件列表是不是不能要了

10:30.780 --> 10:32.780
是不是不能要了

10:32.780 --> 10:33.780
对吧

10:33.780 --> 10:34.780
是不是这个意思

10:34.780 --> 10:35.780
文件列表是不是不能要了

10:35.780 --> 10:36.780
对不对

10:36.780 --> 10:38.780
我们只需要保留这一块区域就行了

10:38.780 --> 10:40.780
只需要保留这一块区域

10:40.780 --> 10:42.780
需要它给我们提供的文件列表

10:42.780 --> 10:45.780
那么怎么让取消文件列表的显示呢

10:45.780 --> 10:46.780
怎么样取消呢

10:46.780 --> 10:48.780
使用这个属性

10:48.780 --> 10:52.780
叫做在哪呢

10:52.780 --> 10:54.780
叫做sue upload list

10:54.780 --> 10:57.780
是否可以设置

10:57.780 --> 10:58.780
是否可以

10:58.780 --> 11:01.780
是否要显示文件列表

11:01.780 --> 11:02.780
我们这里

11:02.780 --> 11:05.780
把这个属像设为force

11:05.780 --> 11:07.780
把属性设为force

11:07.780 --> 11:08.780
那么这样子一来

11:08.780 --> 11:09.780
你看一下

11:09.780 --> 11:11.780
文件列表它就没了

11:11.780 --> 11:12.780
你看

11:12.780 --> 11:13.780
看不见文件了

11:13.780 --> 11:14.780
对吧

11:14.780 --> 11:15.780
有没有上传有上传

11:15.780 --> 11:19.780
只不过你现在看不见文件列表了

11:19.780 --> 11:21.780
地表给你隐藏掉了

11:21.780 --> 11:22.780
给你隐藏掉了

11:22.780 --> 11:24.780
但是只是介面上给隐藏掉了

11:24.780 --> 11:25.780
有没有上传

11:25.780 --> 11:26.780
实际上有上传

11:26.780 --> 11:27.780
对吧

11:27.780 --> 11:28.780
好

11:28.780 --> 11:29.780
那么我们现在只需要保留

11:29.780 --> 11:30.780
这一块区域就行了

11:30.780 --> 11:32.780
那么现在我们又来想一想

11:32.780 --> 11:33.780
这一块区域

11:33.780 --> 11:35.780
我们要做成这么一个效果

11:35.780 --> 11:37.780
要做成这个头像上传的效果

11:38.780 --> 11:41.780
是不是它有两种情况

11:41.780 --> 11:42.780
它这里要显示

11:42.780 --> 11:44.780
就这一块区域的里边

11:44.780 --> 11:45.780
我们再刷新一下

11:45.780 --> 11:46.780
在最开始的时候

11:46.780 --> 11:47.780
是不是一个按钮

11:47.780 --> 11:48.780
我们这里的按钮

11:48.780 --> 11:50.780
它这里能用一个图标

11:50.780 --> 11:51.780
无所谓都一样

11:51.780 --> 11:52.780
那么我们这里一开始

11:52.780 --> 11:53.780
是不是要显示一个按钮

11:53.780 --> 11:54.780
没有头像的时候

11:54.780 --> 11:56.780
是不是要显示个按钮

11:56.780 --> 11:57.780
对不对

11:57.780 --> 11:59.780
如果说你有头像了

11:59.780 --> 12:00.780
是不是这一块区域

12:00.780 --> 12:02.780
变成一个图片

12:02.780 --> 12:03.780
就不能是按钮了

12:03.780 --> 12:04.780
是不是要变成一个图片

12:04.780 --> 12:05.780
对吧

12:05.780 --> 12:06.780
也就是这个区域

12:06.780 --> 12:08.780
它有两种情况

12:08.780 --> 12:10.780
要么显示一张图片

12:10.780 --> 12:12.780
我们这里已经上传了

12:13.780 --> 12:14.780
这种情况下

12:14.780 --> 12:15.780
是不是要显示一张图片

12:15.780 --> 12:18.780
如果说你目前没有图片的话

12:18.780 --> 12:20.780
那么就显示一个按钮

12:20.780 --> 12:22.780
这个区域到底显示的是按钮

12:22.780 --> 12:24.780
还是一个一米几元数

12:24.780 --> 12:25.780
是不是取决于

12:25.780 --> 12:27.780
目前有没有上传头像

12:27.780 --> 12:28.780
对不对

12:28.780 --> 12:31.780
那么目前有没有上传头像

12:31.780 --> 12:32.780
这件事

12:32.780 --> 12:33.780
我们一般呢

12:33.780 --> 12:34.780
像这个组建里边

12:34.780 --> 12:35.780
它只是一个展示组建

12:35.780 --> 12:37.780
它自行不能控制

12:37.780 --> 12:40.780
希望外边的人来进行控制

12:40.780 --> 12:41.780
什么意思呢

12:41.780 --> 12:42.780
就比方说

12:42.780 --> 12:43.780
我在用这个组建的时候

12:43.780 --> 12:45.780
我给它传一个东西

12:45.780 --> 12:47.780
比方说传一个Value值

12:47.780 --> 12:48.780
传一个Value

12:48.780 --> 12:51.780
Value表示我们当前的图片的地址

12:51.780 --> 12:52.780
当前的图片地址

12:52.780 --> 12:53.780
比方说吧

12:53.780 --> 12:54.780
举个例子

12:54.780 --> 12:56.780
我们这里使用那个Hook

12:56.780 --> 12:58.780
使用那个State

12:58.780 --> 12:59.780
用State

12:59.780 --> 13:00.780
我们比方说一个状态

13:00.780 --> 13:01.780
在这里测试一下

13:01.780 --> 13:03.780
一个状态

13:03.780 --> 13:05.780
状态里边有一个就是

13:05.780 --> 13:06.780
我们的1mgurl

13:06.780 --> 13:08.780
我们的图片地址

13:08.780 --> 13:09.780
图片地址

13:12.780 --> 13:13.780
用State

13:14.780 --> 13:15.780
1mgurl

13:15.780 --> 13:16.780
这里呢

13:16.780 --> 13:18.780
一开始地址为空置无窗

13:18.780 --> 13:20.780
一开始的地址为空置无窗

13:20.780 --> 13:21.780
咱们这里Value

13:21.780 --> 13:24.780
就直接给它复制为1mgurl

13:24.780 --> 13:25.780
没了意思吗

13:25.780 --> 13:26.780
1mgurl

13:26.780 --> 13:27.780
那么比方说

13:27.780 --> 13:30.780
它再提供一个N千几函数

13:30.780 --> 13:32.780
当图片地址改变的时候

13:32.780 --> 13:34.780
因为你可能要重新上传

13:34.780 --> 13:35.780
你可能会重新上传

13:35.780 --> 13:37.780
你重新上传了之后

13:37.780 --> 13:39.780
我要把图片地址改动一下

13:39.780 --> 13:42.780
你要给我传一个新的地址进来

13:42.780 --> 13:43.780
6Value

13:43.780 --> 13:44.780
你给我传一个

13:44.780 --> 13:45.780
当然这个的两个东西

13:45.780 --> 13:47.780
我在主键里边都还没有写

13:47.780 --> 13:48.780
需要这两个属性

13:48.780 --> 13:50.780
这两个属性在主键里边都还没有用

13:50.780 --> 13:51.780
但是我们先写到这吧

13:51.780 --> 13:53.780
State1mgurl

13:53.780 --> 13:55.780
就是说如果它写好了

13:55.780 --> 13:57.780
我们希望能够这样子使用

13:57.780 --> 13:58.780
这个Value是什么意思呢

13:58.780 --> 14:01.780
这个Value指的是图片地址

14:01.780 --> 14:07.780
图片地址改变时间

14:07.780 --> 14:09.780
就用户点击到过后

14:09.780 --> 14:10.780
它会出发时间

14:10.780 --> 14:11.780
图片地址改变时间

14:11.780 --> 14:13.780
这是我们自己封的主键

14:13.780 --> 14:14.780
它需要两个属性

14:14.780 --> 14:15.780
两个属性够了

14:15.780 --> 14:16.780
够了

14:16.780 --> 14:17.780
没问题吧

14:17.780 --> 14:18.780
能不能看懂

14:18.780 --> 14:19.780
能不能看懂它的使用

14:19.780 --> 14:20.780
使用能不能看懂

14:20.780 --> 14:21.780
给它一个图片地址

14:21.780 --> 14:22.780
给它什么

14:22.780 --> 14:23.780
它就显示什么

14:23.780 --> 14:24.780
那么这样子的话

14:24.780 --> 14:25.780
这个主键是不是受控制

14:25.780 --> 14:26.780
对吧

14:26.780 --> 14:27.780
是不是受外面使用者的控制

14:27.780 --> 14:30.780
我想让它显示什么样的图片地址

14:30.780 --> 14:31.780
就显示什么样的图片地址

14:31.780 --> 14:33.780
如果说给它一个控制不顺

14:33.780 --> 14:34.780
或者是给它NOW

14:34.780 --> 14:35.780
或者是ND犯

14:35.780 --> 14:36.780
那么它就不显示

14:36.780 --> 14:37.780
对吧

14:37.780 --> 14:39.780
一开始它就是一个按钮

14:39.780 --> 14:40.780
让你上传

14:40.780 --> 14:41.780
如果说给它图片地址

14:41.780 --> 14:42.780
它是不是要显示图片地址

14:42.780 --> 14:43.780
对吧

14:43.780 --> 14:44.780
显示一个图片

14:44.780 --> 14:45.780
就这么个意思

14:45.780 --> 14:46.780
而且用户点击过后

14:46.780 --> 14:48.780
要出发一个事件

14:48.780 --> 14:49.780
那么我需要

14:49.780 --> 14:50.780
需要收到新的图片地址

14:50.780 --> 14:51.780
然后设置

14:51.780 --> 14:52.780
对吧

14:52.780 --> 14:53.780
好

14:53.780 --> 14:54.780
那么现在回过头来

14:54.780 --> 14:55.780
到这边

14:55.780 --> 14:56.780
这边的属性

14:56.780 --> 14:57.780
我们是不是可以解构

14:57.780 --> 14:58.780
解构出什么Value

14:58.780 --> 14:59.780
还有什么

15:00.780 --> 15:01.780
可以解构出这两个属像

15:01.780 --> 15:03.780
Value表示了什么

15:03.780 --> 15:04.780
是不是就是图片地址

15:04.780 --> 15:07.780
Value表示图片地址

15:07.780 --> 15:08.780
就这么简单

15:08.780 --> 15:10.780
那么图片地址

15:10.780 --> 15:11.780
它是不是要根据

15:11.780 --> 15:13.780
这个属性的值

15:13.780 --> 15:14.780
如果它有值

15:14.780 --> 15:15.780
这里是不是要显示

15:15.780 --> 15:16.780
一个1m级元素

15:16.780 --> 15:18.780
如果说它没有值

15:18.780 --> 15:19.780
这里是不是要显示

15:19.780 --> 15:20.780
一个button元素

15:20.780 --> 15:21.780
对吧

15:21.780 --> 15:22.780
我们这里的钢图用一个DIV

15:22.780 --> 15:23.780
包起来

15:23.780 --> 15:24.780
包起来

15:24.780 --> 15:25.780
给它个内样式

15:25.780 --> 15:26.780
给它个内样式

15:27.780 --> 15:28.780
内样式

15:29.780 --> 15:30.780
为什么呢

15:30.780 --> 15:32.780
为我们使用那个style

15:32.780 --> 15:34.780
我现在还没有显的样式

15:34.780 --> 15:35.780
不着急

15:36.780 --> 15:37.780
头像

15:37.780 --> 15:38.780
那么这里

15:38.780 --> 15:40.780
我们写上这个1m级

15:40.780 --> 15:42.780
1m级什么时候显示

15:42.780 --> 15:43.780
刚才说了

15:43.780 --> 15:45.780
1m级什么时候显示

15:45.780 --> 15:47.780
Value有值的时候

15:47.780 --> 15:49.780
才显示这个1m级元素

15:49.780 --> 15:50.780
对吧

15:50.780 --> 15:51.780
才显示这个

15:51.780 --> 15:52.780
可以这样子写

15:52.780 --> 15:53.780
这样子写没问题吧

15:53.780 --> 15:54.780
可以这样子写

15:54.780 --> 15:56.780
如果说它有值的情况下

15:56.780 --> 15:58.780
我们显示1m级元素

15:58.780 --> 15:59.780
1m级元素

15:59.780 --> 16:00.780
当然这里其实你

16:00.780 --> 16:02.780
也可以单独来写

16:02.780 --> 16:04.780
这么一个方法来得到

16:04.780 --> 16:05.780
也行

16:05.780 --> 16:06.780
比方说我们写个方法

16:06.780 --> 16:07.780
get

16:07.780 --> 16:08.780
avata

16:08.780 --> 16:10.780
avata

16:12.780 --> 16:13.780
avata

16:13.780 --> 16:14.780
content

16:14.780 --> 16:16.780
得到那个

16:17.780 --> 16:18.780
就得到

16:18.780 --> 16:20.780
头像

16:20.780 --> 16:21.780
趋

16:21.780 --> 16:22.780
上传

16:22.780 --> 16:23.780
趋

16:23.780 --> 16:24.780
预的内容

16:25.780 --> 16:27.780
就写简介点也可以

16:27.780 --> 16:28.780
你给我一个什么

16:28.780 --> 16:29.780
给我一个图片地址

16:29.780 --> 16:31.780
给我一个图片地址

16:31.780 --> 16:32.780
我来判断一下

16:32.780 --> 16:34.780
如果说你这个图片地址有值

16:34.780 --> 16:35.780
有值的话

16:35.780 --> 16:36.780
我给你返回一个啥呢

16:36.780 --> 16:37.780
返回一个1m级元素

16:37.780 --> 16:38.780
对吧

16:38.780 --> 16:39.780
我给你返回一个1m级元素

16:39.780 --> 16:41.780
你显示一个1m级元素

16:41.780 --> 16:43.780
可以给它一个内样式

16:43.780 --> 16:44.780
以后我们可以

16:44.780 --> 16:45.780
设置它的内样式

16:45.780 --> 16:46.780
styles

16:46.780 --> 16:47.780
现在还没写

16:47.780 --> 16:48.780
还没写

16:49.780 --> 16:50.780
styles

16:50.780 --> 16:52.780
然后这里边就是

16:52.780 --> 16:53.780
avata

16:53.780 --> 16:54.780
1m级

16:54.780 --> 16:55.780
avata

16:55.780 --> 16:56.780
整个外面的div

16:56.780 --> 16:58.780
图片是avata

16:58.780 --> 16:59.780
1m级

16:59.780 --> 17:01.780
如果说你没有地址

17:01.780 --> 17:02.780
如果说你没有给我地址

17:02.780 --> 17:04.780
我是不是要显示一个啥

17:04.780 --> 17:05.780
显示一个button

17:05.780 --> 17:06.780
对吧

17:06.780 --> 17:07.780
显示一个button

17:08.780 --> 17:09.780
这个东西很简单

17:09.780 --> 17:10.780
我们写个函数

17:10.780 --> 17:11.780
那么这样子

17:11.780 --> 17:12.780
我们在这里

17:12.780 --> 17:13.780
是不是调整函数

17:13.780 --> 17:17.430
在这里

17:17.430 --> 17:18.430
是不是调整函数

17:18.430 --> 17:19.430
对吧

17:19.430 --> 17:20.430
给它一个什么

17:20.430 --> 17:21.430
给它一个头像地址

17:21.430 --> 17:22.430
头像地址在哪

17:22.430 --> 17:23.430
是不是在这

17:23.430 --> 17:24.430
能看懂吗

17:24.430 --> 17:25.430
这个结构

17:25.430 --> 17:26.430
这个结构

17:26.430 --> 17:28.430
是非常非常基本的一个逐渐结构

17:28.430 --> 17:29.430
能看懂吗

17:29.430 --> 17:31.430
这个属性是外面给我的

17:31.430 --> 17:33.430
我也不知道他有没有纸

17:33.430 --> 17:35.430
那么有没有纸

17:35.430 --> 17:36.430
根据不同的纸

17:36.430 --> 17:37.430
要显示什么东西

17:37.430 --> 17:39.430
我通过一个函数来得到

17:39.430 --> 17:40.430
那么这里调用这个函数

17:40.430 --> 17:41.430
把这个纸传进去

17:41.430 --> 17:42.430
埋留传进去

17:42.430 --> 17:43.430
是不是可以得到

17:43.430 --> 17:44.430
这个东西

17:44.430 --> 17:45.430
要么得到一个图片

17:45.430 --> 17:46.430
要么得到一个button

17:46.430 --> 17:47.430
好

17:47.430 --> 17:48.430
咱们来看一下

17:50.430 --> 17:51.430
他说

17:51.430 --> 17:52.430
这里还没写

17:52.430 --> 17:53.430
这个图片地址是不是这个

17:53.430 --> 17:54.430
图片地址有这个

17:54.430 --> 17:55.430
给我传进来的这个

17:56.430 --> 17:57.430
你看一开始

18:00.430 --> 18:01.430
一开始显示他

18:01.430 --> 18:03.430
显示了是不是一个按钮

18:03.430 --> 18:04.430
但有没有可能显示一张图片呢

18:04.430 --> 18:05.430
有可能

18:05.430 --> 18:07.430
我们只要在用的时候

18:07.430 --> 18:08.430
因为我这里是不是

18:08.430 --> 18:09.430
没有给他图片地址

18:09.430 --> 18:10.430
他自然而然

18:10.430 --> 18:11.430
他觉得没有图片

18:11.430 --> 18:13.430
你看我这里没有给他图片地址

18:13.430 --> 18:14.430
是不是把给他传的图片地址

18:14.430 --> 18:16.430
是空的字不串

18:16.430 --> 18:18.430
那么这里显示渲染的时候

18:18.430 --> 18:19.430
调用这个函数得得到结果

18:19.430 --> 18:20.430
这个函数里边

18:20.430 --> 18:21.430
它是空的字不串

18:21.430 --> 18:22.430
空的字不串是不是

18:22.430 --> 18:23.430
进了ls

18:23.430 --> 18:24.430
进了ls

18:24.430 --> 18:25.430
是不是显示的一个按钮

18:25.430 --> 18:26.430
对吧

18:26.430 --> 18:27.430
那如果说我们要显示一个

18:27.430 --> 18:28.430
1米几元数怎么办

18:29.430 --> 18:30.430
我们这里能用的时候

18:30.430 --> 18:31.430
测试一下吧

18:31.430 --> 18:32.430
测试一下

18:32.430 --> 18:34.430
我们比方说给他一个

18:36.430 --> 18:37.430
国旗吧

18:37.430 --> 18:40.380
国旗

18:40.380 --> 18:41.380
哪一个吧

18:41.380 --> 18:42.380
右键

18:42.380 --> 18:43.380
复制图片

18:43.380 --> 18:44.380
复制图片

18:44.380 --> 18:48.080
复制图片地址

18:48.080 --> 18:49.080
换一张吧

18:49.080 --> 18:50.080
换这张

18:50.080 --> 18:51.080
右键

18:51.080 --> 18:53.080
怎么两个样的

18:53.080 --> 18:55.080
复制图片地址

18:56.080 --> 18:57.080
我现在给大家录的时候

18:57.080 --> 18:58.080
争执国庆节

18:58.080 --> 18:59.080
那是不是显示出来了

18:59.080 --> 19:00.080
对吧

19:00.080 --> 19:01.080
要么显示一个图片地址

19:01.080 --> 19:03.080
要么显示一个按钮

19:03.080 --> 19:05.080
根据你给的属性值来决定

19:05.080 --> 19:06.080
对不对

19:06.080 --> 19:07.080
你看无论里边显示的啥

19:07.080 --> 19:08.080
点击过和是不是都能

19:08.080 --> 19:09.080
弹出这个框框

19:09.080 --> 19:11.080
因为它是上传区域

19:11.080 --> 19:12.080
都能弹出这个框框

19:12.080 --> 19:13.080
我现在又没有显示

19:13.080 --> 19:14.080
文件列表

19:14.080 --> 19:15.080
瞄那意思

19:16.080 --> 19:18.080
那么现在我们这里写出来了

19:18.080 --> 19:19.080
写出来之后

19:19.080 --> 19:21.080
我们觉得这个图片

19:21.080 --> 19:22.080
有些图片可能太大了

19:22.080 --> 19:23.080
比方说

19:23.080 --> 19:24.080
它宽度几千个像素

19:24.080 --> 19:25.080
哪里受不了

19:25.080 --> 19:27.080
所以我们这里的样式上

19:27.080 --> 19:28.080
最好是控制一下

19:28.080 --> 19:29.080
控制一下

19:29.080 --> 19:30.080
我们怎么打控制呢

19:30.080 --> 19:32.080
这样吧

19:32.080 --> 19:34.080
我们在这里

19:34.080 --> 19:35.080
给这个

19:35.080 --> 19:36.080
Evata

19:37.080 --> 19:38.080
它不是外面的DV吗

19:38.080 --> 19:39.080
对吧

19:39.080 --> 19:40.080
Evata

19:40.080 --> 19:41.080
我们给这个Evata

19:41.080 --> 19:43.080
设置一个宽高

19:43.080 --> 19:45.080
宽度了就150个像素

19:45.080 --> 19:47.080
高度了150个像素

19:47.080 --> 19:48.080
你看

19:48.080 --> 19:50.080
宽度高的控制一下

19:51.080 --> 19:52.080
刷新

19:53.080 --> 19:54.080
现在没问题

19:54.080 --> 19:55.080
你看

19:55.080 --> 19:57.080
这个宽高是不是虚线到这就结束了

19:57.080 --> 19:58.080
仔细看

19:58.080 --> 19:59.080
虚线到这就结束了

19:59.080 --> 20:00.080
但是它图片是不是超过了宽度

20:00.080 --> 20:01.080
对吧

20:01.080 --> 20:02.080
宽高

20:02.080 --> 20:03.080
所以说它里面的图片

20:03.080 --> 20:05.080
Evata里面的1米级

20:05.080 --> 20:06.080
就这个样式

20:06.080 --> 20:07.080
我们刚刚就用了这个两个样式

20:07.080 --> 20:09.080
就用了这两个样式

20:09.080 --> 20:12.080
Evata和图片里面的Evata1米级

20:12.080 --> 20:13.080
Evata1米级

20:13.080 --> 20:15.080
它里面宽度了百分之百

20:16.080 --> 20:18.080
高度了百分之百

20:18.080 --> 20:19.080
你看一下

20:19.080 --> 20:21.080
这个图片是不是就缩小了

20:21.080 --> 20:22.080
对吧

20:22.080 --> 20:23.080
把图片的设置一样

20:23.080 --> 20:25.080
但这个图片有一点

20:25.080 --> 20:26.080
比例失真了

20:26.080 --> 20:27.080
对吧

20:27.080 --> 20:28.080
它比例有点变化了

20:28.080 --> 20:29.080
我们说

20:29.080 --> 20:30.080
如果说要把它做的好一点的话

20:30.080 --> 20:31.080
我们把这个图片里面

20:31.080 --> 20:32.080
设置一下

20:32.080 --> 20:33.080
Objects Feet

20:33.080 --> 20:34.080
把设为Cover

20:34.080 --> 20:35.080
对吧

20:35.080 --> 20:37.080
不让它比例发生变化

20:37.080 --> 20:39.080
不让它比例发生变化

20:39.080 --> 20:40.080
好

20:40.080 --> 20:41.080
就写好了

20:41.080 --> 20:42.080
好

20:42.080 --> 20:43.080
就这个区域

20:43.080 --> 20:44.080
那么再来看一下

20:44.080 --> 20:45.080
如果说我给它图片

20:45.080 --> 20:46.080
给它什么图片

20:46.080 --> 20:47.080
它就显示什么图片

20:47.080 --> 20:48.080
如果说没有给它图片的话

20:48.080 --> 20:49.080
它应该显示它了

20:49.080 --> 20:51.080
是不是应该显示个按钮

20:51.080 --> 20:52.080
这个按钮怎么跑上去了

20:52.080 --> 20:53.080
跑上去了

20:53.080 --> 20:54.080
因为我们自己都外面

20:54.080 --> 20:55.080
掏了个DAV

20:55.080 --> 20:56.080
自己掏了个DAV

20:56.080 --> 20:57.080
我要上居中

20:57.080 --> 20:58.080
还不简单吗

20:58.080 --> 20:59.080
把这个DAV设为什么

20:59.080 --> 21:00.080
Display

21:00.080 --> 21:01.080
Flex

21:01.080 --> 21:02.080
设为弹性盒

21:02.080 --> 21:03.080
然后

21:03.080 --> 21:05.080
Justify Content Center

21:05.080 --> 21:06.080
Align

21:06.080 --> 21:07.080
Items Center

21:07.080 --> 21:08.080
对吧

21:08.080 --> 21:09.080
横向居中

21:09.080 --> 21:10.080
重向居中

21:10.080 --> 21:11.080
不就居中了吗

21:11.080 --> 21:12.080
现在是不是可以控制的

21:12.080 --> 21:14.080
这个组件就完全受控制

21:14.080 --> 21:15.080
给图片

21:15.080 --> 21:16.080
它就显示图片

21:16.080 --> 21:17.080
给按钮

21:18.080 --> 21:19.080
好

21:19.080 --> 21:20.080
那么接下来

21:20.080 --> 21:21.080
我们来继续搞定

21:21.080 --> 21:22.080
还有很多事情没搞定

21:22.080 --> 21:25.080
现在我们还要搞定的就是

21:25.080 --> 21:27.080
点击过后要实现上传

21:27.080 --> 21:29.080
现在有上传吗

21:29.080 --> 21:30.080
你看一下

21:30.080 --> 21:31.080
现在有上传吗

21:31.080 --> 21:33.080
不没上传吗

21:33.080 --> 21:34.080
你看一下点击

21:34.080 --> 21:35.080
为什么没反应

21:35.080 --> 21:36.080
因为你啥都没做

21:36.080 --> 21:37.080
你现在这里边

21:37.080 --> 21:38.080
我点击了过后

21:38.080 --> 21:39.080
我选择了文件

21:39.080 --> 21:40.080
它有没有上传

21:40.080 --> 21:41.080
它有上传

21:41.080 --> 21:42.080
但是

21:42.080 --> 21:43.080
它上传是显示到

21:43.080 --> 21:44.080
上传列表

21:44.080 --> 21:45.080
那一块的

21:45.080 --> 21:46.080
我们之前看到过

21:46.080 --> 21:48.080
我现在又没有显示列表

21:48.080 --> 21:49.080
那列表显示不出来

21:49.080 --> 21:51.080
它只显示了这一个区域

21:51.080 --> 21:53.080
这个区域是不是要么就显示

21:53.080 --> 21:54.080
你给我提供的Values

21:54.080 --> 21:56.080
要么就显示啥

21:56.080 --> 21:58.080
是不是显示一个按钮

21:58.080 --> 21:59.080
要么显示一个按钮

21:59.080 --> 22:00.080
要么显示你给我的Values

22:00.080 --> 22:02.080
我这里点击之后

22:02.080 --> 22:03.080
点击之后

22:03.080 --> 22:04.080
选择一张新的图片

22:04.080 --> 22:05.080
来上传

22:05.080 --> 22:06.080
那么上传之后

22:06.080 --> 22:07.080
我是不是要重新

22:07.080 --> 22:09.080
更改这个Values

22:09.080 --> 22:10.080
是不是要重新

22:10.080 --> 22:11.080
更改这个Values

22:11.080 --> 22:12.080
对不对

22:12.080 --> 22:14.080
说重新更改这个Values

22:14.080 --> 22:15.080
那么怎么来更改Values

22:15.080 --> 22:17.080
是不是要想应一个

22:17.080 --> 22:19.080
按钮级事件来更改

22:19.080 --> 22:20.080
对不对

22:20.080 --> 22:22.080
所以我得知道

22:22.080 --> 22:23.080
你这个上传

22:23.080 --> 22:24.080
上传到服务器之后

22:24.080 --> 22:26.080
你上传到服务器

22:26.080 --> 22:27.080
服务器那边会不是

22:27.080 --> 22:28.080
我们之前写的API吗

22:28.080 --> 22:31.080
服务器那边会给你一个结果

22:31.080 --> 22:33.080
给你一个就是

22:33.080 --> 22:37.480
这里

22:37.480 --> 22:38.480
服务器那边

22:38.480 --> 22:40.480
会给你一个就是

22:40.480 --> 22:41.480
新的地址

22:41.480 --> 22:42.480
然后得到新的地址之后

22:42.480 --> 22:45.480
是不是去雕用一下

22:45.480 --> 22:46.480
别人给你注册的

22:47.480 --> 22:48.480
把新的地址给他

22:48.480 --> 22:49.480
那么他自然而然

22:49.480 --> 22:50.480
会去设置Values

22:50.480 --> 22:51.480
那么自然而然

22:51.480 --> 22:52.480
就重新券了这个主键

22:52.480 --> 22:53.480
自然而然

22:53.480 --> 22:56.480
就得到了新的图片

22:56.480 --> 22:57.480
那么现在的问题是

22:57.480 --> 22:59.480
我怎么样知道

22:59.480 --> 23:01.480
服务器那边上传完成了呢

23:01.480 --> 23:02.480
咱们来看

23:02.480 --> 23:04.480
看那个就是代码

23:04.480 --> 23:06.480
我要得到服务器的想应结果

23:06.480 --> 23:07.480
对吧

23:07.480 --> 23:08.480
他上传了

23:08.480 --> 23:09.480
我怎么样知道

23:09.480 --> 23:10.480
服务器上传完成了呢

23:10.480 --> 23:11.480
我们这里

23:11.480 --> 23:13.480
找一下他里边的

23:14.480 --> 23:16.480
相应的配置

23:16.480 --> 23:17.480
就是属性

23:17.480 --> 23:18.480
在这

23:18.480 --> 23:20.480
叫做Unchained

23:20.480 --> 23:21.480
叫做什么呢

23:21.480 --> 23:23.480
叫做上传文件

23:23.480 --> 23:25.480
改变时的状态

23:25.480 --> 23:26.480
就是你新上传的文件

23:26.480 --> 23:27.480
文件改变了

23:27.480 --> 23:28.480
他会调用这个函数

23:28.480 --> 23:30.480
咱们来用一下这个函数

23:31.480 --> 23:32.480
这个函数

23:32.480 --> 23:34.480
它里面提供了一个参数

23:34.480 --> 23:35.480
提供了一个参数

23:35.480 --> 23:36.480
data

23:36.480 --> 23:37.480
表上一个data的接收

23:37.480 --> 23:39.480
它提供了这么一个参数

23:39.480 --> 23:40.480
我们这里

23:40.480 --> 23:41.480
输出一下data

23:41.480 --> 23:42.480
输出一下data

23:44.480 --> 23:45.480
看一下吧

23:45.480 --> 23:46.480
咱们右键

23:46.480 --> 23:47.480
检查

23:47.480 --> 23:48.480
空谈

23:50.480 --> 23:51.480
这呢我们刷新一次吧

23:51.480 --> 23:52.480
先刷新一次

23:52.480 --> 23:54.480
看这个Unchained几时间

23:54.480 --> 23:55.480
它怎么触发的

23:55.480 --> 23:57.480
我们点击选择个图片

23:57.480 --> 23:58.480
选择一个图片

23:58.480 --> 23:59.480
是不是触发了

23:59.480 --> 24:01.480
而且它不只触发了一次

24:01.480 --> 24:03.480
还触发了三次

24:03.480 --> 24:04.480
触发了三次

24:04.480 --> 24:05.480
其他哪三次呢

24:05.480 --> 24:07.480
就是上传之前

24:07.480 --> 24:08.480
这要上传服务器之前

24:08.480 --> 24:09.480
正在上传中

24:09.480 --> 24:12.480
还有就是上传完成

24:13.480 --> 24:16.480
那么我们怎么来知道

24:16.480 --> 24:17.480
它有没有上传完成的

24:17.480 --> 24:19.480
其实有一种非常简单的方式

24:19.480 --> 24:20.480
这个数据里边

24:20.480 --> 24:21.480
就对象里边

24:21.480 --> 24:23.480
它有这么一个属性叫做file

24:23.480 --> 24:25.480
file表示什么意思

24:25.480 --> 24:27.480
就是最后一次上传的文件

24:27.480 --> 24:28.480
file list

24:28.480 --> 24:30.480
就表示的是

24:30.480 --> 24:31.480
以前上传的文件

24:31.480 --> 24:33.480
比方我们这里再传一个

24:33.480 --> 24:34.480
再传一个

24:34.480 --> 24:35.480
我们这里

24:35.480 --> 24:37.480
比方我们再传一个

24:38.480 --> 24:40.480
你看是不是两个了

24:40.480 --> 24:41.480
输出是不是两个了

24:41.480 --> 24:43.480
就是上传了两张图片了

24:43.480 --> 24:44.480
只是我们这里看不见而已

24:44.480 --> 24:46.480
我们现在就要搞定界面的问题

24:46.480 --> 24:48.480
是不是有两个图片了

24:48.480 --> 24:49.480
file list表示

24:49.480 --> 24:51.480
之前上传过哪些图片

24:51.480 --> 24:52.480
它就放了一个数据里边了

24:52.480 --> 24:54.480
每个数据就是file对象

24:54.480 --> 24:56.480
file对象

24:56.480 --> 24:59.480
它指的是最后一次上传的图片

24:59.480 --> 25:01.480
那么在每一个file对象里边

25:01.480 --> 25:02.480
所以我们要用这个

25:02.480 --> 25:03.480
我肯定只需要它得到

25:03.480 --> 25:04.480
它最后一个就行了

25:04.480 --> 25:07.480
那么我们要用这个file对象

25:07.480 --> 25:10.480
那么这个对象里边有一个response

25:10.480 --> 25:12.480
所以一个浮气的响应结果

25:12.480 --> 25:13.480
对吧

25:13.480 --> 25:14.480
所以一个浮气的响应结果

25:14.480 --> 25:15.480
那么我们这里是不是

25:15.480 --> 25:16.480
可以拿到浮气的响应结果

25:16.480 --> 25:17.480
怎么来到

25:17.480 --> 25:20.480
拿到data.file.response

25:20.480 --> 25:21.480
对不对

25:21.480 --> 25:22.480
是不是可以拿到浮气的响应结果

25:22.480 --> 25:23.480
保存

25:24.480 --> 25:25.480
来吧

25:25.480 --> 25:26.480
我们来看一下

25:27.480 --> 25:28.480
点击

25:28.480 --> 25:29.480
上传一个文件

25:29.480 --> 25:30.480
前两次

25:30.480 --> 25:31.480
因为还没有上传完成

25:31.480 --> 25:33.480
都还没有拿到浮气的响应结果

25:33.480 --> 25:35.480
那么最后一次是不是拿到了

25:35.480 --> 25:36.480
所以说我们这里可以判断一下

25:36.480 --> 25:38.480
有没有浮气的响应结果

25:38.480 --> 25:39.480
response

25:39.480 --> 25:40.480
有没有

25:40.480 --> 25:41.480
如果说undefine的话

25:41.480 --> 25:43.480
你这个时候还没有上传完成

25:43.480 --> 25:47.480
那么这个表示的是浮气完成了响应

25:47.480 --> 25:48.480
响应

25:48.480 --> 25:49.480
就是上传文件

25:49.480 --> 25:51.480
上传文件不是有浮气响应吗

25:51.480 --> 25:54.480
我们把浮气的响应结果输出出来

25:54.480 --> 25:55.480
保存

25:55.480 --> 25:57.480
我们这个代码是一点点做的

25:57.480 --> 25:58.480
不着急

25:58.480 --> 25:59.480
好

25:59.480 --> 26:00.480
再来上传

26:00.480 --> 26:01.480
上传

26:01.480 --> 26:02.480
你看一下

26:02.480 --> 26:03.480
是不是拿到浮气的响应结果了

26:03.480 --> 26:05.480
但是你看一下浮气的响应

26:05.480 --> 26:07.480
响应的是啥玩意

26:08.480 --> 26:10.480
他怎么想起这个玩意了

26:10.480 --> 26:11.480
好

26:11.480 --> 26:13.480
接下来我们来监控一下网络请求

26:13.480 --> 26:16.300
其实这个东西

26:16.300 --> 26:18.300
用脚想都想得到

26:18.300 --> 26:20.300
他怎么知道要去请求这个地址呢

26:20.300 --> 26:21.300
我们之前说

26:21.300 --> 26:22.300
我们要请求地址

26:22.300 --> 26:23.300
要请求哪个地址

26:23.300 --> 26:24.300
是不是上传接口

26:24.300 --> 26:25.300
我们自己写的接口

26:25.300 --> 26:27.300
他凭什么知道我们要请求这个地址

26:27.300 --> 26:30.300
那么我看一下他请求的是啥地址

26:30.300 --> 26:31.300
你看

26:31.300 --> 26:34.300
他请求的是啥地址呢

26:34.300 --> 26:37.300
他请求的就是当前页面

26:37.300 --> 26:39.300
他请求的就是当前页面

26:39.300 --> 26:40.300
当前页面就是这个

26:40.300 --> 26:41.300
他请求的是这个地址

26:41.300 --> 26:42.300
这个地址能上传图片吗

26:42.300 --> 26:43.300
是不是不能

26:43.300 --> 26:44.300
对吧

26:44.300 --> 26:45.300
那有人说图片怎么显示的

26:45.300 --> 26:47.300
图片是我们通过Value给他的

26:47.300 --> 26:49.300
刚才他的图片列表怎么能显示呢

26:49.300 --> 26:51.300
他是用Base64

26:51.300 --> 26:53.300
应该看过我HM和CSS的同学

26:53.300 --> 26:55.300
应该知道图片可以在本地进行

26:55.300 --> 26:56.300
Base64编码

26:56.300 --> 26:57.300
他是在本地编码的

26:57.300 --> 26:58.300
所以他可以显示

26:58.300 --> 27:00.300
但是浮气的面没上传

27:00.300 --> 27:02.300
我们最终是根本的效果

27:02.300 --> 27:04.300
我是要把它上传到浮气

27:04.300 --> 27:05.300
对吧

27:05.300 --> 27:06.300
他请求这样的地址

27:06.300 --> 27:07.300
他上传不上去

27:07.300 --> 27:08.300
那怎么办呢

27:08.300 --> 27:09.300
怎么改地址

27:09.300 --> 27:10.300
要告诉他

27:10.300 --> 27:12.300
我们应该上传到哪个地址

27:12.300 --> 27:13.300
通过什么改呢

27:13.300 --> 27:14.300
通过Action

27:15.300 --> 27:17.300
设置这个Action

27:17.300 --> 27:19.300
告诉他上传地址是什么

27:19.300 --> 27:20.300
这个配置的是

27:20.300 --> 27:22.300
配置上传地址

27:22.300 --> 27:24.300
配置上传地址

27:24.300 --> 27:25.300
好

27:25.300 --> 27:26.300
那么这个配置上传地址

27:26.300 --> 27:27.300
配置到哪了

27:27.300 --> 27:28.300
配置到这

27:28.300 --> 27:29.300
复制一下

27:29.300 --> 27:30.300
粘贴过来

27:30.300 --> 27:31.300
配置到这

27:31.300 --> 27:32.300
保存

27:32.300 --> 27:33.300
保存

27:33.300 --> 27:34.300
咱们看一下

27:34.300 --> 27:35.300
接下来

27:35.300 --> 27:36.300
看空残

27:36.300 --> 27:39.300
这里点击上传

27:39.300 --> 27:40.300
好

27:40.300 --> 27:42.300
现在出问题了

27:42.300 --> 27:44.300
是不是有个跨域的问题

27:44.300 --> 27:45.300
对不对

27:45.300 --> 27:46.300
是不是有个跨域的问题

27:46.300 --> 27:47.300
因为我这个浮气

27:47.300 --> 27:48.300
是没有解决跨域的问题的

27:48.300 --> 27:50.300
那怎么办呢

27:50.300 --> 27:51.300
那怎么办

27:51.300 --> 27:52.300
是不是要代理

27:52.300 --> 27:53.300
对不对

27:53.300 --> 27:54.300
要配置代理

27:54.300 --> 27:55.300
而且我们为了

27:55.300 --> 27:56.300
因为以后

27:56.300 --> 27:57.300
可能文件上传地址有变

27:57.300 --> 27:58.300
如果很多地方

27:58.300 --> 27:59.300
都要用文件上传的话

27:59.300 --> 28:00.300
那这个地址

28:00.300 --> 28:01.300
一改了

28:01.300 --> 28:02.300
是不是到处都要改

28:02.300 --> 28:03.300
所以我们最好是配置代理

28:03.300 --> 28:04.300
那个代理的配置

28:04.300 --> 28:05.300
也很简单

28:05.300 --> 28:06.300
我们之前也配置过

28:06.300 --> 28:07.300
再来这个什么

28:07.300 --> 28:09.300
5米介石里边

28:09.300 --> 28:11.300
5米RC里边

28:11.300 --> 28:12.300
再配置一下

28:14.300 --> 28:15.300
配置一下

28:15.300 --> 28:17.300
如果说你请求这样的地址

28:17.300 --> 28:19.300
我给你改一下

28:19.300 --> 28:20.300
改到哪呢

28:20.300 --> 28:21.300
改到Target

28:21.300 --> 28:22.300
你去请

28:22.300 --> 28:24.300
转而去请求哪呢

28:24.300 --> 28:25.300
转而去请求这个地址

28:25.300 --> 28:27.300
这个浮气

28:27.300 --> 28:28.300
然后呢

28:28.300 --> 28:29.300
一样的

28:29.300 --> 28:30.300
千斤

28:30.300 --> 28:31.300
Orange

28:31.300 --> 28:32.300
转而去

28:32.300 --> 28:33.300
一样的

28:33.300 --> 28:34.300
是不是改了

28:34.300 --> 28:35.300
改成代理了

28:35.300 --> 28:36.300
那么有了代理之后

28:36.300 --> 28:37.300
那么我们这里

28:37.300 --> 28:38.300
是不是直接去

28:38.300 --> 28:39.300
请求这样的地址

28:39.300 --> 28:40.300
就可以了

28:40.300 --> 28:41.300
请求这样的地址

28:41.300 --> 28:42.300
就行了

28:42.300 --> 28:43.300
因为有代理

28:43.300 --> 28:44.300
保存

28:44.300 --> 28:45.300
重新运行

28:45.300 --> 28:46.300
因为改了配置了

28:46.300 --> 28:47.300
重新运行

28:47.300 --> 28:48.300
好看一下

28:49.300 --> 29:00.550
先把浮气那边调通

29:10.680 --> 29:11.680
稍稍等一下

29:11.680 --> 29:16.360
来吧

29:17.360 --> 29:19.360
哪个页面

29:19.360 --> 29:20.360
upload

29:21.360 --> 29:22.360
好

29:22.360 --> 29:23.360
这个页面

29:23.360 --> 29:24.360
检查

29:24.360 --> 29:25.360
看控制台

29:25.360 --> 29:26.360
那么现在

29:26.360 --> 29:27.360
我们点击

29:27.360 --> 29:29.360
上传一个文件

29:29.360 --> 29:30.360
这里出错了

29:30.360 --> 29:31.360
出错了

29:31.360 --> 29:32.360
好

29:32.360 --> 29:33.360
那么我们看一下

29:33.360 --> 29:34.360
我们的浮气

29:34.360 --> 29:36.360
他给我们报了一个错误

29:36.360 --> 29:37.360
其实现在

29:37.360 --> 29:39.360
就已经发出了我的浮气了

29:39.360 --> 29:40.360
已经发出了我的浮气了

29:40.360 --> 29:41.360
那么浮气

29:41.360 --> 29:42.360
他报了一个

29:42.360 --> 29:44.360
想用的Status

29:44.360 --> 29:45.360
是500

29:45.360 --> 29:46.360
浮气内部错误

29:46.360 --> 29:47.360
对吧

29:47.360 --> 29:48.360
浮气报了一个错

29:48.360 --> 29:49.360
说什么呢

29:49.360 --> 29:50.360
有的

29:50.360 --> 29:51.360
什么意思呢

29:51.360 --> 29:52.360
这什么意思

29:52.360 --> 29:53.360
feel是什么意思

29:53.360 --> 29:54.360
feel是制断

29:54.360 --> 29:56.360
就得到了一个

29:56.360 --> 29:57.360
不该有的制断

29:57.360 --> 29:58.360
啥意思呢

29:58.360 --> 29:59.360
这东西

29:59.360 --> 30:00.360
大家如果说

30:00.360 --> 30:01.360
没有一点开发

30:01.360 --> 30:03.360
经验和尝试的话

30:03.360 --> 30:04.360
也很难知道这个啥意思

30:04.360 --> 30:05.360
我们一看就知道

30:05.360 --> 30:06.360
什么意思了

30:06.360 --> 30:07.360
什么意思呢

30:07.360 --> 30:09.360
就表单预的问题

30:09.360 --> 30:10.360
一个这个表单预

30:10.360 --> 30:11.360
看一下

30:11.360 --> 30:12.360
我们请求的

30:12.360 --> 30:13.360
这个请求监控出来

30:13.360 --> 30:14.360
什么请求

30:14.360 --> 30:15.360
他肯定是帮你发送请求

30:15.360 --> 30:17.360
帮你发送的poster请求

30:17.360 --> 30:18.360
还会自动给你发送请求

30:18.360 --> 30:19.360
你不用管

30:19.360 --> 30:20.360
然后呢

30:20.360 --> 30:21.360
他的消息体里边

30:21.360 --> 30:22.360
是不是

30:22.360 --> 30:24.360
formdata里边是一个file

30:24.360 --> 30:25.360
它是用的file这个名字

30:25.360 --> 30:27.360
你看banner是二净子

30:27.360 --> 30:28.360
banner也是二净子

30:28.360 --> 30:29.360
二净子是显示不出来的

30:29.360 --> 30:31.360
就是这是文件数据

30:31.360 --> 30:32.360
那么这个file

30:32.360 --> 30:33.360
它的名字

30:33.360 --> 30:35.360
就间的名字是file

30:35.360 --> 30:36.360
但是我们之前说

30:36.360 --> 30:37.360
那个接口里边要的是啥

30:37.360 --> 30:38.360
要的是

30:38.360 --> 30:39.360
表单预名

30:39.360 --> 30:40.360
要的是emgfile

30:40.360 --> 30:41.360
对吧

30:41.360 --> 30:42.360
这东西是不是要改

30:42.360 --> 30:43.360
你不能用file这个名字

30:43.360 --> 30:45.360
你应该用emgfile这个名字

30:45.360 --> 30:47.360
说你没有上去课的东西的话

30:47.360 --> 30:48.360
你根本就不知道

30:48.360 --> 30:49.360
这里怎么回事

30:49.360 --> 30:50.360
好

30:50.360 --> 30:51.360
那么这个东西怎么能改

30:51.360 --> 30:52.360
当然可以改

30:52.360 --> 30:53.360
通过怎么改

30:53.360 --> 30:55.360
通过这个name

30:55.360 --> 30:57.360
发送到后台的文件参数名

30:57.360 --> 30:58.360
就是这个间的名字

30:58.360 --> 30:59.360
它默认字就是file

30:59.360 --> 31:01.360
我故意给你写成emgfile

31:01.360 --> 31:02.360
我就是让你知道

31:02.360 --> 31:03.360
这个东西是可以改

31:03.360 --> 31:05.360
不然的话你

31:05.360 --> 31:06.360
都不知道

31:06.360 --> 31:07.360
这个是什么意思

31:07.360 --> 31:08.360
怎么改呢

31:08.360 --> 31:09.360
就是改一下name

31:09.360 --> 31:12.360
把它变成emgfile

31:12.360 --> 31:13.360
好

31:13.360 --> 31:14.360
保存

31:15.360 --> 31:17.360
看服务器的响应结果

31:21.360 --> 31:22.360
点击

31:22.360 --> 31:23.360
你看

31:23.360 --> 31:25.360
服务器是拿到服务器的响应结果了

31:25.360 --> 31:26.360
对吧

31:26.360 --> 31:27.360
是不是拿到了

31:27.360 --> 31:28.360
是不是有对象

31:28.360 --> 31:29.360
里边有pass

31:29.360 --> 31:30.360
对不对

31:30.360 --> 31:31.360
就没问题了

31:31.360 --> 31:32.360
就没问题了

31:34.360 --> 31:35.360
然后

31:35.360 --> 31:36.360
我们在这里

31:36.360 --> 31:38.360
拿到服务器的响应结果之后

31:38.360 --> 31:39.360
我们要干嘛呢

31:39.360 --> 31:40.360
看一下这边

31:40.360 --> 31:41.360
发到去

31:41.360 --> 31:42.360
这样

31:42.360 --> 31:43.360
我们要干嘛

31:43.360 --> 31:44.360
发到pass

31:44.360 --> 31:46.360
拿到服务器的新的地址

31:46.360 --> 31:47.360
新的地址干嘛

31:47.360 --> 31:48.360
是不是要调问我们这个事件

31:48.360 --> 31:49.360
昂欠解

31:49.360 --> 31:51.360
表示我一去这里呢

31:51.360 --> 31:53.360
拿到服务器的新的路径了

31:53.360 --> 31:54.360
那你要做什么事情

31:54.360 --> 31:56.360
你自己去做

31:56.360 --> 31:57.360
我不跟你去做

31:57.360 --> 31:58.360
你自己去做

31:58.360 --> 31:59.360
是不是触犯

31:59.360 --> 32:00.360
我们这个组件里面的

32:00.360 --> 32:01.360
昂欠解这个事件

32:01.360 --> 32:02.360
对吧

32:02.360 --> 32:03.360
昂欠解这个事件

32:03.360 --> 32:04.360
事件里面是不是

32:04.360 --> 32:06.360
把服务器的新的路径给他

32:06.360 --> 32:08.360
服务器新的路径给他了之后

32:08.360 --> 32:09.360
那么这边这个组件

32:09.360 --> 32:10.360
由于把新的路径

32:10.360 --> 32:12.360
又设置到value里面

32:12.360 --> 32:13.360
那么设置到value里面

32:13.360 --> 32:14.360
是不是value又改了

32:14.360 --> 32:15.360
这个组件重新渲染

32:15.360 --> 32:16.360
重新渲染

32:16.360 --> 32:17.360
是不是可以达到新的地址

32:17.360 --> 32:19.360
新的地址是不是图片就更新了

32:19.360 --> 32:20.360
对不对

32:20.360 --> 32:21.360
咱们来看一下

32:21.360 --> 32:23.360
这里点击

32:23.360 --> 32:25.360
选择一个

32:25.360 --> 32:26.360
你看是不是更新了

32:26.360 --> 32:27.360
点击

32:27.360 --> 32:29.360
选择一个

32:29.360 --> 32:30.360
稍等一下

32:30.360 --> 32:31.360
是不是更新了

32:31.360 --> 32:32.360
对吧

32:32.360 --> 32:33.360
这就更新了

32:33.360 --> 32:35.360
看一下

32:35.360 --> 32:37.360
是不是更新了

32:37.360 --> 32:38.360
但是我们现在

32:38.360 --> 32:39.360
如果说还要把它做得

32:39.360 --> 32:40.360
更加完善一点

32:40.360 --> 32:41.360
做得更加完善一点

32:41.360 --> 32:42.360
我们希望一个

32:42.360 --> 32:43.360
转圈圈

32:43.360 --> 32:44.360
对对对

32:44.360 --> 32:45.360
转

32:45.360 --> 32:46.360
那么要转圈圈的话

32:46.360 --> 32:47.360
怎么办呢

32:47.360 --> 32:48.360
我们是不是可以利用

32:48.360 --> 32:49.360
nd里面

32:49.360 --> 32:50.360
之前学过的一个组件叫spin

32:50.360 --> 32:51.360
对吧

32:51.360 --> 32:53.360
spin就是夹载中的效果

32:53.360 --> 32:55.360
咱们把这一块的整个区域

32:55.360 --> 32:57.360
都用spin包起来

32:57.360 --> 33:02.180
都用spin把包起来

33:02.180 --> 33:04.180
那么他到底

33:04.180 --> 33:06.180
什么时候要显示夹载中了

33:06.180 --> 33:07.180
这里面不是一个属性吗

33:07.180 --> 33:08.180
叫做spin你

33:08.180 --> 33:09.180
对吧

33:09.180 --> 33:10.180
一把设为去就表示夹载中

33:10.180 --> 33:11.180
一把设为force

33:11.180 --> 33:12.180
就表示不在夹载中

33:12.180 --> 33:13.180
那么我们这里

33:13.180 --> 33:15.180
跟我们内部的一个状态可以挂钩

33:15.180 --> 33:17.180
我们这里的写在内部写个状态

33:17.180 --> 33:19.180
这个状态外面不需要

33:19.180 --> 33:20.180
外面不需要

33:20.180 --> 33:21.180
只是内部使用的

33:21.180 --> 33:23.180
我们在这里设这个状态

33:23.180 --> 33:24.180
set

33:24.180 --> 33:25.180
set

33:25.180 --> 33:26.180
use

33:26.180 --> 33:27.180
set

33:27.180 --> 33:29.180
就是loading

33:29.180 --> 33:31.180
一开始没有夹载中

33:31.180 --> 33:33.180
一开始没有夹载中

33:33.180 --> 33:35.180
什么时候夹载中呢

33:35.180 --> 33:36.180
什么时候夹载中呢

33:36.180 --> 33:38.180
是不是刚开始发送请求的时候

33:38.180 --> 33:39.180
就把它变为true

33:39.180 --> 33:41.180
然后拿到服务器结果之后

33:41.180 --> 33:42.180
再把它设为force

33:42.180 --> 33:43.180
对吧

33:43.180 --> 33:44.180
这里要写上loading

33:44.180 --> 33:45.180
所以它的逻辑是

33:45.180 --> 33:46.180
发送请求之前

33:46.180 --> 33:48.180
把它设为true

33:48.180 --> 33:50.180
那么得到服务器的响应结果之后

33:50.180 --> 33:51.180
把它设为force

33:51.180 --> 33:52.180
说设为force的地方

33:52.180 --> 33:53.180
我们知道在这

33:53.180 --> 33:54.180
对吧

33:54.180 --> 33:55.180
得到服务器的响应结果之后

33:55.180 --> 33:56.180
我们把它setloading

33:56.180 --> 33:57.180
把它设为什么

33:57.180 --> 33:58.180
设为force

33:58.180 --> 33:59.180
对不对

33:59.180 --> 34:00.180
好

34:00.180 --> 34:02.180
那么在之前怎么办呢

34:02.180 --> 34:03.180
我们怎么知道

34:03.180 --> 34:06.180
哪里是在发送到服务器之前呢

34:06.180 --> 34:08.180
这里它其实给你提供了这么一个属性

34:08.180 --> 34:09.180
一个事件

34:09.180 --> 34:10.180
叫做什么呢

34:11.180 --> 34:13.180
叫做before upload

34:13.180 --> 34:15.180
before upload

34:17.180 --> 34:19.180
发送服务器之前

34:19.180 --> 34:21.180
触发的事件

34:21.180 --> 34:23.180
触发的事件

34:23.180 --> 34:24.180
这是before upload

34:24.180 --> 34:26.180
那么这个事件里面呢

34:26.180 --> 34:27.180
我们怎么做呢

34:27.180 --> 34:28.180
干嘛

34:28.180 --> 34:29.180
setloading

34:29.180 --> 34:30.180
把它设为true

34:30.180 --> 34:31.180
就完成了

34:32.180 --> 34:33.180
好

34:33.180 --> 34:34.180
保存

34:34.180 --> 34:35.180
你看一下

34:35.180 --> 34:36.180
好

34:36.180 --> 34:37.180
这里呢

34:37.180 --> 34:38.180
我们点击

34:38.180 --> 34:39.180
你看

34:39.180 --> 34:40.180
是不是一个加载冬的效果

34:41.180 --> 34:42.180
再来一个

34:42.180 --> 34:43.180
再一个大的图片

34:44.180 --> 34:45.180
这个图片有点大

34:45.180 --> 34:46.180
还要上传的比较久

34:46.180 --> 34:47.180
好像好几刀啊

34:47.180 --> 34:48.180
这个图片

34:49.180 --> 34:50.180
你看

34:50.180 --> 34:51.180
是不是一个加载冬的效果

34:51.180 --> 34:52.180
对吧

34:52.180 --> 34:53.180
其实我们这个头像做

34:53.180 --> 34:54.180
是不是就完了

34:54.180 --> 34:55.180
对

34:55.180 --> 34:56.180
是不是就做完了

34:56.180 --> 34:57.180
没问题吧

34:57.180 --> 34:58.180
头像做完了

34:58.180 --> 34:59.180
好

34:59.180 --> 35:00.180
头像做完了之后呢

35:00.180 --> 35:02.180
我们往往是需要

35:02.180 --> 35:03.180
需要把这个头像呢

35:03.180 --> 35:05.180
跟那个表单结合起来

35:05.180 --> 35:06.180
表了我们之前

35:06.180 --> 35:07.180
不是做了个学生管理吗

35:07.180 --> 35:08.180
天家学生

35:08.180 --> 35:09.180
这个表单表

35:09.180 --> 35:10.180
这个表单里边有个头像

35:10.180 --> 35:11.180
有个头像

35:11.180 --> 35:13.180
那么怎么来跟表单结合呢

35:13.180 --> 35:15.180
就是我们自己做了一个组建

35:15.180 --> 35:17.180
他怎么跟表单结合呢

35:17.180 --> 35:18.180
其实现在就非常简单了

35:18.180 --> 35:20.180
非常非常简单

35:20.180 --> 35:21.180
你看一下怎么来结合啊

35:21.180 --> 35:22.180
我们在这里呢

35:22.180 --> 35:25.180
找到那个我们之前的pages

35:25.180 --> 35:26.180
找到component

35:26.180 --> 35:28.180
里边不是一个student form吗

35:29.180 --> 35:30.180
不是个表单吗

35:30.180 --> 35:31.180
对吧

35:31.180 --> 35:32.180
我再来个头像吧

35:32.180 --> 35:33.180
再来个头像

35:33.180 --> 35:34.180
就放到第1个吧

35:34.180 --> 35:35.180
放到第1个

35:35.180 --> 35:36.180
form item

35:36.180 --> 35:37.180
form item

35:38.180 --> 35:39.180
这是个头像

35:39.180 --> 35:40.180
头像

35:41.180 --> 35:42.180
头像呢给大家名字啊

35:42.180 --> 35:43.180
evata

35:43.180 --> 35:44.180
当然我们那个数据没有

35:44.180 --> 35:46.180
我们那个数据里边没有

35:46.180 --> 35:47.180
那它肯定是个头像地址

35:47.180 --> 35:48.180
对不对

35:48.180 --> 35:49.180
肯定是个头像地址

35:49.180 --> 35:50.180
好

35:50.180 --> 35:51.180
我们这里呢

35:51.180 --> 35:53.180
没有没有这个ruos

35:53.180 --> 35:54.180
ruos没有

35:54.180 --> 35:55.180
没有ruos

35:55.180 --> 35:57.180
没有验证

35:57.180 --> 35:58.180
好那这里边

35:58.180 --> 35:59.180
我们要选什么组建

35:59.180 --> 36:00.180
是不是选我们刚才

36:00.180 --> 36:01.180
做的evata组建啊

36:01.180 --> 36:02.180
对吧

36:02.180 --> 36:03.180
我们选一个刚才

36:03.180 --> 36:04.180
做的那个evata组建

36:05.180 --> 36:06.180
evata

36:08.180 --> 36:09.180
evata

36:10.180 --> 36:11.180
对吧

36:11.180 --> 36:12.180
选这个东西

36:12.180 --> 36:13.180
完成了

36:13.180 --> 36:14.180
找到这个

36:14.180 --> 36:15.180
evata

36:15.180 --> 36:16.180
那么这个组建里边

36:17.180 --> 36:18.180
value值是啥

36:19.180 --> 36:20.180
unchanged 是吧

36:20.180 --> 36:21.180
改变value值

36:21.180 --> 36:23.180
那么这件事情

36:23.180 --> 36:24.180
其实这个form item

36:24.180 --> 36:25.180
我们之前都讲过

36:25.180 --> 36:26.180
是不是给你做了

36:26.180 --> 36:27.180
不是

36:27.180 --> 36:28.180
是这个函数

36:28.180 --> 36:29.180
函数是给你做了

36:29.180 --> 36:30.180
这个高階组建

36:30.180 --> 36:31.180
它返回来的高階组建

36:31.180 --> 36:32.180
已经给你做了

36:32.180 --> 36:33.180
它会把evata的对应

36:34.180 --> 36:35.180
对应到这里边

36:35.180 --> 36:37.180
对应到这个组建里边

36:38.180 --> 36:39.180
它会把这个

36:39.180 --> 36:41.180
你给这里封装的组建

36:41.180 --> 36:43.180
它会给自动给你传入value值

36:43.180 --> 36:44.180
就是你给它提供了

36:44.180 --> 36:45.180
对象里边是什么数据

36:45.180 --> 36:47.180
它value值就传什么数据

36:47.180 --> 36:49.180
而且这个组建unchanged之后

36:49.180 --> 36:51.180
它会自动的改变这个value值

36:51.180 --> 36:52.180
它已经跟你说了

36:52.180 --> 36:53.180
你自己不用写

36:53.180 --> 36:54.180
就像这里的input

36:54.180 --> 36:55.180
没有写value值

36:55.180 --> 36:56.180
对吧

36:56.180 --> 36:57.180
是不是还是可以对应上

36:57.180 --> 36:58.180
没有写unchanged

36:58.180 --> 36:59.180
是不是还可以

36:59.180 --> 37:00.180
还是可以得到写的结果

37:00.180 --> 37:01.180
它会自动帮你处理

37:01.180 --> 37:02.180
交你的属性名

37:02.180 --> 37:03.180
和世界名

37:03.180 --> 37:05.180
分别是value和unchanged

37:05.180 --> 37:06.180
就行了

37:06.180 --> 37:08.180
如果这一块你还没搞懂的话

37:08.180 --> 37:09.180
你可以回复

37:09.180 --> 37:10.180
回头看一下

37:10.180 --> 37:12.180
我们之前的一块的知识

37:12.180 --> 37:13.180
好了 现在就已经做出来了

37:13.180 --> 37:14.180
你看

37:14.180 --> 37:15.180
头像这一块就出来了

37:15.180 --> 37:16.180
对吧

37:16.180 --> 37:17.180
好 上传头像

37:17.180 --> 37:18.180
我们就随便写个

37:18.180 --> 37:19.180
随便写个

37:19.180 --> 37:20.180
学号我们随便写个

37:20.180 --> 37:21.180
随便写个

37:21.180 --> 37:22.180
姓名随便写一个

37:22.180 --> 37:24.180
我们这里得到结果吧

37:25.180 --> 37:26.180
这里呢

37:28.180 --> 37:29.180
这里看一下

37:31.180 --> 37:34.180
找到得到数据的地方

37:35.180 --> 37:37.180
找到得到数据的地方

37:38.180 --> 37:41.180
添加update

37:41.180 --> 37:42.180
在这

37:42.180 --> 37:43.180
验证通过

37:43.180 --> 37:44.180
验证通过之后

37:44.180 --> 37:45.180
我们先不着急

37:45.180 --> 37:46.180
调整添加修改

37:46.180 --> 37:47.180
我们这里输出

37:47.180 --> 37:48.180
输出什么呢

37:48.180 --> 37:49.180
输出values

37:49.180 --> 37:50.180
看一下能不能得到

37:50.180 --> 37:51.180
表达里面的图片地址

37:52.180 --> 37:53.180
控制台打开

37:54.180 --> 37:55.180
这怎么了

37:56.180 --> 37:57.180
刷新手

37:57.180 --> 37:58.180
头像

37:59.180 --> 38:00.180
头像

38:02.620 --> 38:03.620
地图没什么好说

38:03.620 --> 38:04.620
它说什么

38:05.620 --> 38:06.620
function components

38:06.620 --> 38:09.620
cannot be given rifts

38:10.620 --> 38:12.620
tempts to assist

38:12.620 --> 38:14.620
this rift will fill

38:14.620 --> 38:18.700
student form

38:20.700 --> 38:25.170
做什么鬼啊

38:25.170 --> 38:26.170
做什么鬼

38:26.170 --> 38:27.170
等一下

38:27.170 --> 38:28.170
我看一下

38:28.170 --> 38:29.170
是哪个地方

38:29.170 --> 38:30.170
我家哪个地方

38:30.170 --> 38:32.170
出现了问题

38:32.170 --> 38:35.180
我们之前有这个错误吗

38:35.180 --> 38:37.180
之前好像没了这个错误

38:38.180 --> 38:40.180
我们之前有这个错误吗

38:40.180 --> 38:41.180
好像没有啊

38:41.180 --> 38:44.500
不是我们这个组建的问题啊

38:52.260 --> 38:53.260
我们想想啊

38:54.260 --> 38:55.260
不是我们这个组建的问题吧

38:55.260 --> 38:57.260
我们看一下我们刚才那个页面

38:57.260 --> 38:59.260
刚才我们做了那个upload test

38:59.260 --> 39:01.260
这个页面没有这个错误对吧

39:01.260 --> 39:02.260
不是我们写的这个组建的问题

39:03.260 --> 39:06.260
这个错误是什么时候出的

39:06.260 --> 39:08.260
出现错误我们就解决它吧

39:08.260 --> 39:09.260
就解决它

39:10.260 --> 39:12.260
我们先把这个驱掉

39:12.260 --> 39:13.260
不要头像

39:13.260 --> 39:15.260
跟这个头像可能还没有什么关系

39:18.260 --> 39:19.260
加上头像出错了

39:19.260 --> 39:20.260
我看一下啊

39:21.260 --> 39:22.260
加上头像出错了

39:24.700 --> 39:25.700
我们自己写了一个制定组建

39:25.700 --> 39:27.700
那我们这里没有用头像的

39:28.700 --> 39:30.700
我们这里如果说用的是input的组建了

39:33.010 --> 39:34.010
看一下

39:34.010 --> 39:36.010
用input的组建没问题了

39:37.010 --> 39:39.010
用input的组建没问题

39:39.010 --> 39:41.010
用ervata查出了问题

39:42.010 --> 39:43.010
没问题了

39:43.010 --> 39:45.010
刚才input的组建我们再看一下

39:45.010 --> 39:47.010
它是不是显示了下面的错误

39:48.010 --> 39:49.010
input的组建也有问题

39:49.010 --> 39:50.010
这是一个通用的问题

39:50.010 --> 39:52.010
跟我们的ervata没关系

39:52.010 --> 39:53.010
好吧来吧

39:53.010 --> 39:54.010
我们来看一下这个错误

39:56.010 --> 39:57.010
我把这里剪辑了一下

39:57.010 --> 39:59.010
因为我刚才找了半天

39:59.010 --> 40:00.010
没有发现有任何问题

40:00.010 --> 40:01.010
我们的代码

40:01.010 --> 40:02.010
他刚才说的意思

40:02.010 --> 40:03.010
我明白他说

40:03.010 --> 40:06.010
你不能给一个函数组建加REF值

40:06.010 --> 40:07.010
对吧

40:07.010 --> 40:08.010
那我们没有加REF值

40:08.010 --> 40:10.010
我们哪要给函数组建加REF值

40:10.010 --> 40:13.010
我们根本就从头到尾都没有使用个REF

40:13.010 --> 40:14.010
但是我这里呢

40:15.010 --> 40:17.010
刚才把这个区调过后又加上

40:17.010 --> 40:18.010
然后再一刷新就没

40:18.010 --> 40:19.010
他就没问题了

40:19.010 --> 40:20.010
你看他就没问题了

40:20.010 --> 40:22.010
这个起了怪了

40:22.010 --> 40:23.010
这个有点神奇

40:24.010 --> 40:26.010
我们这里再把它变成ervata

40:26.010 --> 40:29.010
看一下他会不会问题又出来了

40:30.010 --> 40:31.010
他这个问题又出来了

40:31.010 --> 40:32.010
你看

40:32.010 --> 40:34.010
他说函数组建不能加REF

40:35.010 --> 40:36.010
啥意思吗

40:36.010 --> 40:37.010
他意思就是说

40:37.010 --> 40:40.010
他可能他要往这个组建里边加REF值

40:40.010 --> 40:41.010
我就明白了

40:41.010 --> 40:42.010
明白了

40:42.010 --> 40:43.010
他的意思就是说

40:43.010 --> 40:46.010
高阶组建他必须要传一个内组建进去

40:46.010 --> 40:48.010
他要给他加REF值

40:48.010 --> 40:50.010
要给他加REF值

40:51.010 --> 40:54.010
他说他不能给函数组建加REF

40:55.010 --> 40:57.010
那么这里怎么办呢

40:57.010 --> 40:59.010
这个东西呢

41:01.010 --> 41:02.010
我们这样吧

41:02.010 --> 41:04.010
我们就把它写成内组建

41:04.010 --> 41:06.010
要把它写成内组建得了

41:06.010 --> 41:07.010
函数组建

41:07.010 --> 41:09.010
他想往里边加REF

41:10.010 --> 41:12.010
这里刚才我们用那个forwardREF得了

41:12.010 --> 41:13.010
对吧

41:13.010 --> 41:15.010
我们刚才用那个forwardREF

41:15.010 --> 41:16.010
还记得吗

41:16.010 --> 41:17.010
不记得的话

41:17.010 --> 41:19.010
去看一下之前的课程

41:20.010 --> 41:21.010
这里呢

41:21.010 --> 41:22.010
做一个组建出来

41:22.010 --> 41:23.010
REF值在这

41:23.010 --> 41:25.010
REF值就放这吧

41:25.010 --> 41:26.010
就放这

41:29.010 --> 41:30.010
用forwardREF

41:31.010 --> 41:32.010
这里呢

41:32.010 --> 41:33.010
make a sport

41:33.010 --> 41:34.010
default

41:35.010 --> 41:36.010
react

41:36.010 --> 41:37.010
forwardREF

41:38.010 --> 41:40.010
把这个组建出来进去

41:43.010 --> 41:44.010
好 这样子吧

41:44.010 --> 41:46.010
他是个REF值的高的贵

41:47.010 --> 41:48.010
好 现在没问题了

41:48.010 --> 41:49.010
对吧 没问题了

41:50.010 --> 41:51.010
好 那么现在我们来试一下

41:51.010 --> 41:52.010
试一下

41:52.010 --> 41:54.010
关键是他看能不能得到这个数据

41:54.010 --> 41:55.010
头像的数据

41:55.010 --> 41:56.010
我们这里写上

41:56.010 --> 41:57.010
填了那么一个图片

41:57.010 --> 41:59.010
这里随便写个学号

41:59.010 --> 42:01.010
名字随便写一个

42:01.010 --> 42:02.010
出生年随便选一个

42:02.010 --> 42:04.010
手机号随便选一个

42:04.010 --> 42:05.010
柱子随便选一个

42:06.010 --> 42:08.010
柱香随便写一个

42:08.010 --> 42:09.010
好 第二点

42:09.010 --> 42:11.010
我这里还没有改

42:11.010 --> 42:12.010
关键是

42:12.010 --> 42:15.010
我这里还没有把改成输出

42:15.010 --> 42:18.220
我们这里

42:18.220 --> 42:21.220
刚才在这里还要把改成输出

42:22.220 --> 42:23.220
验证通过

42:23.220 --> 42:24.220
我要把我不跳转

42:24.220 --> 42:25.220
我不跳转

42:25.220 --> 42:26.220
我们要输出

42:26.220 --> 42:28.220
输出这个values

42:28.220 --> 42:29.220
还得重来一次

42:30.220 --> 42:31.220
还得重来一次

42:31.220 --> 42:32.220
来吧 重来

42:33.220 --> 42:34.220
上场的图片

42:34.220 --> 42:35.220
学号

42:36.220 --> 42:37.220
姓名

42:38.220 --> 42:39.220
出生年

42:39.220 --> 42:40.220
手机

42:40.220 --> 42:41.220
柱子

42:42.220 --> 42:43.220
随便写一个

42:43.220 --> 42:44.220
提交

42:44.220 --> 42:45.220
你看 是不是拿到这个数据了

42:45.220 --> 42:46.220
Avata

42:46.220 --> 42:47.220
对吧

42:47.220 --> 42:48.220
数据是不是拿到了

42:48.220 --> 42:49.220
对不对

42:49.220 --> 42:50.220
就这么简单

42:51.220 --> 42:52.220
好 那么这样子

42:52.220 --> 42:53.220
跟表达结合在一起了

42:53.220 --> 42:54.220
其实

42:54.220 --> 42:56.220
如果说你理解它的原理的话

42:56.220 --> 42:57.220
那么

42:57.220 --> 42:58.220
这一块做起来并不难

42:58.220 --> 42:59.220
只不过

42:59.220 --> 43:00.220
我们这里

43:00.220 --> 43:01.220
由于服务器

43:01.220 --> 43:03.220
就是我们学生那个服务器

43:03.220 --> 43:04.220
就是杜依那个服务器

43:04.220 --> 43:06.220
它里边没有存头像

43:06.220 --> 43:07.220
所以说你这里

43:07.220 --> 43:08.220
就算提交到服务器

43:08.220 --> 43:09.220
也没用

43:09.220 --> 43:11.220
根本没有给存头像

43:11.220 --> 43:13.220
没有把头像存到数据库

43:13.220 --> 43:15.220
头像在我这个服务器上面

43:15.220 --> 43:17.220
我把头像地址

43:17.220 --> 43:18.220
发给学生

43:18.220 --> 43:20.220
学生那边的服务器的话

43:20.220 --> 43:22.220
它没有存头像地址

43:23.220 --> 43:26.220
这就是关于图片上传

43:26.220 --> 43:27.220
单个文件图片上传

43:27.220 --> 43:28.220
那如果说你要做

43:28.220 --> 43:29.220
多个文件图片上传的

43:29.220 --> 43:30.220
这么一个组件的话

43:30.220 --> 43:31.220
也很简单

43:31.220 --> 43:32.220
我们两下就写完了

43:32.220 --> 43:33.220
比方说

43:34.220 --> 43:36.220
还有一个问题

43:36.220 --> 43:37.220
别说

43:37.220 --> 43:38.220
就是说你要上传

43:38.220 --> 43:39.220
头像的话

43:39.220 --> 43:41.220
你不能上传一个

43:41.220 --> 43:42.220
不能上传一个其他文件

43:42.220 --> 43:44.220
你不能上传其他文件的

43:44.220 --> 43:46.220
因为我这是头像上传

43:46.220 --> 43:47.220
你不能给我一个其他文件

43:47.220 --> 43:48.220
你看

43:48.220 --> 43:50.220
这里的目前是可以

43:50.220 --> 43:52.220
可以选择其他文件的

43:52.220 --> 43:53.220
比方我们桌面上

43:53.220 --> 43:54.220
有这个TAT

43:54.220 --> 43:55.220
你看是不是可以选择

43:55.220 --> 43:56.220
对吧

43:56.220 --> 43:57.220
你不能写其他文件

43:57.220 --> 43:59.220
那么这个东西怎么来控制呢

43:59.220 --> 44:00.220
这个东西在服务器控制的

44:00.220 --> 44:01.220
那么科普端这边

44:01.220 --> 44:02.220
也可以控制

44:02.220 --> 44:03.220
通过什么控制呢

44:03.220 --> 44:05.220
通过那个叫做

44:06.220 --> 44:09.220
可以设置文件内容

44:09.220 --> 44:10.220
那么他这里怎么去设置呢

44:10.220 --> 44:11.220
你看一下

44:11.220 --> 44:12.220
他这里有个箱件

44:12.220 --> 44:13.220
箱件哪

44:13.220 --> 44:14.220
其实就是

44:14.220 --> 44:16.220
ATM5里边的

44:16.220 --> 44:17.220
他这个

44:17.220 --> 44:18.220
这个属性

44:18.220 --> 44:19.220
就这样的设置

44:19.220 --> 44:20.220
来吧

44:20.220 --> 44:21.220
我们写就行

44:21.220 --> 44:23.220
然后我们只允许上传

44:23.220 --> 44:25.220
哪些文件呢

44:25.220 --> 44:26.220
什么文件

44:26.220 --> 44:27.220
比方说

44:27.220 --> 44:32.220
png.gif

44:32.220 --> 44:37.220
bmp.gif

44:37.220 --> 44:38.220
对吧

44:38.220 --> 44:39.220
这些都是图片

44:39.220 --> 44:40.220
常见的图片

44:40.220 --> 44:41.220
图片的后追名

44:41.220 --> 44:42.220
好

44:42.220 --> 44:43.220
你看一下

44:43.220 --> 44:44.220
这样子已经写了过后呢

44:44.220 --> 44:45.220
我们现在再点

44:45.220 --> 44:46.220
你看桌面上

44:46.220 --> 44:47.220
是不是没有那些

44:47.220 --> 44:48.220
就是非图片的东西

44:48.220 --> 44:49.220
看不见了

44:49.220 --> 44:50.220
对吧

44:50.220 --> 44:51.220
看不见了

44:51.220 --> 44:52.220
这是我以前记录的

44:52.220 --> 44:54.220
一个相机开局

44:54.220 --> 44:56.220
顺炮布局

44:56.220 --> 44:58.220
然后对图片测试

44:58.220 --> 44:59.220
你看图片是不是可以显示

44:59.220 --> 45:00.220
对吧

45:00.220 --> 45:01.220
那么可以上传图片

45:01.220 --> 45:02.220
没问题

45:02.220 --> 45:03.220
好

45:03.220 --> 45:04.220
这是关于这一块

45:04.220 --> 45:05.220
啊

45:05.220 --> 45:06.220
好

45:06.220 --> 45:07.220
那就没了

45:07.220 --> 45:09.220
就是一个图片上传的一个封装

45:09.220 --> 45:11.220
那么学习到这个之后呢

45:11.220 --> 45:12.220
你就大概知道了

45:12.220 --> 45:13.220
他是怎么回事了

45:13.220 --> 45:14.220
图片上传

45:14.220 --> 45:15.220
好吧

45:15.220 --> 45:16.220
而且呢以后呢

45:16.220 --> 45:17.220
我们上传图片

45:17.220 --> 45:18.220
一般都是上传头像

45:18.220 --> 45:19.220
对吧

45:19.220 --> 45:20.220
一般都是上传头像

45:20.220 --> 45:21.220
好

45:21.220 --> 45:22.220
这就是关于图片上传这个主线

45:22.220 --> 45:23.220
讲完了

45:23.220 --> 45:24.220
那么后边呢

45:24.220 --> 45:25.220
ND里边

45:25.220 --> 45:26.220
还有一些

45:26.220 --> 45:27.220
其他的

45:27.220 --> 45:28.220
我们还没有用到的

45:28.220 --> 45:29.220
常见主线

45:29.220 --> 45:30.220
我就分几页课

45:30.220 --> 45:31.220
给大家说一下啊

45:31.220 --> 45:32.220
其实也不复杂了

45:32.220 --> 45:33.220
就可能比较复杂的

45:33.220 --> 45:35.220
就是图片上传这一块

45:35.220 --> 45:36.220
好

45:36.220 --> 45:37.220
现在把它做一下啊

45:37.220 --> 45:38.220
好

45:38.220 --> 45:39.220
这是图片上传

