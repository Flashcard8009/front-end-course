WEBVTT

00:00.620 --> 00:04.620
好 那咱们这一课就开始来讲表达了

00:04.620 --> 00:09.620
表达这一课我倒是希望通过阅读API文档

00:09.620 --> 00:13.620
能够带大家读API文档 给大家讲清楚

00:13.620 --> 00:15.620
但是发现有点难度

00:15.620 --> 00:18.620
因为表达这一课应该说是end design里面

00:18.620 --> 00:21.620
是这一块比较复杂的东西

00:21.620 --> 00:24.620
大家可能初学者去阅读他的官方文

00:24.620 --> 00:27.620
他都不是很好 阅读的懂

00:27.620 --> 00:30.620
要接合他的语言代码Idle分析

00:30.620 --> 00:34.620
然后猜测 毕竟对他的API文档猜他是什么意思

00:34.620 --> 00:35.620
这样才能看得懂

00:35.620 --> 00:39.620
所以说呢 这个难度对于初学者直接阅读文档来看的话

00:39.620 --> 00:41.620
对初学者的要求太高了

00:41.620 --> 00:43.620
所以说我这里就只给你们讲

00:43.620 --> 00:45.620
我给你组织一下语言

00:45.620 --> 00:48.620
组织一下他的讲解顺序 给大家Idle讲

00:48.620 --> 00:50.620
我们这里做一个例子出来 就做什么例子呢

00:50.620 --> 00:55.620
就做一个天家学生的这么一个页面出来

00:55.620 --> 00:57.620
自然而然他需要一个表单页面

00:57.620 --> 01:02.620
他要填很多东西 填学生姓名 学校 选择姓别

01:02.620 --> 01:04.620
对不对 还有什么田柱子

01:04.620 --> 01:06.620
这些东西都需要填一些

01:06.620 --> 01:11.620
因此我这里就用这个例子来给大家说明表单怎么去做

01:11.620 --> 01:14.620
但是通过这个例子做完了之后

01:14.620 --> 01:16.620
大家自然而然就认识到了表单到底是怎么回事

01:16.620 --> 01:19.620
在end里面怎么去开发一个表单

01:19.620 --> 01:23.620
他其实给你做了一套空间 就是一套组建出来

01:24.620 --> 01:26.620
就是一些form组建出来

01:26.620 --> 01:29.620
可以让你去整体上去控制这个表单

01:29.620 --> 01:32.620
除了一个整体上控制表单的组建之外

01:32.620 --> 01:35.620
他还给你做了很多的小的表单组建

01:35.620 --> 01:41.620
咱们先来认识他的小的单独的表单组建

01:41.620 --> 01:44.620
能够获取用户的输入的这么一些组建

01:44.620 --> 01:46.620
比如说下达列表 文本框

01:46.620 --> 01:48.620
文本框我们好像之前都用过了 对吧

01:48.620 --> 01:51.620
文本框 还有什么单选框

01:51.620 --> 01:53.620
这些好像都用过的

01:53.620 --> 01:55.620
就这么一些小的表单组建

01:55.620 --> 01:57.620
咱们先看一下这个

01:57.620 --> 02:01.620
看完了之后咱们再开发一个完整的

02:01.620 --> 02:04.620
可以整体上去控制的这么一个表单组建

02:04.620 --> 02:05.620
好吧

02:05.620 --> 02:08.620
我们这里首先看一下他的小的表单组建

02:08.620 --> 02:10.620
我到他的官方文章里去看

02:10.620 --> 02:16.090
这里我就建立一个页面吧

02:16.090 --> 02:20.090
就建立一个test.js

02:20.090 --> 02:23.090
建立这么一个页面

02:24.090 --> 02:26.090
这个页面里面我们就来测试一下

02:26.090 --> 02:29.090
随便用几个他的这些表单组建

02:29.090 --> 02:31.090
咱们随便用几个

02:31.090 --> 02:33.090
我们这里写成一个类组建吧

02:35.090 --> 02:36.090
OK

02:37.090 --> 02:39.090
好 咱们来看一下

02:39.090 --> 02:40.090
这些组建

02:40.090 --> 02:45.590
下面我们找到他的数据入入

02:45.590 --> 02:46.590
什么叫数据入入呢

02:46.590 --> 02:48.590
就是拥护里面的

02:48.590 --> 02:52.590
就是拥护里面填下的一些东西

02:52.590 --> 02:55.590
我们可以用一些组建来获取到

02:55.590 --> 02:58.590
比方说像文笨框 下列表这些东西

02:58.590 --> 03:00.590
是拥护产生的输入

03:00.590 --> 03:02.590
那么这就叫数据入入

03:02.590 --> 03:04.590
那么这里面就全是跟数据入入相关的

03:04.590 --> 03:06.590
咱们随便看几个

03:06.590 --> 03:08.590
因为我们之前看过了什么input

03:08.590 --> 03:09.590
对吧

03:09.590 --> 03:11.590
这个组建也挺简单的

03:11.590 --> 03:14.590
拥护了跟原生的rex里面

03:14.590 --> 03:15.590
他的input

03:15.590 --> 03:18.590
那个atm元素差不多

03:18.590 --> 03:19.590
还有什么呢

03:19.590 --> 03:22.590
我们之前看到过那个就是radio单选框

03:22.590 --> 03:23.590
对吧

03:23.590 --> 03:24.590
这个东西也差不多

03:24.590 --> 03:25.590
也差不多

03:25.590 --> 03:26.590
这是我们之前看到过的

03:26.590 --> 03:28.590
咱们再随便看几个吧

03:28.590 --> 03:31.590
比方说第1个叫自动完成

03:31.590 --> 03:32.590
他都给你做好了

03:32.590 --> 03:33.590
但这里个演示

03:33.590 --> 03:35.590
这些东西特别简单了

03:35.590 --> 03:37.590
我说的这一颗比较麻烦的是在这里

03:37.590 --> 03:40.590
整体上来控制它是比较麻烦的

03:40.590 --> 03:42.590
这一块其实上比较简单的

03:42.590 --> 03:43.590
那么这里

03:43.590 --> 03:45.590
你看一下自动完成

03:45.590 --> 03:46.590
咱们随便写个

03:46.590 --> 03:48.590
下面是不是有弹出来

03:48.590 --> 03:49.590
弹出来告诉你

03:49.590 --> 03:51.590
所以告诉你弹出来

03:51.590 --> 03:52.590
有些建议词对不对

03:52.590 --> 03:54.590
我们可以在这里选择

03:54.590 --> 03:55.590
用光标件也可以选择

03:55.590 --> 03:57.590
用鼠标件也可以选择

03:57.590 --> 03:58.590
选中

03:58.590 --> 03:59.590
或者是选这个

03:59.590 --> 04:00.590
对吧

04:00.590 --> 04:01.590
就这么简单

04:01.590 --> 04:02.590
就这么简单

04:02.590 --> 04:03.590
来我们看一下大看

04:03.590 --> 04:04.590
看一下他怎么用的

04:04.590 --> 04:06.590
你怎么用的

04:06.590 --> 04:08.590
那么这里

04:08.590 --> 04:10.590
他有很多的例子

04:10.590 --> 04:11.590
我们就介绍一下

04:11.590 --> 04:12.590
基本用法就完成了

04:12.590 --> 04:13.590
他告诉你

04:13.590 --> 04:14.590
这里的最关键的是

04:14.590 --> 04:17.590
你要通过data source

04:17.590 --> 04:20.590
来设置自动完成的数据源

04:20.590 --> 04:22.590
就是说你输入了一些数据

04:22.590 --> 04:25.590
那么他会再从数据源里边

04:25.590 --> 04:27.590
去进行查找

04:27.590 --> 04:30.590
会从数据源里边去进行查找

04:30.590 --> 04:31.590
那么

04:31.590 --> 04:33.590
你要给他一个数据源才行

04:33.590 --> 04:34.590
举个例子吧

04:34.590 --> 04:35.590
比方说

04:35.590 --> 04:38.590
我们这里先运行出来

04:38.590 --> 04:40.590
边运行边说

04:40.590 --> 04:41.590
and

04:41.590 --> 04:43.590
no

04:43.590 --> 04:47.030
12start

04:47.030 --> 04:52.580
运行出来

04:52.580 --> 05:08.470
稍等

05:08.470 --> 05:10.470
我们这里先写着吧

05:10.470 --> 05:12.470
我们这里先导入一个组件再说

05:12.470 --> 05:14.470
from

05:14.470 --> 05:15.470
and

05:15.470 --> 05:17.470
这些可能内容可能稍微长一点

05:17.470 --> 05:19.470
不行的话我就分成两节课

05:19.470 --> 05:24.230
这里是test

05:24.230 --> 05:26.230
好,test这个页面

05:26.230 --> 05:29.230
这里导入这个out to complete

05:29.230 --> 05:30.230
导入这么个组件

05:30.230 --> 05:32.230
好,这里让我们使用这个组件

05:32.230 --> 05:34.230
out to complete

05:34.230 --> 05:36.230
使用这个组件

05:36.230 --> 05:38.230
这个组件是个文本框

05:38.230 --> 05:40.230
它告诉你

05:40.230 --> 05:42.230
你要通过data source

05:42.230 --> 05:44.230
去设置它的数据源

05:44.230 --> 05:46.230
表示我们这里设置

05:46.230 --> 05:47.230
这是个什么玩意呢

05:47.230 --> 05:48.230
它是一个数组

05:48.230 --> 05:49.230
这个数据源

05:49.230 --> 05:51.230
它是一个数组

05:51.230 --> 05:53.230
一看它这里是不是给的一个数组

05:53.230 --> 05:55.230
对吧,给的一个数组

05:55.230 --> 05:57.230
那么这里

05:57.230 --> 05:59.230
给了这个数组之后

05:59.230 --> 06:00.230
我们在数组里面每一项

06:00.230 --> 06:02.230
就是它建议的词语

06:02.230 --> 06:03.230
建议的词

06:03.230 --> 06:05.230
每一项我们给它一个abc

06:05.230 --> 06:07.230
bcd

06:07.230 --> 06:08.230
cd1

06:08.230 --> 06:09.230
随便给一个

06:09.230 --> 06:11.230
保存,咱们来看一下这边

06:13.230 --> 06:14.230
这个框框是不是出来了

06:14.230 --> 06:16.230
你看一下,是不是出来了

06:16.230 --> 06:17.230
出来过后你看

06:17.230 --> 06:19.230
我们点进去是不是数据源就出来了

06:19.230 --> 06:21.230
对吧,是不是数据源就出来了

06:21.230 --> 06:23.230
就这么简单

06:23.230 --> 06:24.230
就这么简单

06:24.230 --> 06:26.230
这数据源就出来了

06:26.230 --> 06:28.230
那么如何来动态的

06:28.230 --> 06:29.230
来改变数据源的

06:29.230 --> 06:31.230
那就需要你自行控制的

06:31.230 --> 06:33.230
比方说我们这里可以写个状态

06:33.230 --> 06:35.230
可以写个状态

06:35.230 --> 06:37.230
状态里面给它一个

06:37.230 --> 06:39.230
Mation

06:39.230 --> 06:41.230
就是Tips

06:41.230 --> 06:43.230
就建议,建议

06:43.230 --> 06:45.230
那么这是一个空数组

06:45.230 --> 06:47.230
那么我们的数据源就来自于

06:47.230 --> 06:49.230
建议词,推荐的词语

06:49.230 --> 06:50.230
Tips

06:50.230 --> 06:52.230
那么这个AutoComplets

06:52.230 --> 06:54.230
我们往下找它的API

06:54.230 --> 06:56.230
我们有希望用户

06:56.230 --> 06:58.230
在这里面输入东西的时候

06:58.230 --> 07:00.230
你输入一个东西

07:00.230 --> 07:02.230
那么我可以更改这个数据源

07:02.230 --> 07:04.230
我是不是可以更改数据源

07:04.230 --> 07:06.230
那么你输入什么东西

07:06.230 --> 07:08.230
我给你提供不同的建议词

07:08.230 --> 07:10.230
我根据你输入的东西

07:10.230 --> 07:11.230
来提供这个数据源

07:11.230 --> 07:13.230
所以说我们这里肯定要涉及到事件

07:13.230 --> 07:15.230
就是它这里边

07:15.230 --> 07:16.230
肯定有一个事件

07:16.230 --> 07:17.230
有这么一个事件

07:17.230 --> 07:18.230
什么事件呢

07:18.230 --> 07:19.230
我们来找一找

07:19.230 --> 07:20.230
是不是Unchanged

07:20.230 --> 07:21.230
对不对

07:21.230 --> 07:22.230
就是Unchanged

07:22.230 --> 07:23.230
那么这个Unchanged

07:23.230 --> 07:25.230
是不是跟那个Input

07:25.230 --> 07:26.230
Input的元素是一样的

07:26.230 --> 07:27.230
并且我们刚才看到

07:27.230 --> 07:29.230
它还有什么Values

07:29.230 --> 07:30.230
是吧

07:30.230 --> 07:31.230
是吧

07:31.230 --> 07:33.230
还有Values

07:33.230 --> 07:36.230
表示指定当前选中的条目

07:36.230 --> 07:39.230
就是这个Input文本框的Values

07:39.230 --> 07:40.230
好

07:40.230 --> 07:41.230
我们这里呢

07:41.230 --> 07:43.230
因为还有一个Values

07:43.230 --> 07:44.230
好

07:44.230 --> 07:47.230
我们这两个把变成收控的Values

07:47.230 --> 07:49.230
然后它的Unchanged

07:49.230 --> 07:51.230
当变化的时候

07:51.230 --> 07:52.230
干嘛呢

07:52.230 --> 07:53.230
你看着

07:53.230 --> 07:54.230
当变化的时候

07:54.230 --> 07:56.230
我们这里输出E

07:56.230 --> 07:58.230
输出这个参数E

07:58.230 --> 07:59.230
保存

07:59.230 --> 08:00.230
过来

08:00.230 --> 08:02.230
你看呀

08:02.230 --> 08:04.230
对吧

08:04.230 --> 08:06.230
Values is not Defend

08:06.230 --> 08:07.230
这里应该是

08:07.230 --> 08:10.230
Zestate the Value

08:10.230 --> 08:11.230
这里应该是

08:11.230 --> 08:17.270
Zestate the Tips

08:17.270 --> 08:18.270
好

08:18.270 --> 08:20.270
我们来输入一个A

08:20.270 --> 08:21.270
你看

08:21.270 --> 08:23.270
B C D E

08:23.270 --> 08:24.270
这里没有显示

08:24.270 --> 08:25.270
为什么

08:25.270 --> 08:26.270
因为我没有改变

08:26.270 --> 08:27.270
因为它受控了

08:27.270 --> 08:28.270
我没有改变这个状态里面的Values

08:28.270 --> 08:29.270
它自然而然

08:29.270 --> 08:30.270
它不会显示

08:30.270 --> 08:32.270
但是我们这里是不是可以获取到

08:32.270 --> 08:33.270
它输的内容

08:33.270 --> 08:34.270
对吧

08:34.270 --> 08:35.270
那这就很简单了

08:35.270 --> 08:36.270
这个地方呢

08:36.270 --> 08:37.270
我们就是新的内容

08:37.270 --> 08:38.270
新的内容

08:38.270 --> 08:40.270
我们这里用Zestate

08:40.270 --> 08:42.270
重新设置状态

08:42.270 --> 08:43.270
把状态设置为啥呢

08:43.270 --> 08:45.270
设置为新的文本

08:45.270 --> 08:46.270
设置为新的文本

08:46.270 --> 08:47.270
保存

08:47.270 --> 08:48.270
好

08:48.270 --> 08:51.540
你看一下

08:51.540 --> 08:52.540
A

08:52.540 --> 08:53.540
A

08:53.540 --> 08:54.540
A

08:54.540 --> 08:55.540
A

08:55.540 --> 08:57.540
看一下那里说的问题

08:57.540 --> 08:58.540
TST

08:58.540 --> 09:00.540
我这里写错了

09:00.540 --> 09:01.540
Values

09:02.540 --> 09:04.540
A

09:04.540 --> 09:05.540
C

09:05.540 --> 09:06.540
对吧

09:06.540 --> 09:07.540
是不是可以输入了

09:07.540 --> 09:09.540
于是我们的状态发生了变化了

09:09.540 --> 09:11.540
那么状态变化了过后

09:11.540 --> 09:13.540
我们同时要根据状态

09:13.540 --> 09:15.540
来得到什么呢

09:15.540 --> 09:17.540
来得到这个Tips

09:17.540 --> 09:18.540
那么这里呢

09:18.540 --> 09:19.540
我们比方说

09:19.540 --> 09:21.540
我们这里写上一个NewTips

09:21.540 --> 09:22.540
等于什么呢

09:22.540 --> 09:23.540
等于是

09:23.540 --> 09:24.540
我们这里

09:24.540 --> 09:27.540
根据新的文本

09:27.540 --> 09:30.540
重新设置数据源

09:30.540 --> 09:32.540
不会就是改变这个数据源就完事了

09:32.540 --> 09:33.540
我们这里呢

09:33.540 --> 09:34.540
就说以后呢

09:34.540 --> 09:36.540
我们要把这个NewTips放进去

09:36.540 --> 09:37.540
对吧

09:37.540 --> 09:38.540
放进去

09:38.540 --> 09:39.540
给它一个新的数据源

09:39.540 --> 09:41.540
那么这个新的数据源的话

09:41.540 --> 09:42.540
我们这里是不是可以用

09:42.540 --> 09:44.540
Rx请求比方说服务器有

09:44.540 --> 09:45.540
有这个数据

09:45.540 --> 09:46.540
你给我传一个东西

09:46.540 --> 09:47.540
我给你一些

09:47.540 --> 09:48.540
搜索的建议史

09:48.540 --> 09:50.540
往往都是从服务器获取的

09:50.540 --> 09:51.540
那么这里服务器

09:51.540 --> 09:52.540
没有相应的接口

09:52.540 --> 09:53.540
我这里就随便写一个吧

09:53.540 --> 09:54.540
就比方说

09:54.540 --> 09:55.540
把它的文字

09:55.540 --> 09:56.540
来重复两倍

09:56.540 --> 09:57.540
重复两次

09:57.540 --> 09:58.540
和重复三次

09:58.540 --> 09:59.540
重复两次

09:59.540 --> 10:00.540
比方说

10:00.540 --> 10:02.540
它自己的文本

10:02.540 --> 10:04.540
一个是它自己的文本

10:04.540 --> 10:05.540
就数据里边

10:05.540 --> 10:06.540
一个是它自己的文本

10:06.540 --> 10:07.540
然后呢

10:07.540 --> 10:08.540
一个是

10:08.540 --> 10:10.540
这个文本它重复repeat

10:10.540 --> 10:11.540
重复两次

10:11.540 --> 10:12.540
重复两次

10:12.540 --> 10:13.540
一个呢

10:13.540 --> 10:15.540
是这个字不错的文本

10:15.540 --> 10:16.540
repeat

10:16.540 --> 10:18.540
这是字不错的函数

10:18.540 --> 10:19.540
还记得吗

10:19.540 --> 10:20.540
重复三次

10:20.540 --> 10:21.540
我们把这个东西

10:21.540 --> 10:23.540
作为新的数据源

10:23.540 --> 10:24.540
以它自身

10:24.540 --> 10:26.540
它重复两次的字不错放这

10:26.540 --> 10:28.540
重复三次的字不错放这

10:28.540 --> 10:29.540
是不是得到一个新的数据源

10:29.540 --> 10:31.540
把新的数据源放进去

10:31.540 --> 10:32.540
保存

10:32.540 --> 10:33.540
咱们来看一下

10:33.540 --> 10:34.540
现在我们数一个a

10:34.540 --> 10:36.540
你看是不是有两个abc

10:36.540 --> 10:37.540
是不是有两个

10:37.540 --> 10:38.540
对吧

10:38.540 --> 10:39.540
对吧

10:39.540 --> 10:40.540
就这么个意思

10:40.540 --> 10:41.540
就这么个意思

10:41.540 --> 10:43.540
这就是关于outcomplete

10:43.540 --> 10:44.540
就随便看几个

10:44.540 --> 10:46.540
这些都很简单

10:46.540 --> 10:48.540
还有什么多选框

10:48.540 --> 10:49.540
多选框

10:49.540 --> 10:50.540
这多选框的用法呢

10:50.540 --> 10:51.540
跟那个

10:51.540 --> 10:52.540
我就看一下它单码

10:52.540 --> 10:53.540
我觉得就完事了

10:53.540 --> 10:54.540
你看一下

10:54.540 --> 10:56.540
5位就是一个check boss

10:56.540 --> 10:57.540
导入这个组件

10:57.540 --> 10:58.540
对吧

10:58.540 --> 10:59.540
从这里导入这个组件

10:59.540 --> 11:00.540
我这里不能放大

11:00.540 --> 11:01.540
看不清楚了

11:02.540 --> 11:04.540
check boss导入这个组件

11:04.540 --> 11:05.540
然后呢

11:05.540 --> 11:06.540
我们

11:06.540 --> 11:07.540
它这里用的时候呢

11:07.540 --> 11:08.540
就是check boss

11:08.540 --> 11:09.540
它有个unknit函数

11:09.540 --> 11:10.540
unknit函数

11:10.540 --> 11:11.540
那么unknit函数里面

11:11.540 --> 11:12.540
我们可以通过实演参数

11:12.540 --> 11:13.540
e

11:13.540 --> 11:14.540
来得到它的

11:14.540 --> 11:15.540
当前四篷选中

11:15.540 --> 11:17.540
当前四篷选中

11:17.540 --> 11:18.540
好

11:18.540 --> 11:19.540
那么这里还不可用状态

11:19.540 --> 11:20.540
还有就是控制它的

11:20.540 --> 11:22.540
可选和

11:22.540 --> 11:24.540
控制它的可选和不可选状态

11:24.540 --> 11:25.540
对吧

11:25.540 --> 11:27.540
可选和不可选的可以控制的

11:27.540 --> 11:28.540
你看

11:28.540 --> 11:29.540
可以控制的

11:29.540 --> 11:30.540
那么怎么来控制呢

11:30.540 --> 11:32.540
你猜猜这肯定都猜到了

11:32.540 --> 11:33.540
这个boss里面

11:33.540 --> 11:34.540
它一个属性叫check

11:34.540 --> 11:36.540
是否选中

11:36.540 --> 11:37.540
是否选中

11:37.540 --> 11:38.540
那么这里呢

11:38.540 --> 11:39.540
就可以控制

11:39.540 --> 11:40.540
它是否选中了

11:40.540 --> 11:41.540
就这么简单

11:41.540 --> 11:42.540
特别简单

11:42.540 --> 11:43.540
没啥了

11:43.540 --> 11:44.540
没啥了

11:44.540 --> 11:45.540
多选框

11:45.540 --> 11:46.540
然后呢

11:46.540 --> 11:47.540
我们再来看一下

11:47.540 --> 11:48.540
那个

11:48.540 --> 11:49.540
下大列表

11:49.540 --> 11:50.540
开关

11:50.540 --> 11:51.540
这个开关

11:51.540 --> 11:52.540
有的时候我们也挺常用的

11:52.540 --> 11:53.540
有这样的一个格式

11:53.540 --> 11:54.540
开关

11:54.540 --> 11:55.540
开关了

11:55.540 --> 11:57.540
我们看一下剧简单的基本用法

11:57.540 --> 11:59.540
那么这里呢

11:59.540 --> 12:00.540
switch

12:00.540 --> 12:01.540
就是一个switch组件

12:01.540 --> 12:03.540
这个组件里面的一个属性叫

12:03.540 --> 12:04.540
default check

12:04.540 --> 12:05.540
表示什么

12:05.540 --> 12:06.540
一开始是否选中

12:06.540 --> 12:07.540
如果加了

12:07.540 --> 12:08.540
这是一个布尔属性

12:08.540 --> 12:09.540
一加了过后呢

12:09.540 --> 12:10.540
它就是选中

12:10.540 --> 12:12.540
不加就没有选中

12:12.540 --> 12:14.540
当然它同样有unchain

12:14.540 --> 12:15.540
unchain里面它传入的是

12:15.540 --> 12:17.540
当前是否选中

12:17.540 --> 12:19.540
传入了这么一个玩意

12:19.540 --> 12:20.540
没了

12:20.540 --> 12:21.540
没了

12:21.540 --> 12:22.540
还有什么

12:22.540 --> 12:23.540
当然

12:23.540 --> 12:24.540
这个东西也可以把它变成受控

12:24.540 --> 12:25.540
就是通过check

12:25.540 --> 12:26.540
对吧

12:26.540 --> 12:27.540
跟那个

12:27.540 --> 12:28.540
复选框是不是

12:28.540 --> 12:29.540
道理是一样的

12:29.540 --> 12:30.540
也可以通过这个东西

12:30.540 --> 12:31.540
来搞定

12:32.540 --> 12:34.540
还有什么数字输入框

12:34.540 --> 12:36.540
它只能输入数字的框框

12:36.540 --> 12:37.540
一看呀

12:37.540 --> 12:38.540
它只能输入数字

12:38.540 --> 12:40.540
这个框框只能输入数字

12:40.540 --> 12:41.540
而现在可以设置

12:41.540 --> 12:42.540
最小的最大字

12:42.540 --> 12:43.540
来看一下吧

12:43.540 --> 12:44.540
它这里面怎么写的

12:44.540 --> 12:45.540
input number

12:45.540 --> 12:46.540
对吧

12:46.540 --> 12:47.540
这个组件

12:47.540 --> 12:48.540
最小的可以给它提供

12:48.540 --> 12:49.540
最大的可以提供

12:49.540 --> 12:50.540
如果你不提供的话

12:50.540 --> 12:51.540
就是没有最小的

12:51.540 --> 12:52.540
不提供最大字

12:53.540 --> 12:54.540
这是默认的纸

12:54.540 --> 12:55.540
对吧

12:55.540 --> 12:56.540
它也是可以完成受控的

12:56.540 --> 12:57.540
一样的

12:57.540 --> 12:59.540
这是没什么好说的

12:59.540 --> 13:00.540
就特别简单

13:00.540 --> 13:02.540
所以我就不再一一列去了

13:02.540 --> 13:04.540
总之它又提供了很多

13:04.540 --> 13:05.540
这种单独的

13:06.540 --> 13:08.540
可以获取用户输入的

13:08.540 --> 13:10.540
这么一些主线

13:10.540 --> 13:11.540
提供了很多

13:11.540 --> 13:12.540
还有了什么

13:14.540 --> 13:15.540
日期选择

13:15.540 --> 13:16.540
我们之前

13:16.540 --> 13:17.540
用于谁选择

13:17.540 --> 13:18.540
是不是要用于谁

13:18.540 --> 13:19.540
杰克尔瑞插件

13:19.540 --> 13:20.540
或者是不是

13:20.540 --> 13:21.540
杰克尔瑞带了

13:21.540 --> 13:22.540
对吧

13:22.540 --> 13:23.540
那么现在在ND里面

13:23.540 --> 13:25.540
它也有这个东西

13:25.540 --> 13:27.540
使用方式也非常简单

13:27.540 --> 13:28.540
这个东西

13:29.540 --> 13:31.540
没必要再说了

13:31.540 --> 13:32.540
大家可以自己去看一下

13:32.540 --> 13:33.540
带吧

13:33.540 --> 13:34.540
看一下下面的API

13:34.540 --> 13:35.540
都非常简单

13:35.540 --> 13:37.540
一条难度都没有

13:38.540 --> 13:39.540
我们主要是

13:39.540 --> 13:41.540
大概给大家看一下

13:41.540 --> 13:42.540
后边我们还会

13:42.540 --> 13:44.540
重点去介绍一些

13:44.540 --> 13:45.540
我们这几颗

13:45.540 --> 13:47.540
没有用到的那些

13:47.540 --> 13:48.540
组件

13:48.540 --> 13:49.540
后边我们再重点介绍

13:49.540 --> 13:50.540
我们这里

13:50.540 --> 13:52.540
主要是说这个组件

13:52.540 --> 13:53.540
逢表单组件

13:53.540 --> 13:55.540
主要说这个

13:55.540 --> 13:56.540
因为这个组件

13:56.540 --> 13:57.540
它是带功能的

13:57.540 --> 13:59.540
它不仅仅是显示

13:59.540 --> 14:01.540
它是要带功能的

14:01.540 --> 14:02.540
比方说表单验证

14:02.540 --> 14:05.540
比方说表单的那些

14:05.540 --> 14:07.540
数据的获取

14:07.540 --> 14:08.540
对吧

14:08.540 --> 14:09.540
把整个表单的数据

14:09.540 --> 14:11.540
整理成一个对象

14:11.540 --> 14:13.540
是不是要带功能的

14:13.540 --> 14:14.540
那么它的用法

14:14.540 --> 14:16.540
可能跟其他的那些

14:16.540 --> 14:17.540
组件都不太一样

14:17.540 --> 14:18.540
其实我们可以发现了

14:18.540 --> 14:19.540
这个Andy里面

14:19.540 --> 14:20.540
给我们提供的组件

14:20.540 --> 14:22.540
前面给我们已经感受到了

14:22.540 --> 14:23.540
它给我们提供了

14:23.540 --> 14:27.540
很多很多的展示组件

14:28.540 --> 14:29.540
而没有什么

14:29.540 --> 14:31.540
它是直接给你提供数据的

14:32.540 --> 14:34.540
都是用来做展示的

14:34.540 --> 14:36.540
而这个表单组件

14:36.540 --> 14:38.540
由于它要做功能

14:39.540 --> 14:40.540
所以说

14:40.540 --> 14:42.540
这个表单组件的使用上

14:42.540 --> 14:44.540
它是要跟数据挂勾的

14:44.540 --> 14:46.540
因此它在使用上

14:46.540 --> 14:48.540
会有一些差异

14:49.540 --> 14:51.540
那么有什么样的差异呢

14:51.540 --> 14:53.540
它是用这种方式来处理的

14:53.540 --> 14:54.540
对表单这一块

14:54.540 --> 14:55.540
我们先不去评价

14:55.540 --> 14:57.540
它这样的处理好不好

14:57.540 --> 14:59.540
因为大家之前学过5U

14:59.540 --> 15:00.540
知道5U里面的

15:00.540 --> 15:01.540
Element UI

15:01.540 --> 15:02.540
里面的表单处理

15:02.540 --> 15:03.540
是不是处理的

15:03.540 --> 15:04.540
也挺优雅的

15:04.540 --> 15:05.540
对吧

15:05.540 --> 15:06.540
用者也挺舒服的

15:06.540 --> 15:07.540
但是你现在在用

15:07.540 --> 15:08.540
Andy里面的表单

15:08.540 --> 15:10.540
可能就不那么习惯了

15:10.540 --> 15:12.540
因为它是给你分开处理的

15:13.540 --> 15:14.540
它怎么来处理的呢

15:14.540 --> 15:15.540
它是提供了

15:15.540 --> 15:16.540
两个东西

15:17.540 --> 15:20.540
一个是form组件

15:21.540 --> 15:23.540
一个是form对象

15:24.540 --> 15:26.540
它给你提供了这么两个东西

15:26.540 --> 15:28.540
为什么要提供成两个呢

15:28.540 --> 15:30.540
它是遵循了react

15:30.540 --> 15:32.540
它的设计理念

15:32.540 --> 15:34.540
就是数据的处理

15:34.540 --> 15:36.540
和展示

15:36.540 --> 15:37.540
要分开

15:37.540 --> 15:38.540
它是提供了

15:38.540 --> 15:40.540
它是基于这么一个理念

15:40.540 --> 15:41.540
出发的

15:41.540 --> 15:43.540
它的form组件

15:43.540 --> 15:44.540
做什么呢

15:44.540 --> 15:46.540
是仅提供

15:46.540 --> 15:49.540
仅提供样式和事件

15:51.540 --> 15:53.540
只提供样式和事件

15:53.540 --> 15:55.540
就是它长什么样子

15:55.540 --> 15:58.540
是由form组件来决定的

15:58.540 --> 16:00.540
而至于

16:00.540 --> 16:03.540
里面的数据的验证

16:04.540 --> 16:06.540
数据的获取

16:06.540 --> 16:09.540
它是由form对象来处理的

16:09.540 --> 16:12.540
处理数据验证

16:13.540 --> 16:14.540
生成

16:14.540 --> 16:15.540
获取

16:15.540 --> 16:17.540
它处理这么一些东西的

16:17.540 --> 16:19.540
所以它分成两块来处理

16:19.540 --> 16:20.540
一会我们在写的时候

16:20.540 --> 16:22.540
大家会感受到了

16:22.540 --> 16:23.540
好

16:23.540 --> 16:25.540
我们首先来写这么一个

16:25.540 --> 16:27.540
非常简单的表单组件

16:27.540 --> 16:29.540
最终我们会把它放到

16:29.540 --> 16:30.540
studentsadd里边

16:30.540 --> 16:31.540
放到这里边

16:31.540 --> 16:33.540
我们这里先写这么一个

16:33.540 --> 16:35.540
简单的表单组件

16:35.540 --> 16:36.540
来吧

16:36.540 --> 16:38.540
我们在

16:38.540 --> 16:39.540
components里边

16:39.540 --> 16:40.540
再建个文件夹

16:40.540 --> 16:41.540
叫做

16:42.540 --> 16:44.540
students4

16:44.540 --> 16:46.540
学生表单

16:46.540 --> 16:47.540
建个文件夹学生表单

16:47.540 --> 16:49.540
然后这里写上一个

16:49.540 --> 16:51.540
students index

16:52.540 --> 16:54.540
这里边我们写上一个

16:54.540 --> 16:55.540
建一个类组件

16:55.540 --> 16:56.540
为什么要建类组件

16:56.540 --> 16:57.540
一会就知道了

16:57.540 --> 16:58.540
这里边

16:58.540 --> 16:59.540
要设计到

16:59.540 --> 17:01.540
可能会设计到一些

17:01.540 --> 17:02.540
当然要寒数捷也可以

17:02.540 --> 17:03.540
因为寒数捷有hook的

17:03.540 --> 17:04.540
也可以

17:04.540 --> 17:05.540
我们用类组件

17:05.540 --> 17:06.540
其实寒数捷也行

17:06.540 --> 17:07.540
你自己可以做对比

17:07.540 --> 17:09.540
都行

17:09.540 --> 17:10.540
那么这里边

17:10.540 --> 17:12.540
我们一会在

17:12.540 --> 17:13.540
studentsadd里边

17:13.540 --> 17:14.540
是不是要使用这个组件

17:14.540 --> 17:15.540
对吧

17:15.540 --> 17:16.540
添加学生这一块

17:16.540 --> 17:17.540
添加学生也这一块

17:17.540 --> 17:18.540
是不是要使用这个组件

17:18.540 --> 17:19.540
OK

17:19.540 --> 17:20.540
我们这里的导入

17:20.540 --> 17:22.540
students4

17:22.540 --> 17:24.540
from

17:24.540 --> 17:26.540
students

17:26.540 --> 17:28.540
回到上级目录

17:28.540 --> 17:29.540
再回到上级目录

17:29.540 --> 17:30.540
components

17:30.540 --> 17:31.540
students4

17:31.540 --> 17:32.540
导入这个

17:32.540 --> 17:33.540
那么我们这边

17:33.540 --> 17:34.540
要做的事情很简单

17:34.540 --> 17:35.540
就把这东西扔过来

17:35.540 --> 17:36.540
就完事了

17:37.540 --> 17:38.540
这里

17:38.540 --> 17:39.540
看一下

17:39.540 --> 17:42.300
添加学生

17:42.300 --> 17:43.300
保存

17:43.300 --> 17:44.300
到我们的页面中

17:44.300 --> 17:45.300
去学生管理这里

17:45.300 --> 17:46.300
添加学生

17:46.300 --> 17:47.300
你看

17:47.300 --> 17:48.300
是不是出来了

17:48.300 --> 17:49.300
这个页面

17:49.300 --> 17:50.300
出来了

17:50.300 --> 17:51.300
接下来

17:51.300 --> 17:52.300
我们把这个组件完成

17:52.300 --> 17:53.300
就完事了

17:53.300 --> 17:54.300
是不是这样子

17:54.300 --> 17:55.300
没问题吧

17:55.300 --> 17:56.300
好

17:56.300 --> 17:57.300
那么这个组件

17:57.300 --> 17:58.300
它是一个整个表达

17:58.300 --> 17:59.300
它布置

17:59.300 --> 18:00.300
仅仅是只有一个吻门框

18:00.300 --> 18:01.300
如果说

18:01.300 --> 18:02.300
有几个单独的一些吻门框

18:02.300 --> 18:03.300
我们倒是不用

18:03.300 --> 18:04.300
把它联合起来处理

18:04.300 --> 18:05.300
那如果说

18:05.300 --> 18:06.300
是一个整个表达的话

18:06.300 --> 18:07.300
我们可能希望

18:07.300 --> 18:08.300
把它联合起来处理

18:08.300 --> 18:09.300
不然的话

18:09.300 --> 18:10.300
有3个吻门框

18:10.300 --> 18:11.300
4个吻门框

18:11.300 --> 18:12.300
它表达的是

18:12.300 --> 18:13.300
一个整体的意识

18:13.300 --> 18:14.300
第一个吻门框

18:14.300 --> 18:15.300
表示学生账号

18:15.300 --> 18:16.300
密码 手机号 住址

18:16.300 --> 18:17.300
对吧

18:17.300 --> 18:18.300
有4个吻门框

18:18.300 --> 18:19.300
那如果说

18:19.300 --> 18:20.300
你分开处理的话

18:20.300 --> 18:21.300
是不是每一个组件

18:21.300 --> 18:22.300
要去售空

18:22.300 --> 18:23.300
然后每个组件

18:23.300 --> 18:24.300
要去得到它的数据

18:24.300 --> 18:25.300
然后把它组装成一个对象

18:25.300 --> 18:26.300
那么这些事情

18:26.300 --> 18:27.300
实际上

18:27.300 --> 18:28.300
它已经可以

18:28.300 --> 18:29.300
帮你完成了

18:29.300 --> 18:30.300
而且这些表单里边

18:30.300 --> 18:31.300
是不是每一项

18:31.300 --> 18:32.300
它都有一些

18:32.300 --> 18:33.300
统一的样式

18:33.300 --> 18:34.300
对吧

18:34.300 --> 18:35.300
它表达的宽度

18:35.300 --> 18:36.300
是统一的吧

18:36.300 --> 18:38.300
然后它里边的一些格式

18:38.300 --> 18:39.300
一些排列

18:39.300 --> 18:40.300
应该都是统一的

18:40.300 --> 18:41.300
所以说

18:41.300 --> 18:42.300
我们希望有一个组件

18:42.300 --> 18:44.300
能够统一的管理的样式

18:44.300 --> 18:45.300
那么它就把它分成两块

18:45.300 --> 18:47.300
一块是form组件

18:47.300 --> 18:49.300
它用来提供整体的样式和事件

18:49.300 --> 18:50.300
另外一个

18:50.300 --> 18:51.300
是一个form对象

18:51.300 --> 18:52.300
它来处理

18:52.300 --> 18:53.300
处理验证 生成和获取

18:53.300 --> 18:54.300
那我们怎么写呢

18:54.300 --> 18:55.300
这个东西

18:55.300 --> 18:56.300
不要用这个

18:56.300 --> 18:57.300
组件名字

18:57.300 --> 18:58.300
改一下

18:59.300 --> 19:00.300
我们怎么写呢

19:00.300 --> 19:02.300
首先我们要导入一个form组件

19:03.300 --> 19:05.300
导入一个form组件

19:06.300 --> 19:07.300
from

19:07.300 --> 19:09.300
就要从nd里边来

19:09.300 --> 19:10.300
导入这个

19:11.300 --> 19:12.300
form组件

19:13.300 --> 19:14.300
好 那么这边呢

19:14.300 --> 19:16.300
我们直接就写这么一个form组件

19:17.300 --> 19:18.300
直接写这么一个form组件

19:18.300 --> 19:20.300
表示这里有个表单

19:20.300 --> 19:21.300
就这么简单

19:21.300 --> 19:22.300
有个表单

19:22.300 --> 19:23.300
那么这个表单就生成了

19:23.300 --> 19:25.300
那么至于生成出来

19:25.300 --> 19:26.300
有什么 有效果吗

19:26.300 --> 19:27.300
你看想想 有效果吗

19:27.300 --> 19:28.300
肯定没有效果

19:28.300 --> 19:29.300
肯定是没有效果的

19:29.300 --> 19:30.300
因为里边我们还没有写东西

19:30.300 --> 19:32.300
那它怎么来处理这个问题呢

19:32.300 --> 19:33.300
它是这样子的

19:33.300 --> 19:34.300
它的逻辑是这样子的

19:35.300 --> 19:36.300
它表单里边

19:36.300 --> 19:38.300
它分成一个一个的表单项

19:38.300 --> 19:39.300
比方说咱们学生里边

19:39.300 --> 19:40.300
不是有很多信息吗

19:40.300 --> 19:43.300
你要填写学号 姓名

19:43.300 --> 19:44.300
然后的姓别

19:44.300 --> 19:45.300
出生日期 住址

19:45.300 --> 19:47.300
还要填很多东西

19:47.300 --> 19:48.300
那么你要填这东西

19:48.300 --> 19:50.300
是不是每一个是个表单项

19:50.300 --> 19:53.300
表单项里边可能会包含什么呢

19:53.300 --> 19:55.300
一个表单项

19:55.300 --> 19:57.300
表单项里面可能会包含

19:59.300 --> 20:00.300
就标题

20:00.300 --> 20:01.300
就是表示账号

20:01.300 --> 20:03.300
这两个字就是标题

20:03.300 --> 20:04.300
还有什么

20:04.300 --> 20:06.300
表单组件

20:06.300 --> 20:07.300
表单组件

20:07.300 --> 20:09.300
文门框 单圈框

20:09.300 --> 20:11.300
这些都是表单组件

20:11.300 --> 20:13.300
这是标题 表单组件

20:13.300 --> 20:14.300
然后还有什么

20:14.300 --> 20:16.300
还包含什么错误消息

20:16.300 --> 20:17.300
对不对

20:17.300 --> 20:18.300
像这些

20:18.300 --> 20:19.300
他们整体上

20:19.300 --> 20:21.300
我们把它叫做一个表单项

20:21.300 --> 20:22.300
就比方说

20:22.300 --> 20:24.300
比方说啥呢

20:24.300 --> 20:26.300
像这个东西就是个表单项

20:26.300 --> 20:28.300
登录这一块

20:28.300 --> 20:29.300
是不是就是个表单项

20:29.300 --> 20:31.300
这一块就是个表单项

20:31.300 --> 20:32.300
没问题吧

20:32.300 --> 20:33.300
咱们呢

20:34.300 --> 20:35.300
这就是个表单项

20:35.300 --> 20:37.300
只不过我们这里没加错误消息而已

20:40.300 --> 20:41.300
那么现在呢

20:41.300 --> 20:43.300
我们首先要做一个表单项出来

20:43.300 --> 20:44.300
那么在它的组件里面

20:44.300 --> 20:46.300
它是这样子来处理的

20:46.300 --> 20:47.300
它的一个表单项

20:47.300 --> 20:49.300
需要用一个元素把它包起来

20:49.300 --> 20:51.300
就是用一个组件把它包起来

20:51.300 --> 20:52.300
什么组件呢

20:52.300 --> 20:53.300
就是form这个组件里面的

20:53.300 --> 20:55.300
一个静态属性

20:55.300 --> 20:56.300
item

20:56.300 --> 20:57.300
就这么一个东西

20:57.300 --> 20:59.300
这就表示一个表单项

21:00.300 --> 21:01.300
这就表示个表单项

21:01.300 --> 21:02.300
这也是个表单项

21:02.300 --> 21:03.300
三个表单项

21:03.300 --> 21:04.300
四个表单项

21:04.300 --> 21:05.300
就这么一个结构

21:05.300 --> 21:07.300
这是表单项

21:07.300 --> 21:08.300
好

21:08.300 --> 21:10.300
表单项里边

21:10.300 --> 21:12.300
里边写啥呢

21:12.300 --> 21:13.300
这里边的话

21:13.300 --> 21:15.300
你想写啥写啥

21:15.300 --> 21:17.300
比方说我们最常见的一个表单项里面

21:17.300 --> 21:19.300
不得一个文闷框吗

21:19.300 --> 21:20.300
来吧

21:20.300 --> 21:21.300
来个文闷框

21:22.300 --> 21:23.300
一个文闷框

21:23.300 --> 21:24.300
然后呢

21:24.300 --> 21:25.300
再来一个表单项

21:25.300 --> 21:27.300
有一个password

21:27.300 --> 21:28.300
有一个密码框

21:29.300 --> 21:30.300
password

21:30.300 --> 21:31.300
密码框

21:32.300 --> 21:33.300
这个密码框的话

21:33.300 --> 21:34.300
在input的地方

21:34.300 --> 21:36.300
就是静态属性

21:36.300 --> 21:37.300
password里面

21:37.300 --> 21:38.300
就是密码框

21:38.300 --> 21:39.300
保存

21:39.300 --> 21:40.300
你看一下吧

21:40.300 --> 21:41.300
不得一个文闷框

21:41.300 --> 21:42.300
一个密码框就出来了

21:42.300 --> 21:43.300
特别简单

21:44.300 --> 21:45.300
这个东西

21:45.300 --> 21:46.300
你要这个跟不要这个

21:46.300 --> 21:47.300
有啥区别呢

21:47.300 --> 21:48.300
没啥区别

21:49.300 --> 21:50.300
实际上是这样子

21:50.300 --> 21:52.300
这个form表单的这个组件

21:52.300 --> 21:53.300
和formitem的组件

21:53.300 --> 21:55.300
它只是用来控制界面的

21:55.300 --> 21:57.300
控制统一的界面格式

21:57.300 --> 21:58.300
它跟什么功能啊

21:58.300 --> 21:59.300
数据没有任何关系

21:59.300 --> 22:00.300
一点都搭不上边

22:00.300 --> 22:02.300
它只是用来控制界面的

22:02.300 --> 22:03.300
刚才我们就说到了

22:03.300 --> 22:04.300
对吧

22:04.300 --> 22:05.300
刚才我们就说到了

22:05.300 --> 22:06.300
form组件它是来

22:06.300 --> 22:08.300
紧提供样式和事件

22:08.300 --> 22:09.300
大家有一个东西说

22:09.300 --> 22:10.300
这些我也没有看到

22:10.300 --> 22:12.300
它控制什么样式的

22:12.300 --> 22:14.300
那你实际上你看到了的

22:14.300 --> 22:15.300
你比方说吧

22:15.300 --> 22:16.300
我们这里呢

22:16.300 --> 22:17.300
把这个formitem去掉

22:17.300 --> 22:19.300
formitem去掉

22:19.300 --> 22:20.300
你都去掉

22:20.300 --> 22:21.300
form也去掉

22:22.300 --> 22:24.300
或者说把这个form变成一个div

22:24.300 --> 22:25.300
变成个div

22:25.300 --> 22:26.300
你看一下吧

22:26.300 --> 22:28.300
实际上是有点区别的

22:28.300 --> 22:29.300
是不是靠在一起了

22:29.300 --> 22:30.300
对吧

22:30.300 --> 22:31.300
有了这个form过后了

22:31.300 --> 22:32.300
它是不是把它分开了一点点

22:32.300 --> 22:33.300
对吧

22:33.300 --> 22:34.300
但是它不仅如此

22:34.300 --> 22:35.300
它还有一些其他的功能

22:35.300 --> 22:36.300
其他的样式控制

22:36.300 --> 22:38.300
比方说它可以在这里面

22:38.300 --> 22:39.300
formitem里面

22:39.300 --> 22:40.300
每一个item就是个表单项

22:40.300 --> 22:41.300
对吧

22:41.300 --> 22:42.300
你可以给它写上

22:42.300 --> 22:43.300
你的表单的

22:43.300 --> 22:45.300
叫做表铁是啥呀

22:45.300 --> 22:47.300
好像叫做name

22:47.300 --> 22:48.300
叫啥呢

22:49.300 --> 22:51.300
叫做label

22:51.300 --> 22:53.300
就是它的提示文本

22:53.300 --> 22:55.300
比方说这里是账号

22:55.300 --> 22:57.300
那么这里提示文本

22:57.300 --> 22:58.300
label

22:58.300 --> 22:59.300
这里是密码

22:59.300 --> 23:00.300
保存

23:00.300 --> 23:01.300
你看一下

23:01.300 --> 23:03.300
所以可以加上账号密码了

23:03.300 --> 23:04.300
刷新一下

23:05.300 --> 23:06.300
你看是不是加上账号密码了

23:06.300 --> 23:07.300
对吧

23:07.300 --> 23:08.300
而且可以自动加了一个冒号

23:08.300 --> 23:09.300
对吧

23:09.300 --> 23:11.300
它就是来控制统一的格式的

23:11.300 --> 23:13.300
但是我们有的时候

23:13.300 --> 23:14.300
希望

23:14.300 --> 23:15.300
这个账号

23:15.300 --> 23:16.300
这个文字

23:16.300 --> 23:17.300
跟这个文本光显示成一行

23:17.300 --> 23:18.300
对吧

23:18.300 --> 23:19.300
这是比较常见的

23:19.300 --> 23:20.300
显示成一行

23:20.300 --> 23:21.300
那怎么办呢

23:21.300 --> 23:22.300
你可以控制

23:22.300 --> 23:24.300
这个文本

23:24.300 --> 23:26.300
和它的表单里边的东西

23:26.300 --> 23:28.300
它的那个就是

23:28.300 --> 23:30.300
占的尺寸

23:30.300 --> 23:31.300
你是可以控制的

23:31.300 --> 23:32.300
怎么控制呢

23:32.300 --> 23:33.300
实际上它的form

23:33.300 --> 23:34.300
组建里边

23:34.300 --> 23:36.300
它是使用的是三格系统

23:36.300 --> 23:38.300
它里边的三格布局

23:38.300 --> 23:40.300
使用的是grid布局

23:40.300 --> 23:42.300
所以说你这里可以进行配置

23:42.300 --> 23:43.300
你可以直接在form

23:43.300 --> 23:44.300
表单里面进行配置

23:44.300 --> 23:46.300
它里边提供了两个属箱

23:46.300 --> 23:48.300
一个属箱叫做label

23:48.300 --> 23:49.300
cal

23:50.300 --> 23:52.300
它是把label

23:52.300 --> 23:53.300
它这里会生成label元素

23:53.300 --> 23:54.300
你可以这样理解

23:54.300 --> 23:55.300
它生成一个label元素

23:55.300 --> 23:57.300
那么这个label元素

23:57.300 --> 23:59.300
它的在三格系统中

23:59.300 --> 24:00.300
就在这一行里边

24:00.300 --> 24:02.300
它占多少粒

24:02.300 --> 24:03.300
占多少个格子

24:03.300 --> 24:04.300
就是这一块

24:04.300 --> 24:05.300
它占多少个格子

24:05.300 --> 24:06.300
那你不写的话

24:06.300 --> 24:07.300
只能称嘛

24:08.300 --> 24:09.300
那占多少个格子呢

24:09.300 --> 24:10.300
我们这里是不是可以配置

24:10.300 --> 24:11.300
对吧

24:11.300 --> 24:12.300
可以配置

24:12.300 --> 24:13.300
但是你这里配置

24:13.300 --> 24:14.300
你不能直接写个数字

24:14.300 --> 24:15.300
你不要直接写个数字

24:16.300 --> 24:17.300
你应该写上

24:17.300 --> 24:18.300
写的是一个对象

24:18.300 --> 24:19.300
因为这个对

24:19.300 --> 24:21.300
因为我们之前

24:21.300 --> 24:22.300
看到过这个东西

24:22.300 --> 24:23.300
great

24:23.300 --> 24:25.300
这个三个布局对吧

24:25.300 --> 24:26.300
三个布局里边

24:26.300 --> 24:27.300
不是有裂吗

24:27.300 --> 24:28.300
你看

24:28.300 --> 24:29.300
到时候不是有使用

24:29.300 --> 24:30.300
这个裂吗

24:30.300 --> 24:31.300
对不对

24:31.300 --> 24:32.300
裂里边是不是一个属性

24:32.300 --> 24:33.300
叫做span

24:33.300 --> 24:34.300
给它复制为多少

24:34.300 --> 24:35.300
占多少粒

24:35.300 --> 24:36.300
对吧

24:36.300 --> 24:38.300
那么你这里写的

24:38.300 --> 24:40.300
对象里边的所有属性

24:40.300 --> 24:41.300
就是你这个对象里边

24:41.300 --> 24:42.300
写的所有属性

24:42.300 --> 24:44.300
它会自动的

24:44.300 --> 24:45.300
把它放到

24:45.300 --> 24:47.300
每一个表单项里边的

24:48.300 --> 24:49.300
cal里边

24:49.300 --> 24:51.300
因为它每一个表单项

24:51.300 --> 24:52.300
它就会生成一个cal

24:52.300 --> 24:53.300
你看

24:53.300 --> 24:54.300
相当于这是一个cal

24:54.300 --> 24:55.300
cal组件

24:55.300 --> 24:56.300
这是一个cal组件

24:56.300 --> 24:57.300
对吧

24:57.300 --> 24:58.300
就是calan

24:58.300 --> 24:59.300
一个裂组件

24:59.300 --> 25:00.300
那么这个裂组件里边的属性

25:00.300 --> 25:02.300
它就是读这的

25:02.300 --> 25:03.300
它就从这里读

25:03.300 --> 25:05.300
那么这个labelcal

25:05.300 --> 25:06.300
它这里边的对象里边

25:06.300 --> 25:08.300
比方说我们给它写上一个span

25:08.300 --> 25:09.300
span

25:09.300 --> 25:11.300
比方说占个4粒

25:11.300 --> 25:12.300
占4粒

25:12.300 --> 25:13.300
什么意思呢

25:13.300 --> 25:14.300
也就是说

25:14.300 --> 25:16.300
这个对象里边的所有属性

25:16.300 --> 25:18.300
它会把它放到哪呢

25:18.300 --> 25:20.300
把它放到这个地方

25:20.300 --> 25:21.300
这个地方

25:21.300 --> 25:23.300
它已经使用了一个组件叫cal

25:23.300 --> 25:24.300
那么它会把它

25:24.300 --> 25:25.300
作为这个cal组件的属性

25:25.300 --> 25:26.300
放过来

25:26.300 --> 25:27.300
那么这样子

25:27.300 --> 25:28.300
它就是4粒了

25:28.300 --> 25:29.300
同样的道理

25:29.300 --> 25:31.300
如果说我们这里再设置

25:31.300 --> 25:33.300
再设置这个wiper

25:33.300 --> 25:34.300
wipercal

25:34.300 --> 25:35.300
那么wipercal

25:35.300 --> 25:37.300
就是里边的东西占多少粒

25:37.300 --> 25:39.300
这里边的东西占多少粒

25:39.300 --> 25:40.300
你是可以控制的

25:40.300 --> 25:41.300
比方说我们这里

25:41.300 --> 25:42.300
span

25:42.300 --> 25:43.300
一共24粒

25:43.300 --> 25:44.300
那占12粒差不多了

25:44.300 --> 25:45.300
差不多了

25:45.300 --> 25:46.300
好

25:46.300 --> 25:47.300
保存

25:47.300 --> 25:48.300
你看

25:48.300 --> 25:49.300
就变成这个样子了

25:49.300 --> 25:50.300
对吧

25:50.300 --> 25:52.300
这个玩意它占4粒

25:52.300 --> 25:53.300
从这里开始占4粒

25:53.300 --> 25:55.300
这个玩意占12粒

25:55.300 --> 25:56.300
看到没

25:56.300 --> 25:57.300
占4粒

25:57.300 --> 25:59.300
占12粒

25:59.300 --> 26:01.300
就形成了一个统一的格式了

26:01.300 --> 26:02.300
对吧

26:02.300 --> 26:03.300
就是这么个意思

26:03.300 --> 26:05.300
当然你觉得4粒多了

26:05.300 --> 26:06.300
你可以设置两粒

26:06.300 --> 26:07.300
你自己看得来

26:07.300 --> 26:09.300
你自己看得来

26:09.300 --> 26:10.300
就是这么意思

26:10.300 --> 26:11.300
明白这个意思吗

26:11.300 --> 26:13.300
所以你再用一个对象来配置

26:13.300 --> 26:14.300
因为它相当于是

26:14.300 --> 26:16.300
在这里边咋写的呢

26:16.300 --> 26:17.300
相当于是在这里边

26:17.300 --> 26:18.300
这样子写的

26:18.300 --> 26:19.300
比方说它这里

26:19.300 --> 26:20.300
你这个代码

26:20.300 --> 26:21.300
你有假设

26:21.300 --> 26:22.300
它会给你怎么生成

26:22.300 --> 26:23.300
它会给你这样子生成

26:23.300 --> 26:25.300
生成出来就是

26:25.300 --> 26:27.300
肉组件

26:27.300 --> 26:28.300
肉组件

26:28.300 --> 26:30.300
然后卡奥

26:30.300 --> 26:31.300
卡奥组件

26:31.300 --> 26:33.300
卡奥组件里边是什么呢

26:33.300 --> 26:34.300
一个内部元素

26:34.300 --> 26:35.300
一个内部元素

26:35.300 --> 26:37.300
帐号

26:37.300 --> 26:40.300
然后下面又有一个卡奥组件

26:40.300 --> 26:41.300
卡奥组件

26:41.300 --> 26:42.300
这里边有个什么

26:42.300 --> 26:44.300
input元素

26:44.300 --> 26:45.300
一个input元素

26:45.300 --> 26:46.300
你可以认为

26:46.300 --> 26:48.300
它是这样子生成的

26:48.300 --> 26:49.300
一个input元素

26:49.300 --> 26:51.300
那么你这一个地方的配置

26:51.300 --> 26:53.300
它会放到每一个表单项里边的

26:53.300 --> 26:54.300
第一个就是

26:54.300 --> 26:56.300
内部元素所在的卡奥

26:56.300 --> 26:57.300
把它放到这

26:57.300 --> 26:59.300
相当于是span为2

26:59.300 --> 27:00.300
懂得意思吧

27:00.300 --> 27:01.300
然后这个

27:01.300 --> 27:02.300
相当于是span为多少呢

27:02.300 --> 27:03.300
12

27:03.300 --> 27:04.300
当然这里边

27:04.300 --> 27:05.300
不仅有span属性

27:05.300 --> 27:07.300
还可以有其他属性给你配置

27:07.300 --> 27:08.300
都可以配置的

27:08.300 --> 27:10.300
没有任何问题

27:10.300 --> 27:12.300
明白这个意思吗

27:12.300 --> 27:14.300
好,这就是一个表单项

27:14.300 --> 27:15.300
这个地方的写相

27:15.300 --> 27:16.300
好像不太好看

27:16.300 --> 27:19.300
那么我们可以写这么一个

27:19.300 --> 27:21.300
就在这前面写一个属性吧

27:21.300 --> 27:23.300
前面写个属性

27:23.300 --> 27:27.300
叫做spanconfig

27:27.300 --> 27:29.300
这里边有一个label

27:29.300 --> 27:31.300
cal

27:31.300 --> 27:32.300
labelcal

27:32.300 --> 27:33.300
是一个对象

27:33.300 --> 27:34.300
span为2

27:34.300 --> 27:36.300
还有一个就是

27:36.300 --> 27:38.300
wiper cal

27:38.300 --> 27:40.300
span为10

27:40.300 --> 27:42.300
好,我们把这个config

27:42.300 --> 27:43.300
那么这里边提供

27:43.300 --> 27:44.300
属性,是不是展开就完事了

27:44.300 --> 27:46.300
我们在这里展开

27:46.300 --> 27:48.300
这也是一种非常常见的写法

27:48.300 --> 27:50.300
在这边

27:50.300 --> 27:52.300
这边

27:52.300 --> 27:53.300
展开

27:53.300 --> 27:54.300
对吧,就完事了

27:54.300 --> 27:57.300
这样子看上去更加清爽一点

27:57.300 --> 27:58.300
看一看,是一样的

27:58.300 --> 28:00.300
当然是一样的

28:00.300 --> 28:01.300
另外,像这个属性

28:01.300 --> 28:03.300
它其实也可以在formitem里面配置

28:03.300 --> 28:05.300
我们刚才反复的强调

28:05.300 --> 28:07.300
这个formitem组建

28:07.300 --> 28:09.300
它仅来提供样式和事件的

28:09.300 --> 28:11.300
它没有事件什么功能

28:11.300 --> 28:13.300
是否同意来控制一下样式

28:13.300 --> 28:14.300
那么也可以在单独

28:14.300 --> 28:17.300
在formitem里面实现

28:17.300 --> 28:19.300
比方说吧,我们在这里

28:19.300 --> 28:21.300
在单独写一个label

28:21.300 --> 28:23.300
cal

28:23.300 --> 28:24.300
单独写一个labelcal

28:24.300 --> 28:25.300
那么这里边span

28:25.300 --> 28:27.300
我给它写成一个5

28:27.300 --> 28:29.300
保存,你看一下

28:29.300 --> 28:31.300
你看,那么这一块是不是

28:31.300 --> 28:34.300
应用了calspan

28:34.300 --> 28:36.300
就labelcal

28:36.300 --> 28:39.300
是不是应用了formitem里面的配置

28:39.300 --> 28:41.300
没有要再用formitem里面的配置

28:41.300 --> 28:43.300
那么它的优先级比较高

28:43.300 --> 28:46.300
里面你设置具体的formitem的时候

28:46.300 --> 28:48.300
它会覆盖整体的配置

28:48.300 --> 28:49.300
就这么个意思

28:49.300 --> 28:51.300
那么这个东西通常用于什么地方

28:51.300 --> 28:53.300
比方说我们这里再写个formitem

28:53.300 --> 28:55.300
主要是用它来控制

28:55.300 --> 28:58.300
来控制统一的样式,仅此而已

28:58.300 --> 29:00.300
那么这个地方没有label

29:00.300 --> 29:02.300
我们来这里写这么一个按钮

29:02.300 --> 29:04.300
因为最后肯定要有个按钮提交

29:04.300 --> 29:06.300
对不对,提交

29:06.300 --> 29:08.300
咱们写这么一个按钮

29:08.300 --> 29:10.300
这里是提交

29:10.300 --> 29:13.870
这么一个提交按钮

29:13.870 --> 29:15.870
好,保存

29:15.870 --> 29:17.870
那么看一下我们提交按钮

29:17.870 --> 29:19.870
是不是跑到这儿来了

29:19.870 --> 29:21.870
我们就给它换个样,颜色,type

29:21.870 --> 29:23.870
为primary

29:23.870 --> 29:27.250
那么现在提交按钮跑到这儿来了

29:27.250 --> 29:29.250
这不是我们希望看到的

29:29.250 --> 29:31.250
我们希望提交按钮在哪儿呢

29:31.250 --> 29:33.250
你是不是按到那个就是对齐的话

29:33.250 --> 29:35.250
应该是不是应该在这儿

29:35.250 --> 29:37.250
这样子舒服一点,对吧

29:37.250 --> 29:39.250
那么我们这里是不是可以单独去配置一下

29:39.250 --> 29:41.250
那么

29:41.250 --> 29:43.250
因为它没有,因为它这里没有写label

29:43.250 --> 29:45.250
所以说,第一列根本就不存在

29:45.250 --> 29:47.250
所以你配置到第一列也没用

29:47.250 --> 29:49.250
那么我们这里是不是可以单独配置一下这个wiper call

29:49.250 --> 29:51.250
那么它你左边远一点

29:51.250 --> 29:53.250
对吧,单独去配置一下这个wiper call

29:53.250 --> 29:55.250
好,wiper call

29:55.250 --> 29:57.250
这一块呢,我们当然该配置成什么了

29:57.250 --> 29:59.250
在这个列里边

29:59.250 --> 30:01.250
在三格系统里边

30:01.250 --> 30:03.250
它还有一个属性

30:03.250 --> 30:05.250
就之前没讲,其实也无所谓

30:05.250 --> 30:07.250
这东西一说就明白了,这些东西都需要看文档的

30:07.250 --> 30:09.250
那个offset属性

30:09.250 --> 30:11.250
就是左侧的间隔格数

30:11.250 --> 30:13.250
左侧的间隔格数

30:13.250 --> 30:15.250
offset

30:15.250 --> 30:17.250
你左边有多少个格子

30:17.250 --> 30:19.250
那么左边那前面是不是占了两个格子

30:19.250 --> 30:21.250
就是每一个

30:21.250 --> 30:23.250
每一个label

30:23.250 --> 30:25.250
是不是占了两个格子

30:25.250 --> 30:27.250
这一块label是占了两个格子

30:27.250 --> 30:29.250
那么我让这一个格子

30:29.250 --> 30:31.250
你左边有两个格子,是不是就对齐了

30:31.250 --> 30:33.250
offset2

30:33.250 --> 30:35.250
保存

30:35.250 --> 30:37.250
就这么简单

30:37.250 --> 30:39.250
这就是

30:39.250 --> 30:41.250
它这一块的央视控制

30:41.250 --> 30:43.250
央视控制

30:43.250 --> 30:45.250
没啥了,就没啥了

30:45.250 --> 30:47.250
特别特别简单

30:47.250 --> 30:49.250
那么央视控制其实就差不多了

30:49.250 --> 30:51.250
咱们做成这个样子就差不多了

30:51.250 --> 30:53.250
那么现在我们来考虑这个核心的问题

30:53.250 --> 30:58.100
啥问题呢

30:58.100 --> 31:00.100
什么问题呢

31:00.100 --> 31:02.100
就是当我们填写好了之后

31:02.100 --> 31:04.100
当我们把这些数据填写好了之后

31:04.100 --> 31:06.100
当我们点提交的时候

31:06.100 --> 31:08.100
要获取这个数据

31:08.100 --> 31:10.100
是不是要获取这个数据

31:10.100 --> 31:12.100
那么我们这个数据怎么获取呢

31:12.100 --> 31:14.100
怎么来获取

31:14.100 --> 31:16.100
这个数据的问题是

31:16.100 --> 31:18.100
好,这里呢

31:18.100 --> 31:20.100
我们首先第一个问题就是事件

31:20.100 --> 31:22.100
我在哪里写事件

31:22.100 --> 31:24.100
是不是在这个button里面对吧

31:24.100 --> 31:26.100
当我们点,我们最容易想到的就是这个button

31:26.100 --> 31:28.100
在button里面我们写这么一个事件

31:28.100 --> 31:30.100
我刚刚写了一个函数嘛

31:30.100 --> 31:32.100
函数来处理

31:32.100 --> 31:34.100
这里就写这么一个函数

31:34.100 --> 31:36.100
handle submet

31:36.100 --> 31:39.600
其中一个函数

31:39.600 --> 31:41.600
然后在这个函数里边

31:41.600 --> 31:43.600
我们在这个交给这个函数来处理

31:43.600 --> 31:45.600
handle submet

31:45.600 --> 31:47.600
我们这个函数里边输出

31:47.600 --> 31:49.600
表单提交了

31:49.600 --> 31:51.600
表单提交了

31:51.600 --> 31:53.600
这是第一个,这种方式

31:53.600 --> 31:55.600
我们这里点击,有点检查

31:55.600 --> 31:57.600
看一下这个数有没有输出

31:57.600 --> 31:59.600
这东西是要重检入凡的

31:59.600 --> 32:01.600
不然大家意见不了

32:01.600 --> 32:03.600
点击,就被表单提交了

32:03.600 --> 32:05.600
所以我们把一个代码的

32:05.600 --> 32:07.600
书写位置要找到

32:07.600 --> 32:09.600
不然的话你写了半天都不知道哪里书写代码

32:09.600 --> 32:11.600
这是第二种方式

32:11.600 --> 32:13.600
第二种方式呢,我给大家说一下第二种方式

32:13.600 --> 32:15.600
第二种方式呢,是

32:15.600 --> 32:17.600
两种方式都可以

32:17.600 --> 32:19.600
第二种方式是for表单里边

32:19.600 --> 32:21.600
它有一个事件,叫做unsubmet

32:21.600 --> 32:23.600
unsubmet

32:23.600 --> 32:25.600
它有这么一个事件

32:25.600 --> 32:27.600
那么这个事件呢,它也可以执行

32:27.600 --> 32:29.600
我们就比方说,不写这个button

32:29.600 --> 32:31.600
这个button不要

32:31.600 --> 32:33.600
button里边不写事件

32:33.600 --> 32:35.600
我们把事件放到哪里呢,unsubmet里边

32:35.600 --> 32:37.600
好,其中咱们可以看一下这个unsubmet

32:39.600 --> 32:41.600
它说到了

32:41.600 --> 32:43.600
form里边呢,它有这么一个事件

32:43.600 --> 32:45.600
前面

32:45.600 --> 32:47.600
有这么一个事件,叫做unsubmet

32:47.600 --> 32:49.600
对吧

32:49.600 --> 32:51.600
运行成功之后的毁掉事件

32:51.600 --> 32:53.600
那么这个unsubmet的事件里面

32:53.600 --> 32:55.600
我们看一下它能不能运行

32:55.600 --> 32:57.600
能不能运行

32:57.600 --> 32:59.600
点击

32:59.600 --> 33:01.600
有运行这个事件吗

33:01.600 --> 33:03.600
没有

33:03.600 --> 33:05.600
为啥没有运行这个事件呢

33:05.600 --> 33:07.600
好,咱们来看一下这里的animate

33:07.600 --> 33:09.600
它生成的就是

33:09.600 --> 33:11.600
元素

33:11.600 --> 33:13.600
你会看到它整个生成的一个

33:13.600 --> 33:15.600
是不是一个form表单元素

33:15.600 --> 33:17.600
我们可以想象得到,这里的unsubmet

33:17.600 --> 33:19.600
是不是就监听的是

33:19.600 --> 33:21.600
真实的动物元素里边

33:21.600 --> 33:23.600
form的unsubmet

33:23.600 --> 33:25.600
监听了这个事件

33:25.600 --> 33:27.600
那么这个submet的事件,怎么才能触发运行呢

33:27.600 --> 33:29.600
你如果说这里是一个普通按钮的话

33:29.600 --> 33:31.600
能不能触发

33:31.600 --> 33:33.600
这个unsubmet,是不是触发不了

33:33.600 --> 33:35.600
对吧,是不是触发不了这个事件

33:35.600 --> 33:37.600
你看我们这里,实际上它生成的元素是一个啥呢

33:37.600 --> 33:39.600
看一下

33:39.600 --> 33:41.600
它生成的元素

33:41.600 --> 33:43.600
是一个普通的,你看Type為button

33:43.600 --> 33:45.600
一个普通的按钮

33:45.600 --> 33:47.600
而不是一个提交按钮

33:47.600 --> 33:49.600
我们知道在atman里边

33:49.600 --> 33:51.600
Type为submet,才会导致表单提交

33:51.600 --> 33:53.600
对吧,才会是一个提交按钮

33:53.600 --> 33:55.600
所以它这里根本就不是一个提交按钮

33:55.600 --> 33:57.600
因此呢

33:57.600 --> 33:59.600
它这里自然触发不了这个

33:59.600 --> 34:01.600
form表单的unsubmet事件

34:01.600 --> 34:03.600
所以我们要用这种模式的话

34:03.600 --> 34:05.600
你得潜力条件,你得把这个按钮的

34:05.600 --> 34:07.600
变成一个提交按钮

34:07.600 --> 34:09.600
那怎么把它变成一个提交按钮呢

34:09.600 --> 34:11.600
是不是我们在atman里边

34:11.600 --> 34:13.600
是不是把Type设为submet就行了

34:13.600 --> 34:15.600
但是不好意思

34:15.600 --> 34:17.600
你这个组件的Type属性我已经用了

34:17.600 --> 34:19.600
它变成控制样式了

34:19.600 --> 34:21.600
那如果说你要设置Type为submet

34:21.600 --> 34:23.600
你得换一个属性名字

34:23.600 --> 34:25.600
它给你做了另外一个属性名字叫做

34:25.600 --> 34:27.600
atmanType

34:27.600 --> 34:29.600
就生成了atman真实的

34:29.600 --> 34:31.600
动物元素里边的Type值

34:31.600 --> 34:33.600
你把它设为submet

34:33.600 --> 34:35.600
就这么简单,完了

34:35.600 --> 34:37.600
那么现在我们看一下,点提交

34:37.600 --> 34:39.600
好,你会发现到

34:39.600 --> 34:41.600
刚才其实如果你眼睛够快的话

34:41.600 --> 34:43.600
会发现这里已经输出了我们的事件了

34:43.600 --> 34:45.600
点提交,你看,表单提交了

34:45.600 --> 34:47.600
然后立即刷新页面了

34:47.600 --> 34:49.600
为什么会刷新页面

34:49.600 --> 34:51.600
因为atman元素里边

34:51.600 --> 34:53.600
就会提交到服务器刷新页面

34:53.600 --> 34:55.600
对吧,所以说我们这里

34:55.600 --> 34:57.600
会希望它不要

34:57.600 --> 34:59.600
阻止它提交,阻止这个

34:59.600 --> 35:01.600
真实的动物元素提交

35:01.600 --> 35:03.600
那么怎么办,是不是阻止事件的默认行为

35:03.600 --> 35:05.600
那么这个submet里边

35:05.600 --> 35:07.600
它会给你传一个事件参数里边

35:07.600 --> 35:09.600
参数来,那么我们通过这个参数

35:09.600 --> 35:11.600
就用prevent default

35:13.600 --> 35:15.600
阻止

35:15.600 --> 35:17.600
这是阻止表单

35:17.600 --> 35:19.600
默认行为,什么默认行为呢

35:19.600 --> 35:21.600
它阻止这个行为

35:21.600 --> 35:23.600
好,再来看

35:23.600 --> 35:25.600
那么现在我们阻止了之后

35:25.600 --> 35:27.600
你带着这里

35:27.600 --> 35:29.600
点提交,是不是可以得到数据了

35:29.600 --> 35:31.600
是不是可以得到提交了,对不对

35:31.600 --> 35:33.600
那么现在事件搞定了

35:33.600 --> 35:35.600
事件这一块都很简单

35:35.600 --> 35:37.600
主要是为了给大家说一下这个

35:37.600 --> 35:39.600
好,事件这一块特别简单

35:39.600 --> 35:41.600
已经搞定了

35:41.600 --> 35:43.600
那么现在关键是我这里要获取

35:43.600 --> 35:45.600
一个一个的数据

35:45.600 --> 35:47.600
我账号得获取吧

35:47.600 --> 35:49.600
不然的话提交啥呢

35:49.600 --> 35:51.600
最核心的是不是要获取数据

35:51.600 --> 35:53.600
那么问题是我在这里

35:53.600 --> 35:55.600
咋获取数据呢

35:55.600 --> 35:57.600
我没法获取数据

35:57.600 --> 35:59.600
那么要获取数据的话

35:59.600 --> 36:01.600
是不是要把这个组件收空

36:01.600 --> 36:03.600
这个组件要收空,对吧

36:03.600 --> 36:05.600
要给它写翻六指,然后我们要自己写

36:05.600 --> 36:07.600
状态,对不对

36:07.600 --> 36:09.600
是吧,是不要这样子来做

36:09.600 --> 36:11.600
我们要自己写状态

36:11.600 --> 36:13.600
写翻六指,那么这样做呢

36:13.600 --> 36:15.600
会稍险的有点麻烦

36:15.600 --> 36:17.600
那么问题都没有

36:17.600 --> 36:19.600
因为它的form组件只是给你提供样式

36:19.600 --> 36:21.600
其他啥都没管,它啥都没管

36:21.600 --> 36:23.600
该咋写咋写,你自己写就完事了

36:23.600 --> 36:25.600
要写单权方你自己写

36:25.600 --> 36:27.600
你要去让这个组件收空

36:27.600 --> 36:29.600
那么自然而然

36:29.600 --> 36:31.600
你通过状态里边的东西是不是可以得到数据了

36:31.600 --> 36:33.600
它这样写比较麻烦

36:33.600 --> 36:35.600
因此呢

36:35.600 --> 36:37.600
Rx给你提供了另外一个东西

36:37.600 --> 36:39.600
叫form对象

36:39.600 --> 36:41.600
它能够帮你来生成数据

36:41.600 --> 36:43.600
能够帮你来获取数据

36:43.600 --> 36:45.600
它是把它分开的

36:45.600 --> 36:46.600
form的表

36:46.600 --> 36:48.600
form组件它只负责样式

36:48.600 --> 36:49.600
界面

36:49.600 --> 36:50.600
而这个form对象

36:50.600 --> 36:51.600
它来负责功能

36:51.600 --> 36:53.600
它这么个意思

36:53.600 --> 36:55.600
所以说呢

36:55.600 --> 36:57.600
要使用这个对象来去生成

36:57.600 --> 36:59.600
这里边的东西

36:59.600 --> 37:01.600
那么它会自动的把这里边的东西

37:01.600 --> 37:02.600
然后让它收空

37:02.600 --> 37:03.600
并且提交的时候呢

37:03.600 --> 37:05.600
会让你通过某种方式

37:05.600 --> 37:07.600
来得到这个数据

37:07.600 --> 37:09.600
它是这么来处理的

37:09.600 --> 37:11.600
那么它的处理方式是什么呢

37:11.600 --> 37:13.600
你首先得得到这么一个form对象

37:13.600 --> 37:15.600
第一个问题

37:15.600 --> 37:17.600
我们怎么来得到form对象

37:17.600 --> 37:19.600
这结果的内容

37:19.600 --> 37:21.600
可以大家反复观看一下

37:21.600 --> 37:23.600
这一块有多讨有点逻辑在里面

37:23.600 --> 37:25.600
其实也给大家传输一个

37:25.600 --> 37:27.600
这个Andy

37:27.600 --> 37:29.600
它的设计的理念

37:29.600 --> 37:31.600
它是为了保持存进

37:31.600 --> 37:32.600
它利用了

37:32.600 --> 37:33.600
它是为了让你用的简单

37:33.600 --> 37:34.600
但是Andy呢

37:34.600 --> 37:35.600
它一方面要尽量的

37:35.600 --> 37:36.600
让你用的简单

37:36.600 --> 37:37.600
它还要保持这个存进

37:37.600 --> 37:39.600
就是要把功能的点分开

37:39.600 --> 37:40.600
这是rex的

37:40.600 --> 37:42.600
核心哲学思想

37:42.600 --> 37:43.600
因此它的form组建

37:43.600 --> 37:44.600
它只控制样式

37:44.600 --> 37:46.600
那么这里边东西要受控

37:46.600 --> 37:47.600
要得到它的数据

37:47.600 --> 37:48.600
也要验证

37:48.600 --> 37:49.600
它单独来处理

37:49.600 --> 37:50.600
怎么处理呢

37:50.600 --> 37:51.600
它要需要一个form对象

37:51.600 --> 37:52.600
那么第一个问题

37:52.600 --> 37:54.600
怎么来获取form对象

37:54.600 --> 37:55.600
Andy里边

37:55.600 --> 37:56.600
它是使用的这种方式

37:56.600 --> 37:58.600
来获取form对象的

37:58.600 --> 38:00.600
我们这里先写个组建

38:00.600 --> 38:03.600
然后它定义了这么一个函数

38:03.600 --> 38:05.600
它在form这个组建里边

38:05.600 --> 38:06.600
它定义了这么一个函数

38:06.600 --> 38:08.600
叫做create

38:08.600 --> 38:10.600
创建

38:10.600 --> 38:11.600
这个函数里边

38:11.600 --> 38:12.600
可以写参数

38:12.600 --> 38:13.600
这个参数我们之后再说

38:13.600 --> 38:14.600
现在别管

38:14.600 --> 38:16.600
现在不管参数

38:16.600 --> 38:17.600
create

38:17.600 --> 38:18.600
好

38:18.600 --> 38:20.600
那么这个东西返回的是什么呢

38:20.600 --> 38:23.600
它返回的是一个高阶组建

38:23.600 --> 38:28.600
这个东西它返回的是一个高阶组建

38:28.600 --> 38:29.600
也就是说

38:29.600 --> 38:31.600
这个高阶组建还是一个函数

38:31.600 --> 38:34.600
那么通过这个高阶组建

38:34.600 --> 38:36.600
你可以去包装某一个组建

38:36.600 --> 38:38.600
比方说我们包装是丢电子风

38:38.600 --> 38:39.600
包装那个组建

38:39.600 --> 38:41.600
它会返回一个新的组建

38:41.600 --> 38:42.600
就这么个意思

38:42.600 --> 38:44.600
那么我们倒出的是这个新的组建

38:44.600 --> 38:46.600
这个高阶组建有什么意义呢

38:46.600 --> 38:48.600
它的主要作用

38:48.600 --> 38:50.600
它这个高阶组建的主要作用

38:50.600 --> 38:51.600
就是

38:51.600 --> 38:53.600
我干脆还是要记写笔记

38:53.600 --> 38:54.600
因为form这一块

38:54.600 --> 39:02.300
稍微可能要复杂点

39:02.300 --> 39:04.300
它是提供了两个东西

39:04.300 --> 39:05.300
一个是form组建

39:05.300 --> 39:07.300
一个是form对象

39:07.300 --> 39:09.680
那么关于

39:09.680 --> 39:11.680
刚才说到form组建了

39:11.680 --> 39:12.680
form组建已经说完了

39:12.680 --> 39:14.680
现在是form对象

39:14.680 --> 39:16.680
form对象的话

39:16.680 --> 39:17.680
第一个问题是

39:17.680 --> 39:19.680
获取

39:19.680 --> 39:21.680
获取form对象

39:21.680 --> 39:22.680
怎么来获取呢

39:22.680 --> 39:24.680
是通过form decreed

39:24.680 --> 39:26.680
这里边传入一个配置

39:26.680 --> 39:28.680
配置我们之后再说

39:28.680 --> 39:29.680
然后

39:29.680 --> 39:31.680
得到一个

39:31.680 --> 39:34.680
得到一个高阶组建

39:36.680 --> 39:38.680
该高阶组建

39:38.680 --> 39:42.120
会将传入的

39:42.120 --> 39:43.120
会

39:43.120 --> 39:45.120
将form对象

39:45.120 --> 39:47.120
作为属性

39:47.120 --> 39:49.120
注入到

39:49.120 --> 39:51.120
注入到

39:51.120 --> 39:52.120
传递的

39:52.120 --> 39:54.120
组建中

39:54.120 --> 39:55.120
在这里

39:55.120 --> 39:56.120
回到这里

39:56.120 --> 39:57.120
你看我们刚才传递的什么组建

39:57.120 --> 39:58.120
丢掉了form

39:58.120 --> 40:00.120
那么它就会把form对象

40:00.120 --> 40:03.120
我们不是就要form对象吗

40:03.120 --> 40:04.120
要这个东西

40:04.120 --> 40:05.120
它会把form对象

40:05.120 --> 40:07.120
给你注入到属性里边

40:07.120 --> 40:08.120
我们现在看一下

40:08.120 --> 40:09.120
在属性里面

40:09.120 --> 40:10.120
输出

40:10.120 --> 40:11.120
输出

40:11.120 --> 40:12.120
什么

40:12.120 --> 40:14.120
this the props

40:14.120 --> 40:15.120
现在用高阶组建包装了一下

40:15.120 --> 40:17.120
它会给你注入这么一个属性

40:17.120 --> 40:19.120
你看

40:19.120 --> 40:20.120
是不是里面有一个属性form了

40:20.120 --> 40:21.120
probs里面

40:21.120 --> 40:22.120
是不是有一个属性form了

40:22.120 --> 40:23.120
form里面提供了很多喊数

40:23.120 --> 40:25.120
来帮你处理表达

40:25.120 --> 40:27.120
它就这么来操作的

40:27.120 --> 40:28.120
那么大家可以界限一下

40:28.120 --> 40:30.120
它的这种操作思路

40:30.120 --> 40:31.120
就是这个组建

40:31.120 --> 40:32.120
它只控制样式

40:32.120 --> 40:33.120
什么都不管

40:33.120 --> 40:34.120
它甚至都不知道

40:34.120 --> 40:35.120
那个就是

40:35.120 --> 40:37.120
这个东西的存在

40:37.120 --> 40:38.120
因为我看很多教程里面

40:38.120 --> 40:39.120
它讲的是

40:39.120 --> 40:40.120
就是两个一起讲的

40:40.120 --> 40:41.120
两个东西是分割开的

40:41.120 --> 40:42.120
这是官方文章

40:42.120 --> 40:44.120
没有说得很清楚

40:44.120 --> 40:46.120
那么这里

40:46.120 --> 40:47.120
我们就可以

40:47.120 --> 40:48.120
就注入了这个属性了

40:48.120 --> 40:49.120
form这个属性

40:49.120 --> 40:50.120
就可以注入了

40:50.120 --> 40:52.120
form这个属性了

40:52.120 --> 40:53.120
那么这个属性里面

40:53.120 --> 40:54.120
有哪些东西

40:54.120 --> 40:56.120
东西非常非常多

40:56.120 --> 40:57.120
东西贼度

40:57.120 --> 40:58.120
你看

40:58.120 --> 40:59.120
这个对象里面

40:59.120 --> 41:00.120
它提供了很多很多的方法

41:00.120 --> 41:02.120
那么我们平时用的

41:02.120 --> 41:03.120
其实没有那么多

41:03.120 --> 41:05.120
平时用的最多的

41:05.120 --> 41:06.120
就这个方法

41:06.120 --> 41:08.120
giz field decorator

41:08.120 --> 41:09.120
所以说

41:09.120 --> 41:11.120
因为它经常用这个方法

41:11.120 --> 41:13.120
我们通常会把它解构出来

41:15.120 --> 41:17.120
通常会把从那个就是

41:17.120 --> 41:19.120
this props.form里面

41:20.120 --> 41:22.120
把这个方法解构出来

41:22.120 --> 41:23.120
这个函数

41:23.120 --> 41:25.120
这个函数用来干嘛呢

41:25.120 --> 41:26.120
我们来看一下

41:26.120 --> 41:28.120
form对象的成员

41:30.120 --> 41:33.120
使用form对象

41:33.120 --> 41:34.120
form对象里面有哪些东西呢

41:34.120 --> 41:35.120
第一个就是个方法

41:35.120 --> 41:37.120
get a field decorator

41:37.120 --> 41:38.120
那么该方法

41:38.120 --> 41:40.120
该方法

41:40.120 --> 41:42.120
用于产生

41:42.120 --> 41:45.120
一个表单元素

41:45.120 --> 41:48.120
它是用来帮你产生一个表单元素

41:48.120 --> 41:50.120
通过该方法

41:50.120 --> 41:53.120
产生的表单元素

41:53.120 --> 41:55.120
会被form对象

41:55.120 --> 41:57.120
控制

41:57.120 --> 41:59.120
会被form对象控制

41:59.120 --> 42:00.120
也就因为我们刚才的

42:00.120 --> 42:01.120
遇到的问题就是

42:01.120 --> 42:02.120
这里的表单元素

42:02.120 --> 42:03.120
就是这个input

42:03.120 --> 42:04.120
password

42:04.120 --> 42:05.120
这些东西

42:05.120 --> 42:06.120
我们得不到它的数据

42:06.120 --> 42:07.120
要得到数据也可以

42:07.120 --> 42:08.120
得自己写代吧

42:08.120 --> 42:09.120
挺麻烦的

42:09.120 --> 42:11.120
那么有了form对象里面

42:11.120 --> 42:13.120
它就可以帮你来管理

42:13.120 --> 42:14.120
它怎么管理呢

42:14.120 --> 42:15.120
它里面提供了一个方法

42:15.120 --> 42:16.120
get a field decorator

42:16.120 --> 42:17.120
decorator表示描述的意思

42:17.120 --> 42:20.120
field表示一个自断

42:20.120 --> 42:22.120
得到一个自断描述

42:22.120 --> 42:23.120
什么意思呢

42:23.120 --> 42:24.120
就是得到一个表单项的

42:24.120 --> 42:25.120
就是组件

42:25.120 --> 42:27.120
那么在这里

42:27.120 --> 42:28.120
通过这个方法得到的组件

42:28.120 --> 42:30.120
就是你不要直接输入input了

42:30.120 --> 42:31.120
也要通过这个方法

42:31.120 --> 42:32.120
来产生这个东西

42:32.120 --> 42:33.120
那么通过这个方法

42:33.120 --> 42:34.120
来产生的东西

42:34.120 --> 42:36.120
它会被form对象所控制

42:36.120 --> 42:37.120
因为这个form对象

42:37.120 --> 42:38.120
你可以监控到了

42:38.120 --> 42:40.120
因为它是这里面的成员方法

42:40.120 --> 42:41.120
这个对象

42:41.120 --> 42:43.120
它自然可以监控到这里面的数据

42:43.120 --> 42:44.120
所以说到这里面

42:44.120 --> 42:45.120
怎么写呢

42:45.120 --> 42:46.120
你看着

42:46.120 --> 42:48.120
我们就可以使用

42:48.120 --> 42:49.120
在这里面调用这个方法

42:49.120 --> 42:51.120
我们不直接输写input

42:51.120 --> 42:52.120
而是调用这个方法

42:52.120 --> 42:53.120
来得到一个

42:53.120 --> 42:55.120
可以渲染的表单元素

42:55.120 --> 42:57.120
这个方法里面

42:57.120 --> 42:58.120
它有这么一些参数

42:58.120 --> 42:59.120
这个方法里面有个参数

42:59.120 --> 43:02.120
这个参数是什么呢

43:02.120 --> 43:03.120
这个参数是

43:03.120 --> 43:05.120
你要写一个

43:05.120 --> 43:08.120
叫做key值

43:08.120 --> 43:10.120
也叫做属性值

43:10.120 --> 43:12.120
叫做属性的名

43:12.120 --> 43:13.120
属性名

43:13.120 --> 43:14.120
什么意思呢

43:14.120 --> 43:15.120
就是说它到时候

43:15.120 --> 43:16.120
这个表单

43:16.120 --> 43:17.120
它会生成一个对象

43:17.120 --> 43:18.120
比方这里有账号密码

43:18.120 --> 43:19.120
对吧

43:19.120 --> 43:21.120
它最终会生成这么一个对象

43:21.120 --> 43:22.120
它最终会生成这么一个对象

43:22.120 --> 43:24.120
locking id

43:24.120 --> 43:25.120
账号啥啥

43:25.120 --> 43:27.120
locking password

43:27.120 --> 43:28.120
密码啥啥

43:28.120 --> 43:29.120
对吧

43:29.120 --> 43:30.120
它会生成这么一个东西

43:30.120 --> 43:31.120
那么你要把这个

43:31.120 --> 43:33.120
生成对象的属性名

43:33.120 --> 43:34.120
要告诉它

43:34.120 --> 43:36.120
它到时候会把你这个表

43:36.120 --> 43:38.120
你这个表单象的数据

43:38.120 --> 43:40.120
生成了对象的属性里面

43:40.120 --> 43:42.120
你得把属性名告诉它

43:42.120 --> 43:43.120
就这么个意思

43:43.120 --> 43:45.120
所以这里是locking id

43:45.120 --> 43:47.120
属性名

43:47.120 --> 43:48.120
那么这个东西

43:48.120 --> 43:49.120
这个函数

43:49.120 --> 43:50.120
雕用之后

43:50.120 --> 43:52.120
它返回的又是一个高阶组件

43:52.120 --> 43:53.120
这个高阶组件

43:53.120 --> 43:56.120
可以封装一个表单元素组件

43:56.120 --> 43:59.120
然后来产生一个新的组件

43:59.120 --> 44:00.120
新的组件

44:00.120 --> 44:01.120
就是被它控制的

44:01.120 --> 44:02.120
被这个缝母元素

44:02.120 --> 44:03.120
被这个缝母表单控制的

44:03.120 --> 44:05.120
所以说我们这里再怎么调用了

44:05.120 --> 44:06.120
就是调用这个函数

44:06.120 --> 44:08.120
是不是产生了高阶组件

44:08.120 --> 44:10.120
高阶组件里边再去调用一下

44:10.120 --> 44:12.120
再把我们要封装的

44:12.120 --> 44:14.120
什么input元素

44:14.120 --> 44:15.120
再拿进来

44:15.120 --> 44:17.120
我来整体解释一下

44:17.120 --> 44:19.120
这句话的意思是啥呢

44:19.120 --> 44:21.120
我在这里得到一个表单元素

44:21.120 --> 44:22.120
但这个表单元素

44:22.120 --> 44:23.120
我不直接输写

44:23.120 --> 44:26.120
我通过一个高阶组件包装一下

44:26.120 --> 44:27.120
因为我直接输写的话

44:27.120 --> 44:29.120
就得手动进行控制

44:29.120 --> 44:30.120
挺麻烦的

44:30.120 --> 44:31.120
所以说我希望一个高阶组件

44:31.120 --> 44:32.120
来帮我们进行控制

44:32.120 --> 44:34.120
那么个高阶组件怎么来获取呢

44:34.120 --> 44:36.120
就通过这个gizfield的

44:36.120 --> 44:37.120
decorator来获取

44:37.120 --> 44:39.120
通过它来得到一个高阶组件

44:39.120 --> 44:41.120
那么它调用这个函数的时候

44:41.120 --> 44:42.120
它要传一个参数

44:42.120 --> 44:45.120
它要知道最终生成的数据里边

44:45.120 --> 44:48.120
它的属性名对应到哪

44:48.120 --> 44:49.120
你这里随便写

44:49.120 --> 44:50.120
随便写个属性名

44:50.120 --> 44:51.120
那么比方说

44:51.120 --> 44:52.120
我们这里写不写完了

44:52.120 --> 44:53.120
那么这个密码

44:53.120 --> 44:55.120
也可以用这种方式来写

44:55.120 --> 44:57.120
第二什么password

44:57.120 --> 44:59.120
就写完了

44:59.120 --> 45:00.120
那么现在生成出来的

45:00.120 --> 45:02.120
界面是一样的

45:02.120 --> 45:04.120
你看这些东西都分开的

45:04.120 --> 45:06.120
数据跟界面它是分开制作的

45:06.120 --> 45:07.120
界面是不是一样的

45:07.120 --> 45:08.120
对吧

45:08.120 --> 45:09.120
是不是界面一样的

45:09.120 --> 45:10.120
好

45:10.120 --> 45:11.120
界面是一样的

45:11.120 --> 45:14.120
但是我们现在可以非常轻松的

45:14.120 --> 45:16.120
能够获取它的数据了

45:16.120 --> 45:18.120
怎么来获取

45:18.120 --> 45:20.120
我们只需要在获取的时候

45:20.120 --> 45:23.120
通过这个form对象里边一个方法

45:25.120 --> 45:28.120
我们刚才好像打印出来的对吧

45:28.120 --> 45:30.120
我们打印一下

45:30.120 --> 45:31.120
this props

45:31.120 --> 45:33.120
你不是传了一个form对象进来吧

45:33.120 --> 45:34.120
对吧

45:34.120 --> 45:35.120
我用这个form对象生成的

45:35.120 --> 45:36.120
一表达元素

45:36.120 --> 45:37.120
你自然而然

45:37.120 --> 45:38.120
受到这个对象的控制

45:38.120 --> 45:39.120
那么打印出来

45:39.120 --> 45:42.430
点击

45:44.430 --> 45:46.430
cannot read the property props

45:47.430 --> 45:50.430
cannot read the property props

45:50.430 --> 45:52.430
of undefend

45:52.430 --> 45:55.870
this is undefend

45:55.870 --> 45:56.870
哦哦哦

45:56.870 --> 45:58.870
这个是指向的问题

46:02.950 --> 46:03.950
好

46:03.950 --> 46:06.520
再来啊

46:06.520 --> 46:07.520
帐号随便写

46:07.520 --> 46:08.520
密码随便写点击

46:08.520 --> 46:09.520
你看一下

46:09.520 --> 46:10.520
这个form对象里边

46:10.520 --> 46:12.520
它有一个函数叫做

46:12.520 --> 46:15.520
get fields value

46:15.520 --> 46:17.520
get fields value

46:17.520 --> 46:18.520
啊

46:18.520 --> 46:20.520
呃

46:20.520 --> 46:22.520
我看一下啊

46:22.520 --> 46:23.520
哦对

46:23.520 --> 46:24.520
就这个啊

46:24.520 --> 46:25.520
get fields value

46:25.520 --> 46:26.520
get fields value

46:26.520 --> 46:27.520
有这么一个函数

46:27.520 --> 46:28.520
我们就可以通过

46:28.520 --> 46:29.520
调用这个函数

46:29.520 --> 46:31.520
来得到整个对象了

46:31.520 --> 46:33.520
保存你看一下

46:34.520 --> 46:35.520
帐号随便写

46:35.520 --> 46:36.520
密码随便写

46:36.520 --> 46:37.520
呃

46:37.520 --> 46:38.520
两个怎么是一样的

46:38.520 --> 46:39.520
哦这里

46:39.520 --> 46:40.520
哦你看

46:40.520 --> 46:41.520
两个是一样的

46:41.520 --> 46:42.520
为什么是一样的

46:42.520 --> 46:43.520
它在内部进行了控制的

46:43.520 --> 46:44.520
对吧

46:44.520 --> 46:45.520
把它变成受控的组件

46:45.520 --> 46:46.520
因为两个都是locking id

46:46.520 --> 46:47.520
所以说

46:47.520 --> 46:48.520
它两个都是一样的

46:48.520 --> 46:50.960
一个是locking password的

46:50.960 --> 46:51.960
好

46:51.960 --> 46:52.960
再来啊

46:52.960 --> 46:53.960
帐号

46:53.960 --> 46:54.960
密码

46:54.960 --> 46:55.960
点击

46:55.960 --> 46:56.960
你看是不是得到个对象了

46:56.960 --> 46:57.960
对吧

46:57.960 --> 46:58.960
locking id

46:58.960 --> 46:59.960
locking password

46:59.960 --> 47:00.960
是吧

47:00.960 --> 47:01.960
一下就得到了

47:01.960 --> 47:02.960
对吧

47:02.960 --> 47:03.960
我们就补

47:03.960 --> 47:04.960
它这个

47:04.960 --> 47:05.960
组件了

47:05.960 --> 47:06.960
通过这个高階组件

47:06.960 --> 47:08.960
它能帮我们来进行控制

47:08.960 --> 47:09.960
就这么简单

47:09.960 --> 47:10.960
就这么简单

47:10.960 --> 47:12.960
你要这个意思吧

47:12.960 --> 47:13.960
好那么

47:13.960 --> 47:14.960
其实这里要说

47:14.960 --> 47:15.960
复杂的话也没有想象

47:15.960 --> 47:17.960
大家想象的那么复杂啊

47:17.960 --> 47:18.960
没有大家想象的那么复杂

47:18.960 --> 47:19.960
好那么这是帐号

47:19.960 --> 47:20.960
这是密码

47:20.960 --> 47:21.960
对吧

47:21.960 --> 47:22.960
帐号密码

47:22.960 --> 47:23.960
好我们继续写啊

47:23.960 --> 47:24.960
因为我们知道

47:24.960 --> 47:25.960
一个学生里边

47:25.960 --> 47:26.960
他有很多信息

47:26.960 --> 47:27.960
因为我一会呢

47:27.960 --> 47:28.960
我们还要做真实的添加

47:28.960 --> 47:29.960
对吧

47:29.960 --> 47:30.960
要做真实的添加

47:30.960 --> 47:31.960
所以说我们这里呢

47:31.960 --> 47:32.960
访问一下

47:32.960 --> 47:34.960
我们的Develop

47:36.960 --> 47:37.960
doe edu

47:37.960 --> 47:38.960
访问一下

47:38.960 --> 47:40.960
我们的就是开放平台

47:40.960 --> 47:41.960
这里边呢

47:41.960 --> 47:42.960
我们

47:42.960 --> 47:44.960
这里找到这个

47:44.960 --> 47:45.960
债钱借口

47:48.960 --> 47:49.960
实战项目

47:49.960 --> 47:50.960
学生管理系统

47:50.960 --> 47:51.960
学生管理系统里边

47:51.960 --> 47:52.960
我们的

47:52.960 --> 47:54.960
添加学生

47:54.960 --> 47:58.660
添加学生

47:58.660 --> 47:59.660
添加学生

47:59.660 --> 48:00.660
添加学生

48:00.660 --> 48:01.660
有个s number

48:01.660 --> 48:02.660
学生学号

48:02.660 --> 48:03.660
稍微改一下

48:03.660 --> 48:04.660
学号

48:04.660 --> 48:05.660
用s number吧

48:05.660 --> 48:06.660
我们就用s number

48:06.660 --> 48:07.660
这是学号

48:07.660 --> 48:09.660
学号

48:09.660 --> 48:10.660
然后呢

48:10.660 --> 48:12.660
这是学生的姓名

48:12.660 --> 48:14.660
学生的姓名

48:14.660 --> 48:15.660
内

48:15.660 --> 48:16.660
这是姓名

48:16.660 --> 48:17.660
对吧

48:17.660 --> 48:19.660
看一下吧

48:19.660 --> 48:20.660
学号姓名

48:20.660 --> 48:21.660
没问题

48:21.660 --> 48:22.660
没问题

48:22.660 --> 48:24.660
放下面来吧

48:24.660 --> 48:26.660
学号姓名

48:26.660 --> 48:27.660
然后呢

48:27.660 --> 48:28.660
我们看一下

48:28.660 --> 48:29.660
这里边还有啥

48:29.660 --> 48:30.660
还有啥

48:30.660 --> 48:31.660
还有学生姓别

48:31.660 --> 48:32.660
对吧

48:32.660 --> 48:33.660
学生姓别的话

48:33.660 --> 48:35.660
要么是男

48:35.660 --> 48:36.660
要么是女

48:36.660 --> 48:37.660
对不对

48:37.660 --> 48:38.660
我们是不是可以用单选框

48:38.660 --> 48:39.660
对吧

48:39.660 --> 48:40.660
或者是用单选框组

48:40.660 --> 48:41.660
都行啊

48:41.660 --> 48:42.660
都行

48:42.660 --> 48:43.660
于是呢

48:43.660 --> 48:44.660
我们这里

48:44.660 --> 48:45.660
再来一个

48:45.660 --> 48:46.660
form item

48:46.660 --> 48:47.660
这个是什么

48:47.660 --> 48:48.660
姓别

48:48.660 --> 48:49.660
姓别

48:49.660 --> 48:50.660
姓别的话

48:50.660 --> 48:52.660
我们可以用单选框

48:52.660 --> 48:53.660
用单选框组

48:53.660 --> 48:54.660
好

48:54.660 --> 48:55.660
那么这里呢

48:55.660 --> 48:56.660
我们是sex

48:56.660 --> 48:57.660
他对你的属性名

48:57.660 --> 48:58.660
肯定是sex

48:58.660 --> 48:59.660
这是属性名

48:59.660 --> 49:00.660
好

49:00.660 --> 49:01.660
那这里包装的主件

49:01.660 --> 49:02.660
是要用啥

49:02.660 --> 49:03.660
是不是用之前我们学过的

49:03.660 --> 49:05.660
就是radio

49:05.660 --> 49:06.660
对不对

49:06.660 --> 49:07.660
radio

49:07.660 --> 49:08.660
还是一个主的radio

49:08.660 --> 49:09.660
它会形成一个主

49:09.660 --> 49:11.660
因为它就有两个选项

49:11.660 --> 49:12.660
对不对

49:12.660 --> 49:13.660
有两个选项

49:13.660 --> 49:14.660
一个是男

49:14.660 --> 49:15.660
一个是女

49:15.660 --> 49:16.660
好

49:16.660 --> 49:17.660
那么我们看一下

49:17.660 --> 49:19.660
我们这里

49:19.660 --> 49:20.660
这里我们之前学过的

49:20.660 --> 49:21.660
有这么一个单选框

49:21.660 --> 49:22.660
组合

49:22.660 --> 49:23.660
对不对

49:23.660 --> 49:24.660
单选框组合

49:24.660 --> 49:25.660
来吧

49:25.660 --> 49:26.660
我们直接使用单选框组合

49:26.660 --> 49:27.660
叫radio的group

49:27.660 --> 49:28.660
好

49:28.660 --> 49:30.970
来吧

49:30.970 --> 49:31.970
radio

49:31.970 --> 49:32.970
好

49:32.970 --> 49:34.970
我们这里使用

49:34.970 --> 49:36.970
性别就

49:36.970 --> 49:38.970
这里就用那个

49:38.970 --> 49:39.970
radio

49:39.970 --> 49:45.290
好

49:45.290 --> 49:46.290
我们刚才要不然

49:46.290 --> 49:47.290
再包装一个主件

49:47.290 --> 49:48.290
算了

49:48.290 --> 49:49.290
拿着包装了

49:49.290 --> 49:50.290
就在这直接写得了

49:50.290 --> 49:51.290
直接得了

49:51.290 --> 49:52.290
好

49:52.290 --> 49:53.290
那么这里边

49:53.290 --> 49:54.290
我们书写这么一个

49:54.290 --> 49:55.290
就是radio

49:55.290 --> 49:56.290
group

49:56.290 --> 49:57.290
因为我要分

49:57.290 --> 49:58.290
把它不是写成一个主

49:58.290 --> 49:59.290
对不对

49:59.290 --> 50:02.180
对

50:02.180 --> 50:03.180
就是个Amex

50:03.180 --> 50:04.180
在这里

50:04.180 --> 50:05.180
这种场景下

50:05.180 --> 50:06.180
就不是那么好用了

50:06.180 --> 50:07.180
好

50:07.180 --> 50:08.180
这是单选框组

50:08.180 --> 50:09.180
好

50:09.180 --> 50:10.180
这个单选

50:10.180 --> 50:11.180
单选框组里边

50:11.180 --> 50:12.180
单选框组里边

50:12.180 --> 50:13.180
是不是有两个单选框

50:13.180 --> 50:14.180
对吧

50:14.180 --> 50:15.180
有两个单选框

50:15.180 --> 50:16.180
好

50:16.180 --> 50:17.180
两个

50:17.180 --> 50:18.180
radio

50:18.180 --> 50:19.180
两个button

50:19.180 --> 50:20.180
复制过来

50:20.180 --> 50:21.180
代码复制过来

50:21.180 --> 50:22.180
影响我们写过的

50:22.180 --> 50:23.180
好

50:23.180 --> 50:24.180
一个是什么

50:24.180 --> 50:25.180
蓝

50:25.180 --> 50:26.180
一个是什么

50:26.180 --> 50:27.180
女

50:27.180 --> 50:28.180
对吧

50:28.180 --> 50:29.180
那么它这里Value

50:29.180 --> 50:30.180
蓝我们

50:30.180 --> 50:31.180
知道我们系统里边

50:31.180 --> 50:32.180
用的蓝的是0

50:32.180 --> 50:33.180
女

50:33.180 --> 50:34.180
是1

50:34.180 --> 50:35.180
对吧

50:35.180 --> 50:36.180
蓝就只是这样子

50:36.180 --> 50:37.180
保存

50:37.180 --> 50:38.180
我们来看一下

50:38.180 --> 50:39.180
这边

50:39.180 --> 50:40.180
深层的界面

50:40.180 --> 50:41.180
你看是不是蓝和女

50:41.180 --> 50:42.180
对吧

50:42.180 --> 50:43.180
好

50:43.180 --> 50:44.180
咱们来试一下

50:44.180 --> 50:45.180
能不能得到一个正常的数据

50:45.180 --> 50:46.180
咱们主要是看

50:46.180 --> 50:47.180
观察它的数据

50:47.180 --> 50:50.180
学号A2CM

50:50.180 --> 50:51.180
点击

50:51.180 --> 50:52.180
你看

50:52.180 --> 50:53.180
是不是可以得到了

50:53.180 --> 50:54.180
仍然可以得到

50:54.180 --> 50:55.180
对吧

50:55.180 --> 50:56.180
那么这个东西

50:56.180 --> 50:57.180
它是不是也把它做了控制

50:57.180 --> 50:58.180
对不对

50:58.180 --> 50:59.180
也把它做了控制

50:59.180 --> 51:00.180
仍然可以得到

51:00.180 --> 51:01.180
蓝

51:01.180 --> 51:02.180
点击

51:02.180 --> 51:03.180
对吧

51:03.180 --> 51:04.180
这个是为0

51:04.180 --> 51:05.180
就这么简单

51:05.180 --> 51:06.180
就这么简单

51:09.180 --> 51:10.180
实际上

51:10.180 --> 51:11.180
它是这样子

51:11.180 --> 51:12.180
它堵的是你给它

51:12.180 --> 51:14.180
传递这个组件的Value值

51:14.180 --> 51:15.180
它堵的是这个东西

51:15.180 --> 51:16.180
堵的是你给它

51:16.180 --> 51:17.180
传的这个组件

51:17.180 --> 51:18.180
它的Value值

51:18.180 --> 51:19.180
控制的是这个东西

51:19.180 --> 51:20.180
你给它传的组件

51:20.180 --> 51:21.180
它会用

51:21.180 --> 51:22.180
把控制它的Value值

51:22.180 --> 51:24.180
就这么个意思

51:25.180 --> 51:26.180
然后注册的时间

51:26.180 --> 51:27.180
是1千几时间

51:29.180 --> 51:30.180
那我说到这

51:30.180 --> 51:31.180
我就顺便说一下

51:31.180 --> 51:32.180
比方说开关

51:32.180 --> 51:33.180
开关

51:33.180 --> 51:34.180
如果说你要用开关

51:34.180 --> 51:35.180
来做这个蓝和驴的话

51:35.180 --> 51:36.180
也可以

51:36.180 --> 51:37.180
我们用一下开关吧

51:37.180 --> 51:38.180
我们之前还没用过开关

51:38.180 --> 51:39.180
我们用一下开关

51:40.180 --> 51:41.180
在这种做法里面

51:41.180 --> 51:42.180
这种做法没问题

51:42.180 --> 51:43.180
都一样的

51:44.180 --> 51:45.180
开关

51:45.180 --> 51:46.180
那么现在我们

51:46.180 --> 51:47.180
就不要用radio了

51:47.180 --> 51:48.180
用switch

51:48.180 --> 51:49.180
它里面有开关

51:50.180 --> 51:51.180
咱们用开关

51:51.180 --> 51:54.940
开关这里要出一点小问题

51:54.940 --> 51:56.940
switch

51:56.940 --> 51:57.940
switch这个组件

51:57.940 --> 51:58.940
这个组件

51:58.940 --> 51:59.940
我们来看一下

52:00.940 --> 52:01.940
这个组件有一些

52:01.940 --> 52:03.940
有一些东西可以设置的

52:03.940 --> 52:04.940
可以设置的

52:05.940 --> 52:06.940
首先这里有一个

52:09.940 --> 52:10.940
那啥呢

52:10.940 --> 52:11.940
我看一下

52:12.940 --> 52:13.940
它这里边有一个

52:16.890 --> 52:17.890
带文字的

52:17.890 --> 52:18.890
我们要做一个带文字的开关

52:19.890 --> 52:20.890
就是switch

52:20.890 --> 52:21.890
这个切个子

52:22.890 --> 52:23.890
当它选中的时候

52:23.890 --> 52:24.890
就是蓝

52:24.890 --> 52:25.890
没有选中就是驴

52:25.890 --> 52:26.890
切个子

52:27.890 --> 52:28.890
开关来做性别

52:28.890 --> 52:29.890
实际上是不太好的

52:29.890 --> 52:30.890
不太好的

52:30.890 --> 52:31.890
我就说一下这个例子

52:31.890 --> 52:32.890
说一下这么一个例子

52:33.890 --> 52:34.890
这是蓝

52:35.890 --> 52:36.890
然后

52:37.890 --> 52:38.890
应该是一个on切个子

52:39.890 --> 52:40.890
这里是女

52:40.890 --> 52:45.500
主要是说一下

52:45.500 --> 52:46.500
这个开关

52:46.500 --> 52:47.500
它带来的一些问题

52:48.500 --> 52:49.500
都可以用直结束了

52:50.500 --> 52:51.500
可以用直结束

52:52.500 --> 52:53.500
算了算了

52:53.500 --> 52:54.500
我还是觉得

52:54.500 --> 52:56.500
蓝和女用这个东西不太好

52:56.500 --> 52:57.500
我刚才换一个

52:57.500 --> 52:58.500
换成那个

52:58.500 --> 53:00.500
是否是管理员

53:00.500 --> 53:01.500
把这个复制一下

53:01.500 --> 53:03.500
换成是否是管理员

53:03.500 --> 53:04.500
回到之前

53:04.500 --> 53:05.500
还是用那个

53:05.500 --> 53:07.500
还是用那个单圈框

53:07.500 --> 53:08.500
单圈框

53:09.500 --> 53:12.500
蓝和女实在是受不了用这个玩意

53:13.500 --> 53:15.500
这里是否是管理员

53:15.500 --> 53:17.500
是否是管理员

53:18.500 --> 53:20.500
或者是是否是班长

53:20.500 --> 53:22.500
这个东西可以用开关

53:22.500 --> 53:24.500
这个可以用开关

53:24.500 --> 53:25.500
意思

53:25.500 --> 53:26.500
班长打说的

53:28.500 --> 53:29.500
班长打说的

53:29.500 --> 53:30.500
我的天

53:32.500 --> 53:33.500
翻译

53:33.500 --> 53:38.180
班长

53:40.560 --> 53:41.560
Monitor

53:41.560 --> 53:42.560
Monitor

53:42.560 --> 53:43.560
Monitor

53:43.560 --> 53:44.560
不显示器吗

53:45.560 --> 53:47.560
那意思Monitor

53:47.560 --> 53:48.560
Monica

53:48.560 --> 53:49.560
Monitor

53:50.560 --> 53:51.560
这里我们用Switch

53:51.560 --> 53:53.560
用这个开关

53:53.560 --> 53:54.560
Switch

53:55.560 --> 53:56.560
这个Switch

53:56.560 --> 53:57.560
这里就是

53:57.560 --> 53:58.560
是和否

53:58.560 --> 53:59.560
对吧

53:59.560 --> 54:00.560
是和否

54:00.560 --> 54:01.560
或者说我们都不用打这个字

54:01.560 --> 54:02.560
对吧

54:02.560 --> 54:03.560
不用打这个字了

54:03.560 --> 54:04.560
就这样子就行了

54:04.560 --> 54:05.560
班长

54:05.560 --> 54:07.560
先让我们看一下我们这边

54:07.560 --> 54:08.560
刷新一下

54:10.560 --> 54:11.560
会不会保这个错

54:12.560 --> 54:16.060
解析接受失败

54:16.060 --> 54:18.060
这应该是网络错误

54:18.060 --> 54:19.060
我们请求API接口

54:19.060 --> 54:21.060
但是我们现在没有请求API接口

54:22.060 --> 54:23.060
API接口这两天在维护

54:23.060 --> 54:24.060
系统在维护

54:24.060 --> 54:26.060
所以说会有些问题

54:26.060 --> 54:28.060
一户而好一户不行了

54:28.060 --> 54:30.060
那么现在访问不了API接口

54:30.060 --> 54:32.060
就是他在查询学生

54:32.060 --> 54:35.060
现在我们没有让他查询学生

54:35.060 --> 54:36.060
应该是我们之前

54:36.060 --> 54:38.060
模型这里写的一个问题

54:38.060 --> 54:40.060
应该是模型这里写的一个问题

54:40.060 --> 54:41.060
我看一下

54:41.060 --> 54:42.060
模型这里

54:43.060 --> 54:44.060
subscriptions

54:47.060 --> 54:49.060
明白了明白了

54:49.060 --> 54:50.060
如果

54:50.060 --> 54:51.060
看一下

54:51.060 --> 54:52.060
如果说

54:52.060 --> 54:53.060
no location

54:53.060 --> 54:54.060
passname

54:54.060 --> 54:55.060
它不等于写钢

54:55.060 --> 54:57.060
students的话

54:57.060 --> 54:58.060
等于students的话

54:58.060 --> 54:59.060
他会查询学生

55:00.060 --> 55:01.060
但是我们现在没有

55:01.060 --> 55:03.060
没有让他等于

55:03.060 --> 55:04.060
现在的location

55:04.060 --> 55:06.060
它不是这个地址

55:06.060 --> 55:08.060
我输出一下

55:08.060 --> 55:09.060
我们现在的location

55:09.060 --> 55:13.020
它不是这个地址

55:13.020 --> 55:14.020
对

55:14.020 --> 55:15.020
location是这个地址

55:15.020 --> 55:17.020
它不会查询学生的

55:17.020 --> 55:19.020
它是哪儿在查询学生

55:19.020 --> 55:20.020
为什么它会导致

55:20.020 --> 55:22.020
触发查询学生的

55:22.020 --> 55:23.020
这里我们要调试一下

55:23.020 --> 55:25.020
这是我们之前留下的问题

55:25.020 --> 55:27.020
open in the panel

55:27.020 --> 55:29.020
导向我们的redux

55:29.020 --> 55:31.020
我们把这个调试一下

55:31.020 --> 55:32.020
这里边它

55:33.020 --> 55:35.020
set to login user

55:35.020 --> 55:37.020
这个东西倒是运行的

55:37.020 --> 55:38.020
这个没问题

55:38.020 --> 55:39.020
lesson

55:42.580 --> 55:43.580
我看一下

55:44.580 --> 55:49.150
它一开始就触发了这个

55:49.150 --> 55:51.150
一开始触发了这个

55:51.150 --> 55:54.680
我看一下

55:54.680 --> 55:55.680
在这里能不能找到信息

55:55.680 --> 55:59.120
是哪里在触发

55:59.120 --> 56:04.610
哪里在触发

56:04.610 --> 56:05.610
你现在看到的东西

56:05.610 --> 56:06.610
都是深入到这个

56:06.610 --> 56:08.610
就是地址元代码了

56:10.610 --> 56:13.610
是哪个地方在触发这个

56:13.610 --> 56:15.610
我没有去触发这个一个信

56:16.610 --> 56:18.610
我们在这里输出一个

56:18.610 --> 56:20.610
我们在这里输出一下

56:22.610 --> 56:27.480
对啊

56:27.480 --> 56:28.480
没有输出

56:28.480 --> 56:30.480
说明这个代码是没有运行的

56:30.480 --> 56:32.480
这个代码是没有运行的

56:32.480 --> 56:34.480
这个代码没有运行的话

56:34.480 --> 56:35.480
是哪里在触发的

56:35.480 --> 56:36.480
fake students

56:41.200 --> 56:42.200
我回一下

56:42.200 --> 56:44.200
之前是哪里还在触发

56:44.200 --> 56:45.200
除了

56:45.200 --> 56:47.200
因为我这里只监听的是

56:47.200 --> 56:48.200
地址变化

56:48.200 --> 56:50.200
当地址去访问这个地址的时候

56:50.200 --> 56:52.200
才会去触发

56:52.200 --> 56:53.200
获取学生

56:53.200 --> 56:54.200
其他情况下

56:54.200 --> 56:55.200
我们是没有触发

56:55.200 --> 56:56.200
获取学生的

56:57.200 --> 57:00.200
哪个地方还在触发获取学生

57:00.200 --> 57:01.200
layout里面

57:01.200 --> 57:02.200
不对啊

57:02.200 --> 57:03.200
layout里面有没有获取

57:03.200 --> 57:04.200
我们现在访问的是

57:04.200 --> 57:05.200
add这个页面

57:05.200 --> 57:06.200
这个页面

57:07.200 --> 57:08.200
没有

57:08.200 --> 57:09.200
它为什么会去触发

57:09.200 --> 57:10.200
获取学生

57:10.200 --> 57:12.200
它会去触发这个一个信

57:13.200 --> 57:14.200
这个一个信是哪个

57:14.200 --> 57:17.200
是谁在触发这个一个信

57:19.770 --> 57:20.770
我看看

57:20.770 --> 57:21.770
是谁

57:21.770 --> 57:22.770
到底是谁

57:22.770 --> 57:23.770
因为我们运行的是

57:23.770 --> 57:24.770
这个页面

57:25.770 --> 57:27.770
这个页面的话

57:28.770 --> 57:32.100
运行到这个页面

57:33.100 --> 57:35.100
这个页面里边

57:35.100 --> 57:37.100
运行的是

57:37.100 --> 57:38.100
运行到这个

57:38.100 --> 57:39.100
那么我们把这个去掉了

57:39.100 --> 57:40.100
还是跟这个有关系

57:40.100 --> 57:42.100
那么我们再调试这个错误

57:42.100 --> 57:43.100
调试这个问题

57:44.100 --> 57:45.100
也跟这个还没关系

57:46.100 --> 57:47.100
也要跟这个

57:47.100 --> 57:48.100
它还是触发了

57:48.100 --> 57:49.100
还没

57:49.100 --> 57:50.100
这里还是触发了

57:51.100 --> 57:52.100
我们这里

57:52.100 --> 57:53.100
关掉

57:53.100 --> 57:54.100
重新来一次

57:54.100 --> 57:55.100
再来一次

57:55.100 --> 57:56.100
还是触发了

57:56.100 --> 57:57.100
还是触发了

57:57.100 --> 57:58.100
所以说跟这个主线没关系

57:59.100 --> 58:00.100
那么我们继续调试

58:00.100 --> 58:02.100
看一下到底是哪里的问题

58:06.100 --> 58:07.100
跟这里肯定没关系

58:07.100 --> 58:09.100
跟我们这里肯定没关系

58:10.100 --> 58:11.100
再刷新

58:11.100 --> 58:12.100
它还是会触发

58:14.100 --> 58:15.100
那么看一下

58:15.100 --> 58:16.100
跟内奥池里边有没有关系

58:17.100 --> 58:18.100
内奥池里边

58:18.100 --> 58:19.100
我们先啥都不写

58:19.100 --> 58:20.100
这两个都不要

58:20.100 --> 58:21.100
都不要

58:21.100 --> 58:22.100
我们看一下

58:22.100 --> 58:23.100
跟内奥池里边有没有关系

58:24.100 --> 58:25.100
它还是会去触发

58:27.100 --> 58:28.100
还是会去触发这个

58:29.100 --> 58:30.100
触发非计学生

58:31.100 --> 58:33.100
它干嘛要去触发非计学生

58:34.100 --> 58:35.100
干嘛要触发呢

58:36.100 --> 58:38.800
我们想一想

58:40.800 --> 58:41.800
还有哪里在做这个事呢

58:46.580 --> 58:47.580
服务

58:50.660 --> 58:51.660
跟服务没关系

58:51.660 --> 58:52.660
它关键是现在触发了

58:52.660 --> 58:53.660
挨个型

58:53.660 --> 58:54.660
它为什么会触发挨个型

58:55.660 --> 58:56.660
这个问题有点神奇

58:57.660 --> 58:58.660
这个问题有点神奇

58:59.660 --> 59:01.660
哪里去触发挨个型的呢

59:02.660 --> 59:05.680
内奥池

59:05.680 --> 59:06.680
跟这边也没关系

59:06.680 --> 59:07.680
我刚才都把这个

59:07.680 --> 59:08.680
Header

59:08.680 --> 59:09.680
内奥池去了

59:09.680 --> 59:10.680
跟那些主件都没有关系

59:10.680 --> 59:11.680
都没有关系

59:14.120 --> 59:16.120
它是在哪里去触发这个挨个型的呢

59:18.750 --> 59:19.750
丢点Table

59:20.750 --> 59:22.750
这个地方我们要挨在这找了

59:22.750 --> 59:24.750
得挨在这找

59:24.750 --> 59:26.750
比方说找这个

59:27.750 --> 59:28.750
Students

59:29.750 --> 59:31.750
因为我们希望查询学生的话

59:31.750 --> 59:32.750
是在查询这个

59:32.750 --> 59:33.750
随便Table Container

59:33.750 --> 59:35.750
是在这里查询学生的

59:35.750 --> 59:39.190
是在这里查询在查询学生

59:39.190 --> 59:44.100
Set Condition

59:45.100 --> 59:47.100
设置查询条件

59:48.100 --> 59:50.100
重新设置查询条件

59:51.100 --> 59:52.100
但是这里没有触发

59:52.100 --> 59:54.100
Set Condition这个

59:54.100 --> 59:56.100
它是直接触发的Fake Students

59:57.100 --> 59:59.100
它是直接触发的Fake Students

01:00:00.100 --> 01:00:02.100
我要好好看一下啊

01:00:03.100 --> 01:00:04.100
哦明白了

01:00:04.100 --> 01:00:05.100
我之前写了这么一个玩意儿

01:00:05.100 --> 01:00:06.100
Students Copy

01:00:06.100 --> 01:00:08.100
我们之前为了给大家看

01:00:08.100 --> 01:00:09.100
演示个小我写了这么一个玩意儿

01:00:09.100 --> 01:00:11.100
这个玩意儿它仍然会加到这个

01:00:11.100 --> 01:00:13.100
加到这个模型里面去

01:00:13.100 --> 01:00:15.100
把这个伤得好靠

01:00:15.100 --> 01:00:16.100
就这个东西

01:00:16.100 --> 01:00:17.100
因为刚才这个东西

01:00:17.100 --> 01:00:19.100
以前我们还没有用那个subscribe

01:00:19.100 --> 01:00:20.100
回不行的时候

01:00:20.100 --> 01:00:21.100
一开始就触发了一次对吧

01:00:21.100 --> 01:00:23.100
就是靠眼我说什么

01:00:23.100 --> 01:00:24.100
为什么会触发那个

01:00:24.100 --> 01:00:25.100
就这个问题

01:00:25.100 --> 01:00:26.100
其他没啥

01:00:26.100 --> 01:00:27.100
那么这里呢

01:00:27.100 --> 01:00:28.100
我们看到还有一个错误

01:00:28.100 --> 01:00:29.100
主要是说这个错误

01:00:29.100 --> 01:00:31.100
刚才都是以前遗留的问题

01:00:32.100 --> 01:00:33.100
不是我们单码问题

01:00:33.100 --> 01:00:34.100
之前没删掉

01:00:34.100 --> 01:00:35.100
就说什么错误呢

01:00:36.100 --> 01:00:37.100
第一个没什么说的

01:00:37.100 --> 01:00:38.100
我现在说过了

01:00:38.100 --> 01:00:39.100
内部的他没改过来

01:00:39.100 --> 01:00:40.100
下个版本移除

01:00:41.100 --> 01:00:42.100
第二个问题是我们自己的问题

01:00:43.100 --> 01:00:44.100
他说什么意思呢

01:00:44.100 --> 01:00:46.100
他说你这个给我了

01:00:46.100 --> 01:00:47.100
一个switch 组建

01:00:47.100 --> 01:00:48.100
你看我之前

01:00:48.100 --> 01:00:49.100
都是工作好好的

01:00:49.100 --> 01:00:50.100
工作的好好的

01:00:50.100 --> 01:00:51.100
但是你现在给我了

01:00:51.100 --> 01:00:53.100
一个switch 组建的时候

01:00:53.100 --> 01:00:54.100
我出了一些问题

01:00:55.100 --> 01:00:56.100
你给我switch 组建

01:00:56.100 --> 01:00:57.100
我就出问题

01:00:57.100 --> 01:00:58.100
你看radio group

01:00:58.100 --> 01:00:59.100
没有任何问题

01:00:59.100 --> 01:01:00.100
你给我switch 就出了问题

01:01:00.100 --> 01:01:01.100
为什么问题有问题呢

01:01:01.100 --> 01:01:02.100
他说

01:01:02.100 --> 01:01:06.100
Value is not validated problem

01:01:06.100 --> 01:01:07.100
Do you mean checked

01:01:07.100 --> 01:01:10.610
他说Value

01:01:10.610 --> 01:01:12.610
不是一个有效的属性

01:01:14.610 --> 01:01:15.610
你是不是想要使用

01:01:15.610 --> 01:01:16.610
checked属性了

01:01:16.610 --> 01:01:17.610
啥意思啊

01:01:18.610 --> 01:01:19.610
啥意思啊

01:01:19.610 --> 01:01:21.610
是因为我们刚才就说了

01:01:21.610 --> 01:01:22.610
这个gauge field decorator

01:01:22.610 --> 01:01:24.610
它的内部原理是什么了

01:01:24.610 --> 01:01:26.610
是你把它会

01:01:26.610 --> 01:01:29.610
把你给它的这个组建

01:01:29.610 --> 01:01:31.610
让它的Value只受控

01:01:32.610 --> 01:01:33.610
它会控制它的Value只

01:01:33.610 --> 01:01:34.610
你看把这个组建

01:01:34.610 --> 01:01:35.610
你看我们之前写到

01:01:35.610 --> 01:01:36.610
这些组建

01:01:36.610 --> 01:01:37.610
是不是把Value

01:01:37.610 --> 01:01:39.610
只给它设置为一个东西

01:01:39.610 --> 01:01:40.610
受控

01:01:40.610 --> 01:01:42.610
然后它该注册 on-chain 级事件

01:01:42.610 --> 01:01:44.610
是不是该做这么一些事情

01:01:44.610 --> 01:01:45.610
让它受控

01:01:46.610 --> 01:01:48.610
受控我们才能得到数据

01:01:48.610 --> 01:01:49.610
对不对

01:01:49.610 --> 01:01:51.610
它内部是用这种模式来做

01:01:51.610 --> 01:01:52.610
但是遗憾的是

01:01:52.610 --> 01:01:54.610
你给它这个switch 组建

01:01:54.610 --> 01:01:55.610
它根本就没有Value 组建

01:01:55.610 --> 01:01:57.610
所以它控制不了它

01:01:57.610 --> 01:01:58.610
它Switch 组建

01:01:58.610 --> 01:01:59.610
它没有Value 组建

01:01:59.610 --> 01:02:00.610
控制不了它

01:02:00.610 --> 01:02:02.610
它得到数据有容易出问题

01:02:02.610 --> 01:02:03.610
那么我们来看一下

01:02:03.610 --> 01:02:04.610
这个Switch 组建

01:02:04.610 --> 01:02:05.610
它里边有没有Value 组建

01:02:05.610 --> 01:02:06.610
是不是没有

01:02:06.610 --> 01:02:07.610
它是什么数据

01:02:07.610 --> 01:02:08.610
是不是切个词数据

01:02:08.610 --> 01:02:09.610
对吧

01:02:09.610 --> 01:02:10.610
那么也就是说

01:02:10.610 --> 01:02:12.610
你现在要控制的是啥

01:02:12.610 --> 01:02:13.610
控制的是切个词数据

01:02:13.610 --> 01:02:16.610
而不是Value数据

01:02:16.610 --> 01:02:17.610
那怎么办

01:02:18.610 --> 01:02:19.610
那怎么办

01:02:19.610 --> 01:02:20.610
好

01:02:20.610 --> 01:02:21.610
你看哪里看一下这边

01:02:21.610 --> 01:02:22.610
forum 表单的

01:02:22.610 --> 01:02:24.610
就是它的API 稳当

01:02:24.610 --> 01:02:26.610
它说到这个问题

01:02:26.610 --> 01:02:27.610
forum 表单

01:02:27.610 --> 01:02:29.610
咱们往下找

01:02:30.610 --> 01:02:31.610
往下找

01:02:32.610 --> 01:02:33.610
这个就是

01:02:34.610 --> 01:02:35.610
找这个

01:02:35.610 --> 01:02:36.610
找这个地方

01:02:36.610 --> 01:02:38.610
找这个Gatefield Decorator

01:02:38.610 --> 01:02:39.610
因为是通过这个方法

01:02:39.610 --> 01:02:40.610
来让它受控的

01:02:40.610 --> 01:02:41.610
那么这个方法里边

01:02:41.610 --> 01:02:43.610
一定有方式来解决这个问题

01:02:43.610 --> 01:02:44.610
所以我们就查到这个东西

01:02:44.610 --> 01:02:45.610
就行了

01:02:45.610 --> 01:02:46.610
查到这个

01:02:46.610 --> 01:02:47.610
我们找一找

01:02:47.610 --> 01:02:48.610
它说

01:02:48.610 --> 01:02:50.610
Gatefield Decorator

01:02:50.610 --> 01:02:51.610
是用于和表单进行

01:02:51.610 --> 01:02:52.610
双向绑定

01:02:52.610 --> 01:02:54.610
就是跟数据进行绑定的

01:02:54.610 --> 01:02:56.610
然后它要想建下方描述

01:02:56.610 --> 01:02:57.610
我们看下面

01:02:57.610 --> 01:02:59.610
下面它有具体的描述

01:02:59.610 --> 01:03:00.610
我们继续往下查

01:03:00.610 --> 01:03:01.610
查到了

01:03:01.610 --> 01:03:02.610
就在这

01:03:02.610 --> 01:03:04.610
Gatefield Decorator

01:03:04.610 --> 01:03:06.610
这个函数

01:03:06.610 --> 01:03:08.610
这个函数里边

01:03:08.610 --> 01:03:09.610
我们之前

01:03:09.610 --> 01:03:10.610
只写了一个函数

01:03:10.610 --> 01:03:11.610
就是ID

01:03:11.610 --> 01:03:13.610
就是它对应的属性名

01:03:13.610 --> 01:03:15.610
就对应到这个属性名

01:03:15.610 --> 01:03:16.610
那么它其实还有

01:03:16.610 --> 01:03:17.610
第二个函数

01:03:17.610 --> 01:03:19.610
就是Option 是配置

01:03:19.610 --> 01:03:20.610
它还有第二个

01:03:20.610 --> 01:03:22.610
函数可以进行配置的

01:03:22.610 --> 01:03:24.610
那么这个配置

01:03:24.610 --> 01:03:26.610
这个配置怎么写呢

01:03:26.610 --> 01:03:27.610
这个配置的话

01:03:27.610 --> 01:03:29.610
你看一下这

01:03:29.610 --> 01:03:30.610
这个配置的话

01:03:30.610 --> 01:03:32.610
我们这里是不是

01:03:32.610 --> 01:03:34.610
有很多很多的配置

01:03:34.610 --> 01:03:36.610
其中

01:03:36.610 --> 01:03:38.610
其中有两个配置

01:03:38.610 --> 01:03:40.610
可以让我们解决这个问题

01:03:40.610 --> 01:03:41.610
第一个配置

01:03:41.610 --> 01:03:42.610
就是说

01:03:42.610 --> 01:03:43.610
它默认情况下

01:03:43.610 --> 01:03:47.610
让它受控的是Value属性

01:03:47.610 --> 01:03:48.610
那么

01:03:48.610 --> 01:03:49.610
能不能

01:03:49.610 --> 01:03:50.610
换一个属性名字呢

01:03:50.610 --> 01:03:52.610
可以通过这个配置来搞定

01:03:52.610 --> 01:03:54.610
叫做Value Proper Name

01:03:54.610 --> 01:03:57.610
就是我们控制的是哪个属性

01:03:57.610 --> 01:03:58.610
控制的是哪个属性

01:03:58.610 --> 01:03:59.610
现在控制的是

01:03:59.610 --> 01:04:00.610
哪个属性

01:04:00.610 --> 01:04:02.610
而不是Value属性

01:04:02.610 --> 01:04:03.610
明白吗

01:04:03.610 --> 01:04:05.610
就是这个配置的意思

01:04:05.610 --> 01:04:07.610
要理解这个意思

01:04:07.610 --> 01:04:08.610
它默认情况下

01:04:08.610 --> 01:04:10.610
控制的是它的Value属性

01:04:10.610 --> 01:04:11.610
读的是它的Value属性

01:04:11.610 --> 01:04:12.610
因为它鬼知道

01:04:12.610 --> 01:04:13.610
你给它什么逐渐

01:04:13.610 --> 01:04:15.610
它也不知道你给它什么逐渐

01:04:15.610 --> 01:04:17.610
它也不可能说

01:04:17.610 --> 01:04:18.610
用if else判断

01:04:18.610 --> 01:04:19.610
你给我的是文闷框

01:04:19.610 --> 01:04:20.610
我就控制Value

01:04:20.610 --> 01:04:22.610
你给我的是switch

01:04:22.610 --> 01:04:23.610
我就控制切克程

01:04:23.610 --> 01:04:24.610
它不能这样做

01:04:24.610 --> 01:04:25.610
为什么

01:04:25.610 --> 01:04:26.610
这样做就写死了

01:04:26.610 --> 01:04:27.610
将来我们说

01:04:27.610 --> 01:04:28.610
要自己去

01:04:28.610 --> 01:04:29.610
比方说我们这里是一个

01:04:29.610 --> 01:04:31.610
至经济的组件怎么办

01:04:31.610 --> 01:04:32.610
又没法了

01:04:32.610 --> 01:04:35.610
所以说它这里没法这样做

01:04:35.610 --> 01:04:36.610
因此它这里

01:04:36.610 --> 01:04:37.610
通过这个配置可以改

01:04:37.610 --> 01:04:38.610
Value Proper Name

01:04:38.610 --> 01:04:40.610
就是它控制的属性名字是什么

01:04:40.610 --> 01:04:41.610
切克程

01:04:41.610 --> 01:04:44.610
控制这个组件的切克程属性

01:04:44.610 --> 01:04:45.610
什么个意思

01:04:45.610 --> 01:04:47.610
然后还有一个配置

01:04:47.610 --> 01:04:49.610
叫做Trigger

01:04:49.610 --> 01:04:50.610
Trigger就是什么

01:04:50.610 --> 01:04:51.610
当这个组件

01:04:51.610 --> 01:04:53.610
什么事件发生的时候

01:04:53.610 --> 01:04:55.610
我要重新设置状态

01:04:55.610 --> 01:04:57.610
一般是unchained

01:04:57.610 --> 01:04:58.610
无论就是unchained

01:04:58.610 --> 01:04:59.610
当然如果说

01:04:59.610 --> 01:05:00.610
你的组件

01:05:00.610 --> 01:05:01.610
事件名字不是unchained的话

01:05:01.610 --> 01:05:03.610
那么你要通过这个配置

01:05:03.610 --> 01:05:05.610
换一下它的事件名字

01:05:05.610 --> 01:05:06.610
就这么个意思

01:05:06.610 --> 01:05:08.610
Trigger倒是用的少一点

01:05:08.610 --> 01:05:10.610
但是Value Proper Name

01:05:10.610 --> 01:05:11.610
要注意

01:05:11.610 --> 01:05:12.610
可以通过它来配置

01:05:12.610 --> 01:05:13.610
控制的属性名

01:05:13.610 --> 01:05:14.610
那么现在

01:05:14.610 --> 01:05:15.610
改了过后

01:05:15.610 --> 01:05:16.610
我们现在再看

01:05:19.610 --> 01:05:20.610
你看那个错误是不变了

01:05:20.610 --> 01:05:21.610
对吧

01:05:21.610 --> 01:05:22.610
我们刚才的错误不见了

01:05:22.610 --> 01:05:23.610
现在我们再看

01:05:23.610 --> 01:05:24.610
学号

01:05:24.610 --> 01:05:26.610
然后姓名

01:05:26.610 --> 01:05:27.610
姓别

01:05:27.610 --> 01:05:28.610
班长

01:05:30.610 --> 01:05:31.610
点提交

01:05:31.610 --> 01:05:32.610
你看

01:05:32.610 --> 01:05:33.610
是不是

01:05:33.610 --> 01:05:36.610
Ease Monitor

01:05:36.610 --> 01:05:38.610
去掉再提交

01:05:38.610 --> 01:05:39.610
Ease Monitor Force

01:05:39.610 --> 01:05:40.610
是不是得到数据了

01:05:40.610 --> 01:05:41.610
对吧

01:05:41.610 --> 01:05:42.610
班长数据

01:05:42.610 --> 01:05:44.610
API里边也用不到

01:05:45.610 --> 01:05:46.610
这就是

01:05:46.610 --> 01:05:48.610
这个Switch

01:05:49.610 --> 01:05:50.610
好 咱们再来看

01:05:50.610 --> 01:05:51.610
还有什么数据

01:05:51.610 --> 01:05:52.610
还有就是

01:05:52.610 --> 01:05:54.610
出生连份

01:05:54.610 --> 01:05:55.610
出生连份

01:05:55.610 --> 01:05:56.610
比方说

01:05:56.610 --> 01:05:58.610
出生连份这一块

01:05:58.610 --> 01:05:59.610
我希望

01:05:59.610 --> 01:06:01.610
它是一个下拉列表

01:06:02.610 --> 01:06:04.610
咱们希望它是一个下拉列表

01:06:04.610 --> 01:06:05.610
来

01:06:05.610 --> 01:06:06.610
我们来做一下下拉列表的例子

01:06:07.610 --> 01:06:10.180
这里

01:06:10.180 --> 01:06:11.180
就是出生连份

01:06:13.620 --> 01:06:14.620
这里是

01:06:14.620 --> 01:06:15.620
叫什么

01:06:15.620 --> 01:06:16.620
叫Burse

01:06:16.620 --> 01:06:17.620
属性名叫Burse

01:06:17.620 --> 01:06:18.620
那么这里

01:06:18.620 --> 01:06:19.620
这里就不用控制它了

01:06:19.620 --> 01:06:20.620
不用控制它了

01:06:20.620 --> 01:06:21.620
那么这里边

01:06:21.620 --> 01:06:22.620
传一个啥呢

01:06:22.620 --> 01:06:23.620
是不是传一个下拉列表

01:06:23.620 --> 01:06:24.620
下拉列表

01:06:24.620 --> 01:06:26.620
它在它里边是一个Snex

01:06:26.620 --> 01:06:30.080
下拉列表

01:06:32.080 --> 01:06:33.080
好

01:06:33.080 --> 01:06:34.080
下拉列表里边

01:06:34.080 --> 01:06:35.080
填啥呢

01:06:35.080 --> 01:06:36.080
我们看一下

01:06:36.080 --> 01:06:37.080
这个就是

01:06:37.080 --> 01:06:39.080
咱们这里的文档

01:06:40.080 --> 01:06:41.080
这里有下拉列表

01:06:41.080 --> 01:06:42.080
Snex

01:06:42.080 --> 01:06:43.080
选择器

01:06:45.080 --> 01:06:47.080
基本使用

01:06:47.080 --> 01:06:48.080
基本使用的方式

01:06:48.080 --> 01:06:50.080
就是你使用一个Snex

01:06:50.080 --> 01:06:51.080
Snex里边使用Option

01:06:51.080 --> 01:06:53.080
这个玩意儿使用的方式

01:06:53.080 --> 01:06:55.080
是不是跟那个啥

01:06:55.080 --> 01:06:56.080
那个是不是一样的

01:06:56.080 --> 01:06:57.080
跟那个

01:06:57.080 --> 01:06:59.080
普通的ATM元素

01:06:59.080 --> 01:07:00.080
是不是一样的

01:07:01.080 --> 01:07:02.080
出生的年份这里

01:07:02.080 --> 01:07:04.080
比方说我们这里就

01:07:04.080 --> 01:07:06.080
1980年

01:07:06.080 --> 01:07:07.080
到

01:07:07.080 --> 01:07:08.080
2010年

01:07:08.080 --> 01:07:10.080
到2010年之间

01:07:10.080 --> 01:07:11.080
那我们肯定不会熟悉

01:07:11.080 --> 01:07:12.080
对吧

01:07:12.080 --> 01:07:13.080
是不是肯定不会熟悉

01:07:13.080 --> 01:07:15.080
我们可以用一个循环

01:07:15.080 --> 01:07:17.080
来生成

01:07:17.080 --> 01:07:18.080
来生成

01:07:18.080 --> 01:07:19.080
好

01:07:19.080 --> 01:07:20.080
我们这里就

01:07:20.080 --> 01:07:21.080
写上在这里

01:07:21.080 --> 01:07:22.080
生成

01:07:22.080 --> 01:07:23.080
生成一个Option

01:07:23.080 --> 01:07:25.080
CreateOption

01:07:25.080 --> 01:07:28.390
CreateOption

01:07:28.390 --> 01:07:29.390
那么这个Option

01:07:29.390 --> 01:07:30.390
我们还要倒入进来

01:07:30.390 --> 01:07:32.390
我们得把这个Option倒入进来

01:07:32.390 --> 01:07:33.390
Option是在Snex里边

01:07:33.390 --> 01:07:34.390
结构出来的

01:07:34.390 --> 01:07:35.390
所以说我们这里

01:07:35.390 --> 01:07:37.390
直接可以用Snex.Option

01:07:37.390 --> 01:07:38.390
这里

01:07:38.390 --> 01:07:40.390
我们就写这么一个数组

01:07:40.390 --> 01:07:41.390
Options

01:07:41.390 --> 01:07:43.390
写这么一个数组

01:07:43.390 --> 01:07:44.390
循环

01:07:45.390 --> 01:07:48.390
i等于1980

01:07:49.390 --> 01:07:50.390
80

01:07:50.390 --> 01:07:51.390
i

01:07:51.390 --> 01:07:54.390
小于等于2010

01:07:54.390 --> 01:07:56.390
i++

01:07:56.390 --> 01:07:57.390
每循环一次

01:07:57.390 --> 01:07:58.390
是不是Option

01:07:58.390 --> 01:07:59.390
是数组里来加一下

01:07:59.390 --> 01:08:00.390
对吧

01:08:00.390 --> 01:08:01.390
加什么

01:08:01.390 --> 01:08:02.390
是不是加一个

01:08:02.390 --> 01:08:03.390
Snex元素

01:08:03.390 --> 01:08:06.390
就是Snex.Option

01:08:08.390 --> 01:08:09.390
对吧

01:08:09.390 --> 01:08:10.390
对吧

01:08:10.390 --> 01:08:11.390
就要加这么一个东西

01:08:11.390 --> 01:08:13.390
里边的文本是啥呢

01:08:13.390 --> 01:08:15.390
文本是不是就是i

01:08:15.390 --> 01:08:16.390
对不对

01:08:16.390 --> 01:08:17.390
i

01:08:17.390 --> 01:08:18.390
多少年

01:08:18.390 --> 01:08:20.390
这里后面就写上个年

01:08:20.390 --> 01:08:21.390
1980年

01:08:21.390 --> 01:08:22.390
1981年

01:08:22.390 --> 01:08:23.390
2010年

01:08:23.390 --> 01:08:25.390
那么还有一个Vanu值

01:08:25.390 --> 01:08:26.390
对吧

01:08:26.390 --> 01:08:27.390
因为Vanu值

01:08:27.390 --> 01:08:28.390
才是最终选中的值

01:08:28.390 --> 01:08:29.390
Vanu值

01:08:29.390 --> 01:08:30.390
那么Vanu值呢

01:08:30.390 --> 01:08:31.390
就是i

01:08:31.390 --> 01:08:32.390
就是i

01:08:32.390 --> 01:08:33.390
我们把这个Options

01:08:33.390 --> 01:08:34.390
放进来

01:08:34.390 --> 01:08:35.390
放进来

01:08:35.390 --> 01:08:36.390
这里还要给个key

01:08:36.390 --> 01:08:37.390
给个key的话

01:08:37.390 --> 01:08:39.390
因为它是有多个

01:08:39.390 --> 01:08:41.390
给个key的话就用i

01:08:41.390 --> 01:08:42.390
我们把这个

01:08:42.390 --> 01:08:44.390
把这个然后返回

01:08:44.390 --> 01:08:46.390
返回Options

01:08:46.390 --> 01:08:47.390
return

01:08:47.390 --> 01:08:49.390
Options

01:08:49.390 --> 01:08:51.390
我们把这个

01:08:51.390 --> 01:08:52.390
createOptions

01:08:52.390 --> 01:08:54.390
createOptions放进来

01:08:54.390 --> 01:08:55.390
调问这个方法

01:08:55.390 --> 01:08:57.390
把得到了Options放进来

01:08:57.390 --> 01:08:58.390
保存

01:08:58.390 --> 01:08:59.390
你看一下

01:09:03.390 --> 01:09:07.390
createOptions

01:09:10.980 --> 01:09:11.980
好 出生年份

01:09:11.980 --> 01:09:12.980
你看 是不是出来了

01:09:12.980 --> 01:09:13.980
对吧 出来了

01:09:13.980 --> 01:09:15.980
一开始没有选中任何东西

01:09:15.980 --> 01:09:16.980
因为一开始

01:09:16.980 --> 01:09:17.980
它白六字没有

01:09:17.980 --> 01:09:18.980
对吧 白六字没有

01:09:18.980 --> 01:09:19.980
它没有选中任何东西

01:09:19.980 --> 01:09:20.980
那么现在我们再看一下

01:09:20.980 --> 01:09:21.980
再看一下

01:09:21.980 --> 01:09:22.980
一样的效果

01:09:22.980 --> 01:09:24.980
这些效果都是一样的

01:09:24.980 --> 01:09:25.980
都好说

01:09:25.980 --> 01:09:26.980
这里随便写一下

01:09:26.980 --> 01:09:28.980
姓名 学号

01:09:28.980 --> 01:09:29.980
你看

01:09:29.980 --> 01:09:30.980
Burse

01:09:30.980 --> 01:09:31.980
出来了

01:09:31.980 --> 01:09:32.980
Burse也出来了

01:09:32.980 --> 01:09:34.980
好 再继续看

01:09:34.980 --> 01:09:37.980
还有学生的手机号

01:09:37.980 --> 01:09:39.980
学生的手机号

01:09:39.980 --> 01:09:41.980
手机号这一块的话

01:09:41.980 --> 01:09:42.980
我们也是

01:09:42.980 --> 01:09:43.980
就用一个普通文明框

01:09:43.980 --> 01:09:44.980
就完事了

01:09:44.980 --> 01:09:47.870
学生的手机号

01:09:47.870 --> 01:09:48.870
这里

01:09:48.870 --> 01:09:49.870
我们写上一个

01:09:49.870 --> 01:09:53.630
学生的手机号

01:09:53.630 --> 01:09:54.630
好 手机号

01:09:54.630 --> 01:09:56.630
然后这里使用

01:09:56.630 --> 01:09:57.630
就是什么

01:09:58.630 --> 01:10:00.630
就用一个input就完事了

01:10:00.630 --> 01:10:01.630
这个很简单

01:10:01.630 --> 01:10:03.630
然后还有一个是什么

01:10:03.630 --> 01:10:05.630
还有一个是地址

01:10:05.630 --> 01:10:06.630
还有一个就是

01:10:06.630 --> 01:10:08.630
学生的柱子

01:10:08.630 --> 01:10:09.630
柱子的话

01:10:09.630 --> 01:10:11.630
我们用我们的方式就完事了

01:10:11.630 --> 01:10:12.630
柱子

01:10:12.630 --> 01:10:13.630
没了

01:10:13.630 --> 01:10:14.630
没了

01:10:14.630 --> 01:10:15.630
你看

01:10:15.630 --> 01:10:16.630
表单是不是就做出来了

01:10:16.630 --> 01:10:17.630
还有一个email

01:10:17.630 --> 01:10:18.630
郵箱

01:10:18.630 --> 01:10:19.630
email

01:10:19.630 --> 01:10:24.540
这里是email

01:10:24.540 --> 01:10:26.540
郵箱

01:10:26.540 --> 01:10:28.540
郵箱

01:10:28.540 --> 01:10:29.540
好

01:10:29.540 --> 01:10:30.540
好

01:10:30.540 --> 01:10:31.540
那么这里是不是就完事了

01:10:31.540 --> 01:10:32.540
对吧

01:10:32.540 --> 01:10:33.540
是不是完事了

01:10:33.540 --> 01:10:34.540
然后

01:10:34.540 --> 01:10:36.540
郵箱这一块的话

01:10:36.540 --> 01:10:37.540
那就差不多了

01:10:37.540 --> 01:10:38.540
就这样吧

01:10:38.540 --> 01:10:39.540
就这样

01:10:39.540 --> 01:10:40.540
就完事了

01:10:40.540 --> 01:10:42.540
我们不做

01:10:42.540 --> 01:10:43.540
做外的处理的

01:10:43.540 --> 01:10:44.540
就这样

01:10:44.540 --> 01:10:45.540
好 那么现在呢

01:10:45.540 --> 01:10:46.540
这个表单

01:10:46.540 --> 01:10:47.540
是不是就做完了

01:10:47.540 --> 01:10:48.540
对吧

01:10:48.540 --> 01:10:49.540
表单就做完了

01:10:49.540 --> 01:10:50.540
那么现在

01:10:50.540 --> 01:10:51.540
还涉及到一个问题

01:10:51.540 --> 01:10:52.540
就是

01:10:52.540 --> 01:10:53.540
现在我们提交的时候

01:10:53.540 --> 01:10:55.540
肯定是能提交出来

01:10:55.540 --> 01:10:56.540
得到一个对象

01:10:56.540 --> 01:10:57.540
这个肯定是没问题的

01:10:57.540 --> 01:10:58.540
刷新

01:10:59.540 --> 01:11:00.540
这里

01:11:00.540 --> 01:11:01.540
我们提交

01:11:01.540 --> 01:11:02.540
是不是可以得到一个对象

01:11:02.540 --> 01:11:03.540
对吧

01:11:03.540 --> 01:11:04.540
这些属性是不是都可以得到了

01:11:04.540 --> 01:11:05.540
但是呢

01:11:05.540 --> 01:11:06.540
你看

01:11:06.540 --> 01:11:07.540
现在有验证吗

01:11:07.540 --> 01:11:08.540
是不是没有验证

01:11:08.540 --> 01:11:09.540
那你这里

01:11:09.540 --> 01:11:10.540
比如说

01:11:10.540 --> 01:11:11.540
你郵箱

01:11:11.540 --> 01:11:12.540
你这里乱写个郵箱

01:11:12.540 --> 01:11:13.540
手机过乱写个手机

01:11:13.540 --> 01:11:14.540
是不是

01:11:14.540 --> 01:11:15.540
没有验证

01:11:15.540 --> 01:11:16.540
对不对

01:11:16.540 --> 01:11:17.540
没有验证

01:11:17.540 --> 01:11:18.540
有些东西是必填的

01:11:18.540 --> 01:11:19.540
对吧

01:11:19.540 --> 01:11:20.540
你得验证

01:11:20.540 --> 01:11:21.540
你得验证

01:11:21.540 --> 01:11:22.540
所以说

01:11:22.540 --> 01:11:23.540
现在我们还要搞定验证功能

01:11:23.540 --> 01:11:24.540
验证功能怎么搞定呢

01:11:24.540 --> 01:11:26.540
它是这样子的

01:11:26.540 --> 01:11:27.540
验证功能

01:11:27.540 --> 01:11:28.540
你需要在这

01:11:28.540 --> 01:11:29.540
就在这

01:11:29.540 --> 01:11:30.540
学

01:11:30.540 --> 01:11:32.540
就是在 get field decorator 里边

01:11:32.540 --> 01:11:33.540
第二个参数

01:11:33.540 --> 01:11:34.540
不是个配置吗

01:11:34.540 --> 01:11:35.540
我们刚才讲了

01:11:35.540 --> 01:11:37.540
可以配置各种各样东西

01:11:37.540 --> 01:11:38.540
刚才我们配置了这个东西

01:11:38.540 --> 01:11:40.540
它其中还有一个配置

01:11:40.540 --> 01:11:42.540
叫做 rules

01:11:42.540 --> 01:11:43.540
你看一下

01:11:44.540 --> 01:11:45.540
这里放

01:11:45.540 --> 01:11:46.540
表达里边

01:11:46.540 --> 01:11:47.540
要验证

01:11:47.540 --> 01:11:48.540
要跟你验证的话

01:11:48.540 --> 01:11:49.540
你肯定要告诉他

01:11:49.540 --> 01:11:50.540
这验证规则

01:11:50.540 --> 01:11:51.540
跟那个五又是一样的

01:11:51.540 --> 01:11:52.540
对吧

01:11:52.540 --> 01:11:53.540
跟五又是一样的

01:11:53.540 --> 01:11:55.540
你得给他验证规则

01:11:56.540 --> 01:11:57.540
看一下

01:11:57.540 --> 01:11:58.540
好

01:11:58.540 --> 01:11:59.540
那么这里边

01:11:59.540 --> 01:12:00.540
你看是不是一个 rules

01:12:00.540 --> 01:12:01.540
对吧

01:12:01.540 --> 01:12:02.540
Rules表示验证

01:12:02.540 --> 01:12:04.540
验证规则

01:12:04.540 --> 01:12:05.540
Rules

01:12:05.540 --> 01:12:06.540
那么这个规则规则

01:12:06.540 --> 01:12:07.540
跟五又是一样的

01:12:07.540 --> 01:12:08.540
基本上就是一样的

01:12:08.540 --> 01:12:09.540
那么它是一个数组

01:12:09.540 --> 01:12:10.540
数组里面

01:12:10.540 --> 01:12:12.540
每一项代表其中一条规则

01:12:12.540 --> 01:12:13.540
因为对每一个表单

01:12:13.540 --> 01:12:14.540
一项

01:12:14.540 --> 01:12:15.540
它可能有多个验证规则

01:12:15.540 --> 01:12:16.540
比方说

01:12:16.540 --> 01:12:18.540
它必填是一个验证规则

01:12:18.540 --> 01:12:19.540
并且它全部

01:12:19.540 --> 01:12:20.540
都必须是数字

01:12:20.540 --> 01:12:21.540
是一个验证规则

01:12:21.540 --> 01:12:22.540
对吧

01:12:22.540 --> 01:12:23.540
所以说像这一种

01:12:23.540 --> 01:12:24.540
都属于验证规则

01:12:24.540 --> 01:12:25.540
Rules

01:12:25.540 --> 01:12:26.540
那么Rules里边

01:12:26.540 --> 01:12:27.540
我们来看一下

01:12:27.540 --> 01:12:28.540
它说

01:12:28.540 --> 01:12:29.540
强健

01:12:29.540 --> 01:12:30.540
参考下方文档

01:12:30.540 --> 01:12:32.540
教验规则

01:12:32.540 --> 01:12:33.540
来吧

01:12:33.540 --> 01:12:34.540
我们来看一下

01:12:34.540 --> 01:12:35.540
那么这里边有哪些东西

01:12:35.540 --> 01:12:37.540
可以进行教验

01:12:37.540 --> 01:12:38.540
首先Rules里边

01:12:38.540 --> 01:12:40.540
每一个就是一个对象

01:12:40.540 --> 01:12:41.540
一个对象就是一条验的规则

01:12:41.540 --> 01:12:42.540
首先

01:12:42.540 --> 01:12:43.540
我们必填

01:12:43.540 --> 01:12:44.540
是不是 required

01:12:44.540 --> 01:12:45.540
对吧

01:12:45.540 --> 01:12:46.540
required

01:12:46.540 --> 01:12:48.540
表示必填

01:12:48.540 --> 01:12:49.540
必填

01:12:49.540 --> 01:12:50.540
还有什么呢

01:12:50.540 --> 01:12:51.540
message

01:12:51.540 --> 01:12:52.540
表示教验文案

01:12:52.540 --> 01:12:53.540
就是

01:12:53.540 --> 01:12:54.540
相当于是错误消息

01:12:54.540 --> 01:12:55.540
错误消息

01:12:55.540 --> 01:12:58.540
就是学号不能

01:12:58.540 --> 01:13:01.540
就是必须填写

01:13:01.540 --> 01:13:03.540
学号必须填写

01:13:03.540 --> 01:13:04.540
保存

01:13:04.540 --> 01:13:05.540
咱们看一下

01:13:05.540 --> 01:13:06.540
学号这里

01:13:06.540 --> 01:13:07.540
它会自动在前面

01:13:07.540 --> 01:13:08.540
给你加个新号

01:13:08.540 --> 01:13:09.540
给你加个新号

01:13:09.540 --> 01:13:10.540
那如果说你这里

01:13:10.540 --> 01:13:11.540
没有填

01:13:11.540 --> 01:13:12.540
你看它是不是

01:13:12.540 --> 01:13:13.540
出来这个消息了

01:13:13.540 --> 01:13:14.540
学号必须填写

01:13:14.540 --> 01:13:15.540
就是教验

01:13:15.540 --> 01:13:17.540
它自动帮你教验

01:13:17.540 --> 01:13:18.540
好

01:13:18.540 --> 01:13:19.540
然后我们继续

01:13:20.540 --> 01:13:21.540
嗯

01:13:21.540 --> 01:13:24.370
这里

01:13:24.370 --> 01:13:25.370
下一个

01:13:25.370 --> 01:13:27.370
学号还有什么要验的规则吗

01:13:27.370 --> 01:13:28.370
好像没了

01:13:28.370 --> 01:13:29.370
学号好像没什么验的规则了

01:13:29.370 --> 01:13:30.370
好

01:13:30.370 --> 01:13:32.370
那么这里就是一条验的规则了

01:13:32.370 --> 01:13:34.370
新名这一块必须要填写

01:13:34.370 --> 01:13:36.370
新名必须填写

01:13:36.370 --> 01:13:38.370
新名必须填写

01:13:38.370 --> 01:13:39.370
好

01:13:39.370 --> 01:13:40.370
新别

01:13:40.370 --> 01:13:42.370
新别的话是必须选择的

01:13:42.370 --> 01:13:44.370
新别是必须要选择个新别

01:13:44.370 --> 01:13:46.370
来的有不能为online

01:13:46.370 --> 01:13:49.370
新名

01:13:49.370 --> 01:13:51.370
就请选择新名

01:13:52.370 --> 01:13:54.370
请选择新名

01:13:54.370 --> 01:13:56.370
新别

01:13:56.370 --> 01:13:57.370
好

01:13:57.370 --> 01:13:58.370
看一下

01:13:58.370 --> 01:13:59.370
那么现在呢

01:14:01.370 --> 01:14:02.370
新别

01:14:02.370 --> 01:14:03.370
新名

01:14:03.370 --> 01:14:04.370
新别这个我们还不好验证啊

01:14:04.370 --> 01:14:06.370
我们一会儿再说

01:14:06.370 --> 01:14:08.370
然后这里下面是

01:14:08.370 --> 01:14:09.370
下面这个呢

01:14:09.370 --> 01:14:10.370
是一定有值的

01:14:10.370 --> 01:14:11.370
对吧

01:14:11.370 --> 01:14:12.370
一定有值

01:14:12.370 --> 01:14:13.370
那么我们还是把

01:14:13.370 --> 01:14:14.370
飞空验能够加上嘛

01:14:14.370 --> 01:14:18.450
还是把飞空验能够加上

01:14:18.450 --> 01:14:19.450
稍等一下

01:14:22.450 --> 01:14:23.450
班长

01:14:23.450 --> 01:14:24.450
来这

01:14:24.450 --> 01:14:25.450
加上一个弱势

01:14:27.450 --> 01:14:28.450
复制一下

01:14:28.450 --> 01:14:31.820
这些问题我们一个个解决

01:14:31.820 --> 01:14:32.820
这里是

01:14:34.820 --> 01:14:36.820
请选择是否是班长

01:14:36.820 --> 01:14:37.820
那么这个东西有目

01:14:37.820 --> 01:14:38.820
应该说

01:14:38.820 --> 01:14:40.820
这个东西是不应该有飞空验证的

01:14:40.820 --> 01:14:41.820
不应该

01:14:41.820 --> 01:14:42.820
算了我不该加飞空验证的

01:14:42.820 --> 01:14:44.820
你这个东西验证也没什么意义

01:14:45.820 --> 01:14:46.820
新别这一块的话

01:14:46.820 --> 01:14:47.820
新别这

01:14:47.820 --> 01:14:48.820
就是新别这一块的话

01:14:48.820 --> 01:14:49.820
嗯

01:14:49.820 --> 01:14:50.820
验证

01:14:50.820 --> 01:14:51.820
因为新别还是要验证

01:14:51.820 --> 01:14:52.820
新别还是要验证

01:14:52.820 --> 01:14:53.820
因为他一开始没有联系

01:14:53.820 --> 01:14:54.820
对吧

01:14:54.820 --> 01:14:55.820
没有选择

01:14:55.820 --> 01:14:56.820
还是得验证

01:14:56.820 --> 01:14:57.820
出身联份

01:14:57.820 --> 01:14:58.820
出身联份的验证

01:14:58.820 --> 01:14:59.820
得验证

01:14:59.820 --> 01:15:00.820
因为这个班长的话

01:15:00.820 --> 01:15:01.820
他要么就是

01:15:01.820 --> 01:15:02.820
true or false

01:15:02.820 --> 01:15:03.820
我们以后再说这个问题

01:15:03.820 --> 01:15:05.820
出身联份

01:15:05.820 --> 01:15:07.820
请选择

01:15:07.820 --> 01:15:09.820
出身联份

01:15:10.820 --> 01:15:11.820
好

01:15:11.820 --> 01:15:12.820
下面手机号

01:15:12.820 --> 01:15:14.820
手机号是不是有

01:15:14.820 --> 01:15:15.820
挣折表达式的验证

01:15:15.820 --> 01:15:16.820
对吧

01:15:16.820 --> 01:15:18.820
是有挣折表达式的验证

01:15:18.820 --> 01:15:19.820
好那么我们看一下

01:15:19.820 --> 01:15:20.820
挣折表达式怎么验证呢

01:15:20.820 --> 01:15:21.820
是用partal

01:15:21.820 --> 01:15:22.820
对吧

01:15:22.820 --> 01:15:23.820
partal

01:15:23.820 --> 01:15:24.820
一个挣折表达式

01:15:24.820 --> 01:15:25.820
给他就完事了

01:15:25.820 --> 01:15:26.820
好

01:15:26.820 --> 01:15:27.820
这里

01:15:27.820 --> 01:15:28.820
加一个

01:15:28.820 --> 01:15:29.820
验个partal

01:15:29.820 --> 01:15:30.820
partal的话

01:15:30.820 --> 01:15:31.820
就是用多个验证规则

01:15:31.820 --> 01:15:33.820
还有一个挣折表达式

01:15:33.820 --> 01:15:34.820
挣折表达式的话

01:15:34.820 --> 01:15:35.820
就是

01:15:35.820 --> 01:15:36.820
手机号

01:15:36.820 --> 01:15:37.820
第一位肯定是

01:15:37.820 --> 01:15:38.820
一后边就直接

01:15:38.820 --> 01:15:39.820
验个数字

01:15:39.820 --> 01:15:41.820
十个数字就完事了

01:15:42.820 --> 01:15:44.820
手机号

01:15:44.820 --> 01:15:45.820
格式

01:15:45.820 --> 01:15:46.820
不正确

01:15:47.820 --> 01:15:50.260
好我们来看一下

01:15:50.260 --> 01:15:51.260
手机号

01:15:51.260 --> 01:15:52.260
这里乱写的话肯定不行了

01:15:52.260 --> 01:15:54.260
必须要有正确的书写

01:15:55.260 --> 01:15:56.260
对吧

01:15:56.260 --> 01:15:57.260
好

01:15:57.260 --> 01:15:58.260
下面柱子

01:15:58.260 --> 01:15:59.260
柱子必须要填写

01:15:59.260 --> 01:16:02.960
柱子

01:16:03.960 --> 01:16:05.960
柱子必须要填写

01:16:05.960 --> 01:16:06.960
请

01:16:06.960 --> 01:16:08.960
请填写

01:16:08.960 --> 01:16:10.960
填写柱子

01:16:10.960 --> 01:16:12.960
上面是请填写手机号

01:16:12.960 --> 01:16:14.960
请填写手机号

01:16:15.960 --> 01:16:16.960
下面邮箱

01:16:16.960 --> 01:16:18.960
邮箱是不是也得使用挣折表达式

01:16:18.960 --> 01:16:19.960
对吧

01:16:19.960 --> 01:16:20.960
我们复制一下

01:16:21.960 --> 01:16:22.960
好邮箱这里

01:16:22.960 --> 01:16:23.960
它其实

01:16:23.960 --> 01:16:24.960
我们看一下这

01:16:25.960 --> 01:16:26.960
这边

01:16:26.960 --> 01:16:27.960
这边

01:16:27.960 --> 01:16:29.960
这边没有邮箱

01:16:29.960 --> 01:16:30.960
没有邮箱

01:16:30.960 --> 01:16:31.960
我记成那个

01:16:31.960 --> 01:16:32.960
记成那个5U了

01:16:32.960 --> 01:16:33.960
好

01:16:33.960 --> 01:16:34.960
那么我们这里就用那个

01:16:34.960 --> 01:16:35.960
就直接来

01:16:35.960 --> 01:16:37.960
直接证明表达式

01:16:37.960 --> 01:16:38.960
邮箱的话

01:16:38.960 --> 01:16:39.960
邮箱证明表达式的话

01:16:39.960 --> 01:16:40.960
就前面是

01:16:40.960 --> 01:16:41.960
我们就写简单点

01:16:41.960 --> 01:16:44.960
前面是任意的单词制服

01:16:44.960 --> 01:16:46.960
前面任意的单词制服

01:16:46.960 --> 01:16:48.960
出现一次或多次

01:16:48.960 --> 01:16:50.960
然后是一个A

01:16:50.960 --> 01:16:52.960
然后又是一个单词

01:16:52.960 --> 01:16:54.960
单词制服

01:16:54.960 --> 01:16:56.960
出现一次或多次

01:16:56.960 --> 01:16:58.960
然后后边是一个

01:16:58.960 --> 01:16:59.960
第2

01:16:59.960 --> 01:17:01.960
一个单词制服

01:17:01.960 --> 01:17:02.960
对吧

01:17:02.960 --> 01:17:04.960
后边是一个第2

01:17:04.960 --> 01:17:06.960
一个第2

01:17:06.960 --> 01:17:08.960
然后又是一个单词制服

01:17:08.960 --> 01:17:10.960
出现一次或多次

01:17:10.960 --> 01:17:12.960
那么整个小货号里边的东西

01:17:12.960 --> 01:17:14.960
出现一次或两次

01:17:14.960 --> 01:17:16.960
就这样子了

01:17:16.960 --> 01:17:17.960
那邮箱证明表达式的话

01:17:17.960 --> 01:17:18.960
里面自己去搞定

01:17:18.960 --> 01:17:20.960
我就写个最简单的

01:17:20.960 --> 01:17:21.960
这是邮箱

01:17:21.960 --> 01:17:25.530
这是邮箱格式不正确

01:17:25.530 --> 01:17:27.530
请填写邮箱

01:17:27.530 --> 01:17:28.530
好

01:17:28.530 --> 01:17:29.530
就没了

01:17:29.530 --> 01:17:30.530
那么你看一下

01:17:30.530 --> 01:17:31.530
现在

01:17:31.530 --> 01:17:32.530
那么就把验证数加进去了

01:17:32.530 --> 01:17:33.530
对吧

01:17:33.530 --> 01:17:37.220
验证加进去了

01:17:37.220 --> 01:17:39.220
邮箱我这里写错了

01:17:39.220 --> 01:17:41.220
单词制服出现一次或多次

01:17:41.220 --> 01:17:43.220
然后是一个A

01:17:43.220 --> 01:17:46.220
然后是一个单词制服出现一次或多次

01:17:46.220 --> 01:17:48.220
然后是一个底

01:17:48.220 --> 01:17:50.220
然后单词制服

01:17:50.220 --> 01:17:52.220
这里不如有大口号

01:17:52.220 --> 01:17:58.190
有箱

01:17:58.190 --> 01:17:59.190
OK

01:17:59.190 --> 01:18:00.190
搞定了

01:18:00.190 --> 01:18:02.190
就搞定了

01:18:02.190 --> 01:18:04.190
那么现在我们再来看一下

01:18:04.190 --> 01:18:06.190
还有一些问题没有解决

01:18:06.190 --> 01:18:07.190
不着急

01:18:07.190 --> 01:18:08.190
慢慢来

01:18:08.190 --> 01:18:11.190
如果说我们一开始的时候

01:18:11.190 --> 01:18:13.190
看着

01:18:13.190 --> 01:18:15.190
一开始的时候直接点提交

01:18:15.190 --> 01:18:17.190
因为发现他仍然可以得到数据

01:18:17.190 --> 01:18:19.190
是不是仍然可以得到数据

01:18:19.190 --> 01:18:21.190
是不是有这个问题

01:18:21.190 --> 01:18:23.190
一开始点提交的时候

01:18:23.190 --> 01:18:26.190
是不是仍然可以得到数据

01:18:26.190 --> 01:18:27.190
对吧

01:18:27.190 --> 01:18:29.190
那么这个东西

01:18:29.190 --> 01:18:30.190
我们是不希望看到的

01:18:30.190 --> 01:18:31.190
我们不希望看到

01:18:31.190 --> 01:18:33.190
一开始就可以直接得到数据

01:18:33.190 --> 01:18:35.190
所以说我们要经过验证

01:18:35.190 --> 01:18:37.190
验证之后

01:18:37.190 --> 01:18:38.190
通过之后

01:18:38.190 --> 01:18:39.190
我们才要得到数据

01:18:39.190 --> 01:18:40.190
得到数据过后

01:18:40.190 --> 01:18:41.190
我们要做其他后续的操作

01:18:41.190 --> 01:18:43.190
所以说我们这里

01:18:43.190 --> 01:18:46.190
在获取数据的时候

01:18:46.190 --> 01:18:48.190
在获取数据的时候

01:18:48.190 --> 01:18:50.190
是不是也得验证一次

01:18:50.190 --> 01:18:51.190
但是它是没有给你做的

01:18:51.190 --> 01:18:53.190
它只是对针对某一个表现

01:18:53.190 --> 01:18:54.190
你再改变它

01:18:54.190 --> 01:18:55.190
改动它的时候

01:18:55.190 --> 01:18:56.190
它对你进行验证

01:18:56.190 --> 01:18:57.190
但是说

01:18:57.190 --> 01:19:00.190
如果说你没有做任何操作

01:19:00.190 --> 01:19:01.190
直接点提交

01:19:01.190 --> 01:19:02.190
因为提交就是

01:19:02.190 --> 01:19:03.190
我们自己写的按钮

01:19:03.190 --> 01:19:04.190
它怎么知道

01:19:04.190 --> 01:19:05.190
要发生验证了

01:19:05.190 --> 01:19:06.190
它不知道

01:19:06.190 --> 01:19:07.190
这是我们自己的视线

01:19:07.190 --> 01:19:08.190
对吧

01:19:08.190 --> 01:19:09.190
因此呢

01:19:09.190 --> 01:19:10.190
这里块你要自行进行验证

01:19:10.190 --> 01:19:12.190
那么怎么来验证呢

01:19:12.190 --> 01:19:14.190
还是要通过这个缝目对象

01:19:14.190 --> 01:19:15.190
缝目对象里面

01:19:15.190 --> 01:19:16.190
我们刚才介绍的两个方法

01:19:16.190 --> 01:19:17.190
一个是 get field decorator

01:19:17.190 --> 01:19:19.190
一个是 get field value

01:19:19.190 --> 01:19:20.190
还有一个方法呢

01:19:20.190 --> 01:19:22.190
叫做就是验证方法

01:19:22.190 --> 01:19:23.190
就是验证方法

01:19:23.190 --> 01:19:24.190
我们来看一下

01:19:24.190 --> 01:19:27.190
还有一个方法就是验证方法

01:19:27.190 --> 01:19:30.190
我们在哪呢

01:19:30.190 --> 01:19:33.190
我们在文档里面

01:19:33.190 --> 01:19:36.190
文档里面看吧

01:19:36.190 --> 01:19:37.190
你看一下

01:19:37.190 --> 01:19:39.190
这个缝目对象里面

01:19:39.190 --> 01:19:41.190
它还有一个方法

01:19:41.190 --> 01:19:43.190
叫做

01:19:43.190 --> 01:19:44.190
叫做

01:19:44.190 --> 01:19:45.190
下面

01:19:45.190 --> 01:19:47.190
Validate field

01:19:47.190 --> 01:19:49.190
还有这么一个方法

01:19:49.190 --> 01:19:50.190
好

01:19:50.190 --> 01:19:51.190
那么这个方法呢

01:19:51.190 --> 01:19:53.190
你直接调用就完事了

01:19:53.190 --> 01:19:55.190
就是你来手动的触发验证

01:19:55.190 --> 01:19:57.190
Z props.form

01:19:57.190 --> 01:19:58.190
它里面一个方法叫

01:19:58.190 --> 01:19:59.190
Validate Form

01:19:59.190 --> 01:20:00.190
Invade Field

01:20:00.190 --> 01:20:02.190
验证所有的字段

01:20:02.190 --> 01:20:04.190
那么这个方法里面呢

01:20:04.190 --> 01:20:05.190
它其实还有很多的

01:20:05.190 --> 01:20:06.190
其他用法

01:20:06.190 --> 01:20:07.190
比如说

01:20:07.190 --> 01:20:08.190
你还可以书写

01:20:08.190 --> 01:20:09.190
你要验证哪些字段

01:20:09.190 --> 01:20:10.190
你要验证哪些字段

01:20:10.190 --> 01:20:11.190
你不写的话就验证所有

01:20:11.190 --> 01:20:12.190
那么它就

01:20:12.190 --> 01:20:13.190
这里边呢

01:20:13.190 --> 01:20:14.190
有一个 callback

01:20:14.190 --> 01:20:15.190
有个回调函数

01:20:15.190 --> 01:20:16.190
这个回调函数呢

01:20:16.190 --> 01:20:17.190
它第一个参数是

01:20:17.190 --> 01:20:18.190
验证的错误

01:20:18.190 --> 01:20:19.190
错误信息

01:20:19.190 --> 01:20:20.190
第二个参数呢

01:20:20.190 --> 01:20:22.190
是得到了Y6值

01:20:22.190 --> 01:20:24.190
得到了所有的值

01:20:24.190 --> 01:20:25.190
咱们回调函数里面

01:20:25.190 --> 01:20:26.190
输出一下

01:20:26.190 --> 01:20:27.190
错误信息

01:20:27.190 --> 01:20:28.190
所有的值

01:20:28.190 --> 01:20:29.190
保存

01:20:29.190 --> 01:20:30.190
你看一下

01:20:30.190 --> 01:20:31.190
这里

01:20:31.190 --> 01:20:32.190
这个方法它就会触发验证

01:20:32.190 --> 01:20:33.190
那么现在呢

01:20:33.190 --> 01:20:34.190
我们如果说

01:20:34.190 --> 01:20:35.190
啥都没做

01:20:35.190 --> 01:20:36.190
直接点提交

01:20:36.190 --> 01:20:37.190
你看是不是

01:20:37.190 --> 01:20:38.190
全部就进行验证了

01:20:38.190 --> 01:20:39.190
对吧

01:20:39.190 --> 01:20:40.190
全部根据验证的

01:20:40.190 --> 01:20:41.190
规定进行验证了

01:20:41.190 --> 01:20:42.190
而且它得到了结果

01:20:42.190 --> 01:20:43.190
你看

01:20:43.190 --> 01:20:44.190
两个objects

01:20:44.190 --> 01:20:45.190
错误消息

01:20:45.190 --> 01:20:46.190
错误消息

01:20:46.190 --> 01:20:47.190
错误信息

01:20:47.190 --> 01:20:48.190
你看是一个对象

01:20:48.190 --> 01:20:49.190
对象里面记录的属性就是

01:20:49.190 --> 01:20:50.190
哪些属性有错误

01:20:50.190 --> 01:20:51.190
你看

01:20:51.190 --> 01:20:52.190
而瑞士是不是有错误

01:20:52.190 --> 01:20:53.190
错误是什么

01:20:53.190 --> 01:20:54.190
你看是不是

01:20:54.190 --> 01:20:55.190
它

01:20:55.190 --> 01:20:56.190
错误的第一个

01:20:56.190 --> 01:20:57.190
第一个错误就是

01:20:57.190 --> 01:20:58.190
请连线柱子

01:20:58.190 --> 01:20:59.190
对吧

01:20:59.190 --> 01:21:00.190
就这么一个错误

01:21:00.190 --> 01:21:01.190
那么下面Burse

01:21:01.190 --> 01:21:02.190
是不是有错误

01:21:02.190 --> 01:21:03.190
对吧

01:21:03.190 --> 01:21:04.190
它就会得到这些错误对象

01:21:04.190 --> 01:21:05.190
当你要用就用

01:21:05.190 --> 01:21:06.190
那如果说你没有错误的话

01:21:06.190 --> 01:21:07.190
不要那么多

01:21:07.190 --> 01:21:08.190
这里都写了

01:21:08.190 --> 01:21:09.190
都写了

01:21:09.190 --> 01:21:10.190
都写了

01:21:10.190 --> 01:21:12.190
都写

01:21:12.190 --> 01:21:17.660
这里都写

01:21:17.660 --> 01:21:18.660
好

01:21:18.660 --> 01:21:19.660
这里我们点提交

01:21:19.660 --> 01:21:20.660
你看

01:21:20.660 --> 01:21:21.660
错误是不是 now

01:21:21.660 --> 01:21:22.660
对吧

01:21:22.660 --> 01:21:23.660
是不是 now

01:21:23.660 --> 01:21:24.660
就这么个意思

01:21:24.660 --> 01:21:25.660
就这么个意思

01:21:25.660 --> 01:21:26.660
好

01:21:26.660 --> 01:21:27.660
因此

01:21:27.660 --> 01:21:28.660
因此

01:21:28.660 --> 01:21:29.660
我们这里

01:21:32.660 --> 01:21:33.660
看一下

01:21:33.660 --> 01:21:34.660
在这

01:21:34.660 --> 01:21:35.660
我们这里是不是可以判断

01:21:35.660 --> 01:21:36.660
如果说

01:21:36.660 --> 01:21:37.660
你有错误的情况下

01:21:37.660 --> 01:21:38.660
我什么都不做

01:21:38.660 --> 01:21:40.660
如果说你没有错误

01:21:40.660 --> 01:21:42.660
你没有错误的情况下

01:21:42.660 --> 01:21:44.660
就表示验证通过

01:21:44.660 --> 01:21:45.660
验证通过的时候

01:21:45.660 --> 01:21:46.660
你I做啥做啥

01:21:46.660 --> 01:21:47.660
比方说我们这里

01:21:47.660 --> 01:21:48.660
先把这个输出吧

01:21:48.660 --> 01:21:50.660
先把这个Values输出

01:21:51.660 --> 01:21:52.660
OK

01:21:52.660 --> 01:21:53.660
先把这个Values输出

01:21:53.660 --> 01:21:54.660
来吧

01:21:54.660 --> 01:21:55.660
是不是搞定了

01:21:57.660 --> 01:21:58.660
好

01:21:58.660 --> 01:21:59.660
我们现在试一下

01:21:59.660 --> 01:22:00.660
那么我们点击

01:22:00.660 --> 01:22:01.660
是不是就有错误

01:22:01.660 --> 01:22:02.660
对吧

01:22:02.660 --> 01:22:03.660
它告诉你

01:22:03.660 --> 01:22:04.660
这个调试工具里边

01:22:04.660 --> 01:22:05.660
也告诉你

01:22:05.660 --> 01:22:06.660
哪些地方出现了错误

01:22:06.660 --> 01:22:07.660
然后我们这里

01:22:07.660 --> 01:22:08.660
填写

01:22:08.660 --> 01:22:09.660
填写

01:22:09.660 --> 01:22:10.660
填写

01:22:10.660 --> 01:22:11.660
那么这里的手机

01:22:11.660 --> 01:22:12.660
随便写

01:22:12.660 --> 01:22:13.660
这个是1

01:22:19.160 --> 01:22:20.160
住址随便写

01:22:20.160 --> 01:22:21.160
好

01:22:21.160 --> 01:22:22.160
这里我们点击提交

01:22:22.160 --> 01:22:23.160
你看是不是得到数据了

01:22:23.160 --> 01:22:24.160
对吧

01:22:24.160 --> 01:22:25.160
但是数据里边

01:22:25.160 --> 01:22:26.160
看一下一个地方

01:22:26.160 --> 01:22:27.160
是不是有问题

01:22:27.160 --> 01:22:28.160
什么问题

01:22:28.160 --> 01:22:29.160
Ease monitor

01:22:29.160 --> 01:22:31.160
是不是undefend

01:22:31.160 --> 01:22:33.540
这个玩意

01:22:33.540 --> 01:22:35.540
它为什么是undefend呢

01:22:35.540 --> 01:22:36.540
这个玩意儿

01:22:37.540 --> 01:22:38.540
你想

01:22:38.540 --> 01:22:39.540
这个玩意儿

01:22:39.540 --> 01:22:40.540
是不是受控组建

01:22:41.540 --> 01:22:42.540
是不是受控组建

01:22:42.540 --> 01:22:43.540
这个Ease monitor

01:22:43.540 --> 01:22:44.540
是不是受控组建

01:22:44.540 --> 01:22:45.540
你看这些问题

01:22:45.540 --> 01:22:47.540
都是一串一串过来的

01:22:48.540 --> 01:22:49.540
这个model

01:22:49.540 --> 01:22:50.540
这个玩意儿是不是受控组建

01:22:50.540 --> 01:22:51.540
这个是开关

01:22:51.540 --> 01:22:52.540
开关受控组建

01:22:52.540 --> 01:22:53.540
你是一开始

01:22:53.540 --> 01:22:54.540
是不是给了他

01:22:54.540 --> 01:22:55.540
给了他一个Value值

01:22:56.540 --> 01:22:57.540
你一开始是不是

01:22:57.540 --> 01:22:58.540
给了他一个Value值

01:22:58.540 --> 01:22:59.540
那么Value值

01:22:59.540 --> 01:23:00.540
你有没有给他数据

01:23:00.540 --> 01:23:01.540
你想啊

01:23:01.540 --> 01:23:02.540
你不要你自己写的

01:23:02.540 --> 01:23:03.540
这个地方你自己写在吗

01:23:03.540 --> 01:23:04.540
你看

01:23:05.540 --> 01:23:06.540
这个地方你自己写在吗

01:23:06.540 --> 01:23:07.540
你要把它变收控

01:23:07.540 --> 01:23:08.540
你是不是要给他个Value值

01:23:08.540 --> 01:23:09.540
让他收空啊

01:23:09.540 --> 01:23:10.540
这个Value值

01:23:10.540 --> 01:23:11.540
是不是要来自于一个值

01:23:11.540 --> 01:23:13.540
你一开始有没有给他这个值

01:23:14.540 --> 01:23:15.540
是没有给他这个值

01:23:15.540 --> 01:23:16.540
当然你一会改了之后

01:23:16.540 --> 01:23:17.540
他就会把新的值

01:23:17.540 --> 01:23:18.540
传给你

01:23:18.540 --> 01:23:19.540
你把新的值付进去了

01:23:19.540 --> 01:23:20.540
当然没问题

01:23:20.540 --> 01:23:21.540
但是你一开始

01:23:21.540 --> 01:23:22.540
给他的值

01:23:22.540 --> 01:23:23.540
是不是没有给他值

01:23:23.540 --> 01:23:24.540
没有给他值

01:23:24.540 --> 01:23:25.540
他是不是昂迪凡

01:23:25.540 --> 01:23:26.540
对吧

01:23:26.540 --> 01:23:27.540
没有给他值

01:23:27.540 --> 01:23:28.540
是不是昂迪凡的

01:23:28.540 --> 01:23:29.540
那就是昂迪凡的

01:23:29.540 --> 01:23:30.540
没有给他值

01:23:30.540 --> 01:23:31.540
他就是昂迪凡的

01:23:32.540 --> 01:23:33.540
那么也就是说

01:23:33.540 --> 01:23:34.540
这里呢

01:23:34.540 --> 01:23:35.540
我们希望有些属性

01:23:35.540 --> 01:23:37.540
他得有一个默认值

01:23:37.540 --> 01:23:38.540
有些属性

01:23:38.540 --> 01:23:40.540
得有一个默认值才行

01:23:40.540 --> 01:23:43.540
那么如何来给他一个默认值呢

01:23:45.540 --> 01:23:46.540
如何来给这个

01:23:46.540 --> 01:23:48.540
如何来给这个

01:23:48.540 --> 01:23:50.540
给这个就是表单

01:23:50.540 --> 01:23:51.540
里边的一些属性

01:23:51.540 --> 01:23:52.540
一个默认值呢

01:23:52.540 --> 01:23:54.540
这个默认值呢

01:23:54.540 --> 01:23:56.540
有两种方式给他

01:23:56.540 --> 01:23:57.540
第一种方式呢

01:23:57.540 --> 01:23:58.540
是在Gatefield

01:23:58.540 --> 01:24:00.540
这一块那种确实比较长啊

01:24:00.540 --> 01:24:01.540
比较多

01:24:01.540 --> 01:24:02.540
一下把掌握想完算了

01:24:02.540 --> 01:24:04.540
大家可以分开来看

01:24:04.540 --> 01:24:06.540
分成几次来看也行

01:24:06.540 --> 01:24:08.540
这个Gatefield Decorator

01:24:08.540 --> 01:24:11.360
就这个地方

01:24:11.360 --> 01:24:13.360
那么它的配置里边呢

01:24:13.360 --> 01:24:14.360
其中有一项就是

01:24:14.360 --> 01:24:16.360
叫做Initial Value

01:24:18.360 --> 01:24:19.360
Initial Value

01:24:19.360 --> 01:24:20.360
那么这个地方呢

01:24:20.360 --> 01:24:22.360
你就可以给他一个默认值了

01:24:22.360 --> 01:24:23.360
比方说我们这里

01:24:23.360 --> 01:24:24.360
这样默认值

01:24:24.360 --> 01:24:25.360
设置上什么Force

01:24:26.360 --> 01:24:27.360
一开始不是

01:24:27.360 --> 01:24:29.360
就是默认选中不是班长

01:24:29.360 --> 01:24:30.360
好 咱们来看一下

01:24:31.360 --> 01:24:32.360
那么现在呢

01:24:32.360 --> 01:24:33.360
学号

01:24:34.360 --> 01:24:35.360
姓名

01:24:37.360 --> 01:24:38.360
男

01:24:38.360 --> 01:24:40.360
哎呀 我这里不能改他

01:24:40.360 --> 01:24:41.360
学号

01:24:42.360 --> 01:24:43.360
姓名

01:24:44.360 --> 01:24:45.360
班长我不动他

01:24:46.360 --> 01:24:47.360
要阻止

01:24:48.360 --> 01:24:50.360
好 这里点提交

01:24:50.360 --> 01:24:51.360
你看一下

01:24:51.360 --> 01:24:52.360
Is Monitor 是不是有值的

01:24:52.360 --> 01:24:53.360
Force

01:24:53.360 --> 01:24:54.360
就这么简单

01:24:54.360 --> 01:24:55.360
就这么简单

01:24:55.360 --> 01:24:56.360
包括性别是不是

01:24:56.360 --> 01:24:57.360
也可以给默认值

01:24:57.360 --> 01:24:58.360
对吧

01:24:58.360 --> 01:24:59.360
也可以给默认值

01:24:59.360 --> 01:25:00.360
性别

01:25:00.360 --> 01:25:01.360
在这里

01:25:01.360 --> 01:25:02.360
也可以给默认值

01:25:02.360 --> 01:25:03.360
性别的默认值

01:25:03.360 --> 01:25:04.360
比方说是0

01:25:06.360 --> 01:25:08.360
那默认是不是选中了男

01:25:08.360 --> 01:25:09.360
对吧

01:25:09.360 --> 01:25:10.360
就这么简单

01:25:11.360 --> 01:25:12.360
好 都是一种方式

01:25:12.360 --> 01:25:13.360
另外一种方式

01:25:13.360 --> 01:25:15.360
我更加推荐一点

01:25:15.360 --> 01:25:16.360
另外一种方式

01:25:16.360 --> 01:25:17.360
我更加推荐

01:25:17.360 --> 01:25:18.360
什么方式呢

01:25:18.360 --> 01:25:19.360
就在这

01:25:19.360 --> 01:25:20.360
就在这

01:25:21.360 --> 01:25:23.360
HLC 里边

01:25:23.360 --> 01:25:25.360
这里面用Form Creature的时候

01:25:25.360 --> 01:25:27.360
它是这里可以传参数的

01:25:28.360 --> 01:25:29.360
这个参数里边

01:25:29.360 --> 01:25:30.360
就可以给整个表单

01:25:30.360 --> 01:25:31.360
设置默认值

01:25:31.360 --> 01:25:33.360
整个把所有数据

01:25:33.360 --> 01:25:34.360
设置默认值

01:25:34.360 --> 01:25:35.360
就可以设置了

01:25:36.360 --> 01:25:37.360
我们来看一下

01:25:37.360 --> 01:25:39.360
Form Creature 这里

01:25:39.360 --> 01:25:40.360
它这个API 稳当里边

01:25:40.360 --> 01:25:41.360
在这

01:25:42.360 --> 01:25:43.360
就剩下这个东西了

01:25:43.360 --> 01:25:44.360
Form Creature

01:25:46.360 --> 01:25:47.360
Form Creature

01:25:50.360 --> 01:25:51.360
Form Creature 里边

01:25:51.360 --> 01:25:52.360
你看这里

01:25:52.360 --> 01:25:53.360
是不是一个对象可以配置

01:25:53.360 --> 01:25:54.360
可以写个配置对象

01:25:54.360 --> 01:25:56.360
这里边可以写个配置对象

01:25:56.360 --> 01:25:58.360
这个配置对象里边

01:25:58.360 --> 01:25:59.360
其中就有一个配置

01:25:59.360 --> 01:26:00.360
叫做

01:26:01.360 --> 01:26:03.360
Map Props to Fields

01:26:04.360 --> 01:26:06.360
Map Props to Fields

01:26:08.360 --> 01:26:09.360
什么意思呢

01:26:09.360 --> 01:26:10.360
它这个配置

01:26:10.360 --> 01:26:11.360
它的意思就是说

01:26:12.360 --> 01:26:14.360
我能通过这个配置

01:26:14.360 --> 01:26:15.360
能够配置

01:26:15.360 --> 01:26:18.360
把配置整个表单域的数据

01:26:18.360 --> 01:26:19.360
就整个表单的数据

01:26:19.360 --> 01:26:21.360
都可以通过这个属性来配置

01:26:21.360 --> 01:26:23.360
那么比方说我们在这里

01:26:23.360 --> 01:26:24.360
怎么写呢

01:26:24.360 --> 01:26:25.360
就这样子写

01:26:25.360 --> 01:26:26.360
这里有个配置

01:26:26.360 --> 01:26:27.360
其中一个配置

01:26:27.360 --> 01:26:29.360
叫做Map Props to Fields

01:26:31.360 --> 01:26:32.360
那么这个配置

01:26:32.360 --> 01:26:33.360
为一个什么呢

01:26:33.360 --> 01:26:34.360
为一个函数

01:26:34.360 --> 01:26:35.360
这个函数有一个参数

01:26:35.360 --> 01:26:37.360
这个参数是什么呢

01:26:37.360 --> 01:26:38.360
这个参数我们到时候

01:26:38.360 --> 01:26:40.360
不是会返回个组件吗

01:26:40.360 --> 01:26:43.360
那么到时候别人使用这个组件的时候

01:26:43.360 --> 01:26:44.360
你看看

01:26:44.360 --> 01:26:47.360
比方别人使用这个组件的时候

01:26:47.360 --> 01:26:48.360
在我们的配置里边

01:26:48.360 --> 01:26:49.360
说来使用这个组件

01:26:49.360 --> 01:26:50.360
使用这个组件的时候

01:26:50.360 --> 01:26:51.360
有可能给它传递一些

01:26:51.360 --> 01:26:52.360
额外的数据

01:26:52.360 --> 01:26:53.360
对吧

01:26:53.360 --> 01:26:55.360
可能给它传递一些数据

01:26:55.360 --> 01:26:57.360
给它传递数据的时候

01:26:57.360 --> 01:26:58.360
给它传递数据的时候

01:26:58.360 --> 01:27:00.360
那么传递的属性

01:27:00.360 --> 01:27:02.360
就放到这个Approps里边来

01:27:02.360 --> 01:27:03.360
它就这么个意思

01:27:03.360 --> 01:27:05.360
它就把这个参数给力

01:27:05.360 --> 01:27:06.360
然后我们现在

01:27:06.360 --> 01:27:07.360
也用不到这个参数

01:27:07.360 --> 01:27:08.360
因为你没有属性传递

01:27:08.360 --> 01:27:09.360
对吧

01:27:09.360 --> 01:27:10.360
然后返回的是什么呢

01:27:10.360 --> 01:27:12.360
返回的就是一个对象

01:27:12.360 --> 01:27:14.360
返回的是这么一个对象

01:27:14.360 --> 01:27:17.360
返回的是这么一个对象

01:27:17.360 --> 01:27:19.360
返回的是

01:27:21.360 --> 01:27:23.360
表单域数据

01:27:23.360 --> 01:27:24.360
我记得是这个

01:27:24.360 --> 01:27:25.360
我看一下

01:27:25.360 --> 01:27:27.360
这个地方稍微有点忘了

01:27:27.360 --> 01:27:28.360
看一下你们

01:27:28.360 --> 01:27:29.360
看一下一动

01:27:29.360 --> 01:27:31.360
这也直接点吧

01:27:31.360 --> 01:27:32.360
看一下一动

01:27:32.360 --> 01:27:35.440
看一下这个例子

01:27:37.440 --> 01:27:38.440
OK 我懂了

01:27:38.440 --> 01:27:39.440
那么返回的是什么

01:27:39.440 --> 01:27:40.440
就是一个一个的表单

01:27:40.440 --> 01:27:42.440
表单制断

01:27:42.440 --> 01:27:43.440
那么比方说

01:27:43.440 --> 01:27:44.440
我们的logging id

01:27:44.440 --> 01:27:45.440
logging id文不写了

01:27:45.440 --> 01:27:47.440
logging id文不管它

01:27:47.440 --> 01:27:48.440
就学号不管它

01:27:48.440 --> 01:27:49.440
姓名不管它

01:27:49.440 --> 01:27:50.440
姓别不管它

01:27:50.440 --> 01:27:51.440
然后呢

01:27:51.440 --> 01:27:52.440
姓别

01:27:52.440 --> 01:27:54.440
我们可以给它个摸认词

01:27:54.440 --> 01:27:55.440
班长给它个摸认词

01:27:55.440 --> 01:27:57.440
我们就给这两个属相

01:27:57.440 --> 01:27:59.440
6和意思Moditor

01:28:00.440 --> 01:28:01.440
就给这两个属相

01:28:01.440 --> 01:28:02.440
一个是6

01:28:02.440 --> 01:28:03.440
啥啥

01:28:03.440 --> 01:28:04.440
一个是意思Moditor

01:28:04.440 --> 01:28:05.440
啥啥啥

01:28:05.440 --> 01:28:06.440
给它摸认词

01:28:06.440 --> 01:28:08.440
好 那么这个摸认词怎么写呢

01:28:08.440 --> 01:28:09.440
你不能直接输写

01:28:09.440 --> 01:28:11.440
你不能在这里直接写上0

01:28:11.440 --> 01:28:12.440
1

01:28:12.440 --> 01:28:13.440
你要怎么写呢

01:28:13.440 --> 01:28:15.440
按它的要求

01:28:15.440 --> 01:28:18.440
你在使用form create form field

01:28:18.440 --> 01:28:20.440
就这个地方有点麻烦

01:28:20.440 --> 01:28:21.440
你在使用这个东西

01:28:21.440 --> 01:28:22.440
给它摸认词

01:28:22.440 --> 01:28:24.440
那么这个扩号里边传啥呢

01:28:24.440 --> 01:28:26.440
它传的是一个对象

01:28:26.440 --> 01:28:27.440
一个配置对象

01:28:27.440 --> 01:28:28.440
在配置对象里边

01:28:28.440 --> 01:28:29.440
你可以给它配置Value

01:28:29.440 --> 01:28:30.440
它的值是什么

01:28:30.440 --> 01:28:31.440
它的值就是0

01:28:32.440 --> 01:28:33.440
就是这么简单

01:28:33.440 --> 01:28:34.440
其他这里还可以配置

01:28:34.440 --> 01:28:35.440
比方说Error

01:28:35.440 --> 01:28:37.440
错误消息是啥都可以配置的

01:28:37.440 --> 01:28:40.440
一开始有没有错误都可以配置的

01:28:40.440 --> 01:28:41.440
那么这里呢

01:28:41.440 --> 01:28:43.440
通过这个来进行配置

01:28:43.440 --> 01:28:44.440
意思Moditor

01:28:44.440 --> 01:28:47.440
意思Moditor就是FORCE

01:28:47.440 --> 01:28:48.440
保存

01:28:48.440 --> 01:28:50.440
这种方式也可以配置摸认词

01:28:50.440 --> 01:28:51.440
你看着

01:28:51.440 --> 01:28:52.440
我们这里

01:28:53.440 --> 01:28:54.440
是不是一开始选中难了

01:28:54.440 --> 01:28:56.440
比方说我们这里配置为1

01:28:57.440 --> 01:28:58.440
那么个字段

01:28:58.440 --> 01:28:59.440
刷新

01:29:00.440 --> 01:29:01.440
这字段一开始不是选中女了

01:29:01.440 --> 01:29:02.440
对吧

01:29:02.440 --> 01:29:03.440
也可以

01:29:03.440 --> 01:29:05.440
这种做法可能更常见一点

01:29:05.440 --> 01:29:06.440
因为这里呢

01:29:06.440 --> 01:29:07.440
只管见面

01:29:07.440 --> 01:29:08.440
只管见面

01:29:08.440 --> 01:29:09.440
见面说我做完了过后了

01:29:09.440 --> 01:29:10.440
剩下的事情交给他了

01:29:11.440 --> 01:29:12.440
其实这里的写写

01:29:12.440 --> 01:29:14.440
写下来的还是觉得

01:29:14.440 --> 01:29:15.440
有点麻烦对吧

01:29:15.440 --> 01:29:16.440
有点麻烦

01:29:16.440 --> 01:29:17.440
那我们可以用一些函数

01:29:17.440 --> 01:29:19.440
来帮我们生成

01:29:19.440 --> 01:29:20.440
可以用函数来帮我们生成

01:29:20.440 --> 01:29:21.440
比方说

01:29:21.440 --> 01:29:23.440
我们这里写这么一个函数

01:29:23.440 --> 01:29:24.440
一个辅助函数

01:29:24.440 --> 01:29:25.440
这个函数

01:29:25.440 --> 01:29:26.440
甚至可以写到Utl里边去

01:29:26.440 --> 01:29:27.440
甚至可以写到这

01:29:28.440 --> 01:29:29.440
Utl里边去

01:29:29.440 --> 01:29:30.440
到这里边也行

01:29:30.440 --> 01:29:32.440
我们这里写这么一个函数

01:29:32.440 --> 01:29:33.440
叫做

01:29:38.440 --> 01:29:40.440
你给我传递一个对象进来

01:29:40.440 --> 01:29:42.440
那么我帮你生成这个配置

01:29:42.440 --> 01:29:43.440
帮你生成这个配置

01:29:43.440 --> 01:29:44.440
所以说我这里呢

01:29:44.440 --> 01:29:46.440
我在这个函数里面

01:29:46.440 --> 01:29:48.440
一会我可以这样子写

01:29:48.440 --> 01:29:50.440
来这样子写

01:29:51.440 --> 01:29:52.440
就是

01:29:54.440 --> 01:29:56.440
我传一个对象进去

01:29:56.440 --> 01:29:57.440
我直接在这里写

01:29:57.440 --> 01:29:59.440
就是six为0

01:30:00.440 --> 01:30:01.440
然后还有什么

01:30:01.440 --> 01:30:02.440
还有这个就是

01:30:06.440 --> 01:30:07.440
让这个函数来

01:30:07.440 --> 01:30:08.440
帮我们生成这样的配置

01:30:08.440 --> 01:30:09.440
因为这个配置

01:30:09.440 --> 01:30:10.440
写下来挺繁琐的

01:30:10.440 --> 01:30:12.440
那么这里的函数就很简单了

01:30:12.440 --> 01:30:13.440
对吧就很简单了

01:30:13.440 --> 01:30:15.440
我们就生成这么一个对象

01:30:15.440 --> 01:30:16.440
result一个对象

01:30:16.440 --> 01:30:17.440
然后循环

01:30:17.440 --> 01:30:18.440
forin循环

01:30:18.440 --> 01:30:19.440
循环什么呢

01:30:19.440 --> 01:30:21.440
循环 OB界

01:30:21.440 --> 01:30:22.440
循环 OB界

01:30:22.440 --> 01:30:23.440
循环 OB界的时候

01:30:23.440 --> 01:30:24.440
ob界有一个属性

01:30:24.440 --> 01:30:25.440
result里面就有一个属性

01:30:25.440 --> 01:30:26.440
result里面属性

01:30:26.440 --> 01:30:27.440
通过什么来创建呢

01:30:27.440 --> 01:30:29.440
通过create form field

01:30:29.440 --> 01:30:30.440
来创建

01:30:30.440 --> 01:30:31.440
那个Values等于什么呢

01:30:31.440 --> 01:30:32.440
Values等于

01:30:32.440 --> 01:30:34.440
这个ob界

01:30:34.440 --> 01:30:35.440
prob

01:30:35.440 --> 01:30:36.440
这个要用这个

01:30:36.440 --> 01:30:37.440
要用综合好

01:30:37.440 --> 01:30:38.440
属性计算

01:30:39.440 --> 01:30:40.440
对吧

01:30:40.440 --> 01:30:41.440
我们可以通过这个函数

01:30:41.440 --> 01:30:42.440
来帮我们创建这个东西

01:30:42.440 --> 01:30:43.440
这样子呢

01:30:43.440 --> 01:30:44.440
效果完全一样

01:30:44.440 --> 01:30:45.440
完全一样

01:30:47.440 --> 01:30:48.440
我这没返回

01:30:48.440 --> 01:30:49.440
没返回

01:30:49.440 --> 01:30:50.440
return result

01:30:50.440 --> 01:30:51.440
这个东西可以把它写成一个

01:30:51.440 --> 01:30:52.440
通用的函数

01:30:53.440 --> 01:30:54.440
你看

01:30:54.440 --> 01:30:55.440
是不是一样的

01:30:55.440 --> 01:30:56.440
效果一样的

01:30:57.440 --> 01:30:58.440
那么这一块

01:30:58.440 --> 01:30:59.440
是不是做完了

01:30:59.440 --> 01:31:00.440
对吧

01:31:00.440 --> 01:31:01.440
做完了

01:31:01.440 --> 01:31:02.440
那么这一块

01:31:02.440 --> 01:31:03.440
先到这吧

01:31:03.440 --> 01:31:04.440
我觉得时间太长了

01:31:04.440 --> 01:31:05.440
我们还没讲完

01:31:05.440 --> 01:31:06.440
下节课

01:31:06.440 --> 01:31:07.440
我们真正的去用

01:31:07.440 --> 01:31:08.440
API去实现

01:31:08.440 --> 01:31:09.440
天家学生

01:31:09.440 --> 01:31:10.440
还包括修改学生

01:31:10.440 --> 01:31:11.440
我们是一起可以做了

01:31:11.440 --> 01:31:12.440
一起都可以做了

01:31:12.440 --> 01:31:14.440
修改学生也可以做了

01:31:14.440 --> 01:31:15.440
好吧

01:31:15.440 --> 01:31:16.440
我们这一块

01:31:16.440 --> 01:31:17.440
先到这

