WEBVTT

00:00.940 --> 00:05.940
好了啊 那现在就剩下一个功能了是吧 就剩下学生查询功能了

00:05.940 --> 00:10.940
那什么添加学生啊 修改学生我们现在不早点做啊 我们后边学的nd

00:10.940 --> 00:18.940
就学到一个uiq之后呢 我们把这些功能加上 我们目前这节课呢就只管学生管理啊 就查询

00:18.940 --> 00:22.940
那么之前我们已经做过很多次了 我们现在的这一次呢 再用那个5米做一次

00:22.940 --> 00:27.940
所以说央视啊 组建这一块我就不再写了啊 因为之前已经做过很多次了

00:27.940 --> 00:36.940
在这儿啊 组建的话 我们会用到这个组建 就是pager啊 就这个组建 这分业组建啊 咱们把这个玩意儿复制过来吧

00:36.940 --> 00:44.940
啊 陪着复制过来啊 放到我们这个src里面 组建里面pager啊 看一下啊 顺便看一下这个组建吗

00:45.940 --> 00:52.940
嗯 这个组建也没啥好说的啊 就是我们之前很早很早的时候写的 对吧 你看这些组建 其实你看学到这么久

00:52.940 --> 01:05.940
像那些基本的组建写法 他并没有发生变化 以前咋写还是咋写 呃 这pager啊 呃 然后呢 我们之前也做过这么个组建啊 叫做model啊 这么个组建

01:05.940 --> 01:15.940
model是一个盟城对吧 这个盟城呢 我们在这呢 主要是用于显示那个夹载中啊 正在夹载数据 主要是为了显示这个啊 这是盟城组建对吧

01:16.940 --> 01:32.940
呃 这里还用到什么 utl's common types 啊 common types 啊 common types 是我们之前放到这儿的 对吧 放到这儿的 呃 这样子行吗啊 我们把复制过来 你把复制过来啊 把这一代的这些东西都复制过来 呃 也放到这儿吧

01:33.940 --> 01:37.940
放哪儿呢 放到这儿啊 src utl's

01:38.940 --> 01:41.940
好 那么这里呢 引用了地址呢 稍微变一下

01:47.220 --> 01:49.220
我在啊 这里重新改一下这个地址

01:52.220 --> 01:58.220
写纲 呃 再点点写纲 utl's common types ok

01:59.220 --> 02:03.220
好 其他的就没啥了啊 写的没啥了 这是个盟城组建

02:04.220 --> 02:09.220
呃 然后我们之前还写过这么两这么几个组建啊 都给他复制过来

02:10.220 --> 02:14.220
啊 都给他复制过来 1 2 3 复制过来 我就不再写这些组建了

02:15.220 --> 02:22.220
好 复制过来 呃 这 这几个组建呢 一个是用于显示学生的搜索那个条

02:23.220 --> 02:30.220
啊 查询条件 什么关键字啊 选择性别啊 一个按钮过后啊 点击过后呢 它会形成一个查询的条 对吧

02:31.220 --> 02:34.220
啊 这里那么把它写过来啊 你看一下啊 看一下

02:36.220 --> 02:38.220
呃 然后呢 这里呢 student table

02:39.220 --> 02:45.220
啊 就这个这个组建呢 他用来显示一个学生表格 其他的也没啥了啊 就是来显示一个学生表格

02:46.220 --> 02:53.220
然后这里有一个漏定组建啊 这个漏定组建呢 他要用到这个盟城组建啊 他需要用到这个盟城组建

02:54.220 --> 02:58.220
啊 这个盟城组建呢 他就利用这个盟城组建啊 你给他传一个属性 是否显示

02:59.220 --> 03:04.220
如果显示的话 就会显示一个盟城 然后给你写几个字啊 夹在中 没了啊 没了

03:05.220 --> 03:07.220
好 大概就这样子啊 大概这样子

03:08.220 --> 03:15.220
呃 然后呢 我们这里呢 这里把组建就已经写好了啊 因为之前写过了 我就不再写了

03:16.220 --> 03:19.220
那么接下来就要搞定数据 对吧 要搞定数据 好 我们来吧

03:20.220 --> 03:24.220
在models里边 是不是还加一个model啊 加一个模型叫做students

03:25.220 --> 03:26.220
啊 students 叫js

03:27.220 --> 03:33.220
好 那么这个里边呢 我们写上啊 导出一个dba的就是模型 default

03:35.220 --> 03:44.910
模型写好了 我们把一连接就完事了 对吧 好 然后状态 看一下有哪些状态呢 这里面有哪些状态呢

03:45.910 --> 03:51.910
好 状态这一块的话 他有这么一些状态需要处理啊 我们按下来写一个condition

03:52.510 --> 04:02.910
啊 有搜索条件 好搜索条件的话 有哪些搜索条件呢 就摸在状态里边 有关键字key 对吧 注意关键字 还有什么呢 还有就是6

04:03.910 --> 04:09.910
就是你的性别啊 你的性别啊 比方说默认值的话 负一 不限啊 不限性别

04:10.910 --> 04:23.910
然后还有什么呢 还有就是分页啊 当前的页码 当前的页码呢 默认为一 默认为一 还有limit 就是每页显示的数据量啊 这都是属于搜索条件

04:24.910 --> 04:29.910
limit 每页的数据量啊 比方说每页显示失效学生

04:30.910 --> 04:38.910
condition 就条件 搜索条件 搜索条件 好下一个啊 下一个

04:39.910 --> 04:50.910
下一个呢 就是数据了 搜索的结果 搜索结果 搜索结果的话 result 里边有这么几个东西 一个是头头

04:51.910 --> 04:53.910
一个头头 总数据量 总数据量

04:53.910 --> 05:01.910
总数据量 总数据 总数据量 总数据量

05:02.910 --> 05:10.910
好 另外一个呢 另外一个是啥呢 另外一个是那个 一个是头头 总数据量 一个是data

05:11.910 --> 05:18.910
data 表示学生的 学生数据 数据是一个数组

05:18.910 --> 05:24.910
好 无非就是这么一些状态 对吧 要关心的这些数据呢 就是这么一些数据

05:25.910 --> 05:27.910
好 那么我们现在开始来写这个 effect 这个 reducers

05:30.910 --> 05:38.910
好 reducers 里边 它有哪些 reducers 呢 要哪些改变的 无非就是一个是改变条件 一个是改变总数据量

05:39.910 --> 05:42.910
还有啥呢 也没啥了 对吧 一个是改变条件 一个是改变

05:43.910 --> 05:49.910
这个就是那个数据 搜索数据 好 我们这里写两个 set condition

05:50.910 --> 05:54.910
一个是设置条件 条件的话 你给我传一个对象进来

05:55.910 --> 06:01.910
一个新的 panel 的里边给我传一个对象进来 不要意思吧 就是一个新的 panel 的里边

06:01.910 --> 06:08.910
你就把新的条件告诉我 你给我传个对象进来 那么我会把这个对象呢 跟之前的条件来进行混合

06:09.910 --> 06:16.910
来做这么一件事 好 set condition 那么这里呢 我们怎么来做呢 反回了 就是我们的反回了新的状态

06:17.910 --> 06:24.910
反回了新的状态 是啥呢 先把原来状态展开 然后呢 这个状态里边的 condition 是不是把变了 对吧

06:25.910 --> 06:30.910
把condition这个属性改变 改变成啥呢 是不是要混合 要混合

06:30.910 --> 06:43.910
要先把之前的 set 点 那个condition 拿过来 然后再把 action 的 panel 拿过来 对不对 来进行混合 就完事了

06:44.910 --> 06:53.910
就是设置搜索条件就完事了 好 下一个 下个是设置结果 set result 同样道理

06:54.910 --> 06:59.910
你把结果呢 放到 panel 的里边 那么我直接给你反回这样的 把结果放到那儿就完事了

07:00.910 --> 07:12.910
对吧 你把结果 结果就行了 好 所以说 反回很简单 就把之前的状态展开 然后呢 再把你的 panel 的放到这儿 就是 result action 点

07:13.910 --> 07:23.910
直接把你的 panel 的作为结果 就完事了 好 这就是这么两个啊 当然了 你在这里呢 也可以进行解构 因为你这里呢 用不到 action 的类型

07:23.910 --> 07:26.910
类型 最终你可以直接解构啊 我们可以扫写点代码

07:31.910 --> 07:35.910
直接在这里解构啊 好 这里扫写一句

07:37.910 --> 07:40.910
好 那么这就是 reducers 非常非常简单啊 两个 reducers

07:41.910 --> 07:47.910
好 然后呢 还有什么副作用呢 副作用肯定有一些 因为要进行远程的 这个是请求吗 肯定要有一些副作用

07:48.910 --> 07:57.910
而 fix 副作用 好 副作用有哪些呢 一个是主要就是一个获取学生 对吧 是一个获取学生 好 来吧

07:59.910 --> 08:07.910
fetch students 获取学生 你要给我传什么东西呢 这是个副作用啊 这是个副作用

08:08.910 --> 08:14.910
第一个参数呢 是 action 内心里面呢 那以前我们就不管了啊 我们主要关心 payload

08:15.910 --> 08:24.910
这个东西要约定好 你要到底要给我传什么东西 好 第二个后面呢 就是sacar而匪的呢 对吧 sacar而匪的呢 我们先暂时不管吧 以后用到的时候再用

08:25.910 --> 08:30.910
然后呢 当然这个sacar而匪的里面肯定要用到put 先把它放着吧

08:31.910 --> 08:42.910
fetch students 你这个 payload里面会传递什么东西呢 这个约定好 要传什么了 要传就是 我觉得啥都可以不用传

08:43.910 --> 08:50.910
我真的觉得啥都可以不用传 因为我就是根据当前条件来搜索学生就完事了 对吧 根据当前条件搜索学生

08:52.910 --> 08:58.910
根据当前的条件搜索学生

09:00.910 --> 09:12.910
对吧 就说这么一件事 所以说我们这里无非就是把条件拿到 当前的条件拿到 怎么拿到当前的条件 是不是要拿数据生那个车 对吧 我们要用eo的 这里要拿到数据set

09:15.910 --> 09:22.910
当前的状态 当前的条件 肯定性 要拿到这个条件来吧 我们用eo的生那个车

09:23.910 --> 09:37.910
生那个车 这里边是不是可以写参数 对不对 可以写参数 那么这个参数呢 我们就可以写个啊 状态里边筛选出 筛选出什么呢 筛选出students 里边的condition

09:38.910 --> 09:48.910
我们把这个条件拿出来 拿到当前的搜索条件 拿到仓库中当前的搜索条件 拿到

09:49.910 --> 10:02.910
搜索条件之后呢 我们还要还要做一些事 是不是要进行搜索 用这个条件来进行搜索 好 我们要这里要用arx请求了 所以说我们需要api

10:03.910 --> 10:11.910
from 写刚 services students get search students

10:12.910 --> 10:20.910
我们需要这个函数来帮我们搜索 好来吧 search students 然后呢 这里要传一些条件 对不对

10:21.910 --> 10:30.910
page limits t sex 那么这条件是不是就是我们目前的condition 对吧 传进去完事了 但是你要注意哦 这个地方返回的是一个什么 promise

10:31.910 --> 10:38.910
对吧 是不是要等待 好 等待的时候你要怎么做呢 你是不是要用call 扣防 扣这个就是附中用

10:39.910 --> 10:44.910
扣这个就是affect来进行调用这个函数 好来吧 yield call

10:45.910 --> 10:53.910
然后调了哪个函数 search students 参数的话就是condition 我们这样调用 好 返回的结果呢 保存到results里边

10:54.910 --> 11:03.910
保存到就是结果里边 然后保存到结果里边 然后再干嘛 是不是要触发x 呢 要触发x 把这个结果设置到仓库里边去

11:04.910 --> 11:11.910
所以说我们要触发x yield put 触发x 内形呢 内形是啥 内形是不是就这个

11:14.910 --> 11:19.910
这里不用给明明空间 says result 是不是这个 内形就是这个

11:20.910 --> 11:29.910
payload 呢 之前约定好的payload里边是不是要写上两个数据 一个是什么 一个是toto 一个是data

11:30.910 --> 11:33.910
toto 是toto

11:37.910 --> 11:46.910
那么toto来自哪呢 服务器的返回结果results 里边的什么呢 里边的这个就是一个属性叫count

11:47.910 --> 11:56.910
然后data 是呢 来自于哪呢 来自于 我看一下服务器那边响应的结果 是吧 我们先暂时就写个data 嘛 暂时就写个data

11:57.910 --> 12:01.910
服务器的响应结果 我们看一下 看一下服务器的响应结果 api

12:02.910 --> 12:15.050
api students 这里没有search的 我们先看一下fantal 吧 应该它的命名都是一样的

12:16.050 --> 12:25.130
fantal 哪个key 我有点忘了

12:26.130 --> 12:33.130
data 来自于服务器的data 对吧 好 触发action 然后更改常库里边的数据

12:34.130 --> 12:40.130
这就是副作用的处理 完了 这里还有啥呢 我想想还有啥呢 目前意识办法也是想不到还有啥呢 没啥了

12:41.130 --> 12:49.130
那么我们的数据处理就写完了 写完了数据处理之后 我们再想办法把这些东西连接起来

12:50.130 --> 12:56.130
来吧 我们在containers里面是不是要进行连接 这个地方专门来做连接 一个来啊

12:57.130 --> 13:04.130
首先Pager 我们是不是要新建个 那么这里就是个典型的场景 因为Pager这个组件是不是到处都要用啊

13:05.130 --> 13:10.130
因为不仅仅是学生管理要用 可能别到这些数据管理是不是也要用 那你肯定不能在这里进行连接数据

13:11.130 --> 13:15.130
你不能把固定连接死了 连接到学生那里 那么如果其他数据怎么办呢

13:16.130 --> 13:23.130
所以说我们要用的时候再进行连接 好 这里 我们这里写个studentsPager 叫解释

13:24.130 --> 13:31.130
这就是个典型的场景 好 然后呢 我们这里还是一样啊 导入connect fromDVD

13:33.130 --> 13:38.130
然后呢 我们这里呢 还要导入这个组件Pager 导入这个组件Pager

13:39.130 --> 13:51.130
Pager from 哪个地方呢 就是来自于返回上级目录Pager 来自于这儿 好 我们现在要连接这个Pager

13:52.130 --> 13:59.130
怎么连接呢 你还是一样的啊 ExportDefault 这里边呢 有一个啥 有一个就是connect

14:00.130 --> 14:06.130
它里边是不是要传两个参数 一个是mapsDatsToProps 一个是mapsDatsTo

14:07.130 --> 14:15.130
props 一个是mapsDatsToProps 一个是这个 好 再来一个啊 是mapsDatsToProps

14:24.130 --> 14:30.570
好 两个 对吧 我们就这么格式就这样子 一个这个然后一个这个

14:31.570 --> 14:35.570
然后呢 把这个Pager 放进去 好 就完成了 好来吧

14:36.570 --> 14:43.570
第一个啊 它的属性有哪些呢 需要哪些属性呢 咱们来看一下Pager啊 里边不是需要这么一些属性吗 来啊 一个个来啊

14:44.570 --> 14:53.570
一个是current 当前的yema current 好 当前的yema来自于哪 来自于stats里边的啥

14:54.570 --> 15:02.570
来自于stats里边的啥 啊 这状态里边的students 对吧 我们的模型 秘密空间 模型里边的什么condition

15:03.570 --> 15:07.570
然后还有啥 是不是pager 对不对 当前yema

15:08.570 --> 15:20.570
好 这是current 然后呢 一个toto总数据量 总数据量又来自于哪呢 总数据量又来自于result里边的toto 对吧

15:21.570 --> 15:32.570
然后呢limit 夜容量 是不是来自于这儿 对吧 来自于这儿的limit 夜容量

15:33.570 --> 15:37.570
好 再来 还有它还需要什么 需要什么给它什么嘛

15:38.570 --> 15:46.570
panel number 数字yema 多好显示多少个 那么这个玩意呢 我就直接给你写示了啊 直接给你写示了 一共显示五个数字yema

15:47.570 --> 15:53.570
然后再来 下面是一个事件了啊 事件我就不在这里复职了 就在这里处理了

15:54.570 --> 15:59.570
然后我们看这 事件在这里处理啊 就是unpaid change

16:01.570 --> 16:07.570
当yema改变之后要运行的时间 好 那么这个事件里面呢 你会给我传一个新的yema进来 对吧

16:08.570 --> 16:15.570
你会给我传一个新的yema 那就简单了啊 那简单 我现在干嘛呢 我就是重新设置条件 重新查询就完了

16:17.570 --> 16:24.570
重新设置条件 查询条件来dispatch type 为什么呢

16:25.570 --> 16:34.570
students 命名空间加上什么set condition 设置条件 条件里面 是不是一个对象payload里面 是吧 给给对象

16:35.570 --> 16:43.570
对象里面就传一个page 等于什么new page 完事 重新设置条件 然后干嘛 重新查询 重新查询

16:43.570 --> 16:51.570
好 重新查询怎么做什么事情 重新查询做什么事情 重新查询的话 那么我们这里是不是要那个

16:52.570 --> 16:58.570
呃 又要去触发副作用的操作 对吧 type students

17:00.570 --> 17:08.570
好 哪个副作用呢 fetch students 对吧 触发副作用的操作 重新查询 这是unpaid change的事情 要做的事情

17:09.570 --> 17:18.570
好 没了 没了 来吧 我们来看一下分页啊 目前来看一下分页啊 我们在这个页面里边呢 不是有一个学生管理吧 对吧 学生管理

17:19.570 --> 17:28.570
好 这边呢 我们一个导进来啊 一个个导进来 import page from哪呢 我们从那个container里面

17:29.570 --> 17:39.570
来 从这里 component 然后呢containers 然后呢student pager

17:42.570 --> 17:54.540
来吧 我们这里把放过来 这里不加任何东西 好 放过来就行了 好 保存 然后我们看一下啊

17:55.540 --> 18:09.540
呃 我们这里运行出来没 好 学生查询啊 再刷新一下 哎 这里没出来 没出来 怎么回事 我看一下 他有没有包错啊 从运行是吧

18:10.540 --> 18:11.540
要start

18:18.420 --> 18:24.420
呃 我们的学生手页里边使用了这个student pager啊 pager 看一下为什么没出来

18:25.420 --> 18:40.980
稍等一下啊 好 学生查询 哎 这个pager跑哪去了 我们的pager跑哪去了啊 我们看一下组件结构

18:43.540 --> 18:48.540
index provider 哎 pager没了 哎 我这个pager没了 这个奇了怪啊

18:49.540 --> 19:00.540
student pager里边 我们这里也导出了呀 我们也导出了呀 为什么会 我们在这里输出一个东西啊 看一下有没有运行到这个输出的结果 保存

19:01.540 --> 19:11.980
abc 输出了 输出了 说明这里的组件导出了是没问题的呀 他为什么pager显示 哦 明白了 明白了啊

19:12.980 --> 19:19.980
因为我现在给的数据量 总数据量是0 总数据量量是0的时候 我们之前写过的是不显示一个pager 不显示的

19:20.980 --> 19:25.980
那么也就是说一开始的时候是不是要查询学生 一开始的时候就要把学生查询出来 对吧

19:26.980 --> 19:32.980
在最开始的时候就得把学生查询出来 因此呢 这个东西我们怎么做呢

19:33.980 --> 19:39.980
这个东西我们是不是也跟之前一样 在仓库里面就可以进行处理了 在仓库里面我们写上一个什么 订阅 对吧

19:40.980 --> 19:46.980
subscription 是subscription 是订阅 那么我们比方说我们一开始就是

19:47.980 --> 19:54.980
init student 初始化学生 一开始就查询学生 那么这里边解构出来一个dispatch

19:55.980 --> 20:04.980
其实一开始就干嘛了 就直接dispatch 直接触发一个type为什么呢 type为fetch student 对吧

20:05.980 --> 20:12.980
一开始就触发 在最开始的时候触发一次 触发一次 好 保存啊 这样子的

20:13.980 --> 20:18.980
哎 他这里包错了 包错了其实还好 还好 data is not defined

20:19.980 --> 20:23.980
到了吗 我们看一下网络寻求 网络寻求已经拿到了 数据已经拿到了

20:27.980 --> 20:31.980
看一下啊 data find by page

20:32.980 --> 20:37.980
哦 他是放到这里边的啊 哪里的响应结果里边 data和

20:38.980 --> 20:44.980
他是在data里边的cult和find by page 他是在放在这里的 所以说我们这里呢 稍微处理一下啊

20:44.980 --> 20:50.980
result 点什么data 点cult 然后呢是result 点data 点find

20:51.980 --> 20:53.980
by page 发的by page

20:55.980 --> 21:05.060
啊 看一下啊 那么现在呢 这里查询的结果没问题 然后我们看一下仓库啊 仓库有没有问题

21:06.060 --> 21:15.060
open your inner new panel 看一下仓库啊 仓库里边我们看一下这个地方students condition a condition没问题

21:16.060 --> 21:26.060
result 没查到数据对吧 那不太对啊 那不太对 我们这里已经查到数据了 最终是有数据的

21:27.060 --> 21:34.060
所以result这里有问题 那么我们看一下触发的action 这里就可以检查得非常清楚 他触发的action是这个

21:35.060 --> 21:44.060
panel的呢 这不是这个 触发的action是哪呢 是set result

21:45.060 --> 21:49.060
啊 是set result这个action 那但是他这里没有触发对吧

21:50.060 --> 22:04.080
type we set result这个action 但是那个action他没有触发啊 并没有触发的action 看一下怎么回事啊 我们这里触发的这个东西没问题

22:06.080 --> 22:12.080
啊 然后呢 我们得到福气的小因结果 你看在这就没了 在这就没了

22:12.080 --> 22:18.080
啊 在这就没了 your core students condition 条件传进去啊 这里我应该在这里爆错了

22:20.080 --> 22:29.080
啊 什么呢 cannot read the property count 我这里给他的字吗 是cont cont cont

22:30.080 --> 22:42.390
ok啊 result 我这里输税一下啊 输税一下result 这个result里面可能已经给你处理过了 就是把这个福气的小因结果已经给你进一步处理了

22:44.390 --> 22:58.390
啊 这这count data 这里不用起data了啊 count data 就是在这个函数里面已经把这个福气的小因结果给你进一步封装了啊 要用这个封装的结果啊 保存 再来

23:00.390 --> 23:06.390
好 那么现在我们再看一下状态 哎 现在没问题了啊 你看set result 设置result你看action 给他传的action

23:06.390 --> 23:14.390
那个行的头脱对吧 data 是不是传过去了 好 那么这里状态这里你看修点是里面result 是不是得有了有数据了 对吧

23:15.390 --> 23:21.390
好 没问题了 好 这就没问题了 好 咱们来看一下页面上吗 页面上是不是有这些东西的 对吧 是有这些东西的

23:22.390 --> 23:28.390
啊 这个央视 我的央视呢 这央视也太丑了吧 我看一下啊

23:29.390 --> 23:35.390
pager 哦 之前我们央视是这样子的啊 之前的央视要得做一下休感啊 之前的央视得做一下休感

23:36.390 --> 23:44.390
之前咱们央视不是这样子写的 对吧 这样子写的 我们这里呢 要换种写法 央视得换种写法 styles from

23:46.390 --> 23:55.390
好 这里的央视啊 要得换种写法 class name 啊 class name 这一块要替换掉啊 替换掉

23:56.390 --> 24:10.390
dollars styles item 这里是styles disabled 是disabled啊 对了 对了

24:11.390 --> 24:22.390
好 然后这里复制 复制 这里也是一样 styles item 就是央视名字 凡是出现央视名字

24:22.390 --> 24:31.390
就那样是名字的地方了 你都要用这种就是 CS is margin的这种方式 都要用这种方式 不能用之前的方式了

24:32.390 --> 24:43.390
好 这里也是一样 也是一样的 这边也是 styles item

24:44.390 --> 24:50.390
好 然后这里current也是一样 styles your current

24:51.390 --> 24:59.390
还有呢 没上了 没上了 好 保存 重新保存一下 你看是不是出来了 哎 这里 这里还有问题啊 这里还有问题

25:00.390 --> 25:09.390
哎 这里为什么还是 item 不应该还是 item啊 我看一下数字页吧 哦 这里 这里还没改过来 这里要改成

25:09.390 --> 25:18.390
改成模办之无算 这里边写上 styles 总之你要获取样式的地方了 都要用这种动态获取

25:20.390 --> 25:35.210
啊 因为你并不知道它生成出来的呀 就是那一样是名称是啥 啊 active 啊 这边啊 这边就是 styles 叫 item 还有啥 没了啊 没了 应该没了吧

25:36.210 --> 25:47.210
好 保存啊 看一下 哎 你这里是不是出来了 看一下 而且呢 我们每一次改变页码 是不是要重新改变状态 对吧 我们把这个清空啊 每一次改变页码

25:49.210 --> 26:00.210
二 第二页 你这里看不出来 但是在这里 你看是不是重新 重新获取了学生 你看 首先改变状态 状态的改过后呢 他新的状态里边condition 是不是配级变成二了 对吧

26:00.210 --> 26:08.210
对吧 然后呢 我们在 fetch student 好 然后 fetch student 完了之后啊 完了之后 那你看学生数据 他也会发生变化

26:09.210 --> 26:18.210
啊 好 那么一码这里是不是搞定了 对吧 搞定了 好 一码这里搞定了之后呢 我们在干嘛 我们现在要搞定其他的啊 比方说

26:19.210 --> 26:23.210
嗯 那个学生表格啊 学生表格

26:23.210 --> 26:34.210
学生表格 来吧 新建文件啊 student table content 要揭示 好 我们这里一样的啊 import

26:35.410 --> 26:42.730
connect from diva 啊 这些都是按部就班的说法 然后 import 啊 这里呢 是那个

26:43.930 --> 26:53.170
student table from student table 倒进来 最终我们倒出啊connect 是不是两个参数 对吧

26:53.210 --> 27:05.330
第一个参数 第二个参数 然后呢 封装什么student table 啊 其实我说到这呢 很多朋友应该是后面都能自己写了啊 应该都能自己写了 但是我这里为了课程完整还还是把说完嘛

27:05.850 --> 27:12.610
啊 然后干嘛 是不是要写两个map steps to props 对吧 嗯

27:13.930 --> 27:17.930
stats 来吧 返回什么 返回

27:18.930 --> 27:24.250
呃 我看一下这个之前写的日如箭啊 他需要什么玩意啊 他需要啥呢

27:25.290 --> 27:31.530
他需要的就无非就是一个student stuice 对吧 无非就是需要这么 那么他也不需要时间了啊 不需要时间

27:32.250 --> 27:37.690
那么就是一个stuice 好 给他就行了 对吧 给他就行了 给他啥呢 来自于状态里边的什么

27:38.170 --> 27:39.810
就是student

27:41.090 --> 27:44.970
result details 对吧 你自己看状 自己看仓库

27:45.930 --> 27:56.090
给他的事啊 给他的无非就这个玩意 对吧 所以说有了这个仓库之后呢 你的数据管理呢就非常结构就非常清晰了啊

27:56.810 --> 27:57.530
好 看一下啊

27:59.290 --> 28:07.210
然后我们在 哦 当然这里的样式还要控制一下 样式得控制一下 这里倒入 import styles

28:09.930 --> 28:14.720
好 来吧 样式控制一下啊 没了

28:16.280 --> 28:18.320
好 然后页面里边导入进来

28:19.640 --> 28:22.280
好 扛天哪儿是 哪个扛天哪儿是呢 这个

28:23.280 --> 28:32.180
复制一下 好 来吧 放上面啊 这个表格放上面 页码放下面 好 保存

28:33.780 --> 28:41.300
啊 你看 表格是不是出来了 因为他无非就是反应数据的 现在我们状态啊 那个就是数据啊 是完全分离的 你看

28:41.820 --> 28:43.340
都出来了 对吧 无异

28:45.220 --> 28:50.980
收益啊 都没有问题 那现在还剩下剩下个啥啊 不就剩下一个那个

28:51.700 --> 28:57.620
那个啊 搜索条的啊 来吧 搜索条做了啊 搜索条啊

28:58.500 --> 29:00.100
search bar

29:01.100 --> 29:04.860
student search bar 搜索条来吧 你再建一个

29:05.260 --> 29:08.900
啊 就是search bar

29:09.660 --> 29:19.980
扛天哪儿啊 应该说这样说啊 student search bar 因为那个搜索条的话不一定就是学生啊 当然这个搜索也只能是学生啊 因为有性别这些还能是啥呢

29:20.460 --> 29:21.460
student search bar

29:22.460 --> 29:25.740
但是我们还是单独用个文件啊 来给他处理数据

29:26.900 --> 29:29.580
一样的啊 这都是安不就安的写法connect

29:30.540 --> 29:41.900
front 底吧 这东西 如果你写的少的话啊 那里肯定是感觉很很深属 感觉很绕的样子 但是如果说你写多了 这个东西就没有什么好说的了啊

29:43.020 --> 29:50.540
search bar 所以说一定要多练习 咱们做开发的话 练习是非常非常重要的 你练习多了 我都不用跟你说 你都知道我要干嘛了

29:51.100 --> 29:54.020
还有什么search bar啊 就练着search bar

29:56.380 --> 30:00.660
来吧 这里呢 我们导出export

30:01.140 --> 30:10.180
default connect 两个对吧 一个是实践 一个是属性啊 来吧 一个是map state to props

30:11.460 --> 30:14.900
啊 一个是map dispatch to props

30:16.340 --> 30:18.020
连接的组件呢 就是search bar

30:19.140 --> 30:26.260
啊 导出这么一个玩意儿啊 两个东西啊 一个是map state to props state

30:30.390 --> 30:32.630
呃 然后呢 一个是map

30:33.590 --> 30:35.910
呃 dispatch to props

30:38.390 --> 30:49.740
dispatch好 来写吧 第一个啊是 第一个就是硬设属性 硬设属性 我们再看一下他有 他需要什么属性

30:50.220 --> 30:55.820
啊 关闭其他 他需要啥属性呢 他需要啥属性呢 他需要一个

30:57.100 --> 31:04.700
default value啊 就是默认的状态啊 默认值啊 需要这么一个默认值来吧 default value

31:05.580 --> 31:09.580
啊 给他这么一个属性 这个属性来自于哪呢 那无非就是来自于那个

31:10.860 --> 31:18.140
来自于的condition 对吧 condition 他需要长的一个key 一个sex 他只需要这两个 okay 我给他一个对象只需要这两个就行了啊 一个key

31:18.780 --> 31:24.780
key的话是来自于states 点什么students 点condition 点key

31:25.180 --> 31:29.420
啊 一个是什么sex啊 也是同样的地方啊 来自于同样的地方

31:30.140 --> 31:36.780
啊sex 啊 这完了对吧 然后呢 一个事件 这个事件是啥呢 这个事件呢 是那个

31:37.500 --> 31:47.820
叫on search on search 事件 他会把新的条件给你传过来啊 有这么一个事件啊 就是新的一个就是条件 这个新的条件呢 是一个对象

31:48.540 --> 31:56.540
不过这个对象啊 他里边可以 他这个组件传给你的 这个组件呢 他只给你传一个啥呀 他只给你传一个就是key和sex

31:56.700 --> 32:01.500
对吧 他没有配级啊 limits 啊那些东西啊 但是也也就说配级 limits 要不要变化

32:02.220 --> 32:09.180
哎 不要做云了啊 你坐到这儿 在查询的时候配级和 limits 要不要变化

32:10.780 --> 32:19.500
啊 要不要变化了 也嘛要变化 要回到第一页 对吧 我们做任何查询都是这么一个规则 要回到第一页

32:20.060 --> 32:26.620
嗯 然后呢 他是limit 他不用变化 所以说呢 你这个condition呢 我得给你改一改啊 我得给你加上一个

32:27.340 --> 32:33.820
配级属性 把它等于1 对吧 他是个对象嘛 对不对 啊 给他加上个配级属性等于1 然后呢 我们再去dispatch

32:35.180 --> 32:39.900
啊dispatch type 为什么呢 呃 students

32:40.620 --> 32:45.180
那个就是set set condition 啊set condition

32:45.980 --> 32:47.660
好 然后呢 呃

32:48.780 --> 32:52.940
payload 啊payload 是什么 新的条件 对吧 condition

32:53.900 --> 32:56.620
limit就用原来的 我只给你覆盖这些东西就行了

32:57.340 --> 33:04.060
好 设置到条件之后呢 是不是又要dispatch啊 又要去出发一个x 然后去出发什么type为什么

33:04.460 --> 33:08.220
fetch students 就完了啊 就完了

33:09.260 --> 33:14.460
好 我们现在在这个页面里边找到页面啊 在页面里边把导进来

33:16.140 --> 33:20.620
啊 这里是什么 students search bar

33:22.060 --> 33:28.490
好 搜起吧了 放上面 好 保存 你看页面其实很简单 页面就是组合这些组件的

33:29.130 --> 33:34.890
好 保存 顺序出来了 对吧 蓝来看一下啊 女来看一下

33:36.010 --> 33:40.410
哎 哎 等一下啊 哦 他在写关键字啊 不写关键字无效啊

33:41.210 --> 33:42.730
呃 摇摇 随便写个吧

33:43.690 --> 33:46.570
哎 这里出问题了啊 出问题了 我们看一下出了什么问题

33:47.290 --> 33:56.490
呃 首先看一下触发的x 啊 触发的x 呃 触发的x 的话 我们这里呢 有之前是 呃 触发的这个啊 set student

33:58.810 --> 34:04.090
呃 触发了这么一个x 这个x 的话 改变了状态啊 改变了条件

34:04.970 --> 34:09.850
啊 key 加进去了 six 加进去了 但是我们现在触发set fetch students的时候呢

34:10.490 --> 34:13.290
触发这个 fetch students 的事啊 我这里明白了啊

34:14.810 --> 34:20.490
所以说观察那个就是调试工具里边的 这个人大师调试工具就可以很轻松的调试到错误原因在哪

34:20.810 --> 34:25.850
好 再来看啊 你看一下 是不是只有三页了 对吧 一共只有三页

34:26.570 --> 34:31.930
好 如果说 呃 这里在写成不限啊 点击啊 你看 数多一些了 对吧

34:32.810 --> 34:38.410
好 那么最后呢 是一个盟程啊 盟程 盟程的话 就是查询的过程中呢 他要显示出来的

34:38.650 --> 34:43.290
啊 就盟程在这个主键里边啊 这个主键里边 我们的style 样式啊 也在设置一下

34:45.450 --> 34:48.170
啊 盟程样式 呃 这里呢

34:48.890 --> 34:55.050
class name 就是反而是设计到class name 的地方了 我们 全部使用啊 全部变了替换成这个

34:56.170 --> 34:59.530
啊 替换替换这个啊 然后呢 这里就是

35:00.810 --> 35:02.810
什么class name

35:03.770 --> 35:10.810
为model styles 点model 呃 然后呢 这里是class name

35:11.530 --> 35:13.610
为model center啊

35:16.250 --> 35:18.250
style styles

35:19.370 --> 35:20.570
model

35:20.570 --> 35:21.930
center

35:21.930 --> 35:23.930
好 看一下啊 看一下

35:24.650 --> 35:30.250
呃 这里边 呃 这里就写好了啊 就写好了啊 然后我们到那个

35:31.210 --> 35:37.050
这里 楼顶这里啊 楼顶这里其实也没啥啊 没啥 来吧 我们刚连接起来就行了

35:37.530 --> 35:40.570
好 就是students table

35:40.970 --> 35:42.810
楼顶啊 第二阶势

35:43.610 --> 35:49.370
啊 刚连接到学生的数据里边去给这个楼顶啊 来吧 又是前面两个固定导入的

35:50.010 --> 35:53.130
复制一下 拿过来啊 这里是一个楼顶插件

35:53.930 --> 35:55.770
啊 楼顶啊 这里呢 是

35:56.730 --> 35:58.570
楼顶 好 这里

35:59.290 --> 36:01.610
export default connect

36:02.490 --> 36:08.810
两个 一个是属性 一个是方法啊 一个是事件 它没有事件啊 没有事件 只有一个属性啊 只有一个属性音色

36:09.130 --> 36:10.490
map steps to props

36:11.930 --> 36:12.250
stats

36:14.410 --> 36:17.210
好 然后呢 就把这个写进来 然后再把这个

36:17.850 --> 36:20.090
loading写进来 就完事了啊 就完事了

36:20.570 --> 36:23.850
啊 它有什么样的一个属性呢 它就这么一个属性啊 这样我们看到

36:24.090 --> 36:28.170
这就是loading这个组件里边 它就一个属性秀啊 是否显示这个盟程

36:28.650 --> 36:33.690
好 是否显示呢 这个秀 它到底应该应该显示呢 是不是看关键取决于状态

36:34.090 --> 36:37.050
这个状态里边有这么一个东西啊 因为它默认用了这个插件

36:37.450 --> 36:41.530
啊 用了这个就是dva的插件啊 就是loading插件 默认了这个东西

36:41.770 --> 36:44.250
所以说我们在这里就可以判断啊 如果说

36:44.730 --> 36:46.890
你的模型这个students

36:47.530 --> 36:50.730
啊 如果说你这个模型students正在加载中

36:51.450 --> 36:54.490
那么我们是不是要那个 要进行那个就是

36:55.450 --> 37:00.730
要显示这个盟程 或者说我们正在触发这个 我们正在触发这个东西

37:01.610 --> 37:07.530
正在触发这个副作用啊 那么要获取学生嘛 那是不是应该显示啊 都可以啊 都可以

37:07.930 --> 37:11.930
那我们就用怎么 表演用这个吧 以前我们判断用这个玩意 对吧 那我们用这个

37:12.250 --> 37:15.290
就是stats loading 然后呢 什么

37:16.010 --> 37:22.410
呃 effects 啊 effects 什么呢 哪个属性啊 这个属性啊 这看一下这个属性是不是

37:23.210 --> 37:30.890
如果说这个属性为去的话啊 那么这个就show 否则的话就不显示 对吧 好 没了啊

37:32.090 --> 37:36.250
呃 然后我们到页面上把这个放进来啊 放进来 import

37:37.290 --> 37:39.610
students loading from

37:40.570 --> 37:43.450
it compo components

37:44.250 --> 37:46.250
container

37:48.330 --> 37:51.130
students loading uh students

37:51.690 --> 37:54.170
table loading

37:54.970 --> 37:58.500
好没了啊没了 放过来

38:00.180 --> 38:06.420
好保存啊刷新看一下 呃 然后这个显示的样式呢

38:07.940 --> 38:12.740
点查讯 他没有居中呢 他没有居中啊

38:13.460 --> 38:20.420
呃 为了让我们更加方便来调试这个东西啊 调为了方便我们调试 我这里先暂时直接把他设为q

38:21.220 --> 38:22.660
先暂时的直接把他设为q

38:23.780 --> 38:26.260
把显示出来啊 设为q 看一下为什么没居中

38:27.780 --> 38:28.740
呃 点击右键

38:30.100 --> 38:39.060
呃 这里的话这个div 呃 这个div 他没有居中 没有居中 我看一下是怎么回事呢

38:41.060 --> 38:45.300
呃 这外层的div呢 应该有一个内样式啊 应该有一个内样式

38:46.100 --> 38:49.060
这个内样是我们打印出来啊 打印出来 看一下这边那个

38:50.100 --> 38:55.860
model里边 应该是这里的内样释出的问题 我们打印一下这个打印一下这个styles

38:57.140 --> 38:57.620
styles

38:58.500 --> 39:02.020
打一下一看一看就明白了 他styles里边有什么东西啊

39:02.660 --> 39:08.420
哦 他这个属性啊 他这个属性是横杠center的吧 我写的写成小图谋命迷法了

39:08.820 --> 39:12.580
啊 他这个属性是横杠center啊 也就是说这里呢 就是

39:13.380 --> 39:21.140
他这个属性啊 他不是modelcenter 他是model横杠center 对吧 用这个属性名 好 保存啊

39:23.060 --> 39:25.780
好 再来 嗯 还是不行呢

39:27.380 --> 39:27.940
来啊

39:29.860 --> 39:35.380
modelcenter 我再看一下 再把打印出来看一下

39:37.220 --> 39:43.980
styles 这是model 嗯 这个没问题

39:44.700 --> 39:50.380
这个是modelcenter 我写错了吗 我是我是我写错了吗

39:52.300 --> 39:53.900
没问题啊 是写对啊 对啊

39:54.860 --> 39:58.300
modelcenter 但是个modelcenter的样式我们应用进去了吗

39:59.580 --> 40:02.620
哦 现在 哦 现在举动了啊 现在ok了 没问题了

40:03.580 --> 40:04.060
ok

40:05.500 --> 40:07.020
好 好 刷新

40:07.980 --> 40:09.900
好 那么现在呢 把这个正确的给加上

40:10.700 --> 40:16.380
students 楼顶啊 再加上 因为这个楼顶插件就很好用了 我们就不用自己写这个楼顶的

40:17.020 --> 40:26.060
啊 你看 第二页 第三页 第四页啊 第五页啊 除了这个好多数据一样的啊 除了学校不一样了

40:26.700 --> 40:33.340
啊 你看 是不是可以搞定了 对吧 好 这就是这一块东西 不着急啊 还没结束啊 还没下课啊 不着急

40:34.060 --> 40:35.340
因为我这里还要说一个问题

40:36.060 --> 40:44.700
还要说啥问题呢 就是说 以前呢 有同学老是问到这个问题啊 就是如果说这样说的话 哎 他自己捋一捋啊 写一写

40:45.020 --> 40:47.900
写出来了 但是有一天他到到公司里边 他发现

40:48.700 --> 40:51.420
你这个查询呢 他这个查询条件要出现在这

40:52.220 --> 40:55.020
哈哈 他的查询条件不管是什么配级啊

40:55.740 --> 40:58.940
sex啊 内面车呀这东西全部要出现在地址南

40:59.580 --> 41:03.980
要根据地址南来进行查询 这样子呢 他主要的目的呢 是为了方便分享

41:04.540 --> 41:10.060
主要的目的是为了方便分享 要不把地址南分享出去就可以啊 直接可以看到这个页面了

41:11.100 --> 41:17.420
那么如果说你要用做这种查询在无密阶屍里边又怎么做呢 其实道理呢 跟之前的是一样的

41:18.140 --> 41:21.580
我们在组首先我们要确定我们代码写在哪 这个东西代码写在哪

41:23.100 --> 41:29.020
首先我们要确定的是这个组件肯定不用关心这个 组件不用关心数据哪来的 他直接从仓库里边去

41:29.820 --> 41:34.140
所以说仓 我们要把这个仓库里边的数据啊 是不是要跟那个

41:35.180 --> 41:42.140
地址南同步啊 是吧 跟地址南同步 对吧 仓库里边的条件变了 是吧 更改地址南

41:43.020 --> 41:47.020
哎 仓库里边的条件变了 更改地址南 然后呢 仓库里边的就是那个

41:48.220 --> 41:51.420
地址南变了 同样的 是不是要更改仓库

41:52.300 --> 41:54.620
对吧 就做这么一件事啊 就做这么一件事

41:55.420 --> 42:01.100
所以说呢 这里呢 如果说要你要实现这么一个功能 我们只这个组件这一块的动作都不用动

42:01.740 --> 42:08.540
都不用动 你直接从仓库里边入手就完事了啊 直接从仓库里边入手啊 我们找到这个仓库啊

42:10.220 --> 42:15.660
这个代码呢 我得保留一下 我得保留一下 我这里比方说写上一个啊 copy吗

42:21.420 --> 42:23.340
啊 写上这么一个啊 这么一个

42:24.140 --> 42:29.740
好 那么这里呢 我们students里边 我们把改一下啊 稍微的改一下 改成跟那个地址南匹配

42:30.540 --> 42:35.980
也就是说 你之后这个reducer 我们要重新设置条件 设置完条件之后

42:37.340 --> 42:41.420
设置完条件之后 是不是得重新改变地址啊 是不是这个道理

42:42.060 --> 42:45.900
设置完条件之后 是不是得重新改变地址 对吧

42:46.540 --> 42:50.140
所以说你这一块呢 你是不是个设置条件变成了副作用了

42:51.100 --> 42:58.220
是变成副作用了 没问题吧 好 那么这里呢 我们把名称改一下啊 给大家把这个reducer里面呢 改成签计

42:58.220 --> 43:04.780
condition 而在副作用里边加一个啊 在副作用里边加一个加一个啥呢 加一个就是set

43:05.900 --> 43:09.900
set condition 就是我们之前的那个名字啊x型的名字

43:11.930 --> 43:17.610
好 我们之后呢 调用这个东西的时候set condition的时候 传上x型 是不是改变新的状态

43:18.010 --> 43:26.090
好 那么这个新的状态呢 我们干嘛呢 是不是直接去触发这个东西就完事了啊 直接去触发它就完事了 所以说我们这里

43:28.330 --> 43:37.130
put 直接去触发这个这个x型就行了 改变状态吧 改变仓库里边的就是条件好 yield 这里是副作用啊

43:38.330 --> 43:46.810
yield put 那么x型传进去 直接去触发这个只不过触发完了过后呢 我又一个副作用操作 什么操作呢

43:46.890 --> 44:00.890
我要改变地址 是不是改变地址 对吧 改变地址 好 改变地址的话 是不是因为地址它本就是改变那个路由数据 它也在仓库里边 是不是也是触发 对吧 put 什么还记得吗 是啥

44:02.650 --> 44:09.850
import from diva rotor 它里边有个什么东西 有个啥 是不是

44:10.810 --> 44:12.570
呃呃呃就是router

44:13.130 --> 44:19.770
有大个是 对吧 有这么个东西 这个东西里边提供了一个x型创建还是poohy 那么你这里可以创建一个x

44:20.970 --> 44:23.770
那么poohy到哪个地址呢 poohy到哪个地址呢

44:24.970 --> 44:34.730
好 poohy这一块的话 我们可以不用改变 就是地址的话 也其实也知道地址对吧 这个地方地址 我们也非常非常清楚 也知道地址

44:35.050 --> 44:41.370
如果说你不知道地址的话 ok 那么你poohy 那么这个地址呢 你直接写上这样子去

44:41.930 --> 44:47.610
去构建这个地址篮参数就完事了啊 去构建的 那么这个构建地址篮参数的过程呢 你可以使用那个

44:48.570 --> 44:55.690
可以使用什么 可以使用quarex运对吧 可以使用quarex运来进行构建 也可以进行手动构建啊 比如说我们这里手动构建一下嘛

44:56.250 --> 45:04.090
也很简单啊 我们忽略忽略目前的地址 反正在在当前在当前的地址上加上一些参数啊 加上一些参数

45:04.570 --> 45:12.090
来吧 配级等于啥 然后内面册等于啥 然后呢什么key等于啥 对不对 然后呢什么

45:12.810 --> 45:14.730
还有个啥 sex等于啥

45:15.690 --> 45:21.130
对吧 是不是这些东西啊意思该写过去就完事了 好 配级等于啥呢 等于那个就是

45:21.850 --> 45:26.090
呃action.payload里边的什么

45:27.530 --> 45:29.210
应该用是那个词啊 是那个词

45:29.930 --> 45:33.530
这里啊 得用是那个词 是那个词 拿到了状态

45:35.130 --> 45:38.570
来是那个词 拿到新的新的条件

45:39.850 --> 45:42.330
啊 这里呢得到condition

45:43.610 --> 45:44.810
send yield

45:45.690 --> 45:46.410
send那个词

45:48.250 --> 45:49.690
呃 state

45:50.570 --> 45:51.130
取出

45:52.090 --> 45:55.690
取出状态里边的students里边的condition

45:56.330 --> 45:57.370
啊 取出个条件

45:58.090 --> 46:02.090
好 配级来自于哪呢 是不是来自于这个condition点配级

46:02.410 --> 46:05.930
好 内面从来自于哪呢 是不是来自于condition点内面

46:06.490 --> 46:13.210
对吧 好 还在这些啊 然后key等来自于哪呢 来自于condition点key

46:13.930 --> 46:15.290
啊 这个sex来自于哪呢

46:16.570 --> 46:19.130
condition 就是这些副作用我们把它写进去

46:19.930 --> 46:21.690
啊 而外出发一个x

46:22.970 --> 46:24.730
好 那么这样子一来的话你看一下

46:25.290 --> 46:27.210
保存 我其他啥都没干 就干的这个东西

46:27.530 --> 46:29.450
把这个setcondition变成一个副作用操作了

46:29.850 --> 46:35.050
啊 哦 这里铺扯这里还不能这样写啊 还得写个type

46:35.130 --> 46:37.370
type为啥 type为这个change

46:37.850 --> 46:38.650
啊condition

46:39.450 --> 46:43.610
就是我在setcondition里的内部呢 去触发这个changecondition跟之前的效果一样

46:43.690 --> 46:45.450
只不过多加一个东西就是改变地址

46:46.170 --> 46:47.530
啊 payload

46:48.810 --> 46:51.610
payload 等于这个action的 payload

46:53.830 --> 46:55.830
好 来吧 看一下啊

46:56.790 --> 46:58.310
现在呢我们再看一下查询

46:59.430 --> 47:02.390
你看 这里地址是不是变了 对吧 地址是不是变了

47:02.870 --> 47:05.030
啊 点key 对吧 地址是不是变了

47:05.350 --> 47:06.870
然后这里关键字 摇摇

47:07.510 --> 47:10.550
你看地址是不是跟着变了 下一页啊 你看

47:10.710 --> 47:13.990
因为每一次你改变条件都是通过仓库来改变条件的

47:14.070 --> 47:18.230
所以在仓库这里我就进行统一处理了 你只要改变条件我就更新地址了

47:19.510 --> 47:21.030
但是现在只是说到了

47:21.990 --> 47:22.710
条件

47:23.430 --> 47:27.510
把当我们条件改变了 仓库的条件改变的时候更新地址了

47:28.390 --> 47:29.190
那如果说

47:29.670 --> 47:30.070
那个

47:30.870 --> 47:31.430
如果说

47:31.990 --> 47:36.230
你的地址来是直接改变的 那是不是要硬设到仓库啊

47:36.550 --> 47:37.590
是不是要对应到仓库

47:38.870 --> 47:42.790
对吧 现在我们只是说仓库变了 地址来跟着变 那如果说

47:43.590 --> 47:45.830
地址来跟着地址来变了 比方说这里

47:46.390 --> 47:46.870
第三页

47:48.710 --> 47:51.350
第三页 仓库有变化吗 是不是没有变化

47:52.310 --> 47:53.510
仓库是不是没有变化呀

47:53.910 --> 47:56.310
地址来变了过后 仓库并没有得到变

47:56.470 --> 47:57.510
并没有发生变化

47:57.910 --> 47:58.710
那么这里呢

47:59.030 --> 48:02.950
就是因为我们还没有同步地址到仓库 只同步了仓库到地址

48:03.270 --> 48:07.350
那么这里怎么来同步地址到仓库呢 这里我说一下啊 因为这也是一种常见做法

48:08.150 --> 48:12.710
那么在subscription里边 他不是给你提供了history吗 你是不是可以监听

48:13.270 --> 48:14.630
监听地址的变化

48:14.950 --> 48:16.870
对吧 是不是可以监听地址的变化

48:17.190 --> 48:17.990
好 那么这里来

48:18.390 --> 48:19.190
我们这里呢

48:19.670 --> 48:20.150
在这个

48:21.030 --> 48:22.710
subscription里边 我们把这个去掉

48:22.950 --> 48:24.950
把这个去掉 就是加上一个就是

48:25.910 --> 48:26.790
neson

48:27.190 --> 48:28.950
就是uio

48:30.150 --> 48:32.950
好 这里边有一个属像 history 把解构出来

48:33.510 --> 48:35.830
history里边不是可以监听吗 对吧

48:35.910 --> 48:36.390
neson

48:36.870 --> 48:39.430
可以监听 监听里边是不是写个函数

48:39.830 --> 48:42.390
这个函数里边是不是一个new的location

48:42.790 --> 48:43.910
new的location对象

48:44.230 --> 48:44.550
对吧

48:45.110 --> 48:45.590
好 来吧

48:46.150 --> 48:49.990
监听 只要你地址发生变化 我们就输出一个new的location 看一下吧

48:53.080 --> 48:53.560
啊 这里

48:54.280 --> 48:57.400
好 当然一开始没有就是打音学生了 不着急

48:57.880 --> 49:01.960
好 你看new的location就新的地址就得到了 对吧

49:02.280 --> 49:03.640
那么我们判断一下passname

49:03.640 --> 49:06.120
因为我们不管新其他地址 我们只关心这个地址

49:06.360 --> 49:07.160
判断一下啊

49:07.400 --> 49:09.880
如果说new的location的passname

49:10.920 --> 49:12.360
啊 不等于

49:13.000 --> 49:13.960
shake on student

49:14.680 --> 49:15.960
啊 不等于shake on student

49:16.120 --> 49:18.760
它不等于这个地址 不等于这个地址的话 我们return

49:18.760 --> 49:19.320
啥都不管

49:19.800 --> 49:20.360
啥都不管

49:20.600 --> 49:23.080
那么换句话说 如果说你访问的是这个地址

49:23.720 --> 49:26.760
那么这个地址发生变化了 它肯定能够获取到这个信息

49:27.000 --> 49:27.880
我们这里输出

49:28.440 --> 49:28.920
你看一下

49:30.280 --> 49:31.560
访问别的地址我不管

49:31.800 --> 49:33.640
但是那你这个地址发生变化 我一定要管

49:34.120 --> 49:37.320
点击 你看 是不是打印出来了新的地址

49:37.640 --> 49:38.680
啊 点击

49:38.920 --> 49:40.680
是不是打印出来了新的地址 对吧

49:41.000 --> 49:43.480
每当地址发生变化的时候 我们要干嘛

49:43.960 --> 49:47.400
要干嘛 是不是要重新从地址里面获取状态啊

49:47.800 --> 49:49.160
获取这个条件 是吧

49:49.160 --> 49:51.560
这个query对吧 是不是一个条件要获取掉

49:51.960 --> 49:53.000
获取到 对不对

49:53.160 --> 49:55.000
就要获取到这个条件 好来吧

49:55.400 --> 49:58.680
我们这里呢 写上这么一个就是query

49:59.480 --> 50:01.560
拿到这个query 快就是我们的条件嘛 对不对

50:01.800 --> 50:05.080
好 拿到这个就是new location里面的query

50:05.240 --> 50:06.920
就是我们的条件 这就是条件

50:07.160 --> 50:09.000
那么我们干嘛 是不是触发xing去

50:10.360 --> 50:12.120
去设置这个条件就完事了 对吧

50:12.360 --> 50:14.200
触发xing去设置这个条件

50:15.320 --> 50:17.560
好 触发xing去设置条件

50:18.520 --> 50:20.840
那么这里呢xing的名称叫做

50:21.800 --> 50:24.360
set set condition

50:25.080 --> 50:26.200
set condition

50:26.680 --> 50:28.280
这个change condition

50:29.960 --> 50:33.080
然后呢 payload 为啥 不就是为这个东西吗

50:33.400 --> 50:36.360
不就是为这个new location 第二什么query 对吧

50:36.360 --> 50:37.400
把条件设置进去

50:38.120 --> 50:40.520
这样子的地址一发生 只要一发生变化

50:40.520 --> 50:41.800
是不是我就触发了一个xing

50:41.800 --> 50:43.000
让它去设置这个条件

50:43.320 --> 50:44.520
保持 现在之前呢

50:44.840 --> 50:47.000
你直接改变仓库 它会捅不到地址

50:47.000 --> 50:49.560
现在你改变地址 由于这里有监听

50:49.720 --> 50:51.480
所以说 它也会捅不到仓库

50:52.520 --> 50:54.040
那么地址捅不到仓库过后

50:54.040 --> 50:55.160
那么现在有一个问题就是

50:55.880 --> 50:56.360
查询

50:57.160 --> 50:58.600
现在个问题就是查询

50:58.920 --> 50:59.960
那么要不要查询呢

50:59.960 --> 51:02.040
你看啊 你这个set condition

51:02.280 --> 51:03.720
是不是要改变地址

51:03.720 --> 51:05.560
改变地址是不是它能监听到

51:05.720 --> 51:07.880
监听到过后是不是要重新改变仓库

51:07.880 --> 51:10.040
改变仓库过后是不是要重新出去做查学

51:10.520 --> 51:11.640
对吧 是不是要做查学

51:12.760 --> 51:14.120
没问题吧 是不是要做查学

51:14.600 --> 51:16.920
好 那么这里查询是不是可以直接写到这儿了

51:16.920 --> 51:18.760
因为如果说你不写到这儿的话

51:18.840 --> 51:19.880
那么地址改变过后

51:19.880 --> 51:21.720
它不会重新做查学 你再手动写

51:22.600 --> 51:23.320
明白这个意思吗

51:25.400 --> 51:26.920
我们这里写个文字啊

51:26.920 --> 51:27.240
就说

51:28.280 --> 51:32.600
现在我们刚才做的是仓库条件变化

51:33.080 --> 51:33.880
是不是要同步

51:35.320 --> 51:35.880
同步

51:36.920 --> 51:38.760
到了 是不是到了一个地址

51:39.080 --> 51:39.480
对吧

51:39.880 --> 51:42.200
但是现在我们又同时写了一个地址监听

51:43.240 --> 51:44.360
地址变化

51:45.560 --> 51:46.200
又会干嘛

51:46.600 --> 51:50.680
又会把条件同步到仓库

51:52.360 --> 51:54.520
其实这里边有些事情做的是重复的

51:54.760 --> 51:55.960
什么地方是重复的呢

51:55.960 --> 51:58.840
比方说仓库条件变化

51:58.840 --> 52:00.040
它会更改地址

52:00.360 --> 52:03.000
但是更改地址是不是导致地址变化

52:03.000 --> 52:05.000
地址变化了它又会更改仓库

52:05.640 --> 52:07.000
它都不会无限地规

52:07.000 --> 52:08.120
都不会无限地规

52:08.120 --> 52:10.440
那么这个仓库里边的条件是不是变了两次

52:10.840 --> 52:12.120
你先让仓库条件变化

52:12.120 --> 52:13.080
然后同步到地址

52:13.080 --> 52:14.920
然后地址变化同步到仓库是变了两次

52:15.240 --> 52:17.000
那么这里我们可以取巧一点

52:17.880 --> 52:18.360
在这里

52:18.360 --> 52:19.240
在这种地形这里

52:19.240 --> 52:20.280
我们直接改变地址

52:21.240 --> 52:22.440
不写改变仓库了

52:22.440 --> 52:23.240
直接改变地址

52:23.960 --> 52:25.800
为什么可以直接改变地址呢

52:25.800 --> 52:27.960
因为你直接改变了地址过后

52:27.960 --> 52:30.520
是不是就出发了这个

52:31.080 --> 52:32.200
就监听到这个

52:32.200 --> 52:32.600
对吧

52:32.600 --> 52:33.640
是不是就出发了这个

52:33.640 --> 52:35.880
是不是就改变了仓库了

52:35.880 --> 52:36.200
对吧

52:36.200 --> 52:37.080
是不是改变仓库了

52:37.880 --> 52:39.160
所以说我们现在就是

52:40.040 --> 52:42.280
当条件变化的时候

52:43.240 --> 52:44.280
改变地址

52:44.440 --> 52:45.400
我们不改变仓库

52:46.280 --> 52:47.880
因为地址那里有监听

52:47.880 --> 52:48.680
地址一变化

52:48.680 --> 52:50.040
它会自动改变仓库

52:50.520 --> 52:50.840
对吧

52:51.320 --> 52:52.920
就是我们只能反映到地址上

52:53.320 --> 52:54.280
就形成这么一种结构

52:56.390 --> 52:56.550
好

52:56.550 --> 52:57.990
那么现在问题是要不要查询呢

52:57.990 --> 52:59.350
我们先看一下目前

53:00.950 --> 53:02.150
目前是没有什么问题的

53:02.550 --> 53:03.190
那么我们的

53:04.470 --> 53:05.830
为什么一开始没有数据呢

53:05.830 --> 53:06.950
是不是没有查询

53:06.950 --> 53:07.350
对吧

53:07.350 --> 53:07.910
没有查询

53:07.910 --> 53:09.750
没有按照这个条件来查询

53:09.750 --> 53:11.350
当我们地址变化过后

53:11.350 --> 53:12.390
是不是一定要查询

53:14.150 --> 53:14.870
肯定要查询

53:14.870 --> 53:16.470
地址发生变化一定要查询

53:16.470 --> 53:17.270
要重新查询

53:18.070 --> 53:19.030
一定会重新查询

53:20.310 --> 53:21.030
所以说呢

53:21.030 --> 53:22.550
当我们地址发生变化的时候

53:22.550 --> 53:23.270
我们要干嘛呢

53:23.270 --> 53:25.910
是不是要重新再去出发一个action

53:25.910 --> 53:26.790
Type为啥

53:26.790 --> 53:27.510
Type为就是

53:28.550 --> 53:30.150
fetch students

53:30.790 --> 53:31.510
fetch students

53:32.230 --> 53:32.870
就完了

53:32.870 --> 53:33.510
去出发这个

53:34.230 --> 53:34.390
好

53:34.390 --> 53:35.350
那么这样子一来的话

53:35.350 --> 53:37.510
我们组建那边是不是不用去手动出发了

53:37.910 --> 53:38.230
对吧

53:38.230 --> 53:39.910
组建那一块我们在contain那里边

53:40.790 --> 53:42.630
因为我们这里执行到contain那里边

53:42.630 --> 53:43.670
就是关于这个连接

53:44.870 --> 53:46.950
那么这里是不是直接不用重新查询了

53:46.950 --> 53:48.550
你直接改变条件就完事了

53:48.550 --> 53:49.670
改变条件就完事了

53:49.670 --> 53:51.590
因为改变条件它会导致什么

53:51.590 --> 53:52.550
导致改变地址

53:52.550 --> 53:54.470
而地址只要监听地址一变

53:54.470 --> 53:56.230
它会同步到仓库的条件

53:56.230 --> 53:57.510
同步仓库条件

53:58.150 --> 53:58.790
然后呢

53:58.790 --> 54:01.830
然后然后重新查询

54:02.470 --> 54:02.790
对吧

54:02.790 --> 54:04.230
它本身就会做这个事情

54:04.230 --> 54:05.430
说你不用做了

54:05.430 --> 54:07.510
你直接出发这个set condition就完事了

54:07.510 --> 54:07.670
好

54:07.670 --> 54:08.870
那么同样的道理

54:08.870 --> 54:11.430
那么这个設计8里边也不用去出发这个东西了

54:12.870 --> 54:14.470
那么这边这边没啥

54:15.830 --> 54:17.430
这边没啥

54:17.430 --> 54:17.830
ok

54:17.830 --> 54:19.030
那么你看一下

54:19.030 --> 54:19.750
现在呢

54:19.750 --> 54:21.030
如果说我们访问

54:21.030 --> 54:22.230
直接访问这个地址

54:22.230 --> 54:22.790
没问题

54:22.790 --> 54:23.190
为什么

54:23.190 --> 54:23.830
它没有条件

54:23.830 --> 54:24.790
没有条件是空对象

54:24.790 --> 54:25.430
空对象的话

54:25.430 --> 54:26.790
它就保持着默认值

54:26.790 --> 54:27.670
对吧

54:27.670 --> 54:27.910
好

54:27.910 --> 54:28.710
然后那么下一页

54:30.230 --> 54:31.590
这里出问题了

54:31.590 --> 54:32.470
这里出问题了

54:32.470 --> 54:34.950
这个当前的页码出了问题

54:34.950 --> 54:35.430
再看一下

54:37.620 --> 54:39.540
当前的页码出了问题

54:39.540 --> 54:40.820
这就重新刷新一次

54:42.100 --> 54:43.060
查到就查出来了

54:43.940 --> 54:45.060
也没问题

54:45.060 --> 54:45.460
再来

54:47.140 --> 54:47.620
没问题

54:47.620 --> 54:48.020
没问题

54:48.660 --> 54:49.060
点击

54:49.940 --> 54:51.860
这里的页码出了问题

54:51.860 --> 54:52.980
分页的时候呢

54:52.980 --> 54:55.220
我们它没有把配级变成2

54:55.220 --> 54:56.580
分页的时候没把配级变成2

54:56.580 --> 54:57.620
我们看一下这个x

54:59.140 --> 55:00.020
分页的时候

55:00.020 --> 55:00.980
我们这里是

55:02.820 --> 55:03.620
再重新再一次

55:04.900 --> 55:05.460
点击3

55:06.820 --> 55:07.060
好

55:07.060 --> 55:08.020
分页的时候出了问题

55:08.580 --> 55:08.820
好

55:08.820 --> 55:09.140
首先呢

55:09.140 --> 55:09.540
我们设置

55:09.540 --> 55:10.260
set condition

55:10.260 --> 55:10.740
x呢

55:10.740 --> 55:12.740
给它配几个稍微删了

55:12.740 --> 55:13.860
这个没问题

55:13.940 --> 55:14.980
然后的话

55:18.060 --> 55:18.860
然后的话

55:18.860 --> 55:19.260
哦

55:19.260 --> 55:19.900
这里

55:19.900 --> 55:21.500
我再仓库这里写的有问题

55:22.300 --> 55:22.860
仓库这里

55:24.540 --> 55:25.100
仓库

55:26.060 --> 55:27.420
这个地方写的有问题

55:28.220 --> 55:28.620
就是说

55:28.620 --> 55:30.460
我这里要重新去改变地址

55:30.460 --> 55:31.820
这个逻辑是没问题的

55:31.820 --> 55:32.940
但是地址里边

55:32.940 --> 55:35.260
它是根据当前条件来得到的

55:35.260 --> 55:36.220
当前条件变没变

55:36.220 --> 55:37.180
永远都没变对吧

55:37.180 --> 55:38.540
当前条件永远都没变

55:38.540 --> 55:40.940
你得把x的pano里边条件呢

55:40.940 --> 55:43.260
是不是要重新给它盖过去

55:43.260 --> 55:43.820
对吧

55:43.820 --> 55:44.700
重新给它盖过去

55:45.580 --> 55:46.300
那么就是

55:46.300 --> 55:47.900
这要得到一个new condition

55:49.740 --> 55:50.620
new condition有什么呢

55:50.620 --> 55:52.220
等于原来的condition展开

55:52.860 --> 55:53.340
然后呢

55:53.340 --> 55:55.500
再把x的pano的展开

55:56.140 --> 55:56.700
x的

55:57.820 --> 55:59.260
pano的展开

55:59.260 --> 56:02.300
因为有x的pano里面加了新的条件进来

56:02.300 --> 56:03.260
所以说我们这里的

56:03.260 --> 56:04.460
应该用新的条件

56:04.460 --> 56:05.340
或者说我们用这样子

56:09.030 --> 56:09.910
改一下这个条件

56:10.550 --> 56:11.270
改一下这个条件

56:12.070 --> 56:12.310
好

56:12.310 --> 56:12.950
保存

56:12.950 --> 56:13.270
再来

56:15.300 --> 56:15.540
好

56:15.540 --> 56:16.420
那么现在呢

56:17.060 --> 56:18.820
一开始一没有显示对吧

56:18.820 --> 56:19.540
一没有显示

56:19.860 --> 56:20.260
二呢

56:21.860 --> 56:23.300
数据倒是显示的

56:23.300 --> 56:25.460
但是这个地方没有显示出来

56:25.460 --> 56:26.100
没有显示出来

56:26.100 --> 56:26.660
我们看一下

56:27.300 --> 56:28.260
看一下又是怎么回事

56:30.180 --> 56:31.620
这里先提交

56:31.620 --> 56:35.060
这里然后回到4

56:36.580 --> 56:36.820
好

56:36.820 --> 56:37.940
看一下触发了哪下一个性

56:38.740 --> 56:40.580
首先触发了这个set condition

56:40.580 --> 56:41.300
配起为4

56:41.300 --> 56:42.420
这个没问题吧

56:42.420 --> 56:45.060
然后我们这里触发了这个

56:46.180 --> 56:47.300
触发了

56:47.300 --> 56:48.500
因为改变了地址

56:48.580 --> 56:49.460
改变了地址之后

56:49.460 --> 56:50.580
它会触发这个

56:50.580 --> 56:51.460
会触发这个

56:52.260 --> 56:53.460
pano的为什么

56:53.460 --> 56:54.420
配起为4

56:54.420 --> 56:54.740
对吧

56:54.740 --> 56:55.540
配起为4

56:56.180 --> 56:56.820
然后这里

56:57.460 --> 56:58.820
它又触发了配起为1

56:59.620 --> 57:01.060
它先触发配起为4

57:02.900 --> 57:04.900
然后又触发了配起为1

57:04.900 --> 57:06.260
为什么会触发两个

57:06.260 --> 57:07.140
两个这样的x

57:09.640 --> 57:10.120
我看一下

57:11.400 --> 57:13.640
这里配起为4倒是没问题的呀

57:14.520 --> 57:17.960
它又触发了change condition

57:21.590 --> 57:24.150
当然这里的数据内形有问题

57:24.150 --> 57:25.510
数据内形

57:25.510 --> 57:26.390
我们要处理一下

57:26.950 --> 57:27.990
就这里的数据内形

57:27.990 --> 57:29.110
我们先处理一下再说

57:30.150 --> 57:31.590
先处理一下这里的数据内形

57:32.710 --> 57:36.070
就是在模型这里

57:36.630 --> 57:38.470
因为这里的地址难的话

57:38.470 --> 57:39.990
它的内形全是字不串

57:39.990 --> 57:42.790
全都是字不串

57:42.790 --> 57:43.190
所以说呢

57:43.190 --> 57:44.470
我们把这个query里面的东西

57:44.470 --> 57:45.110
先处理一下

57:47.740 --> 57:48.140
query

57:49.740 --> 57:51.660
拿到这个new location叫query

57:53.660 --> 57:56.620
先处理一下这里面的数据

57:57.340 --> 57:59.340
query叫什么nemet

57:59.340 --> 58:01.260
它这是一个数字

58:01.260 --> 58:02.140
它这是一个数字

58:02.700 --> 58:04.140
那么我这里呢

58:04.140 --> 58:05.580
如果说你有这个字的话

58:05.580 --> 58:06.380
你就是数字

58:06.380 --> 58:07.340
没有这个字的话

58:07.340 --> 58:08.380
你就是NAN

58:08.380 --> 58:08.860
对吧

58:08.860 --> 58:09.660
你就是NAN

58:10.460 --> 58:10.860
好

58:10.860 --> 58:11.900
然后我们这里这样吧

58:12.940 --> 58:13.580
看一下怎么弄

58:14.620 --> 58:15.580
query nemet

58:15.580 --> 58:16.540
如果说有值

58:19.830 --> 58:20.150
这样吧

58:20.870 --> 58:21.590
query nemet

58:22.630 --> 58:23.910
如果说你有值的话

58:23.990 --> 58:24.950
我就把query

58:25.670 --> 58:26.470
加个表拿式

58:26.470 --> 58:28.310
query nemet

58:28.310 --> 58:31.430
设为query nemet

58:33.430 --> 58:34.470
比较要变成一个数字

58:34.470 --> 58:35.590
转换成一个数字

58:35.590 --> 58:36.390
还有两个

58:36.390 --> 58:37.510
一个是配级

58:39.740 --> 58:40.540
一个是sex

58:44.340 --> 58:44.660
这样子

58:45.460 --> 58:47.220
首先把这个数字问题搞定

58:47.220 --> 58:49.060
数字没问题了

58:50.340 --> 58:52.260
刚才应该就是个数字的原因导致的

58:53.300 --> 58:55.460
这个数字的内部的数字的原因

58:56.260 --> 58:56.580
OK

58:56.580 --> 58:57.140
现在没问题了

58:58.420 --> 58:59.060
好

58:59.060 --> 58:59.700
那就完事了

58:59.700 --> 59:00.340
对吧

59:00.340 --> 59:00.900
那么现在呢

59:00.900 --> 59:02.100
就是根据迪士南来查询的

59:02.100 --> 59:02.500
你看

59:02.500 --> 59:04.100
现在我们迪士南保持这个

59:04.100 --> 59:04.660
然后呢

59:04.660 --> 59:05.860
关键字11啊

59:05.860 --> 59:06.740
新别女

59:06.740 --> 59:07.380
点查询

59:07.380 --> 59:07.700
你看

59:10.500 --> 59:11.620
t为11

59:11.620 --> 59:12.820
t为22

59:12.820 --> 59:13.220
新别

59:13.860 --> 59:14.260
哦

59:14.260 --> 59:15.620
这个新别还有问题啊

59:15.620 --> 59:16.340
这个新别

59:17.380 --> 59:18.020
新别

59:20.180 --> 59:20.740
sex

59:21.860 --> 59:22.500
新别这里

59:22.500 --> 59:23.300
我们看一下配纽的

59:24.500 --> 59:25.140
新别这里

59:25.140 --> 59:25.780
他为什么

59:25.780 --> 59:27.540
他把关键字读出来了啊

59:27.620 --> 59:28.820
他把关键字读出来了

59:28.820 --> 59:29.060
好

59:29.060 --> 59:29.780
大家看一下啊

59:31.300 --> 59:32.420
新别这一块

59:32.980 --> 59:33.700
sex condition

59:34.740 --> 59:35.140
x

59:35.940 --> 59:36.340
t

59:36.340 --> 59:36.980
sex 1

59:36.980 --> 59:38.260
这个都没有问题

59:38.900 --> 59:39.700
change condition

59:41.300 --> 59:41.860
t

59:41.860 --> 59:42.420
sex

59:42.420 --> 59:43.860
change condition的时候出了问题

59:44.900 --> 59:46.740
在change condition的时候出了问题

59:48.580 --> 59:49.540
我看一下啊

59:51.300 --> 59:52.820
change condition的时候

59:53.380 --> 59:54.580
在这里出了问题

59:55.540 --> 59:56.740
然后这里打印一下

59:56.820 --> 59:57.700
打印一下这个query

01:00:05.340 --> 01:00:06.380
打印一下这个query

01:00:07.260 --> 01:00:08.220
sex为22

01:00:09.340 --> 01:00:11.670
等一下

01:00:11.670 --> 01:00:12.230
不对啊

01:00:13.030 --> 01:00:15.510
那应该是我来挑转页面的时候出了问题

01:00:15.510 --> 01:00:16.790
在挑转页面的时候

01:00:16.790 --> 01:00:18.070
name是key

01:00:18.070 --> 01:00:18.390
哦

01:00:18.390 --> 01:00:18.950
这里

01:00:18.950 --> 01:00:19.670
你要是sex

01:00:19.670 --> 01:00:20.630
对吧

01:00:20.630 --> 01:00:20.870
ok

01:00:21.670 --> 01:00:21.830
好

01:00:21.830 --> 01:00:22.870
现在不会有问题了啊

01:00:23.350 --> 01:00:23.590
你

01:00:24.310 --> 01:00:24.550
好

01:00:24.550 --> 01:00:24.950
查询

01:00:24.950 --> 01:00:25.910
你看是不是出来了

01:00:25.910 --> 01:00:26.470
对吧

01:00:26.470 --> 01:00:29.190
始终保证那个条件跟地士南是一军是同步的

01:00:29.190 --> 01:00:30.790
而且这样的好处在于地士南

01:00:31.510 --> 01:00:32.790
你不要用这里刷新

01:00:33.350 --> 01:00:33.750
刷新

01:00:33.750 --> 01:00:34.070
你看

01:00:34.870 --> 01:00:36.310
是保留到这个数据啊

01:00:36.310 --> 01:00:37.750
这数据是不保留下来了

01:00:37.750 --> 01:00:38.070
对吧

01:00:38.950 --> 01:00:39.830
保留下来了

01:00:39.830 --> 01:00:39.990
好

01:00:39.990 --> 01:00:41.030
比方说我们这里第三页

01:00:41.750 --> 01:00:42.710
这里刷新

01:00:42.710 --> 01:00:43.430
刷新页面

01:00:43.430 --> 01:00:44.950
你看是不是还是读了第三页

01:00:44.950 --> 01:00:46.950
因为它始终是把地址放到仓库里边的

01:00:47.910 --> 01:00:49.030
就说一下这个问题

01:00:49.030 --> 01:00:50.790
因为这个问题有可能你们以后

01:00:50.790 --> 01:00:53.590
在后台开发的时候不太会用得到

01:00:53.590 --> 01:00:55.750
但是你在开发前台页面的时候

01:00:55.750 --> 01:00:57.670
这个东西还是蛮常见的

01:00:57.670 --> 01:00:58.390
所以给这个

01:00:58.950 --> 01:01:00.310
这个地方我给大家说一下

01:01:00.310 --> 01:01:00.950
其实

01:01:00.950 --> 01:01:02.950
组件没有发生什么变化

01:01:03.030 --> 01:01:05.270
主要是仓库发生的变化

01:01:05.270 --> 01:01:08.630
仓库里边你要想办法去统布这个地址

01:01:08.630 --> 01:01:09.830
在仓库里边完成

01:01:09.830 --> 01:01:11.110
因为地址里边的信息

01:01:11.110 --> 01:01:12.390
它也是属于仓库的

01:01:12.390 --> 01:01:13.270
也是数据

01:01:13.270 --> 01:01:15.430
所以说你要在内部去统布这些东西

01:01:16.950 --> 01:01:17.350
好了

01:01:17.350 --> 01:01:19.430
那剩下的还有一件小的事情

01:01:19.430 --> 01:01:20.630
就是这个详情

01:01:20.630 --> 01:01:21.830
这个详情

01:01:21.830 --> 01:01:23.510
这个详情的话就

01:01:23.510 --> 01:01:24.310
这个很简单啊

01:01:24.310 --> 01:01:25.270
两下就说完了

01:01:25.270 --> 01:01:27.110
这个详情是在哪个地方呢

01:01:27.110 --> 01:01:28.790
是在student table里边的啊

01:01:29.510 --> 01:01:30.790
是在student table里边

01:01:30.790 --> 01:01:31.750
我们看一下在哪啊

01:01:32.630 --> 01:01:36.070
在student table里边

01:01:36.070 --> 01:01:37.510
这里不是有个详情吗

01:01:37.510 --> 01:01:37.910
对吧

01:01:37.910 --> 01:01:39.350
操作详情

01:01:39.350 --> 01:01:39.670
好

01:01:39.670 --> 01:01:40.390
详情的话

01:01:40.390 --> 01:01:41.510
我们这里呢

01:01:41.510 --> 01:01:43.350
会使用一个超链接

01:01:43.350 --> 01:01:44.790
会使用一个超链接

01:01:44.790 --> 01:01:45.750
超链接哪来

01:01:45.750 --> 01:01:47.670
是不是来自于live link

01:01:47.670 --> 01:01:48.070
对吧

01:01:50.810 --> 01:01:52.170
是不是来自于live link

01:01:52.170 --> 01:01:53.290
from什么5米

01:01:54.490 --> 01:01:55.450
那么这个live link

01:01:55.450 --> 01:01:57.290
我们直接使用它来做的超链接

01:01:57.850 --> 01:01:58.170
然后呢

01:01:58.170 --> 01:01:59.850
把这里写成什么2

01:01:59.850 --> 01:02:00.490
对吧

01:02:00.490 --> 01:02:01.130
链接到谁

01:02:01.130 --> 01:02:02.090
哪个地址呢

01:02:02.170 --> 01:02:03.850
链接到student

01:02:03.850 --> 01:02:05.450
当然这里直接使用link就行的

01:02:05.450 --> 01:02:07.290
也没有必要写什么active

01:02:07.290 --> 01:02:08.890
也没有必要写什么active

01:02:08.890 --> 01:02:10.010
连接到学生

01:02:10.010 --> 01:02:11.530
学生会不会跟个学号

01:02:11.530 --> 01:02:11.930
对吧

01:02:11.930 --> 01:02:13.450
是不是把学号传过去

01:02:13.450 --> 01:02:15.050
把学生的学号传过去就完事了

01:02:15.050 --> 01:02:16.250
这个很简单

01:02:16.250 --> 01:02:17.130
保存

01:02:17.130 --> 01:02:17.610
好来吧

01:02:18.330 --> 01:02:19.530
现在我们点详情

01:02:19.530 --> 01:02:20.650
你看是不是传到这了

01:02:20.650 --> 01:02:21.050
对吧

01:02:21.050 --> 01:02:22.090
传到这了

01:02:22.090 --> 01:02:23.050
那么现在他告诉你

01:02:23.050 --> 01:02:24.330
这个这个地方呢

01:02:24.330 --> 01:02:25.930
是一个404

01:02:25.930 --> 01:02:26.810
没有这个就是

01:02:29.370 --> 01:02:30.970
没有这个地址

01:02:30.970 --> 01:02:33.050
我用这里多写了个s

01:02:33.050 --> 01:02:34.490
不应该写这个s

01:02:34.490 --> 01:02:35.450
多写个s

01:02:36.090 --> 01:02:36.570
好

01:02:36.570 --> 01:02:38.010
那你看点详情

01:02:38.010 --> 01:02:39.690
是不是传到修改学生业了

01:02:39.690 --> 01:02:40.090
对吧

01:02:41.050 --> 01:02:41.530
详情

01:02:41.530 --> 01:02:43.370
你看是不是找到修改学生业了

01:02:43.370 --> 01:02:44.010
对

01:02:44.010 --> 01:02:45.290
之前我们做过修改学生业

01:02:45.290 --> 01:02:46.410
就是一个动态路由

01:02:46.410 --> 01:02:47.050
就放到这了

01:02:48.090 --> 01:02:49.050
那么如果说这个页面

01:02:49.050 --> 01:02:49.770
他怎么如何来去

01:02:50.410 --> 01:02:52.410
得到修改的学生学号呢

01:02:53.210 --> 01:02:53.690
获取

01:02:55.450 --> 01:02:56.890
就是获取修改的学生学号

01:02:57.450 --> 01:02:58.410
怎么获取

01:02:58.410 --> 01:03:00.570
是不是来自于probs里边的march里边的

01:03:01.210 --> 01:03:03.530
params里边的id

01:03:05.530 --> 01:03:06.090
来自于这

01:03:07.290 --> 01:03:08.410
打印出来看一下吧

01:03:08.410 --> 01:03:08.890
probs

01:03:10.330 --> 01:03:10.810
你看一下

01:03:11.610 --> 01:03:12.570
修改学生业

01:03:12.570 --> 01:03:13.610
你看得到了probs

01:03:14.330 --> 01:03:14.650
传信

01:03:17.160 --> 01:03:18.520
你看得到了probs里边

01:03:19.080 --> 01:03:19.480
march

01:03:20.440 --> 01:03:22.280
匹配的路由params id

01:03:22.280 --> 01:03:23.080
是不是拿到了

01:03:23.080 --> 01:03:23.720
对不对

01:03:23.720 --> 01:03:23.880
好

01:03:23.880 --> 01:03:24.920
就说这里要显示

01:03:25.720 --> 01:03:27.400
就是学生学号

01:03:27.400 --> 01:03:28.360
这特别特别简单

01:03:29.560 --> 01:03:30.840
学生学号

01:03:31.480 --> 01:03:32.040
来自于

01:03:32.040 --> 01:03:32.520
来哪儿呢

01:03:34.440 --> 01:03:35.480
来自于probs

01:03:35.480 --> 01:03:36.520
叫march

01:03:37.560 --> 01:03:38.520
叫params

01:03:38.520 --> 01:03:39.240
叫id

01:03:40.600 --> 01:03:41.480
为什么叫id

01:03:41.480 --> 01:03:42.280
为什么叫id

01:03:42.280 --> 01:03:43.880
因为我这个文件名用的id

01:03:45.080 --> 01:03:45.640
你看一下

01:03:46.520 --> 01:03:47.240
修改学生业

01:03:47.240 --> 01:03:48.440
是不是拿到学号了

01:03:48.440 --> 01:03:49.080
对吧

01:03:49.080 --> 01:03:49.560
返回

01:03:50.280 --> 01:03:51.560
这里点这个学生

01:03:51.560 --> 01:03:52.600
是不是拿到这个学号了

01:03:54.280 --> 01:03:54.680
好

01:03:54.680 --> 01:03:55.320
没了

01:03:55.320 --> 01:03:56.280
那么整个项目里边

01:03:56.280 --> 01:03:56.760
我们就

01:03:56.760 --> 01:03:57.880
其实这个项目

01:03:57.880 --> 01:03:58.440
这个项目呢

01:03:58.440 --> 01:03:59.240
这个小的练习

01:03:59.240 --> 01:04:00.120
都不能出来项目

01:04:01.320 --> 01:04:01.960
虽然说

01:04:02.920 --> 01:04:04.360
做的东西呢

01:04:04.360 --> 01:04:05.640
已经做过很多次了

01:04:05.640 --> 01:04:06.120
只不过呢

01:04:06.120 --> 01:04:07.160
通过这个项目呢

01:04:07.160 --> 01:04:09.240
我们可以练习到很多很多的

01:04:10.440 --> 01:04:11.960
reacts里边的东西

01:04:11.960 --> 01:04:13.480
几乎是把如命里边的

01:04:13.480 --> 01:04:15.320
最核心的就是全部练完了

01:04:15.320 --> 01:04:17.400
包括什么就是全线路由啊

01:04:17.400 --> 01:04:18.120
登录啊

01:04:18.760 --> 01:04:20.280
就是什么央视啊

01:04:20.280 --> 01:04:20.840
还有这个

01:04:21.480 --> 01:04:22.440
模板页啊

01:04:22.440 --> 01:04:23.400
布局啊

01:04:23.400 --> 01:04:24.520
这东西全部练习到了

01:04:24.520 --> 01:04:24.920
对吧

01:04:24.920 --> 01:04:25.720
还有就是远程

01:04:25.720 --> 01:04:27.000
而且是请求啊

01:04:27.000 --> 01:04:27.960
代理啊

01:04:27.960 --> 01:04:28.600
分业啊

01:04:28.920 --> 01:04:30.120
茶区啊

01:04:30.120 --> 01:04:30.760
茶区啊

01:04:30.760 --> 01:04:31.640
这东西

01:04:31.640 --> 01:04:32.280
还仓库

01:04:32.280 --> 01:04:33.880
仓库跟地址同步啊

01:04:33.880 --> 01:04:34.760
还有楼顶对吧

01:04:34.760 --> 01:04:36.200
全部人都练习到了

01:04:36.200 --> 01:04:36.680
所以说呢

01:04:36.680 --> 01:04:37.240
这个项目呢

01:04:37.240 --> 01:04:38.840
非常非常具有代表性

01:04:38.840 --> 01:04:40.440
如果说你能够独自把这个

01:04:41.080 --> 01:04:42.280
把这个练习做完

01:04:42.280 --> 01:04:43.080
包括登录啊

01:04:43.080 --> 01:04:44.440
包括全线路有这些乱七八糟

01:04:44.440 --> 01:04:45.720
就是我做的这些东西

01:04:45.720 --> 01:04:46.520
把全部做完

01:04:47.160 --> 01:04:48.440
那么你无米结实

01:04:48.440 --> 01:04:49.960
我可以负责任的告诉你

01:04:49.960 --> 01:04:51.240
你就没有什么问题了

01:04:51.240 --> 01:04:52.360
就没有什么问题了

01:04:52.360 --> 01:04:53.640
无米结实还没有结束

01:04:53.640 --> 01:04:54.600
后边几节课呢

01:04:55.400 --> 01:04:57.080
我再扩展一些东西吧

01:04:57.240 --> 01:04:59.160
这些东西的也很少用

01:04:59.160 --> 01:05:00.520
我们常见的最核心的功能

01:05:00.520 --> 01:05:01.240
就是这么一些

01:05:01.240 --> 01:05:02.040
这些东西

01:05:02.040 --> 01:05:03.320
我们目前这节课

01:05:03.320 --> 01:05:04.280
以及这些和之前

01:05:04.280 --> 01:05:05.800
讲了无米结实的东西呢

01:05:05.800 --> 01:05:07.800
都是会影响到你开发

01:05:07.800 --> 01:05:09.480
以及以后在上班的时候呢

01:05:09.480 --> 01:05:11.160
就在公司里面做项目的

01:05:11.160 --> 01:05:12.520
这是最核心的

01:05:12.520 --> 01:05:13.400
后边几节课呢

01:05:13.400 --> 01:05:14.840
我们扩展一些东西就行了

01:05:14.840 --> 01:05:15.320
好吧

01:05:15.320 --> 01:05:16.040
下来

01:05:16.040 --> 01:05:16.760
不要忘记了

01:05:16.760 --> 01:05:17.960
一定要把这个

01:05:18.920 --> 01:05:20.840
学生管理系统给他做一遍

01:05:20.840 --> 01:05:21.720
你把做完了

01:05:21.720 --> 01:05:23.160
以及基本上以后边

01:05:23.160 --> 01:05:24.760
你至少不用怕了

01:05:24.760 --> 01:05:25.800
随便哪一个什么东西

01:05:25.800 --> 01:05:26.760
你只要用无米结实

01:05:27.480 --> 01:05:29.800
基本上就把这些东西用到了

01:05:29.800 --> 01:05:30.840
一定要把它做一遍

