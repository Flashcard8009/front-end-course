WEBVTT

00:01.010 --> 00:03.010
hello 大家好

00:03.010 --> 00:05.010
上一集我们说的普林姆酸法

00:05.010 --> 00:07.010
普林姆酸法加点法

00:07.010 --> 00:11.010
这一集我们来说加编法

00:11.010 --> 00:20.340
Colus Carl酸法

00:20.340 --> 00:27.340
俗称加编法

00:27.340 --> 00:29.340
还是这个图

00:29.340 --> 00:33.340
Colus Carl酸法不是一个点为起点

00:33.340 --> 00:37.340
先找到全局中最短的编

00:37.340 --> 00:39.340
4 5 6 7 8

00:39.340 --> 00:41.340
哪个编最短的4最短

00:41.340 --> 00:44.340
我们先把最短的编纳进来

00:44.340 --> 00:46.340
肯定没有错

00:46.340 --> 00:49.340
这样的话连同了两个点

00:49.340 --> 00:52.340
然后再找第二短的编

00:52.340 --> 00:54.340
再找第二短的编

00:54.340 --> 00:55.340
5

00:55.340 --> 00:57.340
是吧

00:57.340 --> 01:00.340
把这个编连进来

01:00.340 --> 01:01.340
到了

01:01.340 --> 01:02.340
他要求什么呢

01:02.340 --> 01:03.340
你连的编

01:03.340 --> 01:05.340
两边的点

01:05.340 --> 01:07.340
至少得有一个新的点

01:07.340 --> 01:11.610
1

01:11.610 --> 01:16.070
什么步骤呢

01:16.070 --> 01:19.070
选择最短的编

01:19.070 --> 01:22.070
进行连结

01:22.070 --> 01:24.070
然后2

01:24.070 --> 01:26.070
要保证

01:26.070 --> 01:28.070
这个编

01:28.070 --> 01:31.070
连结的两端

01:31.070 --> 01:33.070
至少

01:33.070 --> 01:36.070
有一个点

01:36.070 --> 01:39.070
是新的点

01:39.070 --> 01:42.070
或者

01:42.070 --> 01:44.070
或者

01:44.070 --> 01:46.070
要

01:46.070 --> 01:47.070
或者

01:47.070 --> 01:50.770
这个编

01:50.770 --> 01:52.770
是将

01:52.770 --> 01:54.770
两个部落

01:54.770 --> 01:58.770
进行连结的

01:58.770 --> 02:00.770
就像下一个

02:00.770 --> 02:01.770
4

02:01.770 --> 02:02.770
把A和B连起来了

02:02.770 --> 02:03.770
是吧

02:03.770 --> 02:04.770
组成一个红色部落

02:04.770 --> 02:05.770
比如说5

02:05.770 --> 02:07.770
将

02:07.770 --> 02:09.770
C和D连起来

02:09.770 --> 02:11.770
组成了一个粉色部落

02:11.770 --> 02:15.040
对吧

02:15.040 --> 02:16.040
下一步我们连谁

02:16.040 --> 02:17.040
6778

02:17.040 --> 02:19.040
我们要用6连起来是吧

02:19.040 --> 02:20.040
这条编

02:20.040 --> 02:22.040
虽然左侧的也是被连结的

02:22.040 --> 02:23.040
右侧的也是被连结的

02:23.040 --> 02:24.040
但是

02:24.040 --> 02:25.040
他们被连结的

02:25.040 --> 02:27.040
出资于两个部落

02:27.040 --> 02:29.040
一个是出资于红色部落

02:29.040 --> 02:31.040
或者是出资于粉色部落

02:31.040 --> 02:32.040
是吧

02:32.040 --> 02:33.040
或者这两个编

02:33.040 --> 02:35.040
是将两个部落进行连结

02:35.040 --> 02:37.040
所以6可以进行连结

02:37.040 --> 02:39.040
一旦进行连结了之后

02:39.040 --> 02:41.040
他们就变成一个部落了

02:41.040 --> 02:42.040
是吧

02:42.040 --> 02:43.040
他们都连结在一起了

02:43.040 --> 02:44.040
下一个就转了编

02:44.040 --> 02:45.040
假如说7

02:45.040 --> 02:46.040
看7

02:46.040 --> 02:47.040
7

02:47.040 --> 02:48.040
首先

02:49.040 --> 02:50.040
要保证

02:50.040 --> 02:52.040
编的两端至少有一个点是新的点

02:52.040 --> 02:53.040
能保证吗

02:53.040 --> 02:54.040
不能是吧

02:54.040 --> 02:55.040
两个编都已经连结了

02:55.040 --> 02:57.040
或者编

02:57.040 --> 02:59.040
是将两个部落进行连结的

02:59.040 --> 03:01.040
它是将两个部落进行连结的

03:01.040 --> 03:02.040
不是

03:02.040 --> 03:03.040
是吧

03:03.040 --> 03:04.040
他们A B C D

03:04.040 --> 03:05.040
现在是一个部落

03:05.040 --> 03:06.040
所以编不行

03:06.040 --> 03:07.040
再看下一个

03:07.040 --> 03:09.040
这个7

03:09.040 --> 03:10.040
再看下一个

03:10.040 --> 03:11.040
这个7也短

03:11.040 --> 03:12.040
是吧

03:12.040 --> 03:13.040
这个7是不是有一个是新的点

03:13.040 --> 03:14.040
把它连结

03:14.040 --> 03:18.760
连结成功

03:18.760 --> 03:21.760
你看科鲁斯卡尔的算法是A B B D

03:21.760 --> 03:23.760
D C D

03:23.760 --> 03:25.760
普利姆算法也是A B B D

03:25.760 --> 03:26.760
D C D

03:26.760 --> 03:27.760
我们会发现

03:27.760 --> 03:29.760
科鲁斯卡尔的算法和普利姆算法

03:29.760 --> 03:32.760
最后得到的结果是一样的

03:32.760 --> 03:34.760
只是实现的方式不同

03:34.760 --> 03:36.760
只是实现的方式不同

03:36.760 --> 03:38.760
所以科鲁斯卡尔的算法和普利姆算法

03:38.760 --> 03:40.760
我们应该能得到相同的一个结果

03:40.760 --> 03:41.760
是吧

03:41.760 --> 03:43.760
然后第四步就是重复

03:43.760 --> 03:44.760
一到三

03:44.760 --> 03:52.760
直到将所有的点都连结

03:52.760 --> 03:54.760
到一起

03:54.760 --> 03:56.760
这就是科鲁斯卡尔的算法

03:56.760 --> 03:57.760
俗成加编法

03:57.760 --> 03:58.760
科鲁斯卡尔的算法

03:58.760 --> 04:00.760
是一条编一条编往上加的

04:00.760 --> 04:02.760
普利姆算法是一个点

04:02.760 --> 04:03.760
一个点往上加的

04:03.760 --> 04:04.760
他们是不一样的

04:04.760 --> 04:06.760
我们现在从理论上

04:06.760 --> 04:08.760
已经学了普利姆算法

04:08.760 --> 04:09.760
和科鲁斯卡尔的算法

04:09.760 --> 04:10.760
是怎么回事

04:10.760 --> 04:11.760
那么下集开始

04:11.760 --> 04:13.760
我们将分明用代码

04:13.760 --> 04:15.760
来实现普利姆算法

04:15.760 --> 04:16.760
和科鲁斯卡尔的算法

04:16.760 --> 04:18.760
我们下集继续

