WEBVTT

00:01.070 --> 00:06.430
hello 大家好 上一集咱们说了一个深搜广搜的概念

00:06.430 --> 00:08.190
但是我们没有说代码如何实现

00:08.190 --> 00:11.870
这集我们就来说如何在代码里实现深搜原搜索

00:11.870 --> 00:14.350
首先不管怎么样

00:14.350 --> 00:16.350
我们先创建一个note结链

00:16.350 --> 00:21.260
这把人还是得多敲 还是得再默计一遍

00:21.260 --> 00:26.860
也别嫌我续的 这个东西不练出不来

00:27.820 --> 00:31.980
This is the right等于

00:31.980 --> 00:34.300
有太多的同学可能许完了一遍了之后

00:34.300 --> 00:36.300
他们敲的辨识都没有我敲的多

00:36.300 --> 00:39.100
只能是强者越强 弱者越弱

00:39.100 --> 00:41.580
所以说咱们还是多练了

00:41.580 --> 00:44.060
看这个BBT

00:44.060 --> 00:46.300
A,C,E,B 是吧

00:46.300 --> 00:49.900
一个A,B,C,D

00:49.900 --> 00:53.180
什么来着 A,B,C,D,E,F,G 是吧

00:53.900 --> 00:56.540
break A等于用一个note A

00:56.540 --> 01:04.190
A,B,C,D,E,F,G

01:04.190 --> 01:13.470
A,B,C,D,E,F,G

01:13.470 --> 01:20.960
A,B,C,D,E,F,G

01:20.960 --> 01:24.880
A,L,C,A

01:24.880 --> 01:27.840
A,R,B

01:27.840 --> 01:33.040
C,L,F

01:33.760 --> 01:47.200
C,R,G,B,L,D,E,F,G

01:47.200 --> 01:49.360
这是一个二段处

01:49.360 --> 01:52.000
是吧 我们要开始对它进行深搜

01:52.000 --> 01:56.800
方式div search

01:56.800 --> 01:59.360
我传入一个root

01:59.680 --> 02:04.000
看深搜就是我当我希望找到一个值

02:04.000 --> 02:05.920
穿这个target

02:05.920 --> 02:08.400
我要希望返回的是这个target

02:08.400 --> 02:09.840
到底在不在这棵树里

02:09.840 --> 02:11.520
比如说我希望

02:11.520 --> 02:12.640
答应一下什么呢

02:12.640 --> 02:14.160
console了点log

02:14.160 --> 02:16.560
A这棵树

02:16.560 --> 02:17.920
我问你

02:17.920 --> 02:20.560
F再不在这个树里

02:20.560 --> 02:23.920
F再不在A为根结点的这棵树里

02:23.920 --> 02:25.200
怎么办

02:25.360 --> 02:26.800
看一下eve

02:26.800 --> 02:28.960
root如果等于con

02:28.960 --> 02:30.400
怎么办

02:30.400 --> 02:31.600
我连树都没有

02:31.600 --> 02:32.800
你问我啥我都不在

02:32.800 --> 02:34.800
这边就return false了对吧

02:34.800 --> 02:36.240
我连树都没有是吧

02:36.240 --> 02:38.000
你想查什么都是false

02:38.000 --> 02:40.080
如果有的话呢

02:40.080 --> 02:41.840
我们来判断一下eve

02:41.840 --> 02:43.360
root的value

02:43.360 --> 02:46.160
是否等于target

02:46.160 --> 02:47.600
如果相等呢

02:47.600 --> 02:48.960
如果它是值相等

02:48.960 --> 02:50.000
那把什么再是吧

02:50.000 --> 02:50.800
return true

02:51.760 --> 02:54.080
如果根结点的值

02:54.080 --> 02:56.240
不相等怎么办

02:56.240 --> 02:58.160
不相等怎么办

02:58.160 --> 03:00.560
是不是我得先看它左子树

03:00.560 --> 03:01.120
有没有

03:01.120 --> 03:02.960
再看它右子树有没有

03:02.960 --> 03:04.320
deeper-search

03:04.320 --> 03:05.680
root的left

03:05.680 --> 03:06.560
是吧

03:06.560 --> 03:08.480
再deeper-search

03:08.480 --> 03:12.160
root的right

03:12.160 --> 03:13.040
是吧

03:13.040 --> 03:15.680
root一下left

03:15.680 --> 03:18.320
root一下right

03:18.320 --> 03:18.800
然后呢

03:18.800 --> 03:20.400
它到底存不存在呢

03:20.400 --> 03:22.160
我得return一个什么呀

03:22.160 --> 03:25.360
不是必须得左子树和右子树

03:25.360 --> 03:26.800
得同时存在是吧

03:26.800 --> 03:28.720
左子树和右子树

03:28.720 --> 03:32.000
任意一个树中存在这个值

03:32.000 --> 03:34.160
是不是就代表存在

03:34.160 --> 03:36.000
所以我得return的是什么

03:36.000 --> 03:37.120
是left

03:37.120 --> 03:38.560
或

03:38.560 --> 03:39.680
right是吧

03:39.680 --> 03:40.480
或是什么

03:40.480 --> 03:41.520
一真则真

03:41.520 --> 03:41.840
对吧

03:41.840 --> 03:42.720
有一个存在

03:42.720 --> 03:43.840
我这个树也就是存在

03:43.840 --> 03:44.240
是吧

03:44.240 --> 03:45.760
语是一假则假是吧

03:45.760 --> 03:46.880
有一个不存在

03:46.880 --> 03:47.520
就则不存在

03:47.520 --> 03:48.720
那肯定不是这个问题

03:48.720 --> 03:49.280
对吧

03:49.360 --> 03:50.960
我们用或是吧

03:50.960 --> 03:51.840
左边存在

03:51.840 --> 03:52.880
或者是右边存在

03:52.880 --> 03:54.400
就是触或者false的时候

03:54.400 --> 03:55.200
但它就是触

03:55.200 --> 03:56.000
对吧

03:56.000 --> 03:57.360
return

03:57.360 --> 03:59.600
这就是生动员搜索

03:59.600 --> 04:06.670
来看一下啊

04:06.670 --> 04:07.950
诶打错了啊

04:07.950 --> 04:10.110
deeper-search

04:10.110 --> 04:11.550
a

04:11.550 --> 04:15.680
f

04:15.680 --> 04:18.830
oh

04:18.830 --> 04:21.470
first

04:21.470 --> 04:23.710
acd

04:23.710 --> 04:24.590
abcd

04:24.590 --> 04:25.390
efg是吧

04:25.390 --> 04:29.150
这个一看就是出现了问题了是吧

04:29.710 --> 04:30.830
出现了问题了

04:30.830 --> 04:32.350
那我们的意思来打印一下

04:32.350 --> 04:35.710
可能搜了

04:35.710 --> 04:38.510
点log

04:38.510 --> 04:41.310
root的value

04:41.310 --> 04:43.710
和target

04:43.710 --> 04:45.070
看一下啊

04:45.070 --> 04:47.710
哪里出错了

04:47.710 --> 04:49.230
我这target都是安定犯的

04:49.230 --> 04:49.550
是吧

04:49.550 --> 04:51.150
到我继续往下传的时候

04:51.150 --> 04:52.670
我没有把这个target的传进去

04:52.670 --> 04:56.660
好

04:56.660 --> 04:57.460
好了

04:57.460 --> 04:59.780
我把这个打进去一下

04:59.780 --> 05:02.100
那这回我们再看啊

05:02.100 --> 05:04.660
能不能打到正确的结果

05:04.660 --> 05:06.580
是不是触f在里面是吧

05:06.580 --> 05:07.220
我找个g

05:07.220 --> 05:09.540
看看g在里面

05:09.540 --> 05:10.820
是不是也是触g在里面是吧

05:10.820 --> 05:13.380
我看一个n

05:13.380 --> 05:15.940
n应该不在里面是吧

05:15.940 --> 05:17.140
first对吧

05:17.140 --> 05:18.740
n不在里面

05:18.740 --> 05:20.660
看下这个逻辑

05:20.660 --> 05:22.580
跟什么比较像

05:22.580 --> 05:26.780
这个逻辑跟什么比较像

05:26.780 --> 05:28.780
空的话就返回是吧

05:28.780 --> 05:30.620
不空的话比较当前

05:30.620 --> 05:31.180
然后呢

05:31.180 --> 05:32.700
看看左边看看右

05:32.780 --> 05:34.940
这什么

05:34.940 --> 05:37.020
前续变例是吧

05:37.020 --> 05:38.620
有没有印象

05:38.620 --> 05:40.700
深度优先搜索

05:40.700 --> 05:43.500
和前续变例的顺序是一样的

05:43.500 --> 05:48.140
对于二差数来说

05:48.140 --> 05:51.660
深度优先搜索

05:51.660 --> 05:57.980
和前续变例的顺序

05:57.980 --> 05:59.660
是一样的

05:59.660 --> 06:00.620
也就是说我们用的是

06:00.620 --> 06:02.140
前续变例变例了一遍

06:02.140 --> 06:04.300
只不过我在输出的地方

06:04.300 --> 06:06.540
前续变例这块是输出对吧

06:06.540 --> 06:08.860
我现在呢给他判断了一下

06:08.860 --> 06:10.540
把输出变成了一个判断人

06:10.540 --> 06:11.100
是吧

06:11.100 --> 06:11.980
之前是输出

06:11.980 --> 06:13.740
因为我没没打算用他做什么

06:13.740 --> 06:14.940
就给他答应出来的

06:14.940 --> 06:15.340
现在呢

06:15.340 --> 06:16.620
我是用他做一件事情

06:16.620 --> 06:18.380
就是比较一下

06:18.380 --> 06:19.100
是吧

06:19.100 --> 06:21.180
所以前续终续后续技术

06:21.180 --> 06:22.540
在二差数里面

06:22.540 --> 06:25.500
会非常非常广泛的用到

06:25.500 --> 06:27.100
大家一定要学好

06:27.100 --> 06:28.220
计劳

06:28.220 --> 06:29.180
就像这个d不测识

06:29.180 --> 06:31.660
我们就用到了前续变例

06:31.740 --> 06:33.980
这就是前续变例的一个算法

06:33.980 --> 06:37.260
下一集我们来说终续变例的算法

06:37.260 --> 06:38.780
我们来说终续变例是错的

