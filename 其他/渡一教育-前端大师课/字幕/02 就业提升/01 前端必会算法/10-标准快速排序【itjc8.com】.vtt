WEBVTT

00:00.300 --> 00:02.300
Hello 大家好

00:02.300 --> 00:04.300
这一集我们继续来说快牌

00:04.300 --> 00:07.300
上一集我们说了一个快牌的思想

00:07.300 --> 00:09.300
说了一个快牌的思想

00:09.300 --> 00:13.300
然后简单就是将顺序做了一下

00:13.300 --> 00:15.300
写了一个简单的一个快牌的程序

00:15.300 --> 00:18.300
上一集的快牌的程序是属于逻辑上

00:18.300 --> 00:20.300
非常简单 非常好想

00:20.300 --> 00:22.300
相对于这个来说

00:22.300 --> 00:24.300
相对于这个来说是非常简单

00:24.300 --> 00:27.300
我们这一集来说一下标准快牌是什么样的

00:28.300 --> 00:30.300
好了 还是这个数组

00:30.300 --> 00:32.300
上一集我们说选出来一个leader

00:32.300 --> 00:34.300
小的站左边 大的站右边 是吧

00:34.300 --> 00:37.300
但是这样我们会做出一个左边数组

00:37.300 --> 00:39.300
和一个右边数组

00:39.300 --> 00:43.300
标准快牌是不创建新的数组

00:43.300 --> 00:46.300
就是对原始数组进行操作

00:46.300 --> 00:48.300
就是对原始数组进行操作

00:48.300 --> 00:50.300
你看一下它会怎么操作

00:50.300 --> 00:52.300
还是 头一个是leader

00:52.300 --> 00:54.300
leader就是leader 是吧

00:54.300 --> 00:56.300
然后看

00:56.300 --> 00:58.300
做两个指针

00:58.300 --> 01:00.300
做两个指针

01:00.300 --> 01:05.020
我给它弄小一点

01:10.340 --> 01:13.340
然后给它旋转一下

01:15.340 --> 01:20.260
旋转在哪呢

01:20.260 --> 01:24.270
角度

01:24.270 --> 01:26.270
90

01:27.270 --> 01:29.270
它有两个指针

01:29.270 --> 01:31.270
一个指针是life的指针

01:31.270 --> 01:36.290
我们假设这个就叫leader

01:37.290 --> 01:39.290
好吧leader指针

01:44.330 --> 01:52.380
怎么变成这个样子

01:52.380 --> 01:54.380
leader

01:54.380 --> 01:56.380
写不进去呢

01:57.380 --> 01:59.380
这也太丑了吧

01:59.380 --> 02:01.380
你就当这个是leader吧

02:01.380 --> 02:03.380
蓝色 我给它变个颜色吧

02:03.380 --> 02:05.380
leader是绿色的

02:05.380 --> 02:07.380
然后再做一个一二的

02:07.380 --> 02:09.380
叫做red

02:09.380 --> 02:11.380
右侧的指针 是黄色的

02:12.380 --> 02:14.380
两个指针 是吧

02:14.380 --> 02:16.380
我们希望的是什么呢

02:16.380 --> 02:18.380
左侧的东西都比4小

02:18.380 --> 02:20.380
所以如果4

02:20.380 --> 02:22.380
1比4小就跳过

02:22.380 --> 02:24.380
看6比4大

02:24.380 --> 02:26.380
按照道理说

02:26.380 --> 02:28.380
6应该放在右边 是吧

02:28.380 --> 02:30.380
但是放在哪呢

02:30.380 --> 02:32.380
7比4大

02:32.380 --> 02:34.380
7本来就应该在右边 是吧

02:34.380 --> 02:36.380
8比4大

02:36.380 --> 02:38.380
8也在右边 是吧

02:38.380 --> 02:40.380
2比4小

02:40.380 --> 02:42.380
2不应该出现在这个位置

02:42.380 --> 02:44.380
而6应该往右边走

02:44.380 --> 02:48.330
所以把2和6后换

02:48.330 --> 02:50.330
2和6

02:50.330 --> 02:52.330
然后再往这走

02:52.330 --> 02:54.330
9比4大

02:54.330 --> 02:56.330
9不应该出现在这

02:56.330 --> 02:58.330
然后看这个3

02:58.330 --> 03:00.330
3比4小

03:00.330 --> 03:02.330
3是不是比4小

03:02.330 --> 03:04.330
3也不该出现在这 是吧

03:04.330 --> 03:06.330
3应该跟9进去

03:06.330 --> 03:08.330
是吧

03:08.330 --> 03:10.330
这样的话

03:10.330 --> 03:12.330
我们就把它变成

03:12.330 --> 03:14.330
都连在一块

03:14.330 --> 03:16.330
比4大的

03:16.330 --> 03:18.330
也都连在一块

03:18.330 --> 03:20.330
比4小的都连在一块

03:20.330 --> 03:22.330
比4大的也都连在一块

03:22.330 --> 03:24.330
OK吗

03:24.330 --> 03:26.330
然后我们找到一个点

03:26.330 --> 03:28.330
找到一个什么点呢 找到这个点

03:28.330 --> 03:30.330
让这个点跟4进去就换

03:30.330 --> 03:32.330
3跑到这来

03:32.330 --> 03:34.330
4跑到这来

03:34.330 --> 03:36.330
进行一下这样的换

03:36.330 --> 03:38.330
这样的话比4小的都在4的左边

03:38.330 --> 03:40.330
比4大的都在4的右边

03:40.330 --> 03:42.330
第一遍

03:42.330 --> 03:44.330
第二遍我们将

03:44.330 --> 03:46.330
Life的变成这

03:46.330 --> 03:48.330
Red变成这

03:48.330 --> 03:50.330
是什么 我们把这一部分

03:50.330 --> 03:52.330
看成一个单独的数组

03:52.330 --> 03:54.330
是吧 数组

03:54.330 --> 03:56.330
可以只研究其中的一部分 是吧

03:56.330 --> 03:58.330
局部的某一部分

03:58.330 --> 04:00.330
给它一个起点 给它一个终点就行

04:00.330 --> 04:02.330
是吧 我不用研究全集

04:02.330 --> 04:04.330
我只要研究一个局部 一个子集就OK

04:04.330 --> 04:06.330
然后这是两个子集

04:06.330 --> 04:08.330
所以将不同的子集

04:08.330 --> 04:10.330
可以传入下一层

04:10.330 --> 04:12.330
进行判断

04:12.330 --> 04:14.330
这是标准快排的一个思想

04:14.330 --> 04:16.330
可以回去再多多的去

04:16.330 --> 04:18.330
演练几遍

04:18.330 --> 04:20.330
我们如果以这个子集传进去

04:20.330 --> 04:22.330
什么意思呢 比如我AR

04:22.330 --> 04:24.330
还是传AR

04:24.330 --> 04:26.330
但是我得传两个值

04:26.330 --> 04:28.330
一个Begin一个按的

04:28.330 --> 04:30.330
从哪开始到哪结束

04:30.330 --> 04:32.330
记住啊这个Begin和按的

04:32.330 --> 04:34.330
所有的数学也好

04:34.330 --> 04:36.330
物理学也好 还是计算机科学也好

04:36.330 --> 04:38.330
我们尽量都是传左开右B去减

04:45.370 --> 04:47.370
记住啊我们默认的

04:47.370 --> 04:49.370
都是左开右B去减

04:49.370 --> 04:51.370
会不会不记得什么叫做左开右B去减

04:51.370 --> 04:53.370
这是初中的数源指示

04:53.370 --> 04:55.370
是吧 左

04:55.370 --> 04:57.370
可以 写错了

04:57.370 --> 05:02.730
左B又开去减了

05:02.730 --> 05:04.730
左B又开去减了

05:04.730 --> 05:06.730
左边的能取到

05:06.730 --> 05:08.730
右边的取不到

05:08.730 --> 05:10.730
就像我们的数组

05:10.730 --> 05:12.730
0开始取 能取到

05:12.730 --> 05:14.730
右边的小UAR点烂次

05:14.730 --> 05:16.730
AR点烂次取不到

05:16.730 --> 05:18.730
这个就叫左B又开去减了

05:18.730 --> 05:20.730
左边的数能取到

05:20.730 --> 05:22.730
右边的数取不到

05:22.730 --> 05:24.730
比如说我想看

05:24.730 --> 05:26.730
这三位那应该是几啊

05:26.730 --> 05:28.730
0到4是吧

05:28.730 --> 05:30.730
0到3是吧

05:30.730 --> 05:32.730
0号位1号位2号位

05:32.730 --> 05:34.730
取不到3

05:34.730 --> 05:36.730
这叫左B又开

05:36.730 --> 05:38.730
0到3但是能取到0

05:38.730 --> 05:40.730
好了 我们来看一下

05:40.730 --> 05:42.730
这个

05:42.730 --> 05:44.730
该怎么弄啊 这是上一堂课的代码

05:44.730 --> 05:52.580
稍等一下我提交一下

05:52.580 --> 05:54.580
好吧 上一节代码提交一下

05:58.790 --> 06:02.810
护士

06:02.810 --> 06:04.810
然后我新建一个

06:04.810 --> 06:12.340
这一节课的分析

06:12.340 --> 06:14.340
10 干嘛

06:14.340 --> 06:18.870
标准

06:18.870 --> 06:20.870
快速 排序

06:20.870 --> 06:24.570
你有一个

06:24.570 --> 06:26.570
你有一个文件

06:26.570 --> 06:28.570
看见个节子

06:28.570 --> 06:30.570
还是一个数组是吧

06:30.570 --> 06:32.570
WareAR等于

06:32.570 --> 06:34.570
什么数据

06:34.570 --> 06:36.570
数据来着

06:36.570 --> 06:38.570
41693287是吧

06:38.570 --> 06:42.570
41693287

06:42.570 --> 06:44.570
这么一套数据

06:44.570 --> 06:46.570
41693287

06:46.570 --> 06:48.570
这是一套数据

06:48.570 --> 06:50.570
我希望对这个数据进行

06:50.570 --> 06:52.570
排序

06:52.570 --> 06:54.570
对吧 我希望对这个数据进行排序

06:54.570 --> 06:56.570
刚刚我写了一个

06:58.570 --> 07:00.570
quicksoft

07:00.570 --> 07:02.570
我需要人传一个AR

07:02.570 --> 07:04.570
但是刚才说了

07:04.570 --> 07:06.570
我们排序的时候需要指定一个范围的

07:06.570 --> 07:08.570
是吧 所以我得再写一个

07:08.570 --> 07:13.670
quicksoft

07:13.670 --> 07:15.670
比如说你想传我一个AR

07:15.670 --> 07:17.670
我这里边肯定得传一个AR

07:17.670 --> 07:19.670
还得传一个begin

07:19.670 --> 07:21.670
还得传一个按的 告诉我研究哪个范围

07:21.670 --> 07:23.670
你默认研究的是哪个范围

07:23.670 --> 07:25.670
默认研究的是

07:25.670 --> 07:27.670
到AR的

07:27.670 --> 07:29.670
籃子这么个范围是吧

07:29.670 --> 07:30.670
这叫左臂又开是吧

07:30.670 --> 07:31.670
零能取得到AR的

07:31.670 --> 07:32.670
籃子取不到

07:32.670 --> 07:34.670
我直接这样传就可以了

07:34.670 --> 07:35.670
对吧

07:35.670 --> 07:37.670
那我就quicksoft

07:37.670 --> 07:39.670
AR

07:39.670 --> 07:45.520
我希望我打印出来的AR是

07:45.520 --> 07:46.520
太好去

07:46.520 --> 07:48.520
那也就是说全都靠我这个

07:48.520 --> 07:49.520
quicksoft了是吧

07:49.520 --> 07:51.520
全都是靠我这个quicksoft

07:51.520 --> 07:53.520
先做一个严谨性判断

07:53.520 --> 07:54.520
衣服

07:54.520 --> 07:56.520
如果begin

07:56.520 --> 07:58.520
大于等于

07:58.520 --> 07:59.520
按

07:59.520 --> 08:02.900
简易

08:02.900 --> 08:05.900
就是begin现在只比按的小一个数

08:05.900 --> 08:06.900
或者是

08:06.900 --> 08:10.900
begin比这个按的小一个数要大

08:10.900 --> 08:11.900
这种情况还是不行的

08:11.900 --> 08:12.900
是吧

08:12.900 --> 08:14.900
我们得直接就rechange

08:14.900 --> 08:16.900
因为这个时候就已经有序了

08:16.900 --> 08:17.900
是吧

08:17.900 --> 08:18.900
不用串了是吧

08:18.900 --> 08:19.900
begin和按的都已经贴上了

08:19.900 --> 08:21.900
所以说这个时候不用判断了

08:21.900 --> 08:22.900
就直接就有序

08:22.900 --> 08:25.900
否则的情况下

08:25.900 --> 08:27.900
否则我们设定一个word

08:27.900 --> 08:28.900
一个life

08:28.900 --> 08:29.900
这life的人什么呢

08:29.900 --> 08:31.900
就是我们这个左指针

08:31.900 --> 08:32.900
左指针

08:32.900 --> 08:35.900
life的等于begin

08:35.900 --> 08:37.900
然后能在word一个write

08:37.900 --> 08:39.900
等于按

08:41.900 --> 08:43.900
然后这一回我会用一个

08:43.900 --> 08:44.900
大家几乎很少用的一个讯法

08:44.900 --> 08:46.900
叫做dual去

08:46.900 --> 08:50.530
dual讯法的特点是什么呢

08:50.530 --> 08:51.530
你就不管怎么样

08:51.530 --> 08:52.530
先干一遍

08:52.530 --> 08:53.530
干一遍再说

08:53.530 --> 08:55.530
什么情况下

08:55.530 --> 08:57.530
继续干的life的小于write

08:57.530 --> 08:59.530
只要左边比右边小

08:59.530 --> 09:01.530
就可以继续

09:01.530 --> 09:03.530
然后我们做一个什么事

09:03.530 --> 09:05.530
这个dual讯法里面

09:05.530 --> 09:06.530
还得套讯法

09:06.530 --> 09:07.530
还是du

09:07.530 --> 09:08.530
做什么事

09:08.530 --> 09:09.530
life的加加

09:09.530 --> 09:11.530
你就加life的ok

09:11.530 --> 09:13.530
加到什么时候为止

09:13.530 --> 09:16.530
发现第一个比左门

09:16.530 --> 09:18.530
大的数

09:18.530 --> 09:19.530
是吧

09:19.530 --> 09:20.530
前提是

09:20.530 --> 09:21.530
加完了之后

09:21.530 --> 09:23.530
life的得小于write

09:23.530 --> 09:25.530
并且ar

09:25.530 --> 09:32.840
life的得小于

09:32.840 --> 09:35.840
ar的write是吧

09:35.840 --> 09:37.840
begin

09:37.840 --> 09:40.840
它只要比begin小

09:40.840 --> 09:41.840
我就继续

09:41.840 --> 09:42.840
是吧

09:42.840 --> 09:43.840
继续到什么时候停止

09:43.840 --> 09:45.840
life的比bin大了

09:45.840 --> 09:46.840
是吧

09:46.840 --> 09:47.840
找到第一个

09:47.840 --> 09:48.840
从左数

09:48.840 --> 09:50.840
第一个比

09:50.840 --> 09:52.840
leader大的数

09:53.840 --> 09:55.840
再做write简简

09:55.840 --> 09:59.470
为了

09:59.470 --> 10:00.470
什么呢

10:00.470 --> 10:01.470
write得大于life是吧

10:01.470 --> 10:02.470
你减完了之后

10:02.470 --> 10:04.470
你不能比life小

10:04.470 --> 10:05.470
你毕竟是write

10:05.470 --> 10:06.470
右边的纸

10:06.470 --> 10:08.470
并且ar的write

10:10.470 --> 10:11.470
大于ar

10:11.470 --> 10:12.470
是吧

10:15.850 --> 10:17.850
如果减完了之后

10:17.850 --> 10:19.850
我这个write这个纸

10:19.850 --> 10:21.850
如果是比leader大的话

10:21.850 --> 10:23.850
我就继续往左走

10:23.850 --> 10:24.850
如果这个东西

10:24.850 --> 10:25.850
我是比左门

10:25.850 --> 10:26.850
第一个大的话

10:26.850 --> 10:27.850
我就继续往左

10:27.850 --> 10:28.850
一直找到

10:28.850 --> 10:30.850
第一个比左门小的数

10:30.850 --> 10:32.850
找到第一个比左门小的数

10:32.850 --> 10:34.850
然后我们要进行什么事

10:34.850 --> 10:36.850
是不是进行结婚

10:36.850 --> 10:38.850
两边都完事了

10:38.850 --> 10:40.850
如果life的

10:42.850 --> 10:43.850
卡死了

10:43.850 --> 10:48.590
稍等

10:48.590 --> 10:58.300
卡死了

10:58.300 --> 11:00.300
如果life的

11:00.300 --> 11:02.300
是小于write的

11:02.300 --> 11:04.300
又卡死了

11:04.300 --> 11:06.300
这种情况就得重启了

11:06.300 --> 11:07.300
如果你边境器

11:07.300 --> 11:08.300
连续的卡死的话

11:08.300 --> 11:09.300
它需要重启了

11:09.300 --> 11:11.300
就是什么它的内存的

11:11.300 --> 11:13.300
创建有问题了

11:13.300 --> 11:17.700
它这边停了之后

11:17.700 --> 11:19.700
我就给它关掉了

11:20.700 --> 11:22.700
然后我再重新打开

11:23.700 --> 11:26.700
如果life是小于write的

11:27.700 --> 11:28.700
就代表我交换

11:28.700 --> 11:29.700
做完了之后

11:29.700 --> 11:30.700
还是左边小

11:30.700 --> 11:31.700
我就进行自交换

11:31.700 --> 11:33.700
方式swipe

11:33.700 --> 11:34.700
交换

11:34.700 --> 11:35.700
用什么词都行

11:35.700 --> 11:36.700
咱们之前用的是x趁着

11:36.700 --> 11:37.700
是吧

11:37.700 --> 11:39.700
用一个ar

11:39.700 --> 11:40.700
给我a的位置

11:40.700 --> 11:41.700
给我一个b的位置

11:41.700 --> 11:42.700
是吧

11:42.700 --> 11:44.700
然后问一个

11:44.700 --> 11:45.700
什么来着

11:45.700 --> 11:46.700
time等于ar a

11:46.700 --> 11:47.700
对吧

11:47.700 --> 11:48.700
先记存一下

11:48.700 --> 11:50.700
然后让ar a

11:50.700 --> 11:51.700
等于ar b

11:51.700 --> 11:52.700
对吧

11:53.700 --> 11:55.700
然后再让ar b

11:56.700 --> 11:57.700
等于time

12:00.210 --> 12:01.210
怎么又卡死了

12:01.210 --> 12:03.210
敲太快吗

12:04.210 --> 12:11.260
稍等一下

12:11.260 --> 12:12.260
它又卡死了

12:13.260 --> 12:19.660
再关一下

12:19.660 --> 12:20.660
我重新打开

12:32.940 --> 12:34.940
b等于time是吧

12:34.940 --> 12:38.940
给它重新进行一次交换

12:38.940 --> 12:39.940
然后swipe

12:41.940 --> 12:45.940
ar life的和write

12:45.940 --> 12:46.940
是吧

12:46.940 --> 12:47.940
因为这个时候

12:47.940 --> 12:48.940
life的

12:48.940 --> 12:49.940
是左边第1个

12:49.940 --> 12:51.940
比Litre大的

12:51.940 --> 12:52.940
所以write是右边第1个

12:52.940 --> 12:53.940
比write小的

12:53.940 --> 12:54.940
它俩要进行交换

12:54.940 --> 12:57.940
我们要让左边连续的

12:57.940 --> 12:58.940
比Litre小

12:58.940 --> 13:00.940
右边连续的比Litre大

13:00.940 --> 13:03.940
所以要进行一次swipe

13:05.940 --> 13:06.940
不停的循环

13:06.940 --> 13:08.940
直到life的小于write

13:08.940 --> 13:09.940
不成立的时候

13:10.940 --> 13:12.940
我们来判断一下

13:12.940 --> 13:13.940
我们最后要怎么样

13:13.940 --> 13:16.940
把4跟中间的位置

13:16.940 --> 13:17.940
进行一次交换

13:17.940 --> 13:20.940
所以我说

13:22.940 --> 13:23.940
swipe or point

13:23.940 --> 13:26.940
我要看Litre跟谁来进行交换

13:26.940 --> 13:27.940
跟谁来进行交换

13:27.940 --> 13:30.940
我看life的是否等于write

13:30.940 --> 13:32.940
看左右是相等的

13:32.940 --> 13:33.940
还是不相等的

13:33.940 --> 13:35.940
因为有可能什么

13:35.940 --> 13:37.940
左右如果不相等的话

13:37.940 --> 13:39.940
右边的比左边的小

13:39.940 --> 13:40.940
life的比write大

13:40.940 --> 13:43.940
你自己去用指针去比较一下

13:43.940 --> 13:45.940
如果这种情况下还OK的话

13:45.940 --> 13:46.940
再下一步

13:46.940 --> 13:47.940
左边的pia走到这

13:47.940 --> 13:49.940
右边的pia走到这

13:49.940 --> 13:51.940
左右的就互换位置

13:51.940 --> 13:53.940
左右就互换位置

13:53.940 --> 13:56.940
所以这块是write-1

13:56.940 --> 13:58.940
如果不互换位置

13:58.940 --> 13:59.940
就write-1

13:59.940 --> 14:00.940
还记得吗

14:00.940 --> 14:02.940
刚才左边的绿色的在这

14:02.940 --> 14:03.940
write在这

14:03.940 --> 14:04.940
我要跟谁换

14:04.940 --> 14:05.940
要跟绿色的换是吧

14:05.940 --> 14:06.940
write在这是吧

14:06.940 --> 14:07.940
然后不管怎么样

14:07.940 --> 14:09.940
是write-1这个位置是吧

14:09.940 --> 14:11.940
或者是write

14:12.940 --> 14:14.940
这是我要交换的点

14:14.940 --> 14:16.940
然后把这个交换的点给谁来

14:16.940 --> 14:17.940
今天交换呢

14:17.940 --> 14:22.140
swive

14:22.140 --> 14:23.140
ar

14:23.140 --> 14:25.140
begin

14:25.140 --> 14:26.140
开始的这个位置

14:26.140 --> 14:27.140
也就是激点

14:27.140 --> 14:28.140
是吧

14:28.140 --> 14:30.140
leader和swive

14:32.140 --> 14:34.140
这就是完成了一圈交换

14:34.140 --> 14:35.140
对吧

14:35.140 --> 14:36.140
这就是完成了一圈交换

14:36.140 --> 14:37.140
来看一下

14:37.140 --> 14:40.540
试一下

14:40.540 --> 14:41.540
包了个错

14:41.540 --> 14:44.880
很哪儿包错了

14:44.880 --> 14:54.400
亏个骚的ar

14:54.400 --> 14:57.400
我需要

14:58.400 --> 14:59.400
2

14:59.400 --> 15:05.550
是吧

15:05.550 --> 15:06.550
第一圈完成了之后

15:06.550 --> 15:09.550
4的左边都比4小

15:09.550 --> 15:11.550
4的右边都比4大

15:11.550 --> 15:12.550
对吧

15:12.550 --> 15:13.550
4的左边都比4小

15:13.550 --> 15:14.550
4的右边都比4大

15:14.550 --> 15:15.550
做成了第一圈

15:15.550 --> 15:16.550
是吧

15:16.550 --> 15:17.550
然后呢

15:17.550 --> 15:19.550
我们要对左边的再进行快排

15:19.550 --> 15:20.550
对右边的再进行快排

15:20.550 --> 15:22.550
低规的想法是吧

15:22.550 --> 15:24.550
左边的进行相同的操作

15:25.550 --> 15:26.550
ar

15:27.550 --> 15:28.550
左边的从哪开始

15:28.550 --> 15:29.550
begin开始

15:29.550 --> 15:30.550
到哪

15:30.550 --> 15:31.550
到4的左边

15:31.550 --> 15:32.550
是吧

15:32.550 --> 15:33.550
也就是把4传进去

15:33.550 --> 15:35.550
因为我们右边是开去键

15:35.550 --> 15:36.550
对吧

15:36.550 --> 15:38.550
swive point

15:38.550 --> 15:41.930
这个是ar

15:41.930 --> 15:43.930
swive point的加1

15:43.930 --> 15:45.930
因为swive point

15:45.930 --> 15:46.930
已经确定了

15:46.930 --> 15:47.930
在中间了

15:47.930 --> 15:48.930
然后的动画

15:48.930 --> 15:50.930
不用研究了

15:50.930 --> 15:51.930
它已经在中间了

15:51.930 --> 15:53.930
它的位置已经是有序的

15:53.930 --> 15:55.930
到按的这样的位置

15:56.930 --> 15:57.930
这样的话

15:57.930 --> 15:58.930
我们来进行排序

15:58.930 --> 15:59.930
ar

15:59.930 --> 16:00.930
6

16:00.930 --> 16:01.930
7

16:01.930 --> 16:02.930
我们会发现标准

16:02.930 --> 16:04.930
排序的代码的横数很少

16:04.930 --> 16:06.930
但是它的思维很复杂

16:06.930 --> 16:07.930
不好理解

16:07.930 --> 16:09.930
所以大家需要用PBT

16:09.930 --> 16:10.930
能演示这种方式

16:10.930 --> 16:12.930
自己手动的来

16:13.930 --> 16:14.930
多做几次

16:14.930 --> 16:16.930
跟着代码去做几次

16:16.930 --> 16:17.930
不要空下

16:17.930 --> 16:19.930
人类是很难空下出来

16:19.930 --> 16:21.930
这样的代码逻辑的

16:21.930 --> 16:22.930
很难空下出来

16:22.930 --> 16:24.930
一定要用演示的方式

16:24.930 --> 16:25.930
或者是

16:25.930 --> 16:27.930
多加一些console的方式

16:27.930 --> 16:28.930
得先打印

16:28.930 --> 16:30.930
打印每一次交换的结果

16:30.930 --> 16:32.930
那么很多同学

16:32.930 --> 16:33.930
现在遇到了错了之后

16:33.930 --> 16:34.930
开始去上来

16:34.930 --> 16:35.930
就问老师

16:35.930 --> 16:36.930
这是个非常不好的喜欢

16:36.930 --> 16:38.930
自己根本就没有调试的过程

16:38.930 --> 16:39.930
调试的过程

16:39.930 --> 16:41.930
包括自己打印console

16:41.930 --> 16:43.930
或者是打断点

16:43.930 --> 16:44.930
或者是什么

16:44.930 --> 16:46.930
总之你有一个调试的过程

16:46.930 --> 16:48.930
你总不能

16:48.930 --> 16:50.930
期盼着自己想的一下就对

16:50.930 --> 16:51.930
写的东西一下就对

16:51.930 --> 16:52.930
对吧

16:52.930 --> 16:53.930
有很多代码

16:53.930 --> 16:54.930
它很复杂

16:54.930 --> 16:55.930
跟别人说了之后

16:55.930 --> 16:56.930
别人也得是

16:56.930 --> 16:58.930
从头到尾的按键去看

16:58.930 --> 16:59.930
没有解静

16:59.930 --> 17:00.930
不是说

17:00.930 --> 17:01.930
厉害的人一看

17:01.930 --> 17:02.930
你就知道

17:02.930 --> 17:03.930
算错了

17:03.930 --> 17:04.930
很多的时候

17:04.930 --> 17:05.930
代码不是这样的

17:05.930 --> 17:06.930
就像算法

17:06.930 --> 17:07.930
肯定不是

17:07.930 --> 17:08.930
你给了别人之后

17:08.930 --> 17:09.930
人也是大概的看一下

17:09.930 --> 17:11.930
然后开始自己进行调试

17:11.930 --> 17:13.930
所以大家一定要自己学会

17:13.930 --> 17:14.930
调试开吧

17:14.930 --> 17:16.930
打一些断点

17:16.930 --> 17:17.930
或者是打印一些console

17:17.930 --> 17:18.930
看看每一步

17:18.930 --> 17:20.930
符不符合自己的预期

17:20.930 --> 17:21.930
如果不符合自己的预期

17:21.930 --> 17:22.930
就看看

17:22.930 --> 17:23.930
这一行的语句

17:23.930 --> 17:24.930
哪里写错了

17:24.930 --> 17:25.930
这才是一个

17:25.930 --> 17:26.930
正确的调试的步骤

17:27.930 --> 17:28.930
然后这个算法

17:28.930 --> 17:29.930
就是一个快排的标准

17:29.930 --> 17:30.930
一个算法

17:30.930 --> 17:31.930
很简炼

17:31.930 --> 17:32.930
非常的简炼

17:32.930 --> 17:34.930
代码好处也很少

17:34.930 --> 17:35.930
然后

17:36.930 --> 17:37.930
性能也比较高

17:37.930 --> 17:38.930
所以

17:39.930 --> 17:40.930
推荐大家看一下

17:41.930 --> 17:42.930
这就是快排

17:43.930 --> 17:45.930
那咱们今天就先到这里

