WEBVTT

00:01.330 --> 00:07.330
hello大家好 上一集我们说了二十二数的前众后续的便利的一个概念

00:07.330 --> 00:12.330
今天这一集我们就来用代码来实现前众后续便利

00:12.330 --> 00:16.330
这一集我们先来实现第一个前续便利

00:16.330 --> 00:18.330
我们先来构建一颗二十二数

00:18.330 --> 00:20.330
我们之前还没有构建一颗二十二数

00:20.330 --> 00:22.330
还是我们要先创建一个节点 是吧

00:22.330 --> 00:25.330
方个是node 节点就像你给我传进来一个value

00:25.330 --> 00:30.330
然后我让this value等于你传进来的value 是吧

00:30.330 --> 00:34.330
然后二十二数得有一个左孩子还有右孩子 对吧

00:34.330 --> 00:37.330
this is the left等于空

00:37.330 --> 00:40.330
this is the right等于空

00:40.330 --> 00:43.330
我们默认他有两个节点 一个left 一个right

00:43.330 --> 00:45.330
ok吧 没什么问题是吧

00:45.330 --> 00:47.330
我们来创建一个二十二数

00:47.330 --> 00:49.330
就这样的二十二数

00:49.330 --> 00:53.330
ab,acb,fgde 好吧

00:53.330 --> 00:56.330
就这样的一个二十二数

00:59.090 --> 01:03.090
我好像不小心唤醒了一个小Cray 是吧

01:03.090 --> 01:05.090
好来继续

01:05.090 --> 01:13.090
我们划一个ab,cde,fd 是吧

01:13.090 --> 01:16.090
用一个node

01:16.090 --> 01:22.090
ab,cde,fg

01:22.090 --> 01:30.090
ab,cde,fg

01:30.090 --> 01:35.090
ab,cde,fg

01:35.090 --> 01:37.090
有什么七个节点 是吧

01:37.090 --> 01:39.090
然后我们来构建 是吧

01:39.090 --> 01:40.090
光有节点不行

01:40.090 --> 01:42.090
他们得有父子关系 是吧

01:42.090 --> 01:43.090
a的life 是c

01:43.090 --> 01:46.090
a的right 是b 对吧

01:46.090 --> 01:49.090
a的life等于c

01:49.090 --> 01:52.090
a的right等于b

01:52.090 --> 01:55.090
然后c的life是f

01:55.090 --> 01:58.090
c的life是f

01:58.090 --> 02:03.090
c的right等于g

02:03.090 --> 02:05.090
然后b的life是d

02:05.090 --> 02:06.090
b的right是e

02:06.090 --> 02:12.090
b的life等于d

02:12.090 --> 02:15.090
b的right等于e

02:15.090 --> 02:18.090
这样的话我们就构建出来了这颗二十二数

02:18.090 --> 02:22.090
然后我们希望怎么样的来辨历这颗二十二数

02:22.090 --> 02:23.090
是吧

02:23.090 --> 02:26.090
我们先写一个前续辨历

02:26.090 --> 02:28.090
方式

02:28.090 --> 02:31.090
前续辨历

02:31.090 --> 02:33.090
前续辨历你总得给我传进来一个根结点是吧

02:33.090 --> 02:34.090
root

02:34.090 --> 02:36.090
前续辨历是怎么样

02:36.090 --> 02:37.090
如果它不为空

02:37.090 --> 02:38.090
我们的负能为空是吧

02:38.090 --> 02:40.090
root 如果等于空

02:40.090 --> 02:42.090
严谨性判断必须得有

02:42.090 --> 02:44.090
没有严谨性判断是不行的

02:44.090 --> 02:45.090
return 直接return

02:45.090 --> 02:49.090
如果不为空就代表我有当前的根结点是吧

02:49.090 --> 02:52.090
打印root的歪着

02:52.090 --> 02:56.770
对吧

02:56.770 --> 02:58.770
我打印一个root的歪着

02:58.770 --> 03:01.770
如果打印完了之后

03:01.770 --> 03:02.770
前续辨历是什么

03:02.770 --> 03:03.770
先打印自己

03:03.770 --> 03:04.770
再打印左边

03:04.770 --> 03:05.770
再打印右边是吧

03:05.770 --> 03:06.770
再打印左边

03:06.770 --> 03:07.770
左边怎么办

03:07.770 --> 03:08.770
左边怎么办

03:08.770 --> 03:09.770
我这f1是吧

03:09.770 --> 03:12.770
f1 root的life

03:12.770 --> 03:17.770
然后f1 root的right

03:19.770 --> 03:22.770
在地规是吧

03:22.770 --> 03:23.770
把我的左子数传进去

03:23.770 --> 03:25.770
把我的右子数传进去

03:25.770 --> 03:27.770
这就是一个前续辨历

03:27.770 --> 03:28.770
是吧

03:28.770 --> 03:29.770
非常简单

03:29.770 --> 03:30.770
四二代码

03:30.770 --> 03:32.770
能看到的我给大家来总结的代码

03:32.770 --> 03:34.770
都是我精简之后的

03:34.770 --> 03:37.770
能够保证大家几乎都能看得懂

03:37.770 --> 03:40.770
这样的话我掉f1a

03:40.770 --> 03:43.770
看打印的是不是

03:43.770 --> 03:46.770
acfg bd1

03:46.770 --> 03:49.770
看acfg bd1

03:49.770 --> 03:50.770
对吧

03:50.770 --> 03:51.770
这是我们的前续辨历

03:51.770 --> 03:52.770
前续辨历

03:52.770 --> 03:54.770
我们最多的

03:54.770 --> 03:55.770
用的最多的辨历

03:55.770 --> 03:57.770
其实就是前续辨历

03:57.770 --> 03:59.770
我们之后还会有一些算法

03:59.770 --> 04:00.770
用到前续辨历

04:00.770 --> 04:01.770
到之后我们用的时候

04:01.770 --> 04:03.770
我们再说前续辨历的事

04:03.770 --> 04:05.770
这一节大家需要知道

04:05.770 --> 04:06.770
二大数的定义

04:06.770 --> 04:08.770
你可以用这种方式来定义

04:08.770 --> 04:10.770
然后我们用这种方式来构建

04:10.770 --> 04:12.770
构建一个他们的左右关系

04:12.770 --> 04:13.770
我们说了

04:13.770 --> 04:14.770
我们这是拓布关系是吧

04:14.770 --> 04:16.770
只要有关系就行

04:16.770 --> 04:17.770
位置随意

04:17.770 --> 04:18.770
有关系就行

04:18.770 --> 04:19.770
就像a的life是c

04:19.770 --> 04:21.770
你c在哪儿写都行

04:21.770 --> 04:23.770
只要让a的life是c就行

04:23.770 --> 04:25.770
然后这是前续辨历

04:25.770 --> 04:26.770
如果是空的话

04:26.770 --> 04:27.770
我们就return

04:27.770 --> 04:28.770
什么都不打印

04:28.770 --> 04:29.770
如果不空的话

04:29.770 --> 04:30.770
先打印自己

04:30.770 --> 04:31.770
是吧

04:31.770 --> 04:32.770
有节点我就先打印自己

04:32.770 --> 04:33.770
前续是吧

04:33.770 --> 04:35.770
我肯定得先打印自己

04:35.770 --> 04:36.770
打印完了自己

04:36.770 --> 04:37.770
我在

04:37.770 --> 04:38.770
掉f1

04:38.770 --> 04:39.770
打印我的左指数

04:39.770 --> 04:42.770
再打印我的右指数

04:42.770 --> 04:43.770
是吧

04:43.770 --> 04:44.770
打印我的左指数

04:44.770 --> 04:46.770
打印我的右指数

04:46.770 --> 04:47.770
记住这个的概念

04:47.770 --> 04:49.770
说打印左边的

04:49.770 --> 04:50.770
这是左边的指数

04:50.770 --> 04:52.770
再打印右边的指数

04:52.770 --> 04:54.770
不是左边的节点和右边的节点

04:54.770 --> 04:56.770
这个概念必须要变清楚

04:56.770 --> 04:59.770
是左边的指数和右边的指数

04:59.770 --> 05:00.770
好了

05:00.770 --> 05:02.770
这就是前续辨历

05:02.770 --> 05:04.770
下一集我们来说终续辨历

