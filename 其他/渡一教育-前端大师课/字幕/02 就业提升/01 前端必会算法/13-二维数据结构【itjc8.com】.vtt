WEBVTT

00:00.500 --> 00:07.500
hello 大家好 这一集的开始 我们来说一下二维数据结构

00:07.500 --> 00:12.500
二维数据结构 打开一个PVT 之前咱们说的都是一维的数据结构

00:12.500 --> 00:17.500
比如说练秒 数组 站 对列 它都是一个线型的

00:17.500 --> 00:21.500
哪怕是双向练秒 它都是一个线型的

00:21.500 --> 00:25.500
但很多的情况下解决不了问题 就比如说我们表格

00:25.500 --> 00:29.500
表格明显是一个平面 它不是一条线

00:29.500 --> 00:33.500
比如说一个数型的结构 最简单的就是我们的文件夹 是吧

00:33.500 --> 00:37.500
电脑文件夹 计算机C版地板 然后C版里面一堆文件夹

00:37.500 --> 00:41.500
一个文件夹里面又一堆文件夹 它是个数形展开的一个结构

00:41.500 --> 00:45.500
有很多的结构 我们用一维的线性的数据结构是无法去表示的

00:45.500 --> 00:52.500
也更无法去比较好的操作 所以这个时候我们要引出来二维的数据结构

00:52.500 --> 00:58.500
再提到二维数据结构这块我们要有一些比较基础的一些概念

00:58.500 --> 01:03.500
这些概念可能比较玄术化 但是希望大家能够理解

01:03.500 --> 01:08.500
能理解多少 理解多少 理解的越多能够帮助你的东西就越多吧

01:08.500 --> 01:14.500
首先咱们来说第一种二维数据结构 大家很好理解的就是二维数组

01:14.500 --> 01:19.500
你有一维数组我就有二维数组 相信很多同学都用过了二维数组

01:19.500 --> 01:24.500
二维数组不非就是把这些东西再复制出来一分

01:27.320 --> 01:37.150
变成这样 是吧 再来一分 变成这个样子 是吧

01:37.150 --> 01:42.150
有 n 和 n 列的 是吧 这就是二维数组 很容易

01:42.150 --> 01:46.150
很容易就能理解了 是吧 这就是二维的 我们所谓的二维数组

01:46.150 --> 01:51.780
二维数组怎么声明的 咱们来写一下 先创建一个

01:52.780 --> 02:05.190
二维数据结构 二维的数据结构 首先

02:13.570 --> 02:18.570
我们如果这样的话是几维的数据结构 是不是一个一维的数组

02:18.570 --> 02:23.570
它如果里面是这样的 它就是个二维数组 是吧

02:23.570 --> 02:28.570
每一个数组的元素 数组的每一个元素都是一个数组

02:28.570 --> 02:33.570
这个数组中的每一个元素都是一个数组 这就是一个二维的数组

02:34.570 --> 02:40.570
那你像这个 它这个是四行八列 怎么来声明的

02:40.570 --> 02:44.570
四行八列 首先先创建好像是吧 你有一个 array 是吧

02:44.570 --> 02:50.930
四行 等于四 对吧

02:50.930 --> 02:56.930
然后八列 八列怎么来做

02:56.930 --> 02:59.930
你对这四行再分别的进行确实化 是吧

02:59.930 --> 03:12.940
然后对每一行 array 在都心又出来一个 array 是吧

03:12.940 --> 03:18.890
里面的每一个数组的长度都会八

03:18.890 --> 03:21.890
这就是四行八列

03:21.890 --> 03:25.890
这就是一个这样的数组 二维的一个数据结构

03:26.890 --> 03:28.890
这是二维数组 二维数组都比较好说了 是吧

03:28.890 --> 03:30.890
有行有列 我们比较好操作

03:30.890 --> 03:35.890
那除了二维数据结构 数组 二维数字之外

03:35.890 --> 03:41.890
还有一些数据结构 我们称为什么呢

03:41.890 --> 03:44.890
我们说是二叉数 数 其实不能这么叫

03:44.890 --> 03:51.650
叫做二维拓补结构

03:56.460 --> 03:59.460
二维拓补结构

03:59.460 --> 04:02.460
我们可以把二维的拓补结构

04:02.460 --> 04:08.460
把它用一个词来概括 叫做图

04:08.460 --> 04:12.460
这个图不是大家承理解的图化的图

04:12.460 --> 04:16.460
而是离散数学中的概念 图

04:16.460 --> 04:20.460
离散数学中有个部分叫做图论 是吧

04:20.460 --> 04:22.460
这个里面的图就是指的这个

04:22.460 --> 04:24.460
很多同学可能没有学过离散

04:24.460 --> 04:25.460
不知道这个图是什么意思

04:25.460 --> 04:29.460
我给你们举个例子

04:29.460 --> 04:32.460
你说咱们在研究数学的时候

04:32.460 --> 04:36.460
比如说研究三角形

04:36.460 --> 04:40.770
我们说两个三角形相等

04:40.770 --> 04:41.770
是怎么判定的

04:41.770 --> 04:43.770
比如说这两个三角形是不是相等

04:43.770 --> 04:44.770
那肯定的 我付出来了 是吧

04:44.770 --> 04:46.770
咱们在数学里面

04:46.770 --> 04:47.770
判断这两个三角形相等

04:47.770 --> 04:48.770
都有怎么判断

04:48.770 --> 04:51.770
什么边边边 边脚边脚

04:51.770 --> 04:53.770
角角边 是吧

04:53.770 --> 04:55.770
类似于这样的方式都可以判断

04:55.770 --> 04:57.770
两个三角形是否全等 是吧

04:57.770 --> 04:59.770
但是你看

04:59.770 --> 05:03.770
我如果把这个三角形拉得大一点

05:03.770 --> 05:07.770
你说这两个三角形全等吗

05:07.770 --> 05:09.770
废话他肯定不全等了 是吧

05:09.770 --> 05:11.770
都说了这个边边边

05:11.770 --> 05:12.770
这三条边没有一条边

05:12.770 --> 05:13.770
是相等的 是吧

05:13.770 --> 05:15.770
他怎么可能全等的 是吧

05:15.770 --> 05:17.770
所以说这个种情况下

05:17.770 --> 05:19.770
在数学里面就叫做不相等了 是吧

05:19.770 --> 05:21.770
但是有一些概念

05:21.770 --> 05:23.770
我们就没有办法用数学研究了

05:23.770 --> 05:24.770
什么概念呢

05:24.770 --> 05:26.770
比如说

05:26.770 --> 05:29.770
比如说这是Panda

05:29.770 --> 05:34.770
说Panda和Monkey是好朋友

05:34.770 --> 05:41.770
然后Panda和道个也是好朋友

05:41.770 --> 05:42.770
是吧

05:42.770 --> 05:44.770
Panda和Monkey是好朋友

05:44.770 --> 05:48.780
Panda和道个是好朋友

05:48.780 --> 05:50.780
我这个线

05:57.680 --> 05:59.680
Panda和道个能联上

05:59.680 --> 06:01.680
Panda和Monkey能联上

06:03.680 --> 06:05.680
这样代表的是Panda和道个是好朋友

06:05.680 --> 06:07.680
因为它俩有这条线

06:07.680 --> 06:09.680
就是朋友关系

06:09.680 --> 06:11.680
然后Panda和Monkey也是好朋友

06:11.680 --> 06:13.680
然后你说Monkey

06:13.680 --> 06:15.680
忽然有一天从北京到上海了

06:15.680 --> 06:17.680
距离变远了

06:17.680 --> 06:19.680
那你说它俩还是好朋友

06:19.680 --> 06:21.680
它俩还是好朋友 是吧

06:21.680 --> 06:22.680
当这个道个

06:22.680 --> 06:26.680
假设说从中国跑到新加坡去了

06:26.680 --> 06:30.680
你说Panda和道个是不是好朋友

06:30.680 --> 06:32.680
它是不是还是好朋友

06:32.680 --> 06:34.680
所以说我们之前那个好朋友

06:34.680 --> 06:37.680
不会因为距离的改变而改变

06:37.680 --> 06:41.680
不会因为位置的改变而改变

06:41.680 --> 06:43.680
对吧

06:43.680 --> 06:46.680
这个什么形状它都是相等的 是吧

06:46.680 --> 06:48.680
所以说刚才那个形状

06:48.680 --> 06:49.680
和在这个形状里面

06:49.680 --> 06:51.680
它们的关系是相等的

06:51.680 --> 06:53.680
就像这个三角形来说

06:53.680 --> 06:55.680
它有ABC三个点

06:59.680 --> 07:01.680
ABC三个点

07:01.680 --> 07:11.780
ABC三个点

07:11.780 --> 07:13.780
那你说离着这么近

07:13.780 --> 07:15.780
它们是ABC三个点

07:15.780 --> 07:17.780
A连着B A连着C B连着A B连着C

07:17.780 --> 07:19.780
C连着A C连着B 是吧

07:19.780 --> 07:21.780
那你说给它放大了

07:21.780 --> 07:23.780
放上这个三角形这么大了

07:23.780 --> 07:25.780
它们三个之前是不是还是这个关系

07:28.470 --> 07:29.470
是吧

07:29.470 --> 07:33.470
A和B B和C C和A之间的关联关系

07:33.470 --> 07:37.300
是不变的 对吧

07:37.300 --> 07:39.300
所以说

07:39.300 --> 07:41.300
从关系的角度上来说

07:41.300 --> 07:43.300
它们两个是相等的

07:45.300 --> 07:47.300
从关系的角度上来说

07:47.300 --> 07:49.300
它们两个是相等的 对吧

07:49.300 --> 07:51.300
就像那个Panda和Monkey道个

07:51.300 --> 07:53.300
它们这样的关系

07:53.300 --> 07:55.300
形状虽然不一样

07:55.300 --> 07:57.300
但是关系依然是相等

07:57.300 --> 07:59.300
这种情况 这种关系

07:59.300 --> 08:01.300
我们就叫做是一种拓捕关系

08:01.300 --> 08:03.300
拓捕关系

08:03.300 --> 08:05.300
拓捕是不关注长短

08:05.300 --> 08:07.300
不关注大小

08:07.300 --> 08:09.300
不关注距离这些东西

08:09.300 --> 08:11.300
只看关系的

08:11.300 --> 08:13.300
一个学科方向

08:13.300 --> 08:15.300
叫做拓捕圈

08:15.300 --> 08:17.300
只看关系 不看大小

08:17.300 --> 08:19.300
不看距离 不看位置

08:19.300 --> 08:21.300
这样的关系拓捕圈

08:21.300 --> 08:23.300
回过头来

08:23.300 --> 08:25.300
我们说二维拓捕结构

08:25.300 --> 08:27.300
就是我们研究

08:27.300 --> 08:29.300
各种东西之间的关系

08:29.300 --> 08:31.300
比如说A圈和B圈

08:31.300 --> 08:33.300
比如我们有这样一个场景的题

08:33.300 --> 08:35.300
这会有几个村庄

08:35.300 --> 08:37.300
A圈

08:37.300 --> 08:39.300
B圈

08:39.300 --> 08:41.300
然后C圈

08:41.300 --> 08:46.660
C圈

08:46.660 --> 08:48.660
D圈

08:48.660 --> 08:52.030
然后E圈

08:52.030 --> 08:54.030
有这么5个村

08:54.030 --> 08:56.030
这5个村之间的公路

08:56.030 --> 08:58.030
它们的公路

08:58.030 --> 09:00.030
就是联统联统

09:00.030 --> 09:02.030
然后我们用一些线去

09:02.030 --> 09:04.030
来表示他们之间是否有路

09:04.030 --> 09:06.030
比如说A能连到B

09:06.030 --> 09:11.260
然后

09:11.260 --> 09:13.260
A能连到C

09:13.260 --> 09:15.260
然后C能连到

09:15.260 --> 09:17.260
B能连到D

09:17.260 --> 09:19.260
然后B能连到E

09:19.260 --> 09:24.370
这种情况

09:24.370 --> 09:26.370
这些村子

09:26.370 --> 09:28.370
实际上都是被连到一块的

09:28.370 --> 09:30.370
就像A和B有关系

09:30.370 --> 09:32.370
A和C有关系

09:32.370 --> 09:34.370
这种结构就叫脱补结构

09:34.370 --> 09:36.370
我们只关注

09:36.370 --> 09:38.370
他们之间的关系

09:38.370 --> 09:40.370
不看位置

09:40.370 --> 09:42.370
C存不在这

09:42.370 --> 09:44.370
你说是不是同一种脱补结构

09:44.370 --> 09:46.370
D假如说不在这

09:46.370 --> 09:48.370
跟刚才是一模一样的

09:48.370 --> 09:50.370
没有变化

09:50.370 --> 09:52.370
虽然位置发生了变化

09:52.370 --> 09:54.370
但是他们的关系

09:54.370 --> 09:56.370
没有发生任何的变化

09:56.370 --> 09:58.370
然后我们研究

09:58.370 --> 10:00.370
这些村庄之间的关系的

10:00.370 --> 10:02.370
一种方法

10:02.370 --> 10:04.370
叫做二维脱补结构

10:04.370 --> 10:06.370
比如说刚才B到E是10公里

10:11.220 --> 10:13.220
B到E是10公里

10:13.220 --> 10:15.220
然后B到C是

10:15.220 --> 10:17.220
8公里

10:17.220 --> 10:19.220
这个B到D是8公里

10:19.220 --> 10:21.220
D在这儿

10:21.220 --> 10:23.220
对于E和E到D来说是18公里

10:23.220 --> 10:25.220
D在这儿

10:25.220 --> 10:27.220
如果我说这个距离是8公里的话

10:27.220 --> 10:29.220
D到E

10:29.220 --> 10:31.220
E到D还是18公里

10:31.220 --> 10:33.220
只是看关系的数值

10:33.220 --> 10:35.220
不看他们实际的摆放的位置

10:35.220 --> 10:37.220
这个是脱补学

10:37.220 --> 10:39.220
和其他的脱补学

10:39.220 --> 10:41.220
其他的科学所严重的不一样

10:41.220 --> 10:43.220
在数学里

10:43.220 --> 10:45.220
你要研究它的大小位置

10:45.220 --> 10:47.220
全都一样的时候

10:47.220 --> 10:49.220
才被成为全能

10:49.220 --> 10:51.220
但是在脱补学里面

10:51.220 --> 10:53.220
只要关系相同

10:53.220 --> 10:55.220
它就成为全能

10:55.220 --> 10:57.220
这就是我们所谓的二叉数

10:57.220 --> 10:59.220
之后我们所谓的二叉数

10:59.220 --> 11:03.170
我们之后会学二叉数

11:03.170 --> 11:05.170
会学各种各样的数形结构

11:05.170 --> 11:07.170
都是从图里面

11:07.170 --> 11:09.170
去展面出来的

11:09.170 --> 11:11.170
这是脱补这个词

11:11.170 --> 11:13.170
那我们看什么是二维

11:13.170 --> 11:15.170
二维就是平面的

11:15.170 --> 11:17.170
对吧

11:17.170 --> 11:19.170
但是我们生活中的话

11:19.170 --> 11:21.170
你说这些东西都是平面的吗

11:21.170 --> 11:23.170
肯定不是 是吧

11:23.170 --> 11:25.170
比如说我在北京这个地方

11:25.170 --> 11:27.170
海拔可能只有200米

11:27.170 --> 11:29.170
然后我的朋友他可能在云南

11:29.170 --> 11:31.170
然后可能还有朋友在西藏

11:31.170 --> 11:33.170
卧区他可能海拔4000-3000米

11:33.170 --> 11:35.170
对吧

11:35.170 --> 11:37.170
我们虽然高度不一样

11:37.170 --> 11:39.170
地理位置横向不一样

11:39.170 --> 11:41.170
它高度也不一样 它是个空简的

11:41.170 --> 11:43.170
它是三维的

11:43.170 --> 11:45.170
如果给我们连线的话

11:45.170 --> 11:47.170
我们是个立方体 是吧

11:47.170 --> 11:49.170
是个三维的

11:49.170 --> 11:51.170
但是我都可以给它按到一个平面上去

11:51.170 --> 11:53.170
比如说我现在屏幕外面

11:53.170 --> 11:55.170
还有个F

11:55.170 --> 11:57.170
我的屏幕外面还有个F

11:57.170 --> 11:59.170
这个F假如和A相连

11:59.170 --> 12:01.170
在屏幕之外

12:01.170 --> 12:03.170
大概是在这个位置的屏幕之外

12:03.170 --> 12:05.170
但是我可以强行的给它按进去

12:05.170 --> 12:07.170
按到这来

12:07.170 --> 12:09.170
然后给它A和F相连

12:09.170 --> 12:13.760
这样的话也形成了一个

12:13.760 --> 12:15.760
二维的拓补结构

12:15.760 --> 12:17.760
对吧

12:17.760 --> 12:19.760
三维你不管怎么

12:19.760 --> 12:21.760
既然我连线的是关系

12:21.760 --> 12:23.760
我就都给它拍到二维的平面上去

12:23.760 --> 12:25.760
然后给它们连在一起就行了 是吧

12:25.760 --> 12:27.760
只要连线在

12:27.760 --> 12:29.760
拓补结构来说

12:29.760 --> 12:31.760
部分二维和三维还是几维

12:31.760 --> 12:33.760
只要连线在他们就是相等的

12:33.760 --> 12:35.760
所以说

12:35.760 --> 12:37.760
就给它拍到二维的平面上来

12:37.760 --> 12:39.760
因为二维平面上来的时候

12:39.760 --> 12:41.760
我在做计算的时候比较好研究

12:41.760 --> 12:43.760
所以说这是二维拓补结构

12:43.760 --> 12:45.760
也就是图

12:45.760 --> 12:47.760
就是图的话

12:47.760 --> 12:49.760
是有节点

12:49.760 --> 12:51.760
有线段

12:51.760 --> 12:53.760
节点和编

12:53.760 --> 12:55.760
我们管这种东西叫做节点

12:55.760 --> 12:57.760
这种东西叫做编

12:57.760 --> 12:59.760
你看图

12:59.760 --> 13:01.760
很像什么

13:01.760 --> 13:03.760
我们说

13:03.760 --> 13:05.760
二维数组是谁的进化

13:05.760 --> 13:07.760
二维数组是一维数组的进化

13:07.760 --> 13:09.760
是吧

13:09.760 --> 13:11.760
有很多个一维数组在一起

13:11.760 --> 13:13.760
图是谁的进化

13:13.760 --> 13:15.760
图其实就是练表的进化

13:15.760 --> 13:17.760
它有很多个练表在一起

13:17.760 --> 13:19.760
A到B到E

13:19.760 --> 13:21.760
A到B到D

13:21.760 --> 13:23.760
A到F

13:23.760 --> 13:25.760
所以说二维数组

13:25.760 --> 13:27.760
二维数组是由

13:27.760 --> 13:29.760
一维数组进化得来的

13:29.760 --> 13:31.760
二维拓补结构是由

13:31.760 --> 13:33.760
练表来

13:33.760 --> 13:35.760
进化得来的

13:35.760 --> 13:37.760
同时

13:37.760 --> 13:39.760
二维的拓补结构我怎么表示

13:39.760 --> 13:41.760
感觉这个很复杂的样子

13:41.760 --> 13:43.760
来看一下二维拓补结构怎么表示

13:45.760 --> 13:47.760
首先这个节点还是No

13:47.760 --> 13:51.460
你还可以给我传一个Value

13:51.460 --> 13:53.460
表示我这个节点

13:53.460 --> 13:55.460
这个Value

13:55.460 --> 13:57.460
等于Value

13:57.460 --> 13:59.460
然后我们在

13:59.460 --> 14:01.460
练表的时候我只有一个下架

14:01.460 --> 14:03.460
顶多我双线练表

14:03.460 --> 14:05.460
有个上架和下架

14:05.460 --> 14:07.460
但是在图里

14:07.460 --> 14:09.460
你说我这一个点周围会连着多少个点

14:09.460 --> 14:11.460
不一定

14:11.460 --> 14:13.460
对吧

14:13.460 --> 14:15.460
我周围不一定

14:15.460 --> 14:17.460
我们管这边可以叫做邻居

14:17.460 --> 14:19.460
它可以有很多个邻居

14:19.460 --> 14:21.460
我们可以做写个叫做

14:21.460 --> 14:26.110
邻居但是那边

14:26.110 --> 14:28.110
那边

14:28.110 --> 14:30.110
那边互的

14:30.110 --> 14:32.110
等于一个数组

14:32.110 --> 14:34.110
是吧它是个数组我也不知道它有多少个

14:34.110 --> 14:36.110
比如说这个A,B,C,D,E,F

14:36.110 --> 14:38.110
我们玩的话怎么玩

14:38.110 --> 14:40.110
Value一个

14:42.110 --> 14:47.470
A

14:47.470 --> 14:49.470
B,C,D,E,F是吧

14:49.470 --> 14:51.470
A

14:51.470 --> 14:53.470
B

14:53.470 --> 14:55.470
C

14:55.470 --> 14:57.470
E,F

14:59.470 --> 15:01.470
B,C,D,E,F

15:03.470 --> 15:05.470
看好了怎么构建

15:05.470 --> 15:07.470
A的邻居有

15:07.470 --> 15:09.470
B,C,F是吧

15:09.470 --> 15:11.470
A的邻居

15:11.470 --> 15:15.870
Push

15:15.870 --> 15:17.870
B,C

15:17.870 --> 15:19.870
F

15:19.870 --> 15:21.870
然后B的邻居有

15:21.870 --> 15:23.870
A,B的邻居

15:23.870 --> 15:25.870
Push

15:25.870 --> 15:34.670
A,D,E

15:36.670 --> 15:38.670
然后C的邻居有A是吧

15:38.670 --> 15:40.670
虽然我们玩的A的邻居是C的

15:40.670 --> 15:42.670
但是它这个是双向的是吧

15:42.670 --> 15:44.670
A能到C,C能到A是吧

15:44.670 --> 15:46.670
所以C的邻居

15:46.670 --> 15:48.670
Push

15:48.670 --> 15:50.670
A

15:50.670 --> 15:52.670
然后D的邻居是B是吧

15:52.670 --> 15:54.670
D的邻居

15:54.670 --> 15:56.670
Push

15:56.670 --> 15:58.670
B

15:58.670 --> 16:00.670
E的邻居

16:00.670 --> 16:04.500
Push

16:04.500 --> 16:06.500
这样的话我们就构建出来这个图

16:06.500 --> 16:08.500
它这个的

16:08.500 --> 16:10.500
只不过是没有一个固定数量的Nex

16:10.500 --> 16:12.500
是吧

16:12.500 --> 16:14.500
它可以有很多个邻居

16:14.500 --> 16:16.500
这就是图的一个构建的方式

16:16.500 --> 16:18.500
图的构建的方式

16:18.500 --> 16:20.500
后面的很多的问题

16:20.500 --> 16:22.500
我们都将围绕这个图展开

16:22.500 --> 16:24.500
因为二维的数据结构

16:24.500 --> 16:26.500
除了

16:26.500 --> 16:28.500
二维数组图了之外

16:28.500 --> 16:32.260
就是二维数组图和零击链表

16:32.260 --> 16:34.260
零击链表我们要放在最后

16:34.260 --> 16:36.260
因为它比较复杂

16:36.260 --> 16:38.260
所以说我们会

16:38.260 --> 16:40.260
先来说这个二维的拓捕结构

16:40.260 --> 16:42.260
先来说这个二维拓捕结构

16:42.260 --> 16:44.260
也是这个图

16:44.260 --> 16:46.260
你们会听到很多的什么二大数

16:46.260 --> 16:48.260
红黑数

16:48.260 --> 16:50.260
这些东西都是基于

16:50.260 --> 16:52.260
二维拓捕结构的

16:52.260 --> 16:54.260
都是基于二维拓捕结构的

16:54.260 --> 16:56.260
下一节课

16:56.260 --> 16:58.260
我们基于这个二维拓捕结构

16:58.260 --> 17:00.260
继续下场说

