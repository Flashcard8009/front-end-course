WEBVTT

00:00.050 --> 00:03.050
Hello 大家好

00:03.050 --> 00:06.050
上一集咱们说了二维的数据结构

00:06.050 --> 00:09.050
然后咱们说了二维的脱补结构

00:09.050 --> 00:11.050
今天这期节课我们继续好像说

00:11.050 --> 00:14.050
说一种特殊的二维的脱补结构

00:14.050 --> 00:17.050
我们把这个图给它粘过来

00:17.050 --> 00:20.050
这是一个正常的一个图

00:20.050 --> 00:22.050
我们说是一个图论中的图

00:22.050 --> 00:25.050
然后这些线我们把这个数字先删掉

00:25.050 --> 00:29.050
这些线表示极点之间的关系是吧

00:29.050 --> 00:32.050
然后你像不像村庄这个地和异之间

00:32.050 --> 00:33.050
你可以连着是吧

00:33.050 --> 00:35.050
iPhone可以伸得远一点

00:35.050 --> 00:39.940
然后他们的位置你随便变

00:39.940 --> 00:40.940
你随便变

00:40.940 --> 00:41.940
都是相等的 是吧

00:41.940 --> 00:44.940
这是我们之前说脱补的时候说的

00:44.940 --> 00:45.940
那我们今天要说一种结构

00:45.940 --> 00:48.940
叫做数据结构

00:48.940 --> 00:49.940
数据结构是什么意思呢

00:49.940 --> 00:53.940
就像是大家电脑中的文件夹系统

00:53.940 --> 00:55.940
打开C盘下一堆文件夹

00:55.940 --> 00:56.940
打开某个文件夹

00:56.940 --> 00:57.940
什么一堆文件夹

00:57.940 --> 00:58.940
打开文件夹的时候又一堆

00:58.940 --> 00:59.940
然后再往下打

00:59.940 --> 01:00.940
还是有一堆

01:00.940 --> 01:02.940
一堆一堆又一堆 是吧

01:02.940 --> 01:05.940
你会发现数据结构就是逐渐展开的

01:05.940 --> 01:08.940
它会有一个根

01:08.940 --> 01:12.940
所以说数据结构有一个根结点

01:12.940 --> 01:21.820
数据结构有一个根结点

01:21.820 --> 01:23.820
它会有一个根结目录

01:23.820 --> 01:24.820
就像你的C盘

01:24.820 --> 01:25.820
比如说我们拿这个来说

01:25.820 --> 01:26.820
谁可以做根结点

01:26.820 --> 01:27.820
假设你随便

01:27.820 --> 01:30.820
我拿一个A档给你点

01:30.820 --> 01:33.820
A展开了之后有CFB

01:33.820 --> 01:35.820
是吧 展开

01:35.820 --> 01:39.200
CFB

01:39.200 --> 01:41.200
然后我们再打开了B

01:41.200 --> 01:43.200
你说B打开了之后是D和E 是吧

01:43.200 --> 01:46.200
那你能说D打开了之后又有B和E

01:46.200 --> 01:48.200
然后B打开来之后又是D和E

01:48.200 --> 01:50.200
然后D打开来之后又是B和E

01:50.200 --> 01:53.200
没见过这种文件夹是吧

01:53.200 --> 01:55.200
我们说不带快捷方式的

01:55.200 --> 01:56.200
有人说快捷方式

01:56.200 --> 01:57.200
不是

01:57.200 --> 01:58.200
我们不带快捷方式

01:58.200 --> 02:00.200
正常那种文件夹展开系统

02:00.200 --> 02:02.200
你是不可能有的

02:02.200 --> 02:04.200
快捷方式属于这种跳转

02:04.200 --> 02:06.200
它不算

02:06.200 --> 02:08.200
是不可能有这种情况的

02:08.200 --> 02:09.200
是吧

02:09.200 --> 02:11.200
不可能B打开来之后是D打开来之后

02:11.200 --> 02:12.200
还有B和E的是吧

02:12.200 --> 02:14.200
所以说数据结构

02:14.200 --> 02:18.770
是不可能形成回录的

02:18.770 --> 02:20.770
数据结构

02:20.770 --> 02:22.770
没有回录

02:22.770 --> 02:23.770
你不可能C盘点进去

02:23.770 --> 02:24.770
点进去点进去

02:24.770 --> 02:25.770
点到某一层面之后

02:25.770 --> 02:27.770
变成D盘E盘C盘

02:28.770 --> 02:29.770
这不可能

02:29.770 --> 02:30.770
是吧

02:30.770 --> 02:31.770
除非你创建快捷方式了

02:31.770 --> 02:32.770
创建方式的话

02:32.770 --> 02:33.770
属于是跳转

02:33.770 --> 02:35.770
是隔着好几层都给跳出去了

02:35.770 --> 02:37.770
而不是展开来之后是

02:37.770 --> 02:42.460
所以说数据结构是没有回录的

02:42.460 --> 02:44.460
数据结构是没有回录的

02:44.460 --> 02:46.460
像这块B,D,E

02:46.460 --> 02:48.460
这块形成了回录的

02:49.460 --> 02:51.460
这种东西只能被称为图

02:51.460 --> 02:53.460
但是不能被称为数

02:53.460 --> 02:54.460
记住

02:54.460 --> 02:56.460
数是图了一种

02:57.460 --> 02:58.460
数

03:01.800 --> 03:04.800
数是图的一种

03:04.800 --> 03:06.800
数是图的一种

03:06.800 --> 03:09.800
那数的学名叫做什么呢

03:09.800 --> 03:10.800
数的学名叫什么呢

03:10.800 --> 03:11.800
在学校里学习的人

03:11.800 --> 03:13.800
肯定会经常学习到数

03:13.800 --> 03:14.800
数形结构是吧

03:14.800 --> 03:17.800
数的学名叫做有向无环图

03:20.690 --> 03:21.690
有向

03:23.690 --> 03:24.690
有向

03:25.690 --> 03:26.690
无环

03:29.770 --> 03:32.770
无环图

03:32.770 --> 03:34.770
有向无环图

03:34.770 --> 03:35.770
它是有方向的

03:35.770 --> 03:36.770
跟练表一样

03:36.770 --> 03:37.770
A只能指头C

03:37.770 --> 03:38.770
C不能指向A

03:38.770 --> 03:40.770
A只能指向F

03:40.770 --> 03:41.770
F不能指向A

03:41.770 --> 03:42.770
A只能指向B

03:42.770 --> 03:44.770
B不能指向A

03:44.770 --> 03:45.770
然后不能形成环

03:45.770 --> 03:47.770
我们再把这个删掉

03:48.770 --> 03:50.770
B可以指向D

03:51.770 --> 03:53.770
B也可以指向E

03:54.770 --> 03:55.770
这样的结构

03:55.770 --> 03:57.770
我们可以称为数形结构

03:59.770 --> 04:01.770
你说数形结构怎么构建

04:01.770 --> 04:03.770
它跟图的构建方式是一样

04:03.770 --> 04:04.770
只不过它有要求

04:04.770 --> 04:05.770
没有环

04:05.770 --> 04:07.770
只要它没有环就是数

04:07.770 --> 04:09.770
只要它没有环就是数

04:09.770 --> 04:11.770
数形结构除了这个东西之外

04:11.770 --> 04:14.770
还有一些属于它自己的概念

04:14.770 --> 04:16.770
比如说我把A

04:16.770 --> 04:17.770
C

04:17.770 --> 04:18.770
F

04:19.770 --> 04:20.770
B

04:20.770 --> 04:21.770
E

04:23.770 --> 04:24.770
稍等一下

04:24.770 --> 04:25.770
我把它们

04:25.770 --> 04:26.770
A

04:26.770 --> 04:27.770
改正

04:28.770 --> 04:29.770
我说了

04:29.770 --> 04:30.770
不论怎么修改它们的位置

04:30.770 --> 04:32.770
它们是不变的

04:32.770 --> 04:33.770
是吧

04:33.770 --> 04:35.770
但是在计算机的世界里

04:35.770 --> 04:36.770
数是倒着长的

04:36.770 --> 04:37.770
记住这句话

04:37.770 --> 04:38.770
计算机的世界里面数是倒长的

04:38.770 --> 04:40.770
这是一句非常出名的话

04:40.770 --> 04:41.770
啥意思呢

04:41.770 --> 04:42.770
咱们正常的世界里

04:42.770 --> 04:44.770
数根在下面

04:44.770 --> 04:45.770
是吧

04:45.770 --> 04:46.770
但是在计算机的世界里

04:46.770 --> 04:48.770
我们通常把根画在上面

04:48.770 --> 04:50.770
就像现在A的这个位置

04:51.770 --> 04:53.770
然后叶子在下面

04:53.770 --> 04:54.770
书叶在下面

04:57.910 --> 04:58.910
这是一棵树

04:58.910 --> 04:59.910
这是一棵树

05:00.910 --> 05:01.910
因为它有方向

05:01.910 --> 05:02.910
A只能指向C

05:02.910 --> 05:03.910
A只能指向F

05:03.910 --> 05:04.910
A只能指向B

05:04.910 --> 05:05.910
B指向D

05:05.910 --> 05:06.910
B指向E

05:06.910 --> 05:08.910
但是反正只不会去

05:10.910 --> 05:11.910
在构建的时候

05:11.910 --> 05:13.910
你就给它构建成有像就行了

05:13.910 --> 05:15.910
就是A的那边是C

05:15.910 --> 05:16.910
但是C的那边没有

05:17.910 --> 05:19.910
A的那边是F

05:19.910 --> 05:20.910
F的那边没有

05:20.910 --> 05:22.910
A的那边是B

05:22.910 --> 05:24.910
B的那边是D和E

05:24.910 --> 05:25.910
D和E没有那边

05:25.910 --> 05:27.910
这就让它有方向了

05:27.910 --> 05:28.910
只能从A到C

05:28.910 --> 05:29.910
从A到F

05:29.910 --> 05:30.910
从A到B到D

05:30.910 --> 05:31.910
从A到B到E

05:31.910 --> 05:32.910
不可能反正走

05:32.910 --> 05:34.910
这就是数形结构

05:34.910 --> 05:36.910
是不是跟链表是很像的

05:36.910 --> 05:38.910
只能单向的往下走

05:38.910 --> 05:40.910
不是没有双向的

05:40.910 --> 05:42.910
然后我们说几个概念

05:42.910 --> 05:43.910
根切点

05:44.910 --> 05:46.910
就是最上面的这个节点

05:46.910 --> 05:48.910
A就是根切点

05:48.910 --> 05:51.910
然后我们再说一个叶子节点

05:51.910 --> 05:55.670
什么叫做叶子节点

05:55.670 --> 05:56.670
叶子节点就是

05:57.670 --> 05:58.670
没有

05:59.670 --> 06:01.670
下边没有节点

06:01.670 --> 06:02.670
下边

06:02.670 --> 06:03.670
没有

06:03.670 --> 06:04.670
其他节点

06:06.980 --> 06:07.980
都叶子了

06:07.980 --> 06:09.980
如果还有其他的叶子的话

06:09.980 --> 06:10.980
还有其他节点

06:10.980 --> 06:11.980
这就属于数值

06:11.980 --> 06:12.980
是吧

06:12.980 --> 06:13.980
这样C就是叶子

06:13.980 --> 06:14.980
F是叶子

06:14.980 --> 06:15.980
D是叶子

06:15.980 --> 06:16.980
E是叶子

06:16.980 --> 06:17.980
B是叶子吗

06:17.980 --> 06:18.980
B不是叶子

06:18.980 --> 06:19.980
A是根

06:20.980 --> 06:21.980
B

06:21.980 --> 06:22.980
然后还有一些东西

06:22.980 --> 06:23.980
可以成为节点

06:25.980 --> 06:26.980
节点的就是

06:26.980 --> 06:27.980
G

06:28.980 --> 06:29.980
不是根节点

06:30.980 --> 06:31.980
U

06:31.980 --> 06:33.980
不是叶子节点

06:35.980 --> 06:36.980
的普通节点

06:37.980 --> 06:42.920
G不是根节点

06:42.920 --> 06:43.920
U不是叶子节点

06:43.920 --> 06:44.920
普通节点

06:44.920 --> 06:47.920
我们可以成为这个普通节点

06:49.920 --> 06:50.920
还有个数的度

06:52.920 --> 06:54.920
什么叫做数的度

06:54.920 --> 06:55.920
这颗数

06:57.920 --> 06:58.920
最多

07:00.920 --> 07:01.920
有

07:02.920 --> 07:04.920
最多

07:05.920 --> 07:09.360
差的节点

07:10.360 --> 07:12.360
有多少个差

07:20.510 --> 07:22.510
这颗数的度

07:23.510 --> 07:27.850
就为多少

07:32.630 --> 07:34.630
这个数最多的

07:36.630 --> 07:37.630
最多

07:39.630 --> 07:41.630
有最多差的节点

07:44.070 --> 07:45.070
有多少个差

07:45.070 --> 07:46.070
这个数的度就有多少

07:46.070 --> 07:48.070
比如说A节点有几个差

07:48.070 --> 07:49.070
有三个差

07:49.070 --> 07:50.070
是吧

07:50.070 --> 07:51.070
B节点有几个差

07:51.070 --> 07:52.070
有两个差是吧

07:52.070 --> 07:54.070
最多的差是哪个节点

07:54.070 --> 07:55.070
是A节点的

07:55.070 --> 07:56.070
差最多是吧

07:56.070 --> 07:57.070
最多的节点

07:57.070 --> 07:58.070
A有三个差

07:58.070 --> 08:00.070
那这个数的度就为3

08:00.070 --> 08:02.070
数的度就为3

08:03.070 --> 08:04.070
再说一个

08:04.070 --> 08:05.070
再说一个感觉

08:05.070 --> 08:06.070
数的深度

08:10.830 --> 08:11.830
这个数

08:12.830 --> 08:13.830
有几层

08:13.830 --> 08:14.830
最深有几层

08:14.830 --> 08:15.830
深有几层

08:15.830 --> 08:18.830
数最深有几层

08:20.830 --> 08:23.830
数的深度

08:24.830 --> 08:25.830
就

08:26.830 --> 08:27.830
为几

08:31.360 --> 08:33.360
我们看这个数的深度有几层

08:34.360 --> 08:36.360
这个数的深度有几层

08:36.360 --> 08:37.360
三层是吧

08:37.360 --> 08:38.360
第一层是根节点

08:38.360 --> 08:39.360
是吧

08:39.360 --> 08:41.360
第二层是他的儿子们

08:41.360 --> 08:42.360
是吧

08:42.360 --> 08:43.360
第三层是A的孙子们

08:43.360 --> 08:44.360
是吧

08:44.360 --> 08:45.360
一共有三层

08:45.360 --> 08:47.360
这是数的深度

08:47.360 --> 08:49.360
这是一些数的

08:49.360 --> 08:51.360
这个是数的最基本的概念

08:51.360 --> 08:53.360
这是数的最基本的概念

08:53.360 --> 08:55.360
然后我们在日常的开发当中

08:55.360 --> 08:58.360
我们通常不会用这么普普通通的数

08:58.360 --> 08:59.360
我们会有用很多

08:59.360 --> 09:02.360
带有一些特殊性质的数

09:02.360 --> 09:04.360
我们下一节来说

09:04.360 --> 09:06.360
我们要学的最重要的一种

09:06.360 --> 09:07.360
特殊性质的数

09:07.360 --> 09:08.360
二叉数

