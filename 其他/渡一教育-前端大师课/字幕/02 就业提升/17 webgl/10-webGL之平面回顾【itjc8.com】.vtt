WEBVTT

00:00.560 --> 00:03.320
本堂课我们做一个回顾

00:03.320 --> 00:06.400
我们回顾一下咱们之前讲的一些内容

00:06.400 --> 00:08.640
我们之前都学了哪些回顾一下

00:08.640 --> 00:11.480
然后我现在新建一个 html 文件

00:11.480 --> 00:12.800
然后总结一下可以吧

00:16.110 --> 00:16.830
ok

00:16.830 --> 00:18.430
然后我们开始的时候

00:18.430 --> 00:20.990
第一堂课我们是不是只带着大家

00:20.990 --> 00:22.550
来了解了一下webgr

00:22.550 --> 00:23.030
对吧

00:23.030 --> 00:25.910
然后我们这堂课回顾一下

00:25.910 --> 00:28.830
我们这个webgr在会智的过程当中

00:28.830 --> 00:30.670
我们都用了哪些知识

00:30.670 --> 00:31.190
对吧

00:31.230 --> 00:32.950
都用了哪些知识

00:32.950 --> 00:34.510
我们都学到了哪些知识

00:34.510 --> 00:36.710
首先第一个比较重要的

00:36.710 --> 00:37.830
是不是就是这个

00:37.830 --> 00:39.230
jrsr

00:39.230 --> 00:41.070
jrsr

00:41.070 --> 00:41.350
对吧

00:41.350 --> 00:42.230
一个着色器

00:43.430 --> 00:46.660
这个着色器语言

00:46.660 --> 00:47.020
对吧

00:47.020 --> 00:48.140
着色器语言

00:48.140 --> 00:49.340
那着色器语言里面

00:49.340 --> 00:50.660
我们都学了那些

00:50.660 --> 00:52.300
首先着色器语言里面

00:52.300 --> 00:54.020
应该有这个声明辨量

00:54.020 --> 00:54.380
对不对

00:54.380 --> 00:55.300
辨量声明

00:57.300 --> 01:02.850
辨量声明的一些存储数据类型

01:02.850 --> 01:06.000
声明

01:06.000 --> 01:14.260
里面有个存储辨量类型

01:14.260 --> 01:14.620
对吧

01:14.620 --> 01:16.780
也就是我们也管它叫修饰服

01:16.780 --> 01:17.140
对不对

01:18.780 --> 01:19.860
也管它叫修饰服

01:21.140 --> 01:23.940
那这个存储辨量类型都有哪些

01:23.940 --> 01:26.020
我们最常用的

01:26.020 --> 01:27.900
是不是这个attribute

01:27.900 --> 01:29.100
代表的是

01:29.100 --> 01:32.820
attribute代表是与顶点相关的一些信息

01:32.820 --> 01:33.060
对吧

01:33.060 --> 01:37.060
属于自己的每一个顶点的一个属性

01:37.060 --> 01:37.420
对吧

01:37.460 --> 01:41.180
属于顶点属性属性的一个修饰服

01:41.180 --> 01:42.060
那除了它之外

01:42.060 --> 01:42.700
还有什么

01:42.700 --> 01:43.620
还有个uniform

01:43.620 --> 01:45.780
FORM

01:45.780 --> 01:46.980
代表的是全局的

01:46.980 --> 01:47.460
对不对

01:48.460 --> 01:49.020
显然点

01:51.340 --> 01:52.020
显然点出事

01:52.020 --> 01:53.020
这是全局的

01:54.860 --> 01:57.740
全局辨量

01:57.740 --> 02:00.220
也就是说所有顶点都

02:00.220 --> 02:00.860
都有

02:00.860 --> 02:02.140
都用到这个辨量了

02:02.140 --> 02:03.220
对吧

02:03.220 --> 02:06.700
然后attribute是属性修饰服

02:06.700 --> 02:07.220
对吧

02:07.220 --> 02:08.380
属性

02:08.460 --> 02:09.660
修饰服

02:09.660 --> 02:09.980
OK

02:11.940 --> 02:12.300
好

02:12.300 --> 02:13.580
全局辨量修饰服

02:14.780 --> 02:15.860
那除了它们俩之外

02:15.860 --> 02:17.340
是不是还有个virings

02:17.340 --> 02:17.660
对吧

02:17.660 --> 02:18.220
virings

02:18.220 --> 02:19.820
WARYNG

02:21.180 --> 02:21.660
对吧

02:21.660 --> 02:26.860
virings代表的是可辨辨量

02:26.860 --> 02:28.820
可辨辨量修饰服

02:28.820 --> 02:29.100
对吧

02:30.660 --> 02:33.260
然后可辨辨量它是用来做什么的

02:33.260 --> 02:34.140
是不是

02:34.140 --> 02:37.740
用来把我们这个

02:37.740 --> 02:42.700
顶点着色器和我们这个

02:42.700 --> 02:46.060
片源着色器之间的一个数据交互的

02:46.060 --> 02:46.500
对吧

02:46.500 --> 02:47.820
数据交流的

02:47.820 --> 02:50.060
也就是说在顶点着色器里面

02:50.060 --> 02:52.340
我们去修改这一个辨量

02:52.340 --> 02:54.140
然后在片源着色器里面

02:54.140 --> 02:55.220
我们可以综上

02:55.220 --> 02:56.420
对不对

02:56.420 --> 02:57.140
就是

02:57.140 --> 02:58.060
顶点着色器

02:59.740 --> 03:01.220
着色器

03:01.220 --> 03:04.060
与片源着

03:05.060 --> 03:08.540
与片源着色器

03:11.260 --> 03:11.980
共用的

03:12.980 --> 03:14.340
片源着色器

03:14.340 --> 03:18.100
共用的

03:18.100 --> 03:20.500
共用的辨量

03:21.340 --> 03:22.300
对吧

03:22.300 --> 03:23.700
有它俩共有的一个辨量

03:24.700 --> 03:25.340
可以吧

03:25.340 --> 03:26.900
那这是这三种着色

03:26.900 --> 03:28.300
这三种修饰服

03:28.300 --> 03:29.420
对不对

03:29.420 --> 03:30.300
我换个行

03:30.300 --> 03:32.540
要不然这看着有点太变静了

03:32.540 --> 03:33.220
可以吧

03:33.220 --> 03:34.220
那这是变

03:34.220 --> 03:35.460
存储数据类型

03:35.460 --> 03:35.980
对不对

03:35.980 --> 03:37.100
存储变的类型

03:37.100 --> 03:38.060
那除了它之外

03:38.060 --> 03:39.380
是不是还有个数据类型

03:41.100 --> 03:41.540
对吧

03:41.540 --> 03:43.220
数据类型就是我们

03:43.220 --> 03:44.500
声明辨量的

03:44.500 --> 03:46.100
每一个辨量的一个类型了

03:46.100 --> 03:46.540
对吧

03:46.540 --> 03:48.460
辨量类型它都有那些

03:49.180 --> 03:49.700
我们

03:49.700 --> 03:52.060
最开始二维

03:52.060 --> 03:53.340
挺面内的一个图形

03:53.340 --> 03:54.980
我们用到的是VEC2

03:54.980 --> 03:55.300
对吧

03:55.300 --> 03:57.780
代表的是二维浮电型数据

03:57.780 --> 03:58.740
对吧

03:58.740 --> 04:00.300
就是两个分量的

04:00.300 --> 04:01.900
两个分量的

04:03.420 --> 04:04.820
两个分量

04:05.780 --> 04:09.380
浮电型数据

04:09.380 --> 04:09.900
可以吧

04:09.900 --> 04:10.580
VEC

04:10.580 --> 04:12.100
还有VEC3

04:12.100 --> 04:13.100
是不是也用到了

04:13.100 --> 04:14.180
还有VEC4

04:14.180 --> 04:14.700
对不对

04:14.700 --> 04:16.140
VEC3与VEC2

04:16.140 --> 04:17.420
是不是区别

04:17.420 --> 04:19.700
就是这个是三个分量的

04:19.700 --> 04:20.500
对吧

04:20.500 --> 04:21.580
分量

04:21.580 --> 04:22.220
VEC4

04:22.220 --> 04:22.820
四个分量

04:27.140 --> 04:28.100
四个分量

04:29.380 --> 04:31.700
然后我来说一下这四个分量

04:31.700 --> 04:33.500
我们正常一个立体图形

04:33.500 --> 04:35.300
我们用三个分量是不是可以了

04:35.300 --> 04:37.340
那它第四个分量是做什么呢

04:37.340 --> 04:39.420
例如我有一个坐标是这个

04:39.420 --> 04:42.300
2 3 4 2

04:42.300 --> 04:43.220
2 3 4 2

04:44.140 --> 04:46.020
那这个坐标代表什么意思啊

04:46.020 --> 04:47.260
前面这个2 3 4

04:47.260 --> 04:49.460
代表的是我们这个x轴 y轴

04:49.460 --> 04:50.860
z轴的一个坐标

04:50.860 --> 04:51.740
然后

04:51.740 --> 04:52.660
最后一个

04:52.660 --> 04:55.260
它代表的是一个其次坐标

04:55.260 --> 04:56.780
其次坐标

04:57.820 --> 04:58.820
这个第四位

05:00.660 --> 05:01.860
第四位

05:01.860 --> 05:03.340
第四位

05:03.340 --> 05:06.860
代表其次坐标

05:06.860 --> 05:09.100
那这个其次坐标有什么用啊

05:09.100 --> 05:11.260
它就是把我们的每一项

05:11.260 --> 05:13.420
它会在我们片射色器里面

05:13.420 --> 05:16.860
它会把每一项都处于最后一项

05:16.860 --> 05:20.620
把它转化成相的一个坐标值

05:20.620 --> 05:21.380
能理解吧

05:21.380 --> 05:25.100
也就是相当于它把每一项都处于这个值

05:25.100 --> 05:27.980
把最后一个位置为1

05:27.980 --> 05:28.500
能理解吧

05:28.500 --> 05:30.660
把最后一位置为1

05:30.660 --> 05:32.180
也就是它最后变成1

05:32.180 --> 05:34.300
1.5

05:34.300 --> 05:35.340
2

05:35.340 --> 05:36.460
1

05:36.460 --> 05:37.260
这样一来

05:37.260 --> 05:39.300
它的坐标就是前面这个了

05:39.300 --> 05:39.900
能理解吧

05:39.900 --> 05:41.260
它的坐标就是前面这个了

05:41.260 --> 05:42.100
只不过

05:42.100 --> 05:43.460
这个其次坐标有什么用

05:43.460 --> 05:46.900
就是要把我们前面的这些量

05:46.900 --> 05:49.300
转化成我们的一个

05:49.300 --> 05:51.140
webgr里面的一个数

05:51.140 --> 05:53.300
那我们在webgr里面的一个坐标轴

05:53.300 --> 05:55.060
它是-1-1之间的嘛

05:55.060 --> 05:56.100
对不对

05:56.100 --> 05:57.980
所以它就是想让它转换成

05:57.980 --> 06:00.220
这个小于1的一个数

06:00.220 --> 06:01.420
小于1的一个数

06:01.420 --> 06:03.820
那一般我们前面这没有比后面

06:03.820 --> 06:05.420
最后一位大的

06:05.460 --> 06:06.820
前面这几个数

06:06.820 --> 06:09.780
没有比最后一个位大的

06:09.780 --> 06:12.020
例如前面这是1

06:12.020 --> 06:12.580
2

06:12.580 --> 06:13.180
3

06:13.180 --> 06:14.340
121

06:14.340 --> 06:15.300
12吧

06:15.300 --> 06:16.140
12

06:16.140 --> 06:17.620
然后它会转换完了之后

06:17.620 --> 06:20.460
就是0.5

06:20.460 --> 06:21.500
1

06:21.500 --> 06:22.020
1

06:22.020 --> 06:22.820
1

06:22.820 --> 06:24.620
那它的坐标就是0.511

06:24.620 --> 06:26.140
能理解吧

06:26.140 --> 06:30.660
这就是补位的一位

06:30.660 --> 06:31.500
其次坐标

06:31.500 --> 06:33.540
我们管第四位叫其次坐标

06:33.580 --> 06:35.020
其次坐标的分量

06:38.860 --> 06:39.780
分量

06:39.780 --> 06:40.260
ok吧

06:41.740 --> 06:41.940
哦

06:41.940 --> 06:44.180
这写到上面吧

06:44.180 --> 06:45.460
ok吧

06:45.460 --> 06:46.740
这是数据类型

06:46.740 --> 06:48.220
那除了数据类型之外

06:48.220 --> 06:49.940
我们是不是还用到了一个精度

06:49.940 --> 06:50.380
对吧

06:50.380 --> 06:52.100
你看我们在写这个

06:52.100 --> 06:53.740
片源着色器里面

06:53.740 --> 06:55.900
在负责这个颜色纸的时候

06:55.900 --> 06:56.900
我们是不是

06:56.900 --> 07:01.420
如果你要是想把这个颜色纸动态的传进去

07:01.420 --> 07:02.660
片源着色器里面

07:02.660 --> 07:04.500
这个颜色的一个浮电型

07:04.500 --> 07:07.540
它并没有一个精准度

07:07.540 --> 07:08.100
对吧

07:08.100 --> 07:09.300
并没有一个精准度啊

07:10.460 --> 07:12.180
那我们要想设置精准度的话

07:12.180 --> 07:13.380
我们只需要通过这个

07:13.380 --> 07:14.980
PERSPAC TALE

07:14.980 --> 07:15.620
对吧

07:15.620 --> 07:19.300
PERSPAC TALE

07:19.300 --> 07:19.940
PERSATION

07:19.940 --> 07:20.300
对不对

07:20.300 --> 07:21.020
PERSATION

07:21.020 --> 07:22.900
PERSATION

07:22.900 --> 07:24.540
这个属性

07:24.540 --> 07:25.340
这个关键字

07:25.340 --> 07:26.060
来试

07:26.060 --> 07:28.220
来声明这个精确精准度

07:28.220 --> 07:29.780
然后精准度有三种类型

07:29.780 --> 07:30.820
一个高精准度

07:30.820 --> 07:31.140
对吧

07:31.140 --> 07:32.620
HYPE

07:32.620 --> 07:33.660
叫HYPE

07:33.660 --> 07:34.260
对吧

07:34.460 --> 07:35.140
高精准度

07:36.500 --> 07:38.420
高精准度

07:38.420 --> 07:40.620
然后还有个中度低准度

07:40.620 --> 07:41.220
对吧

07:41.220 --> 07:43.220
DUNP

07:43.220 --> 07:44.300
DIUNP吧

07:45.980 --> 07:47.300
这是中

07:47.300 --> 07:48.100
中精准度

07:50.060 --> 07:51.500
然后还有个低精准度

07:51.500 --> 07:55.860
是不是就是LOPE

07:55.860 --> 07:56.660
LOPE

07:56.660 --> 07:57.940
D

07:57.940 --> 08:01.750
低精准度

08:01.750 --> 08:02.710
可以吧

08:02.710 --> 08:04.030
那这是这些

08:04.030 --> 08:05.790
那除了这个这些之外

08:05.790 --> 08:08.110
是不是还有这个变源着色器里面的

08:08.110 --> 08:09.230
这些内置变量

08:09.230 --> 08:09.670
对不对

08:10.910 --> 08:11.750
变源着色器

08:12.830 --> 08:16.270
变源着色器中的

08:16.270 --> 08:18.430
内置变量

08:18.430 --> 08:20.030
还有顶点着色器里面

08:20.030 --> 08:20.630
内置变量

08:20.630 --> 08:20.910
对吧

08:21.910 --> 08:25.150
顶点着色器中的

08:25.150 --> 08:26.550
内置变量

08:28.070 --> 08:29.150
顶点着色器里面

08:29.150 --> 08:30.670
内置变量有哪些

08:30.670 --> 08:31.590
只有两个吧

08:31.590 --> 08:33.790
一个是JL POSATION

08:33.790 --> 08:34.310
对不对

08:34.310 --> 08:36.150
POSITI ONE

08:36.150 --> 08:38.070
还有一个是JL

08:38.070 --> 08:40.110
PONT SIZE

08:40.110 --> 08:40.390
对吧

08:40.390 --> 08:41.990
P-O-I-N-T

08:41.990 --> 08:43.150
在之一

08:43.150 --> 08:45.270
一个代表的是顶点做标

08:45.270 --> 08:48.150
那它的类型是四位浮电型

08:48.150 --> 08:48.630
对吧

08:49.510 --> 08:50.470
这样的一个识量

08:50.470 --> 08:51.830
四位浮电型识量

08:51.830 --> 08:53.310
那这些它都是识量

08:53.310 --> 08:54.070
对吧

08:54.070 --> 08:54.430
OK

08:54.430 --> 08:56.910
然后JL POSITI PONT SIZE

08:56.910 --> 08:58.070
它代表的是

08:58.070 --> 08:59.750
它代表的是点的一个大小

08:59.750 --> 09:00.070
对吧

09:00.070 --> 09:02.350
它的一个单位是这个

09:02.350 --> 09:03.590
它是一个浮电型数

09:03.590 --> 09:03.910
对吧

09:03.910 --> 09:04.790
FLOAT

09:04.790 --> 09:05.590
这个类型的

09:06.590 --> 09:08.030
然后再来说一下

09:08.030 --> 09:09.110
这个JL POSITION

09:09.110 --> 09:10.150
在顶点着色器里面

09:10.150 --> 09:12.750
JL POSITION是我们必须要去复职的

09:12.750 --> 09:14.230
必须要去复职的

09:14.230 --> 09:17.110
JL PONT SIZE是可以不复职的

09:17.110 --> 09:17.750
可以吧

09:17.750 --> 09:18.790
它是可以不复职的

09:18.790 --> 09:19.550
不复职的话

09:19.550 --> 09:20.550
它默认是一

09:20.550 --> 09:21.590
它是有默认值的

09:21.590 --> 09:23.190
上面这是没有默认值的

09:23.190 --> 09:23.910
可以吧

09:23.910 --> 09:25.350
然后片源着色器里面

09:25.350 --> 09:27.150
它有一个内置变量

09:27.150 --> 09:32.550
叫JL FLAG COLOR

09:32.550 --> 09:34.870
叫FRAG COLOR

09:34.870 --> 09:37.910
FRAG COLOR

09:37.910 --> 09:39.270
代表的是这个颜色

09:39.270 --> 09:39.550
对吧

09:39.550 --> 09:41.310
片源的颜色

09:41.310 --> 09:46.060
片源颜色

09:46.060 --> 09:47.820
是不是也是需要你去复职的

09:47.820 --> 09:48.940
对不对

09:48.940 --> 09:50.500
也是需要你去复职的

09:50.500 --> 09:51.100
你不复职

09:51.100 --> 09:52.380
它也是没有颜色的

09:52.380 --> 09:54.340
可以吧

09:54.340 --> 09:56.220
那这是这个内置变量

09:56.220 --> 09:57.540
除了内置变量之外

09:57.540 --> 09:59.060
我们是不是还选了一些什么

09:59.060 --> 10:01.100
坐标的旋转

10:01.100 --> 10:01.460
对不对

10:01.460 --> 10:04.060
坐标系的一个旋转

10:04.060 --> 10:05.340
坐标的一个旋转

10:05.340 --> 10:06.980
坐标的一个旋转

10:06.980 --> 10:08.460
坐标转换的话

10:08.460 --> 10:09.980
我们是不是就需要通过

10:09.980 --> 10:12.460
这个COWARS的坐标

10:12.460 --> 10:14.420
进行一个模型转换

10:14.420 --> 10:14.660
对吧

10:14.660 --> 10:15.500
这个转换的话

10:15.500 --> 10:17.460
我们是不是就是两个举正的一个成绩

10:17.460 --> 10:18.780
对吧

10:18.780 --> 10:22.020
坐标转换

10:22.020 --> 10:23.820
转换

10:23.820 --> 10:26.900
通过COWARS的

10:26.900 --> 10:31.760
通过

10:31.760 --> 10:36.040
通过COWARS的大小

10:36.040 --> 10:37.440
计算

10:37.480 --> 10:40.800
WebJR的坐标

10:40.800 --> 10:41.640
对吧

10:41.640 --> 10:44.080
通过COWARS的坐标

10:44.080 --> 10:45.960
计算WebJR的坐标

10:45.960 --> 10:47.840
是不是就是我们最开始

10:47.840 --> 10:49.280
我们来看一下之前的代码

10:51.920 --> 10:53.360
第二节课对吧

10:53.360 --> 10:59.660
把第二节课拿过来拖过来

10:59.660 --> 11:00.580
进来了

11:00.580 --> 11:03.700
然后我们可以看一下第二堂课

11:03.700 --> 11:05.780
在会智电的时候

11:05.780 --> 11:06.540
这会还没有

11:06.540 --> 11:06.900
对吧

11:06.900 --> 11:07.700
我们来看一下

11:07.700 --> 11:09.860
哪里讲的

11:09.860 --> 11:11.140
这儿

11:11.140 --> 11:12.020
看这里吧

11:12.020 --> 11:13.620
我们只需要通过一些

11:13.620 --> 11:16.060
一些数学上的一个变化

11:16.060 --> 11:16.700
对吧

11:16.700 --> 11:18.060
数学上的一个变换

11:18.060 --> 11:19.500
然后来实现

11:19.500 --> 11:21.620
然后我们只需要通过

11:21.620 --> 11:23.420
在片源着色器的

11:23.420 --> 11:24.700
顶点着色器当中

11:24.700 --> 11:26.780
进行计算这个顶点坐标

11:26.780 --> 11:27.860
对吧

11:27.860 --> 11:29.100
这样的话我们传入的是

11:29.100 --> 11:30.260
一个COWARS的坐标

11:30.260 --> 11:31.180
是不是就可以了

11:31.180 --> 11:31.620
对吧

11:31.620 --> 11:33.220
然后通过这个顶点着色器

11:33.220 --> 11:33.900
我们来计算

11:33.900 --> 11:35.860
我们每一个点的一个坐标

11:35.860 --> 11:37.540
它是通过数学一些计算

11:37.540 --> 11:39.980
这是通过数学计算

11:39.980 --> 11:43.100
然后这是我们这个坐标转换

11:43.100 --> 11:44.340
坐标转换

11:44.340 --> 11:45.700
如果大家不理解的话

11:45.700 --> 11:48.220
可以回去看一下明天堂课

11:48.220 --> 11:48.820
可以吧

11:48.820 --> 11:51.340
看一下第二堂课

11:51.340 --> 11:52.580
第二堂课第三堂课了

11:52.580 --> 11:54.820
三样形成第三堂课了吧

11:54.820 --> 11:56.260
对吧

11:56.260 --> 11:58.860
然后我们再接着往下

11:58.860 --> 12:00.460
再接着往下就是坐标轴了

12:00.460 --> 12:00.940
对不对

12:00.940 --> 12:03.900
坐标轴

12:03.900 --> 12:04.660
坐标轴

12:04.660 --> 12:06.140
那坐标轴分为什么

12:06.140 --> 12:07.220
坐标轴是不是分为

12:07.220 --> 12:08.980
Webgr的一个坐标系

12:08.980 --> 12:10.780
坐标系

12:10.780 --> 12:14.380
还有COWARS坐标系

12:14.380 --> 12:15.740
还有什么有坐标系

12:15.740 --> 12:16.940
纹理坐标对吧

12:16.940 --> 12:18.860
纹理

12:18.860 --> 12:23.140
纹理坐标系

12:23.140 --> 12:25.620
纹理坐标系

12:25.620 --> 12:27.220
然后再

12:27.220 --> 12:28.580
还有什么没了吧

12:28.580 --> 12:30.900
应该差不多这些对吧

12:30.900 --> 12:31.820
差不多这些

12:31.820 --> 12:33.900
然后Webgr里面坐标系是什么

12:33.900 --> 12:36.140
水平向右对不对

12:36.140 --> 12:37.060
原心点

12:37.060 --> 12:38.980
先说原点

12:38.980 --> 12:40.460
原点

12:40.460 --> 12:45.980
原点在Webgr的中心点

12:45.980 --> 12:47.620
对吧

12:47.620 --> 12:50.300
然后水平

12:50.300 --> 12:51.740
水平方向

12:51.740 --> 12:53.580
水平方向

12:53.580 --> 12:57.700
水平方向单位长度是-1-1

12:57.700 --> 12:58.020
对吧

12:58.020 --> 13:00.500
-1-1

13:00.500 --> 13:03.340
数值方向这是从左到右

13:03.340 --> 13:06.100
这是从左到右

13:06.420 --> 13:07.940
数值方向

13:07.940 --> 13:11.300
数值方向

13:11.300 --> 13:13.540
数值方向从上到下

13:13.540 --> 13:16.500
从下到上

13:16.500 --> 13:20.380
从下到上

13:20.380 --> 13:22.660
从下到上是-1-1对吧

13:22.660 --> 13:26.300
-1-1

13:26.300 --> 13:26.820
可以吧

13:26.820 --> 13:28.300
那COWARS坐标呢

13:28.300 --> 13:29.540
它的原心点

13:29.540 --> 13:30.740
原点

13:30.740 --> 13:31.700
不能说原心点

13:31.700 --> 13:36.780
原点在COWARS的左上角对吧

13:36.780 --> 13:39.740
左上角

13:39.740 --> 13:41.060
然后水平向右

13:41.060 --> 13:44.060
vx正轴

13:44.060 --> 13:45.500
向右

13:45.500 --> 13:51.190
vx正轴

13:51.190 --> 13:52.870
数值向下

13:52.870 --> 13:56.110
指向下

13:56.110 --> 13:59.750
vx正轴

13:59.750 --> 14:00.390
对吧

14:00.390 --> 14:01.670
那文理坐标呢

14:01.670 --> 14:03.030
文理坐标不一样了吧

14:03.030 --> 14:06.510
文理坐标是你这个文理的一个大校对不对

14:06.510 --> 14:10.510
看这里我们来找一下文理坐标

14:10.510 --> 14:12.910
把它也拖进来

14:12.910 --> 14:15.190
文理坐标我们看一下这个图啊

14:15.190 --> 14:17.510
文理坐标是不是有这个方向上的

14:17.510 --> 14:18.470
看啊

14:18.470 --> 14:20.070
这个是00点对吧

14:20.070 --> 14:20.630
右

14:20.630 --> 14:23.590
这是左下角是这个00

14:23.590 --> 14:24.710
然后这是10

14:24.710 --> 14:25.830
然后这是01

14:25.830 --> 14:26.230
对吧

14:26.230 --> 14:27.790
是这样的啊

14:27.790 --> 14:29.710
那我们来写一下

14:29.710 --> 14:31.190
文理坐标

14:31.190 --> 14:31.750
诶

14:31.750 --> 14:32.550
这儿呢啊

14:32.550 --> 14:33.510
文理坐标

14:33.510 --> 14:40.550
原点在图片的左下角

14:40.550 --> 14:44.670
左下角

14:44.670 --> 14:48.310
水平向右

14:48.310 --> 14:52.070
vx正轴

14:52.070 --> 14:54.910
图片宽度

14:54.910 --> 14:56.070
宽度

14:56.070 --> 14:58.390
v1

14:58.390 --> 14:59.630
可以吧

14:59.630 --> 15:02.470
然后垂直

15:02.470 --> 15:03.270
竖直吧

15:03.270 --> 15:05.510
竖直向上

15:05.510 --> 15:09.470
v y轴

15:09.470 --> 15:11.150
然后图片

15:11.150 --> 15:12.430
图片

15:12.430 --> 15:13.590
高度

15:13.590 --> 15:15.630
v1

15:15.630 --> 15:16.710
可以吧

15:16.710 --> 15:20.150
然后这个webjr里面的g轴在哪

15:20.150 --> 15:22.510
这个水平方向是x轴对不对

15:22.510 --> 15:25.470
从左到右x轴

15:25.470 --> 15:27.790
然后竖直方向从下到上

15:27.830 --> 15:29.750
y轴

15:29.750 --> 15:30.230
对吧

15:30.230 --> 15:30.990
y轴

15:30.990 --> 15:32.110
那z轴呢

15:32.110 --> 15:37.590
webjr的z轴是垂直于平面

15:37.590 --> 15:39.150
垂直于页面

15:39.150 --> 15:46.950
向里的向里为z轴

15:46.950 --> 15:47.430
可以吧

15:47.430 --> 15:51.550
垂直于页面为z轴

15:51.550 --> 15:53.310
那carros的z轴呢

15:53.310 --> 15:55.710
是垂直于页面向上对吧

15:55.710 --> 16:02.150
垂直页面向上为z轴

16:02.150 --> 16:04.310
文理坐标是没有z轴的对吧

16:04.310 --> 16:06.110
那这些这是坐标系啊

16:06.110 --> 16:08.310
这是坐标系

16:08.310 --> 16:09.390
然后坐标范围

16:09.390 --> 16:11.110
我刚才这是不是也写了对吧

16:11.110 --> 16:12.350
webjr是-1-1

16:12.350 --> 16:15.110
carros就是从它的0到它的一个宽度

16:15.110 --> 16:18.030
0到它的一个高度对吧

16:18.030 --> 16:21.310
然后还有什么坐标

16:21.310 --> 16:22.830
设备坐标就不用说了

16:22.830 --> 16:24.030
设备坐标就是

16:24.030 --> 16:26.150
从我们的页面的左上角这一点

16:26.150 --> 16:26.430
对吧

16:26.430 --> 16:27.830
页面的左上角这是零零

16:27.830 --> 16:28.590
然后向下

16:28.590 --> 16:29.110
向上

16:29.110 --> 16:29.950
后面向左

16:29.950 --> 16:30.910
向右

16:30.910 --> 16:33.150
这是右左右都分不清

16:33.150 --> 16:34.990
左右都分不清了

16:34.990 --> 16:36.110
好

16:36.110 --> 16:38.430
那这是我们这个坐标轴对吧

16:38.430 --> 16:40.150
那坐标除了坐标轴之外

16:40.150 --> 16:41.150
我们还学什么了

16:41.150 --> 16:43.270
是不是webjr的一些

16:43.270 --> 16:45.990
webjr的API

16:45.990 --> 16:47.870
一些API对吧

16:47.870 --> 16:48.870
一些API

16:48.870 --> 16:49.830
那都有哪些

16:49.830 --> 16:51.950
首先我们随便拿一个

16:51.950 --> 16:53.110
就拿原住体吧

16:53.190 --> 16:54.870
这个比较复杂了

16:54.870 --> 16:55.630
这个比较复杂

16:55.630 --> 16:57.870
所以用到的东西比较多

16:57.870 --> 17:00.350
首先是我们这个shader对不对

17:00.350 --> 17:02.910
就是创建我们这个着色器

17:02.910 --> 17:03.270
对吧

17:03.270 --> 17:04.390
创建着色器

17:04.390 --> 17:07.870
创建着色器里面有这个

17:07.870 --> 17:08.950
create shader

17:08.950 --> 17:11.430
还有shader source对吧

17:11.430 --> 17:14.350
create shader代表的是创建这个着色器

17:14.350 --> 17:14.990
对不对

17:14.990 --> 17:17.590
我把这个都写出来

17:17.590 --> 17:19.310
创建着色器的

17:19.310 --> 17:22.750
创建着色器

17:22.790 --> 17:23.150
可以吧

17:23.150 --> 17:25.990
着色器shader

17:25.990 --> 17:27.510
然后它的一些方法

17:27.510 --> 17:28.670
它的方法都有什么

17:28.670 --> 17:29.310
jr2

17:29.310 --> 17:30.390
然后把它拷配过来

17:30.390 --> 17:30.870
对吧

17:30.870 --> 17:33.430
jr2

17:33.430 --> 17:34.110
jr2

17:34.110 --> 17:35.510
它create shader

17:35.510 --> 17:37.950
然后create shader里面需要传递什么

17:37.950 --> 17:39.630
我们过来再看一下

17:39.630 --> 17:41.430
传递一个类型对不对

17:41.430 --> 17:44.730
传递一个type

17:44.730 --> 17:47.850
创建着色器

17:47.850 --> 17:48.170
可以吧

17:48.170 --> 17:49.450
创建着色器

17:49.450 --> 17:51.330
type为类型

17:51.330 --> 17:54.890
为着色器类型

17:54.890 --> 17:56.650
那type的值有那些

17:56.650 --> 17:58.530
type去值

17:58.530 --> 18:01.330
一个是jr2

18:01.330 --> 18:04.290
or tax tex

18:04.290 --> 18:05.730
shader s

18:05.730 --> 18:08.170
更shadr

18:08.170 --> 18:11.090
shadr

18:11.090 --> 18:11.650
对吧

18:11.650 --> 18:12.330
还有一个

18:12.330 --> 18:15.130
骗原着色器吧

18:15.130 --> 18:17.490
jr2

18:17.490 --> 18:19.770
jr2

18:19.770 --> 18:22.360
jr2

18:22.360 --> 18:24.400
fragment

18:24.400 --> 18:28.360
fragment

18:28.360 --> 18:30.200
shadr

18:30.200 --> 18:31.520
可以吧

18:31.520 --> 18:32.680
那这两个着色器

18:32.680 --> 18:34.400
这是这两个着色器

18:34.400 --> 18:35.600
这两个类型

18:35.600 --> 18:36.680
那除了创建之外

18:36.680 --> 18:37.720
我们再回过头来看一下

18:37.720 --> 18:40.040
还有什么shader source

18:40.040 --> 18:40.320
对吧

18:40.320 --> 18:41.880
这个代表的是我们要把

18:41.880 --> 18:43.280
着色器和我们这个

18:43.280 --> 18:45.080
着色器代码进行一个连接

18:45.080 --> 18:47.520
对不对

18:47.520 --> 18:49.000
添加这个

18:49.000 --> 18:49.800
把它拿过来

18:49.800 --> 18:52.280
直接把这个拷配过来吧

18:52.320 --> 18:55.680
它拷配过来

18:55.680 --> 18:57.800
代表的是

18:57.800 --> 18:59.320
添加为着色器

18:59.320 --> 19:08.860
为着色器添加数据源

19:08.860 --> 19:09.180
可以吧

19:09.180 --> 19:11.500
为着色器添加数据源

19:11.500 --> 19:12.620
然后里面的shadr

19:12.620 --> 19:14.260
代表的是着色器

19:14.260 --> 19:16.980
着色器对象

19:16.980 --> 19:20.540
这是上面这个创建着色器对象

19:20.540 --> 19:21.420
OK吧

19:21.420 --> 19:23.300
然后下面的sauce

19:23.300 --> 19:24.580
是数据源

19:24.620 --> 19:26.380
数据源

19:26.380 --> 19:28.380
集

19:28.380 --> 19:31.220
我们写的

19:31.220 --> 19:33.060
着色器代码

19:33.060 --> 19:34.620
对吧

19:34.620 --> 19:36.060
还有什么我们再来看

19:36.060 --> 19:37.340
还有这个compile shader

19:37.340 --> 19:38.620
compile shader代表的是

19:38.620 --> 19:40.020
我们要编译这个着色器

19:40.020 --> 19:40.500
对不对

19:40.500 --> 19:42.020
把我们这个字符串

19:42.020 --> 19:44.660
这是编译

19:44.660 --> 19:47.500
着色器

19:47.500 --> 19:49.620
将

19:49.620 --> 19:50.460
字符串

19:50.460 --> 19:52.860
我们这块传递过来的数据源

19:52.860 --> 19:53.580
是一个字符串

19:53.580 --> 19:54.020
对不对

19:54.060 --> 19:55.420
将着色器

19:55.420 --> 19:56.180
将字符串

19:56.180 --> 19:57.780
转称着色去源

19:57.780 --> 20:00.860
将字符串

20:00.860 --> 20:02.660
编译成

20:02.660 --> 20:04.500
着色

20:04.500 --> 20:06.020
着色器

20:06.020 --> 20:07.540
语言

20:07.540 --> 20:09.020
可以吧

20:09.020 --> 20:10.940
然后我们再接着

20:10.940 --> 20:11.980
还有什么

20:11.980 --> 20:13.180
还有调用这个方法

20:13.180 --> 20:13.380
对吧

20:13.380 --> 20:14.580
这个方法

20:14.580 --> 20:17.420
判断的是我们编译的一个结果

20:17.420 --> 20:17.900
看到了吗

20:17.900 --> 20:19.260
编译的一个状态

20:19.260 --> 20:21.020
编译的一个状态

20:21.020 --> 20:21.500
来

20:21.500 --> 20:22.620
它

20:22.620 --> 20:25.780
这是编译

20:25.780 --> 20:26.460
返回

20:26.460 --> 20:27.700
这是返回

20:27.700 --> 20:31.140
编译

20:31.140 --> 20:37.060
着色器的状态

20:37.060 --> 20:38.580
这块是成功状态

20:38.580 --> 20:41.020
这应该是成功状态

20:41.020 --> 20:42.540
如果它要是成功的话

20:42.540 --> 20:43.380
成功变异了

20:43.380 --> 20:43.780
就是说

20:43.780 --> 20:44.380
你着色器

20:44.380 --> 20:46.300
语言里面没有任何的问题的话

20:46.300 --> 20:48.500
它会给你返回一个处

20:48.500 --> 20:51.800
返回职位

20:51.800 --> 20:52.640
处

20:52.640 --> 20:53.320
或者是

20:53.360 --> 20:54.320
true

20:54.320 --> 20:55.600
true

20:55.600 --> 20:58.080
或者是false

20:58.080 --> 21:00.360
如果你正确的

21:00.360 --> 21:01.400
编译成功了

21:01.400 --> 21:02.640
它也会给你返回一个处

21:02.640 --> 21:03.400
如果错误了

21:03.400 --> 21:05.040
它也会给你返回一个false

21:05.040 --> 21:05.680
然后这个shadow

21:05.680 --> 21:06.360
我又不用写了

21:06.360 --> 21:08.480
这个shadow就是着色器的对象

21:08.480 --> 21:09.400
着色器对象

21:09.400 --> 21:10.880
可以吧

21:10.880 --> 21:11.640
然后我们再来看

21:11.640 --> 21:12.360
还有什么

21:12.360 --> 21:13.440
还有这个方法

21:13.440 --> 21:14.080
对吧

21:14.080 --> 21:15.840
打印的是如果它要是错了

21:15.840 --> 21:17.520
它会打印一个log

21:17.520 --> 21:20.760
就是一个错误的一个信息

21:20.760 --> 21:25.760
这个返回错误信息

21:25.760 --> 21:26.960
着色器代码

21:26.960 --> 21:31.920
着色器代码的错误日制

21:31.920 --> 21:34.120
可以吧

21:34.120 --> 21:34.600
ok吧

21:34.600 --> 21:35.920
那这是所有的着色器

21:35.920 --> 21:36.160
对吧

21:36.160 --> 21:37.120
创建着色器

21:37.120 --> 21:37.920
然后我们接下来

21:37.920 --> 21:39.360
还有什么

21:39.360 --> 21:40.840
创建一个程序

21:40.840 --> 21:41.240
对吧

21:41.240 --> 21:43.240
我们创建完着色器之后

21:43.240 --> 21:44.160
需要把这个着色器

21:44.160 --> 21:45.560
放到程序里面去执行

21:45.560 --> 21:46.520
对不对

21:46.520 --> 21:47.680
那我们创建程序

21:47.680 --> 21:47.960
一个

21:47.960 --> 21:49.440
第一个是program

21:49.440 --> 21:50.880
对不对

21:50.880 --> 21:51.840
来

21:51.840 --> 21:55.800
这是程序

21:55.800 --> 22:00.120
prjrm

22:00.120 --> 22:01.440
可以吧

22:01.440 --> 22:03.280
这是着色器程序

22:03.280 --> 22:04.640
然后把这个程序拿过来

22:04.640 --> 22:09.390
这是创建程序

22:09.390 --> 22:10.110
那这个程序

22:10.110 --> 22:11.670
它是着色器的一个程序

22:11.670 --> 22:13.510
所以这块我就不多写了

22:13.510 --> 22:14.230
这块大家知道

22:14.230 --> 22:16.270
它是一个着色器程序就可以了

22:16.270 --> 22:17.350
那创建着色器程序

22:17.350 --> 22:19.990
我们需要把这个着色器

22:19.990 --> 22:21.870
两个着色器

22:21.870 --> 22:22.710
代码

22:22.710 --> 22:24.750
是不是都给它添加到程序里面去

22:24.750 --> 22:25.310
对吧

22:25.310 --> 22:26.550
那添加程序的方法

22:26.550 --> 22:27.470
就是这个

22:27.470 --> 22:28.310
attach

22:28.310 --> 22:33.230
添加着色器

22:33.230 --> 22:36.990
然后第二个代表的是一个shader

22:36.990 --> 22:39.590
第一个参数program

22:39.590 --> 22:42.190
这prjrm

22:42.190 --> 22:47.070
代表的是要添加的程序

22:47.070 --> 22:48.390
程序对吧

22:48.390 --> 22:59.070
然后shader是要往程序里面添加的着色器

22:59.070 --> 22:59.590
可以吧

22:59.590 --> 23:01.070
着色器对象

23:01.070 --> 23:03.910
它是一个着色器对象

23:03.910 --> 23:04.990
可以吧

23:04.990 --> 23:05.990
那我们还有什么

23:05.990 --> 23:08.150
还有连接这个着色器

23:08.150 --> 23:08.710
对吧

23:08.710 --> 23:09.510
那两个对象

23:09.510 --> 23:11.590
两个着色器是不是没有关系

23:11.590 --> 23:11.830
对吧

23:11.830 --> 23:13.790
我要把这个程序

23:13.790 --> 23:16.070
你通过调用这个方法

23:16.070 --> 23:17.230
我们可以添加着色器

23:17.230 --> 23:18.870
那两个着色器你都需要添加

23:18.870 --> 23:20.990
那这两个着色器添加进去之后

23:20.990 --> 23:21.910
它是没有关系的

23:21.910 --> 23:23.270
我们需要给它建立联系

23:23.270 --> 23:23.550
对吧

23:23.550 --> 23:25.950
那我们就可以通过这个link program

23:25.950 --> 23:27.390
代表的是

23:27.390 --> 23:33.270
这个连接着色器程序

23:33.270 --> 23:34.070
可以吧

23:34.070 --> 23:36.230
然后我们还需要用一下这个着色器

23:36.230 --> 23:36.590
对不对

23:36.590 --> 23:38.390
那我们通过U字来使用

23:38.390 --> 23:38.710
对吧

23:40.710 --> 23:41.470
使用

23:43.310 --> 23:45.390
使用着色器

23:45.390 --> 23:46.350
然后着色器里面

23:46.350 --> 23:47.990
是不是也有判断状态的

23:47.990 --> 23:48.390
对不对

23:48.390 --> 23:49.270
也有判断状态

23:49.270 --> 23:50.510
就是这个方法

23:50.510 --> 23:51.070
不写了

23:51.070 --> 23:52.430
大家自己写一下

23:52.430 --> 23:52.830
可以了

23:54.070 --> 23:54.510
OK

23:54.510 --> 23:57.710
然后这个是程序

23:57.710 --> 23:58.590
程序这一部分

23:58.590 --> 23:59.830
程序这部分完事了

23:59.830 --> 24:02.230
其实后是不是就开始渲染了

24:02.230 --> 24:02.670
对不对

24:04.270 --> 24:05.750
程序这一部分完了之后

24:05.750 --> 24:08.190
就开始渲染了

24:08.190 --> 24:09.630
渲染了是渲染之前

24:09.630 --> 24:12.430
是不是还需要往里传递一些数据

24:12.430 --> 24:12.790
对吧

24:12.790 --> 24:13.590
传递数据

24:13.590 --> 24:14.310
那传递数据

24:14.310 --> 24:15.790
我们就首先需要获取到

24:15.790 --> 24:18.630
我们这个存储的一个位置

24:18.630 --> 24:19.550
获取到存储位置

24:19.550 --> 24:20.510
我们就需要调用这个

24:20.510 --> 24:22.270
get attribute location

24:22.270 --> 24:23.670
或者uniform location

24:23.670 --> 24:25.350
那这个是根据你这个

24:25.350 --> 24:28.550
存储的位置的一个样式

24:28.550 --> 24:30.150
属性来定义的

24:30.150 --> 24:31.310
对不对

24:31.310 --> 24:32.790
那接下来这个管它叫

24:32.790 --> 24:36.750
att attribute属性

24:40.960 --> 24:41.840
属性

24:42.760 --> 24:43.440
可以吗

24:43.440 --> 24:45.600
这个属性怎么来获取

24:45.600 --> 24:47.560
获取它的一个数据

24:47.560 --> 24:49.920
你通过get attribute location来获取

24:49.920 --> 24:52.120
然后第一个参数是这个程序

24:52.120 --> 24:54.520
你要获取哪个程序的这个变量

24:54.520 --> 24:54.840
可以吧

24:54.840 --> 24:55.800
哪个程序的变量

24:55.800 --> 24:56.400
不多写了

24:56.400 --> 24:57.000
就写在这儿

24:57.000 --> 24:57.320
可以吧

24:58.560 --> 24:59.640
然后除了这个之外

24:59.640 --> 25:00.320
还有什么

25:00.320 --> 25:01.080
还有这个

25:03.160 --> 25:04.720
然后再过来看一下

25:04.720 --> 25:05.320
还有什么

25:06.680 --> 25:08.880
I attribute关于 attribute的

25:08.880 --> 25:10.200
关于 attribute的

25:10.200 --> 25:11.840
我们再往下来拉

25:11.840 --> 25:13.080
这块感觉没有啥了

25:13.080 --> 25:13.320
对吧

25:14.320 --> 25:17.320
这是

25:18.600 --> 25:19.720
还有这里对吧

25:19.720 --> 25:22.520
这个ward tax attribute pointer

25:22.520 --> 25:24.120
它代表的是我们要

25:25.480 --> 25:27.280
为这个变量分配一个数据

25:27.280 --> 25:27.760
对吧

25:27.760 --> 25:28.960
为变量分配数据

25:28.960 --> 25:30.040
那我们都写在这儿吧

25:30.840 --> 25:31.680
哎呀

25:31.680 --> 25:32.480
没复制过来

25:33.840 --> 25:36.980
调整四一下

25:36.980 --> 25:37.620
这点

25:39.660 --> 25:40.020
可以吧

25:41.540 --> 25:44.300
这个是为整四期变量分配数据

25:44.380 --> 25:45.900
把这个都给它写过来吧

25:48.340 --> 25:49.540
都写进来

25:49.540 --> 25:52.620
这是为着色期

25:54.340 --> 25:55.300
为数据

25:55.300 --> 25:56.620
为数据

25:56.620 --> 25:58.420
添加变量

25:58.420 --> 25:59.020
添加

26:00.900 --> 26:01.180
对

26:01.180 --> 26:02.580
为变量添加数据

26:02.580 --> 26:02.780
好

26:02.780 --> 26:04.060
怎么嘴还飘了

26:04.060 --> 26:04.860
变量

26:04.860 --> 26:06.140
添加数据

26:09.030 --> 26:09.390
可以了

26:12.150 --> 26:13.030
然后还有什么

26:14.110 --> 26:14.670
这个

26:14.670 --> 26:16.390
这个是在哪儿用到的

26:16.390 --> 26:17.430
是不是在我们这个

26:19.430 --> 26:20.790
叫什么了

26:20.790 --> 26:21.790
我一下猛住了呢

26:23.550 --> 26:24.270
缓冲区

26:24.270 --> 26:24.550
对吧

26:24.550 --> 26:26.550
缓冲区数据里面会用到的它

26:28.430 --> 26:28.950
然后

26:28.950 --> 26:31.230
那这个我们就写在缓冲区数据里面吧

26:31.230 --> 26:32.790
在缓冲区数据里面用到的嘛

26:32.790 --> 26:33.830
这就是缓冲区数据

26:35.830 --> 26:36.590
缓冲区数据

26:36.590 --> 26:37.710
添加缓冲区数据的话

26:37.710 --> 26:39.270
我们是不是需要有五步

26:39.270 --> 26:39.550
对吧

26:39.550 --> 26:40.630
哪五步还记得吗

26:41.750 --> 26:42.750
我们再过来看一下

26:42.750 --> 26:43.950
缓冲区数据的一堂课

26:45.550 --> 26:47.990
再看一下哪里来着

26:47.990 --> 26:48.910
缓冲区数据

26:50.470 --> 26:51.910
我是不是应该有个PPT

26:51.910 --> 26:52.750
我来找个PPT

26:56.620 --> 26:57.060
在这里

26:57.060 --> 26:57.340
对吧

26:58.500 --> 27:00.220
缓冲区数据在最后

27:00.220 --> 27:01.020
在这里啊

27:01.020 --> 27:01.860
分成了五步

27:02.780 --> 27:03.380
来看一下

27:06.660 --> 27:07.020
第一步

27:07.020 --> 27:08.060
创建缓冲区对象

27:08.060 --> 27:08.300
对吧

27:08.300 --> 27:10.940
CreateFed的buffer

27:10.940 --> 27:13.100
把这都复制过来吧

27:13.100 --> 27:14.420
这些全都复制过来

27:14.460 --> 27:15.180
Create的buffer

27:15.180 --> 27:16.020
Fed的buffer

27:16.020 --> 27:16.300
对吧

27:18.660 --> 27:19.100
第一步

27:19.100 --> 27:20.220
创建缓冲区

27:21.220 --> 27:21.700
第二步

27:21.700 --> 27:23.220
绑定缓冲区对象

27:23.220 --> 27:23.900
对吧

27:23.900 --> 27:24.460
第三步

27:25.500 --> 27:29.540
这是创建缓冲区

27:29.540 --> 27:30.100
绑定

27:31.660 --> 27:34.180
缓冲区对象

27:34.180 --> 27:35.100
然后第三步是什么

27:35.100 --> 27:36.220
我们再回过头来看一下

27:37.300 --> 27:37.900
第三步

27:37.900 --> 27:38.620
绑定数据

27:38.620 --> 27:39.100
对吧

27:39.100 --> 27:40.380
buffer data绑定数据

27:41.940 --> 27:42.460
稿配过来

27:44.540 --> 27:45.540
然后这个数据

27:46.260 --> 27:48.380
这数据我们就直接写中央号了

27:48.380 --> 27:49.980
自己回去写一下数据吧

27:49.980 --> 27:51.860
这是绑定数据

27:54.500 --> 27:55.980
绑定完数据呢

27:55.980 --> 27:58.900
我们需要为数据添加这个变量

27:58.900 --> 27:59.500
对吧

27:59.500 --> 28:00.780
为变量添加数据

28:00.780 --> 28:02.620
我怎么又说最漂亮

28:02.620 --> 28:04.020
为变量添加数据

28:04.020 --> 28:06.540
那为变量添加完数据之后

28:06.540 --> 28:07.420
是不是要启用

28:07.420 --> 28:07.780
对吧

28:07.780 --> 28:08.420
启用

28:08.420 --> 28:09.820
通过那个

28:09.820 --> 28:10.340
用它

28:10.340 --> 28:10.620
对吧

28:12.180 --> 28:12.620
用它

28:12.620 --> 28:13.020
启用

28:14.220 --> 28:15.700
启用数据

28:15.740 --> 28:16.100
可以吧

28:16.100 --> 28:17.300
这个我们都写的location

28:18.100 --> 28:18.620
tn

28:19.860 --> 28:20.940
roca tn

28:21.860 --> 28:22.180
可以吧

28:23.300 --> 28:25.100
然后这块是分量个数

28:25.100 --> 28:26.460
这个叫size

28:26.460 --> 28:27.540
然后这里

28:27.540 --> 28:28.740
这个叫类型对吧

28:28.740 --> 28:29.100
type

28:30.220 --> 28:31.940
然后这个是normalize

28:31.940 --> 28:33.260
是否归一化对不对

28:34.220 --> 28:35.140
ce

28:35.140 --> 28:36.220
然后下面这个呢

28:36.220 --> 28:37.180
偏一辆吧

28:37.180 --> 28:38.340
叫street对不对

28:40.020 --> 28:41.260
最后一个是偏一辆对吧

28:41.260 --> 28:43.060
这个叫分

28:43.060 --> 28:44.140
这个叫分量

28:44.140 --> 28:45.340
分量

28:45.340 --> 28:47.620
每个顶点有多少个分量

28:47.620 --> 28:48.580
它的一个字节数

28:48.580 --> 28:48.860
对吧

28:48.860 --> 28:49.700
分量的字节数

28:51.740 --> 28:52.220
好

28:52.220 --> 28:53.660
那我们现在是不是就这五步

28:53.660 --> 28:53.900
对吧

28:53.900 --> 28:54.700
缓冲区

28:54.700 --> 28:55.900
创建缓冲区就五步

28:56.740 --> 28:57.420
2

28:57.420 --> 28:57.900
3

28:57.900 --> 28:59.020
写入缓冲区数据

28:59.660 --> 29:00.420
第四步

29:00.980 --> 29:04.020
将缓冲区数据付给这个itb变量

29:04.020 --> 29:04.780
第五步

29:05.540 --> 29:07.220
第五步是启动

29:07.220 --> 29:07.540
对吧

29:07.540 --> 29:08.380
itb没了

29:09.460 --> 29:11.380
那这是缓冲区

29:11.380 --> 29:13.220
itb先写这一个

29:13.220 --> 29:13.620
可以吧

29:13.620 --> 29:14.380
先写这一个

29:14.420 --> 29:15.980
然后还有uniform对不对

29:15.980 --> 29:17.580
uniform

29:17.580 --> 29:19.180
uniform变量

29:19.180 --> 29:22.260
uniform属性

29:22.260 --> 29:22.780
属性

29:23.980 --> 29:25.180
与它对应的对吧

29:25.180 --> 29:26.700
我直接就写对应了

29:26.700 --> 29:27.780
uniform

29:27.780 --> 29:29.660
只不过把这个itb改成uniform

29:32.780 --> 29:33.420
可以吧

29:33.420 --> 29:34.940
然后uniform在复制的时候

29:34.940 --> 29:36.780
我们是不是还有一个git

29:36.780 --> 29:38.260
jr.uniform

29:38.260 --> 29:40.220
uniform

29:40.220 --> 29:42.020
uniform4f

29:42.020 --> 29:42.300
对吧

29:42.300 --> 29:43.620
代表是四位浮电型

29:43.620 --> 29:44.620
或者几位的对不对

29:44.620 --> 29:45.620
几个分量

29:45.660 --> 29:47.740
这个是4f

29:48.500 --> 29:48.820
可以吧

29:48.820 --> 29:49.740
我就写这些吧

29:49.740 --> 29:51.100
然后第一个是location

29:51.100 --> 29:51.820
它的一个位置

29:51.820 --> 29:52.020
对吧

29:52.020 --> 29:53.620
给哪个变量

29:53.620 --> 29:55.300
给哪个变量复制

29:55.300 --> 29:56.300
然后第二个

29:56.300 --> 29:58.020
第二个开始是我们的分量数

29:58.020 --> 29:58.740
四位的

29:58.740 --> 30:03.060
那就是x,y,y,z,w

30:03.060 --> 30:03.860
可以吧

30:03.860 --> 30:04.500
四个分量

30:06.060 --> 30:08.100
然后我们是不是还有一个什么

30:08.100 --> 30:09.900
jr.uniform

30:09.900 --> 30:11.700
uniform

30:11.700 --> 30:12.780
uniform

30:12.780 --> 30:13.860
metrix

30:13.860 --> 30:15.580
m,at,r,x

30:15.700 --> 30:16.940
4fv

30:16.940 --> 30:19.380
代表的是我们要传的是一个矩阵

30:19.380 --> 30:19.980
对不对

30:19.980 --> 30:21.020
一个矩阵

30:21.020 --> 30:22.380
行列式

30:22.380 --> 30:23.140
一个矩阵

30:23.140 --> 30:23.740
这个矩阵

30:23.740 --> 30:24.460
第一个参数

30:24.460 --> 30:25.460
是不是也是location

30:25.460 --> 30:25.860
对吧

30:25.860 --> 30:27.100
你要传进哪个数据

30:27.100 --> 30:28.060
第二个参数是false

30:28.060 --> 30:29.300
固定次的

30:29.300 --> 30:30.860
然后第三个参数

30:30.860 --> 30:32.020
第三个参数是什么

30:32.020 --> 30:34.140
是你的这个metrix

30:34.140 --> 30:35.020
一个矩阵

30:35.020 --> 30:35.380
对不对

30:35.380 --> 30:36.900
m,at,r,x

30:38.220 --> 30:38.620
可以吧

30:39.860 --> 30:41.420
拿这些

30:41.420 --> 30:44.180
然后我们再有什么

30:44.180 --> 30:44.980
环终虚说完了

30:44.980 --> 30:45.220
对吧

30:45.260 --> 30:45.900
还有啥

30:47.300 --> 30:48.020
环终虚说完了

30:48.020 --> 30:49.500
我们再过回头来再看一下

30:49.500 --> 30:50.300
还有什么没说

30:51.180 --> 30:51.820
还有绘制

30:51.820 --> 30:52.100
对吧

30:52.100 --> 30:53.620
再接下来是不是就绘制了

30:53.620 --> 30:54.100
绘制的话

30:54.100 --> 30:55.300
我们有两种方式

30:55.300 --> 30:56.460
一种是

30:56.460 --> 30:57.100
r,r,x

30:57.100 --> 30:58.260
还有一种是

30:58.260 --> 30:59.060
照element

30:59.060 --> 30:59.500
对吧

30:59.500 --> 31:01.380
照element是通过我们顶点

31:01.380 --> 31:02.660
着色器里面的点

31:02.660 --> 31:03.420
进行一个绘制

31:03.420 --> 31:03.940
对吧

31:03.940 --> 31:07.540
这个绘制

31:07.540 --> 31:07.900
对不对

31:09.180 --> 31:10.540
然后还有

31:10.540 --> 31:11.820
jr.element

31:13.420 --> 31:13.660
对吧

31:13.660 --> 31:13.980
它

31:15.540 --> 31:16.260
那参数

31:17.140 --> 31:18.020
不要弄混

31:18.020 --> 31:18.820
参数不要弄混

31:18.820 --> 31:19.700
它俩的参数不一样

31:19.700 --> 31:20.580
第一个参数

31:20.580 --> 31:22.060
都是图圆

31:22.060 --> 31:22.340
对吧

31:22.340 --> 31:24.260
你要用哪个图圆进行一个绘制

31:24.260 --> 31:25.460
然后第二个参数

31:25.460 --> 31:26.860
照r,x的第二个参数

31:26.860 --> 31:28.460
代表的是我们

31:28.460 --> 31:31.180
从哪一个顶点开始计算

31:31.180 --> 31:31.580
能一起吧

31:31.580 --> 31:33.500
从哪个顶点开始绘制

31:33.500 --> 31:34.060
这是

31:34.060 --> 31:34.940
然后最后一个

31:34.940 --> 31:37.100
是一共要绘制多少个顶点

31:37.100 --> 31:37.780
绘制这个图形

31:37.780 --> 31:39.020
用到顶点多少个顶点

31:39.020 --> 31:40.580
而我们这个照element

31:40.580 --> 31:41.980
它的第二个参数

31:41.980 --> 31:43.540
是绘制多少个顶点

31:43.540 --> 31:44.940
第三个参数

31:44.940 --> 31:46.660
它是一个数据类型

31:46.660 --> 31:47.220
那你解释吧

31:47.220 --> 31:49.620
这个顶点的一个数据类型

31:49.620 --> 31:50.940
所引旨的一个类型

31:50.940 --> 31:52.020
然后第四个参数

31:52.020 --> 31:54.260
它才是从哪个顶点开始

31:54.260 --> 31:55.020
来绘制

31:55.020 --> 31:56.220
可以吧

31:56.220 --> 31:57.100
这样绘制

31:57.100 --> 31:58.020
然后我们图圆

31:58.020 --> 31:58.940
再说一下图圆

32:00.460 --> 32:00.980
图圆

32:02.540 --> 32:03.140
图圆

32:04.140 --> 32:05.260
那图圆的话

32:05.260 --> 32:06.860
是不是就有这么多种图圆

32:06.860 --> 32:08.500
我们再来回过头来看一下

32:08.500 --> 32:09.180
图圆

32:10.380 --> 32:11.860
有点线三角形

32:11.860 --> 32:12.140
对吧

32:12.140 --> 32:13.940
线还分成什么线

32:14.660 --> 32:15.260
看啊

32:15.260 --> 32:16.740
线这里

32:16.740 --> 32:18.860
线是不是还分成这种线

32:18.860 --> 32:19.300
线段

32:19.300 --> 32:20.220
还有这个折线

32:20.220 --> 32:21.660
还有这个闭合的一个线段

32:21.660 --> 32:22.100
对吧

32:22.100 --> 32:22.860
然后三角形

32:22.860 --> 32:24.140
还分成这种这些三角形

32:24.140 --> 32:25.180
然后就不多写了

32:25.180 --> 32:26.300
可以吧

32:26.300 --> 32:27.500
来写上吧

32:27.500 --> 32:28.660
jl点

32:28.660 --> 32:29.860
point

32:29.860 --> 32:30.500
points

32:30.500 --> 32:31.180
对吧

32:31.180 --> 32:33.340
然后就写这一个

32:33.340 --> 32:35.900
然后jl点

32:35.900 --> 32:37.340
jl点什么

32:37.340 --> 32:37.940
lense

32:37.940 --> 32:38.300
对吧

32:38.300 --> 32:39.420
r

32:39.420 --> 32:41.900
rns

32:41.900 --> 32:43.700
然后jl点

32:43.860 --> 32:44.580
trangles

32:44.580 --> 32:46.340
tr

32:46.340 --> 32:47.140
jl点

32:47.140 --> 32:48.420
诶

32:48.420 --> 32:50.180
jl点

32:50.180 --> 32:51.500
tr a

32:51.500 --> 32:52.540
i

32:52.540 --> 32:53.940
nj re

32:53.940 --> 32:54.860
trangles

32:54.860 --> 32:57.140
然后t

32:57.140 --> 32:58.060
t

32:58.060 --> 32:58.660
re

32:58.660 --> 32:59.340
i n

32:59.340 --> 33:00.500
j

33:00.500 --> 33:02.180
re

33:02.180 --> 33:02.780
钢泛

33:02.780 --> 33:03.820
对吧

33:03.820 --> 33:04.900
还有

33:04.900 --> 33:06.020
t

33:06.020 --> 33:07.300
tr

33:07.300 --> 33:08.180
i a n j

33:08.180 --> 33:09.180
re

33:09.180 --> 33:09.780
钢

33:09.780 --> 33:11.380
strip

33:11.380 --> 33:11.860
都不一样

33:11.860 --> 33:12.100
对吧

33:12.100 --> 33:13.580
烂是不是也是一样的

33:13.580 --> 33:14.620
线也是一样的

33:14.620 --> 33:14.860
对吧

33:14.860 --> 33:16.340
strip loop

33:16.340 --> 33:17.900
strip loop

33:17.900 --> 33:18.780
来

33:18.780 --> 33:19.660
r

33:19.660 --> 33:21.020
rn

33:21.020 --> 33:21.620
钢

33:21.620 --> 33:22.980
strip

33:22.980 --> 33:24.100
对吧

33:24.100 --> 33:24.860
rn

33:24.860 --> 33:26.020
钢

33:26.020 --> 33:27.020
rop

33:27.020 --> 33:28.620
对吧

33:28.620 --> 33:29.260
对吧

33:29.260 --> 33:31.020
这些图员

33:31.020 --> 33:32.260
然后我们再有文理

33:32.260 --> 33:32.580
对吧

33:32.580 --> 33:33.180
文理

33:33.180 --> 33:34.620
文理里面

33:34.620 --> 33:35.140
最后一个

33:35.140 --> 33:38.180
文理

33:38.180 --> 33:38.900
文理

33:38.900 --> 33:40.300
要

33:40.300 --> 33:41.180
文理

33:41.180 --> 33:41.780
诶

33:41.780 --> 33:43.940
怎么写不出来了呢

33:43.940 --> 33:45.380
文理

33:45.380 --> 33:46.380
文理里面有什么

33:46.380 --> 33:47.980
我们再过一个头来看一下

33:47.980 --> 33:49.100
文理里面

33:49.100 --> 33:50.420
来

33:50.420 --> 33:52.060
文理里面是不是有创建文理

33:52.060 --> 33:52.380
对吧

33:52.380 --> 33:54.300
我们把这个pt再打开

33:54.300 --> 33:55.060
文理的

33:55.060 --> 34:00.350
pt也打开

34:00.350 --> 34:00.830
文理

34:00.830 --> 34:03.510
我们是不是需要知道创建文理

34:03.510 --> 34:03.950
对吧

34:03.950 --> 34:05.150
如何创建文理

34:05.150 --> 34:06.390
然后

34:06.390 --> 34:07.030
来

34:07.030 --> 34:09.150
首先

34:09.150 --> 34:12.410
诶

34:12.410 --> 34:13.170
看啊

34:13.170 --> 34:13.490
这里

34:13.490 --> 34:14.410
创建文理

34:14.410 --> 34:15.410
创建文理对象

34:15.450 --> 34:16.530
create texture

34:16.530 --> 34:18.250
对吧

34:18.250 --> 34:20.530
把这个拷配过来

34:20.530 --> 34:23.370
创建文理对象

34:23.370 --> 34:25.250
创

34:25.250 --> 34:28.330
创建文理对象

34:28.330 --> 34:28.770
对吧

34:28.770 --> 34:30.530
创建文理对象之后

34:30.530 --> 34:31.730
我们还干啥了

34:31.730 --> 34:34.290
来

34:34.290 --> 34:37.930
接下来是不是就是我们加载图形

34:37.930 --> 34:38.210
对吧

34:38.210 --> 34:39.090
加载图片

34:39.090 --> 34:40.210
加载完图片之后

34:40.210 --> 34:41.250
激活文理对象

34:41.250 --> 34:41.930
对吧

34:41.930 --> 34:44.690
然后这里是不是有一个转换做标戏

34:44.690 --> 34:44.930
对吧

34:44.930 --> 34:45.730
转换做标戏

34:45.730 --> 34:46.810
我们通过这个方法

34:46.810 --> 34:49.610
我们来写一下把把这块

34:49.610 --> 34:51.610
转换做标戏

34:51.610 --> 34:52.290
诶

34:52.290 --> 34:55.370
写在这

34:55.370 --> 34:58.690
转换做标戏

34:58.690 --> 35:00.290
可以吧

35:00.290 --> 35:01.890
然后再接下来

35:01.890 --> 35:03.090
看还有啥

35:03.090 --> 35:04.410
转换做标戏之后

35:04.410 --> 35:05.170
激活文理

35:05.170 --> 35:05.450
对吧

35:05.450 --> 35:06.450
绑定文理

35:06.450 --> 35:08.490
然后给文理添加属性

35:08.490 --> 35:08.850
对吧

35:08.850 --> 35:10.090
文理属性

35:10.090 --> 35:12.690
设置文理属性

35:12.690 --> 35:14.010
这是绑定文理

35:14.010 --> 35:15.010
绑定文理对象

35:15.010 --> 35:17.250
是不是绑定到哪个文理单元上去

35:17.250 --> 35:17.810
对吧

35:17.810 --> 35:19.250
然后

35:19.250 --> 35:21.570
我们再设置文理的参数

35:21.570 --> 35:22.730
这个设置文理参数

35:22.730 --> 35:24.770
是不是就是把我们这个文理

35:24.770 --> 35:25.850
硬设上就可以了

35:25.850 --> 35:26.170
对不对

35:26.170 --> 35:28.290
绑定文理参数

35:28.290 --> 35:30.090
绑定文理对象这是

35:30.090 --> 35:31.050
写法呢

35:31.050 --> 35:32.850
这个是下码的

35:32.850 --> 35:35.050
这是绑定文理对象

35:35.050 --> 35:37.010
然后上面是激活文理

35:37.010 --> 35:40.450
激活文理单元

35:40.450 --> 35:43.090
激活文理单元

35:43.130 --> 35:45.210
可以吧

35:45.210 --> 35:45.730
ok

35:45.730 --> 35:46.930
然后我们再接着

35:46.930 --> 35:48.330
这块是设置文理参数

35:48.330 --> 35:48.570
对吧

35:48.570 --> 35:49.650
设置文理参数

35:49.650 --> 35:52.850
之前说最好把他们全都写上

35:52.850 --> 35:53.970
他们全都写上

35:53.970 --> 35:55.810
一定是没有问题的

35:55.810 --> 35:57.210
那你如果不写一个

35:57.210 --> 35:58.450
它可能会出现问题

35:58.450 --> 35:59.890
对吧

35:59.890 --> 36:00.850
然后再接下来

36:00.850 --> 36:02.130
是我们这个方法

36:02.130 --> 36:05.770
将图片数据传递给这个GPU

36:05.770 --> 36:06.250
对吧

36:06.250 --> 36:07.170
通过这个方法

36:07.170 --> 36:11.330
把它拷贝过来

36:11.330 --> 36:17.530
这个是将图片

36:17.530 --> 36:25.330
图片数据传递传递给GPU

36:25.330 --> 36:27.170
可以吧

36:27.170 --> 36:28.050
然后最后一个

36:28.050 --> 36:28.850
我们再来看一下

36:28.850 --> 36:29.650
还有啥

36:29.650 --> 36:30.650
最后一个

36:30.650 --> 36:33.530
这块是不是就调用这个

36:33.530 --> 36:35.890
传递这个文理作文理数据了

36:35.890 --> 36:36.210
对吧

36:36.210 --> 36:37.410
传递文理数据

36:37.410 --> 36:38.490
传递文理数据

36:38.490 --> 36:40.170
我们是通过这个方法

36:40.210 --> 36:41.730
叫UniformEI

36:41.730 --> 36:42.770
对不对

36:42.770 --> 36:44.570
UniformEI

36:44.570 --> 36:49.450
这是传递文理数据

36:49.450 --> 36:50.610
那传递文理数据的话

36:50.610 --> 36:51.930
我们只需要第一个参数

36:51.930 --> 36:52.810
它是一个location

36:52.810 --> 36:53.290
对不对

36:53.290 --> 36:54.610
一个位置

36:54.610 --> 36:56.210
然后第二个参数是文理单元

36:56.210 --> 36:57.170
传递

36:57.170 --> 36:59.090
传递文理单元的一个数据

36:59.090 --> 37:04.630
传递文理单元

37:04.630 --> 37:06.550
锁印就行了

37:06.590 --> 37:08.150
文理

37:08.150 --> 37:09.870
文理单元

37:09.870 --> 37:12.470
锁印

37:12.470 --> 37:15.470
可以吧

37:15.470 --> 37:16.270
还有什么吗

37:16.270 --> 37:18.430
好像没有啥了吧

37:18.430 --> 37:19.310
应该就这些

37:19.310 --> 37:19.630
对不对

37:19.630 --> 37:21.790
我们学文理的时候就这些吧

37:21.790 --> 37:22.750
可以看一下

37:22.750 --> 37:25.870
没有别的了

37:25.870 --> 37:28.670
以上是不是就是我们所有

37:28.670 --> 37:30.470
在我们这个webgr这里面

37:30.470 --> 37:31.270
我们学到的

37:31.270 --> 37:31.790
对吧

37:31.790 --> 37:33.110
然后我们除了这些之外

37:33.110 --> 37:35.390
在我们这个

37:35.390 --> 37:36.870
传递会图的里面

37:36.870 --> 37:38.830
我们是不是还学了一些矩阵变换

37:38.830 --> 37:39.390
对不对

37:39.390 --> 37:40.310
一些旋转

37:40.310 --> 37:41.390
旋转什么的

37:41.390 --> 37:43.350
我说在旋转

37:43.350 --> 37:44.190
或者平移

37:44.190 --> 37:46.550
或者是你要调整侍口

37:46.550 --> 37:51.110
那这些它全部都是需要通过矩阵的

37:51.110 --> 37:52.270
惩罚来算的

37:52.270 --> 37:52.750
对吧

37:52.750 --> 37:54.030
那我们只需要知道

37:54.030 --> 37:55.910
如果你要是不懂这个矩阵的话

37:55.910 --> 37:56.590
不要紧

37:56.590 --> 38:00.950
你只需要知道我们每一个在变换的时候

38:00.950 --> 38:02.590
我们只需要把他的矩阵

38:02.590 --> 38:04.990
去诚以我们的做标就行了

38:04.990 --> 38:05.430
可以吧

38:05.470 --> 38:06.790
把我们之前那些矩阵

38:06.790 --> 38:08.870
去诚以我们的做标就可以了

38:08.870 --> 38:10.670
这样进行一个相承就可以了

38:10.670 --> 38:11.990
可以吧

38:11.990 --> 38:14.750
那这以上就是我们这个在做

38:14.750 --> 38:17.350
这些是我们在二维平面内的

38:17.350 --> 38:20.070
一个学到的一些知识

38:20.070 --> 38:20.510
对吧

38:20.510 --> 38:21.870
那三维里面的

38:21.870 --> 38:23.870
我们在做立方体的时候

38:23.870 --> 38:25.350
比我们这个二维多的

38:25.350 --> 38:27.110
是不是就是我们这个模型变换

38:27.110 --> 38:27.430
对不对

38:27.430 --> 38:28.230
就是模型变换

38:28.230 --> 38:29.510
还有个视角的一个问题

38:29.510 --> 38:30.750
对吧

38:30.750 --> 38:31.790
还有一个视角的问题

38:31.790 --> 38:33.110
那视角这个问题

38:33.110 --> 38:34.670
我们有后面

38:34.710 --> 38:35.630
还会有一堂课

38:35.630 --> 38:37.630
专门去讲这个视觉

38:37.630 --> 38:38.030
能力吧

38:38.030 --> 38:41.550
视角是你是正式投影

38:41.550 --> 38:43.950
还是这个透视投影

38:43.950 --> 38:45.950
我们有一堂课专门去讲

38:45.950 --> 38:46.710
可以吧

38:46.710 --> 38:50.110
那以上就是我们对之前的课的一些总结

38:50.110 --> 38:51.070
总整理

38:51.070 --> 38:52.670
总结

38:52.670 --> 38:54.510
把我们所有用到的一些方法

38:54.510 --> 38:55.870
我们都总结到这一个

38:55.870 --> 38:58.590
这一个文件里了

38:58.590 --> 39:00.390
那不知道大家记不记住

39:00.390 --> 39:01.670
我是记住了

39:01.670 --> 39:03.350
给大家讲了这么多遍之后

39:03.350 --> 39:04.230
我是记住了

39:04.230 --> 39:05.550
不知道大家记不记住

39:05.550 --> 39:07.670
大家可以自己多用多用就可以了

39:07.670 --> 39:08.310
如果你记不住

39:08.310 --> 39:09.790
不要紧回去看一下就可以了

39:09.790 --> 39:10.470
对吧

39:10.470 --> 39:10.790
那好

39:10.790 --> 39:11.910
本堂课咱们就先到这

39:11.910 --> 39:12.710
咱们下一个堂课

39:12.710 --> 39:14.110
继续我们这个

39:14.110 --> 39:15.830
webgl3d回图

