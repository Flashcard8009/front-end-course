WEBVTT

00:00.000 --> 00:05.440
本堂课我们来了解一下webgl当中的一个坐标系统

00:05.440 --> 00:07.440
可能有一些同学会问了

00:07.440 --> 00:11.160
webgl坐标系统之前不是已经说过了吗

00:11.160 --> 00:14.400
再讲webgl的一些变换的时候

00:14.400 --> 00:15.960
二维变换三维变换的时候

00:15.960 --> 00:19.480
我是不是咱们都用到了它的一个坐标系统

00:19.480 --> 00:19.960
对吧

00:19.960 --> 00:22.520
然后大家都觉得它的一个坐标系统是

00:22.520 --> 00:25.840
x 轴是水平向右的

00:25.840 --> 00:26.280
对吧

00:26.280 --> 00:28.560
然后y 轴是数值向上的

00:28.560 --> 00:32.840
这一周是往页面里面去的

00:32.840 --> 00:33.120
对吧

00:33.120 --> 00:34.280
这是这一周

00:34.280 --> 00:35.240
然后

00:35.240 --> 00:37.640
那我们为什么还会单独拿出了一堂课

00:37.640 --> 00:39.560
去讲这个坐标系统呢

00:39.560 --> 00:41.400
因为在webgl的

00:41.400 --> 00:46.160
在webgl会指3D图形的时候

00:46.160 --> 00:50.320
它的坐标系统就不单纯的只有我们所

00:50.320 --> 00:54.440
我们之前所说的默认的那种坐标系统了

00:54.440 --> 00:56.120
那它还有什么坐标系统呢

00:56.120 --> 00:59.400
我们今天主要来说一下这些

00:59.400 --> 01:02.960
那我们第一个来了解一下模型坐标

01:02.960 --> 01:04.800
那什么是模型坐标呢

01:04.800 --> 01:10.040
在我们会智一个3D图形的时候

01:10.040 --> 01:12.080
我这块有一个立方体

01:12.080 --> 01:16.280
那这个立方体它本身它是有一个坐标系统的

01:16.280 --> 01:19.880
它自己立方体本身它是有坐标系统的

01:19.880 --> 01:23.680
那我们管它的坐标系统称之为模型坐标

01:23.680 --> 01:27.000
那它的这个立方体本身的这个坐标系统

01:27.000 --> 01:31.120
它的一个坐标轴是我们用户来定义的

01:31.120 --> 01:34.360
那我们用户来定义这个坐标系统有什么用呢

01:34.360 --> 01:38.040
它主要就是为了定位我们

01:38.040 --> 01:42.360
这一个图形身上的所有关键点的一个坐标的

01:42.360 --> 01:43.000
能理解吧

01:43.000 --> 01:45.160
所有关键点坐标啊

01:45.160 --> 01:48.480
我们就可以先把我们所有的关键点

01:48.480 --> 01:50.480
这个图形上的所有的关键点

01:50.480 --> 01:55.200
以一个以它自身的一个坐标系统

01:55.200 --> 01:56.360
为基准

01:56.360 --> 02:01.600
然后来获取到它每一个顶点的一个坐标

02:01.600 --> 02:05.360
那这个坐标我们管它叫模型坐标

02:05.360 --> 02:06.120
能理解吧

02:06.120 --> 02:07.480
那这是一个模型坐标

02:07.480 --> 02:08.880
它可以确定啊

02:08.880 --> 02:12.320
这个模型坐标它可以确定一个模型

02:12.320 --> 02:12.800
可以吧

02:12.800 --> 02:14.440
它可以确定一个模型啊

02:14.440 --> 02:17.760
就是一个图形一个3D的图形

02:17.760 --> 02:21.040
那除了我们这个模型坐标之外

02:21.040 --> 02:24.720
我们还有一个坐标叫世界坐标

02:24.720 --> 02:27.200
那我们在绘制的时候

02:27.200 --> 02:28.760
我们在绘制一个图形的时候

02:28.760 --> 02:30.760
最终是要绘制到我们页面上去

02:30.760 --> 02:31.480
对吧

02:31.480 --> 02:35.000
那我们怎么去绘制到页面上去呢

02:35.000 --> 02:36.280
在这个过程当中

02:36.280 --> 02:40.720
它首先要把这个模型坐标转化成世界坐标

02:40.720 --> 02:43.400
那这个世界坐标就相当于什么

02:43.400 --> 02:45.560
就相当于我们全局的一个坐标啊

02:45.600 --> 02:47.920
例如我们这块是有个画布对不对

02:47.920 --> 02:49.400
例如我们有个画布

02:49.400 --> 02:51.120
那它的一个世界坐标呢

02:51.120 --> 02:53.720
就是画布的一个坐标指奥系统

02:53.720 --> 02:54.720
能理解吧

02:54.720 --> 02:56.160
坐标系统

02:56.160 --> 02:57.440
那我们就可以理解为

02:57.440 --> 03:00.040
它的坐标系统就是相对于画布而言的

03:00.040 --> 03:00.640
对吧

03:00.640 --> 03:03.680
我们的页面的一个坐标系统啊

03:03.680 --> 03:05.480
这个世界坐标大家可以理解为

03:05.480 --> 03:08.240
是我们页面的一个坐标系统

03:08.240 --> 03:09.520
那页面坐标系统

03:09.520 --> 03:11.080
它就是水平向右

03:11.080 --> 03:13.680
从左上角这一点开始啊

03:13.680 --> 03:15.160
水平向右

03:15.160 --> 03:16.480
它是x轴

03:16.480 --> 03:18.400
数值向下是y轴

03:18.400 --> 03:19.840
那水平向右

03:19.840 --> 03:21.560
它的x是递增的

03:21.560 --> 03:23.560
数值向下y是递增的

03:23.560 --> 03:24.360
对吧

03:24.360 --> 03:26.040
然后它的c轴在哪呢

03:26.040 --> 03:28.200
c轴是垂直于这个页面

03:28.200 --> 03:30.160
向我们的向外的

03:30.160 --> 03:30.720
能理解吧

03:30.720 --> 03:32.880
所以我这块用了一个点啊

03:32.880 --> 03:36.320
那这是我们在物理学里面的一个

03:36.320 --> 03:39.280
会图的一个方式对吧

03:39.280 --> 03:40.480
一个圆中间有个点

03:40.480 --> 03:43.040
代表是垂直于这个页面

03:43.040 --> 03:46.000
向我们的指向我们的对吧

03:46.000 --> 03:47.720
那这是世界坐标啊

03:47.720 --> 03:48.960
那我们可以思想一下

03:48.960 --> 03:51.040
我们模型坐标怎么啊

03:51.040 --> 03:56.120
怎么去转化成世界坐标呢

03:56.120 --> 03:57.400
我们通过模型坐标

03:57.400 --> 03:59.880
可以确定一个模型的一个图形

03:59.880 --> 04:00.320
对不对

04:00.320 --> 04:01.920
我们可以确定一个图

04:01.920 --> 04:02.960
一个图形

04:02.960 --> 04:04.040
那我们把这个图形

04:04.040 --> 04:05.720
放在这个世界坐标下面

04:05.720 --> 04:07.480
我们是不是就可以对应的

04:07.480 --> 04:10.120
每一个顶点是多少多少对吧

04:10.160 --> 04:11.440
并且啊我们还

04:11.440 --> 04:15.120
我们只需要通过这个坐标轴变换

04:15.120 --> 04:17.760
我们就可以获取到我们啊

04:17.760 --> 04:20.160
这个图形上的所有的点啊

04:20.160 --> 04:22.200
相对于我们世界坐标系

04:22.200 --> 04:23.760
它的一个顶点位置了

04:23.760 --> 04:24.120
对不对

04:25.280 --> 04:26.160
是这样的吧

04:26.160 --> 04:28.360
那这是我们这个啊

04:28.360 --> 04:29.720
世界坐标系啊

04:29.720 --> 04:30.520
世界坐标系

04:31.720 --> 04:32.960
那一般来说

04:32.960 --> 04:36.120
像我们之前在写这个页面的时候

04:36.120 --> 04:38.600
或者是我们之前学

04:38.600 --> 04:40.440
这个webjr的时候

04:40.440 --> 04:41.840
在绘制图形的时候

04:41.840 --> 04:44.800
我是不是把这个模型的坐标

04:44.800 --> 04:47.760
就是映射到我们这个世界坐标系上的去了

04:47.760 --> 04:48.200
对吧

04:48.200 --> 04:50.240
就是映射到这了啊

04:50.240 --> 04:52.000
所以啊我们啊

04:52.000 --> 04:53.040
所以我们之前

04:53.040 --> 04:55.280
并没有这样的一个转换对吧

04:55.280 --> 04:57.840
但是真正在开发当中啊

04:57.840 --> 04:59.000
真正在开发当中

04:59.000 --> 05:01.200
你可能有很多很多的图形对不对

05:01.200 --> 05:03.240
那避免不掉

05:03.240 --> 05:04.960
它要进行这样的一个

05:04.960 --> 05:06.840
坐标轴的一个转换

05:06.840 --> 05:08.920
所以这里我要告诉大家

05:08.920 --> 05:10.840
它有这么一个坐标系统

05:10.840 --> 05:14.280
那我们只需要通过坐标系转换啊

05:14.280 --> 05:16.280
得到我们啊

05:16.280 --> 05:19.760
需要的一个坐标点就可以了

05:19.760 --> 05:20.880
好吧

05:20.880 --> 05:22.400
那这是世界坐标

05:22.400 --> 05:23.960
那世界坐标啊

05:23.960 --> 05:26.360
也就是相当于我们的页面的一个坐标系

05:26.360 --> 05:27.160
对吧

05:27.160 --> 05:27.640
ok

05:27.640 --> 05:30.480
那除了这个世界坐标之外

05:30.480 --> 05:33.920
我们还有一种坐标叫观察者坐标

05:33.920 --> 05:36.480
那这就是在三维空间内的了

05:36.880 --> 05:37.440
对吧

05:37.440 --> 05:40.120
因为涉及到观察者了

05:40.120 --> 05:44.240
那我们就需要有一个视觉的一个效果

05:44.240 --> 05:44.960
对吧

05:44.960 --> 05:46.160
那观察者

05:46.160 --> 05:47.400
我们可以看一下这个图

05:48.520 --> 05:51.200
那这个观察坐标它有

05:51.200 --> 05:53.440
这个观察坐标它是指什么呢

05:53.440 --> 05:56.760
它是指我们观察一个屋体的时候

05:56.760 --> 05:58.440
我们可以试想一下

05:58.440 --> 06:00.360
我们人这个是一个眼睛

06:00.360 --> 06:02.920
我们一个眼睛在看这个屋体的时候

06:02.920 --> 06:04.680
我们是不是可以定位

06:04.680 --> 06:06.960
我这个屋体是在我在我前面

06:06.960 --> 06:08.400
在我左边在我右边

06:08.400 --> 06:09.120
对吧

06:09.120 --> 06:10.160
你可以这样定位

06:10.160 --> 06:15.400
那这个定位其实就是我们观察者的坐标系

06:15.400 --> 06:16.040
可以吧

06:16.040 --> 06:18.440
那我们也管这个观察者坐标系啊

06:18.440 --> 06:21.720
又称为仕途坐标系

06:21.720 --> 06:25.080
又称为夸浩

06:25.080 --> 06:29.280
仕途坐标系

06:29.280 --> 06:29.720
可以吧

06:29.720 --> 06:33.120
它又称为仕途坐标系啊

06:33.120 --> 06:35.000
那我们可视范围啊

06:35.000 --> 06:39.040
这回就涉及到我们一个可视范围的一个问题了

06:39.040 --> 06:42.000
我们在观察一个屋体的时候

06:42.000 --> 06:43.520
我们可以试想一下

06:43.520 --> 06:46.720
在日常生活中我们观察一个屋体

06:46.720 --> 06:50.560
那是不是有一个观察的可视的一个范围对吧

06:50.560 --> 06:52.480
那如果超出了这个范围的话

06:52.480 --> 06:54.000
你是不是就看不见了

06:54.000 --> 06:55.000
你就看不清

06:55.000 --> 06:56.400
就是看不见了对不对

06:56.400 --> 06:57.920
说把它就是看不见了

06:57.920 --> 07:01.440
那这个体现应该是大多数近视的同学

07:01.440 --> 07:04.000
它更有这个体会对不对

07:04.000 --> 07:06.200
当你摘下眼镜之后

07:06.200 --> 07:08.960
你的可视范围就减小了对不对

07:08.960 --> 07:11.800
减短了

07:11.800 --> 07:15.040
那你能看到的一个区域就小了

07:15.040 --> 07:16.280
就小了对吧

07:16.280 --> 07:19.320
那这就是我们这个观察者的一个可视范围啊

07:19.320 --> 07:23.600
那观察者的可视范围

07:23.600 --> 07:25.600
还有我们这个观察者的坐标系

07:25.600 --> 07:27.000
我们观察者的可视范围

07:27.000 --> 07:29.680
其实就是在我们观察者坐标系内的

07:29.680 --> 07:32.360
然后观察者坐标系

07:32.360 --> 07:35.680
它的一个原点位置

07:35.680 --> 07:37.680
其实就是观察者本身

07:37.680 --> 07:38.320
能理解吧

07:38.320 --> 07:40.840
就是我们这个眼睛本身啊

07:40.840 --> 07:46.120
那可能后面在我们讲三地图形的时候

07:46.120 --> 07:47.960
会以这个相机为例

07:47.960 --> 07:50.240
因为我们在绘制一个三地图形的时候

07:50.240 --> 07:55.040
它就相当于一个相机在拍摄

07:55.040 --> 07:56.560
一个画面一样的

07:56.560 --> 07:58.800
它的原理是一样的

07:58.840 --> 08:01.040
都是我们需要有一个场景

08:01.040 --> 08:02.960
需要有这么一个模型

08:02.960 --> 08:05.480
需要让我们去看到它对吧

08:05.480 --> 08:06.600
然后我们看到

08:06.600 --> 08:08.760
这是我们外界的一个条件

08:08.760 --> 08:09.840
一个场景

08:09.840 --> 08:11.480
我们必须要有这样的一个场景

08:11.480 --> 08:13.880
然后还有这样的一个物体对不对

08:13.880 --> 08:17.440
然后再其次就是我们观察者的一个眼睫

08:17.440 --> 08:19.120
那也就相当于这个相机

08:19.120 --> 08:21.560
然后相机去观察我们

08:21.560 --> 08:24.240
我们的物体和这个场景对不对

08:24.240 --> 08:26.760
然后拍摄下来的画面

08:26.760 --> 08:28.240
它拍摄出来的画面

08:28.240 --> 08:29.680
是不是就是一个二维的了

08:29.680 --> 08:30.040
对吧

08:30.040 --> 08:31.120
是一个二维的了

08:31.120 --> 08:33.560
然后展示在我们的一个页面上去

08:33.560 --> 08:35.040
我们的页面就是一个二维的

08:35.040 --> 08:35.600
对吧

08:35.600 --> 08:39.360
所以它是把我们三维空间内的图形

08:39.360 --> 08:42.320
去转化成二维显示出来

08:42.320 --> 08:43.040
可以吧

08:43.040 --> 08:46.760
那我们WebGL的一个会图原理

08:46.760 --> 08:48.480
其实跟我们的相机很像

08:48.480 --> 08:49.440
很像很像

08:52.120 --> 08:54.520
那这一部分大家需要了解

08:54.520 --> 08:54.960
可以吧

08:54.960 --> 08:55.960
大家需要了解

08:55.960 --> 08:57.360
这个观察作标

08:57.360 --> 09:01.800
其实就是我们当前观察者

09:01.800 --> 09:04.840
也就是相机所在的位置

09:04.840 --> 09:06.160
为原点

09:06.160 --> 09:08.720
然后相机往前

09:08.720 --> 09:10.160
往相机的前面去

09:10.160 --> 09:11.800
就是看这个镜头

09:11.800 --> 09:12.680
镜头往前

09:13.880 --> 09:15.120
也就是我们在这个位置

09:15.120 --> 09:15.320
对吧

09:15.320 --> 09:16.440
我们在后面这个位置

09:16.440 --> 09:18.480
然后你看的镜头里面的内容

09:18.480 --> 09:20.600
那往前它是X轴

09:20.600 --> 09:23.520
往前是Z轴

09:23.520 --> 09:24.520
往前是Z轴

09:24.520 --> 09:27.880
往上是Y轴

09:27.880 --> 09:29.840
上面这个Y是正的

09:29.840 --> 09:30.440
对吧

09:30.440 --> 09:32.720
然后再往右

09:32.720 --> 09:35.880
往右侧是X轴

09:35.880 --> 09:37.080
把它硬设一下

09:37.080 --> 09:37.920
我们硬设一下

09:37.920 --> 09:39.280
它的一个做标戏就是这样的

09:40.840 --> 09:42.720
这是我们X轴

09:43.920 --> 09:46.320
然后这是我们Y轴

09:47.720 --> 09:50.120
接下来我们的Z轴是指向里的

09:51.000 --> 09:51.720
可以吧

09:51.720 --> 09:52.640
这是Z轴

09:52.640 --> 09:56.720
我们的眼睛就是在这往里面看的

09:56.720 --> 09:57.320
可以吧

09:57.320 --> 09:58.640
这是这个方向

09:58.640 --> 10:00.360
这是我们观察者的做标

10:01.560 --> 10:04.600
那这个观察做标戏它是不定的

10:04.600 --> 10:09.080
它是会根据你的视角的一个位置

10:09.080 --> 10:10.960
或者说你的相机的一个位置

10:10.960 --> 10:11.720
对吧

10:11.720 --> 10:13.600
或者说相机的位置

10:13.600 --> 10:15.360
它会不断的变化

10:15.360 --> 10:16.240
那理解吧

10:16.240 --> 10:19.080
根据相机的位置进行相案的一个变化

10:20.080 --> 10:23.280
那相机所在不同的位置

10:23.280 --> 10:25.440
我们看到的这个图写也是不一样的

10:25.440 --> 10:27.800
那它的一个做标它也是不同的

10:27.800 --> 10:28.320
对不对

10:28.320 --> 10:30.560
那这个做标怎么去找

10:30.560 --> 10:33.360
还是通过一些仕图的变化

10:33.360 --> 10:35.840
还是通过做标戏的一些转换

10:35.840 --> 10:36.480
可以吧

10:36.480 --> 10:37.880
那具体怎么转换

10:37.880 --> 10:40.320
我们后续在真正实操的时候

10:40.320 --> 10:42.200
我们再来详细的来说

10:42.200 --> 10:42.800
可以吧

10:42.800 --> 10:43.800
详细来说

10:45.160 --> 10:48.600
然后对于观察者做标戏而言

10:48.640 --> 10:51.120
我们刚才是不是提到了一个

10:51.120 --> 10:52.800
这个可视范围的问题

10:52.800 --> 10:53.320
对吧

10:53.320 --> 10:55.080
那这个可视范围

10:55.080 --> 10:59.600
这个观察者所硬设出来的

10:59.600 --> 11:00.560
这个可视范围

11:00.560 --> 11:02.600
我们有两种情况

11:02.600 --> 11:03.840
有两种情况

11:03.840 --> 11:07.160
也就是说我们在观察一个图形

11:07.160 --> 11:10.800
在观察一个三维图形的时候

11:10.800 --> 11:15.760
展现在我们眼前的样式

11:15.760 --> 11:16.880
可能有两种情况

11:16.880 --> 11:19.200
一种是理想的状态

11:19.200 --> 11:23.760
一种是我们真正在现实生活中的一个状态

11:23.760 --> 11:26.040
那理想的状态它是什么样子

11:26.040 --> 11:27.920
我现在在这里就简单提一下

11:27.920 --> 11:30.240
我们后面还下一堂课

11:30.240 --> 11:32.520
在具体来说这个问题

11:32.520 --> 11:33.560
可以吧

11:33.560 --> 11:34.480
那我们都知道

11:34.480 --> 11:36.920
我们最后看到的都是二维的

11:36.920 --> 11:37.480
对不对

11:37.480 --> 11:40.240
二维平面内的一个图形

11:40.240 --> 11:43.400
那这个有两种

11:43.400 --> 11:44.920
我们看到图形的样式

11:44.960 --> 11:48.200
一种是我们通过正设投影

11:48.200 --> 11:49.680
我们在这里写下

11:49.680 --> 11:50.520
在这里

11:50.520 --> 11:57.920
一种是通过正设投影

11:59.920 --> 12:04.180
正设投影

12:04.180 --> 12:05.420
正设投影

12:05.420 --> 12:07.420
产生的一个图形

12:07.420 --> 12:08.420
正设投影

12:08.420 --> 12:11.500
然后第二种是我们这个透视投影

12:11.500 --> 12:13.300
透视投影

12:13.300 --> 12:15.020
产生的图形

12:15.020 --> 12:17.020
那这两个有什么区别

12:17.020 --> 12:18.500
第一个正设投影

12:18.500 --> 12:21.140
它就是一个我们理想的一个状态

12:21.140 --> 12:22.820
那理想的状态是什么呢

12:22.820 --> 12:25.780
我们有很多的平行光

12:25.780 --> 12:29.140
去打在我们一个物体身上

12:29.140 --> 12:31.140
例如我们这个举行

12:31.140 --> 12:31.700
可以吧

12:31.700 --> 12:32.740
这个举行

12:32.740 --> 12:36.100
这个立方体

12:37.100 --> 12:40.020
我们有很多的这个平行光

12:40.020 --> 12:41.660
去打在我们立方体身上

12:41.660 --> 12:44.060
那打在我们这个立方体身上

12:44.060 --> 12:46.580
它会映射到一个板上面

12:46.620 --> 12:47.660
它的一个映射

12:47.660 --> 12:48.180
对不对

12:48.180 --> 12:49.780
会有一个映射

12:49.780 --> 12:51.980
会有对于我们这个立方体

12:51.980 --> 12:53.340
它有一个映射

12:53.340 --> 12:56.340
那这个映射在那个面上的一个映射

12:56.340 --> 12:58.780
展示出来的是不是应该就是

13:00.140 --> 13:01.900
它本身的这个形状

13:01.900 --> 13:02.300
对吧

13:02.300 --> 13:04.300
它是一个正方形还是圆形

13:04.300 --> 13:05.540
它投影出来的

13:05.540 --> 13:08.060
它就是相应的一个形状

13:08.060 --> 13:08.660
对不对

13:08.660 --> 13:09.340
那例如

13:09.340 --> 13:11.180
然后我们在侧边

13:11.180 --> 13:14.980
例如我们在侧面去照射这个图形

13:14.980 --> 13:16.780
我们以这个方向

13:16.780 --> 13:19.460
在这个方向去观察我们这个图形

13:19.460 --> 13:21.340
这个方向观察我们图形

13:21.340 --> 13:23.300
那我们看到的是不是应该是

13:23.300 --> 13:25.100
一个长方形

13:25.100 --> 13:25.460
对吧

13:25.460 --> 13:27.420
我们打完了这个光之后

13:27.420 --> 13:29.420
映射出来的应该是一个长方形

13:29.420 --> 13:31.900
而我们真正生活当中

13:31.900 --> 13:33.820
真正生活当中是不是应该是

13:33.820 --> 13:35.340
离我们近的地方

13:35.340 --> 13:37.180
我们的图形应该大一点

13:37.180 --> 13:38.780
离我们的远的地方

13:38.780 --> 13:41.140
我们图形会小一点

13:41.140 --> 13:41.620
对吧

13:42.580 --> 13:45.140
那这就是我们这个

13:45.140 --> 13:48.060
正设投影和透视投影的一个区别

13:48.060 --> 13:49.020
正设投影

13:49.020 --> 13:51.060
它展示给我们的形状

13:51.780 --> 13:52.620
展现

13:53.140 --> 13:55.180
展现的形状

13:56.060 --> 13:57.420
是不变的

13:58.020 --> 14:00.540
还是物体本身的一个形状

14:01.020 --> 14:03.500
而透视投影会根据

14:05.220 --> 14:06.300
会根据

14:08.260 --> 14:09.020
距离

14:11.500 --> 14:12.860
就是相机的一个距离

14:12.860 --> 14:13.340
对吧

14:13.980 --> 14:15.940
相机的距离

14:16.740 --> 14:17.700
改变

14:18.740 --> 14:23.900
这个物体的局部大小

14:24.140 --> 14:24.580
对吧

14:24.580 --> 14:25.620
局部大小

14:25.620 --> 14:27.780
这里我为什么会说局部大小呢

14:27.780 --> 14:29.580
你看我近的地方

14:29.580 --> 14:30.940
还是我们一个物体

14:30.940 --> 14:33.060
我可能这个物体是一个茶壶

14:33.060 --> 14:33.780
可以吧

14:34.580 --> 14:36.740
那它离我近的这个胡嘴

14:36.740 --> 14:37.980
例如胡嘴对着我

14:37.980 --> 14:38.500
可以吧

14:38.500 --> 14:39.700
例如胡嘴对着我

14:39.820 --> 14:41.580
那这个胡嘴离我近的话

14:41.580 --> 14:43.900
我是不是看到它的胡嘴就会大一点

14:43.900 --> 14:44.340
对吧

14:45.860 --> 14:47.060
这个胡吧

14:47.180 --> 14:47.540
对吧

14:47.540 --> 14:49.980
胡的把手离我远的话

14:49.980 --> 14:52.020
我看的是不是就比较小一点

14:52.060 --> 14:52.460
对吧

14:52.460 --> 14:55.540
那这是我们日常生活中的一个情境

14:55.540 --> 14:56.140
对不对

14:56.140 --> 14:58.180
那我们也管它叫透视投影

14:58.180 --> 14:59.380
产生的一个图像

14:59.740 --> 15:00.860
产生的一个图像

15:01.220 --> 15:02.300
而正设投影

15:02.300 --> 15:04.100
它不管你的相机

15:04.100 --> 15:05.700
距离物体的

15:06.300 --> 15:07.820
距离物体

15:08.820 --> 15:09.820
远还是近

15:09.820 --> 15:12.060
它展示的形状是不变的

15:12.060 --> 15:12.500
可以吧

15:12.500 --> 15:13.740
它展示的形状不变

15:13.740 --> 15:14.660
它不会

15:14.980 --> 15:16.140
它不会去

15:16.700 --> 15:20.380
它不会有一种近大远小的感觉

15:20.420 --> 15:20.980
那你解释吧

15:20.980 --> 15:22.900
它不会有近大远小的感觉

15:24.220 --> 15:25.580
那这两个投影

15:25.580 --> 15:26.100
我们

15:26.900 --> 15:28.500
究竟如何来实现

15:28.500 --> 15:29.900
我们下一堂课来说

15:29.900 --> 15:30.420
好吧

15:31.180 --> 15:33.540
大家只需要在这里知道

15:33.540 --> 15:35.620
我们在观察者作标戏的时候

15:35.620 --> 15:37.100
它有这么两个概念

15:37.100 --> 15:38.300
一个是正设投影

15:38.300 --> 15:40.700
一个是透视投影

15:41.060 --> 15:43.940
它会影响我们展现的

15:43.940 --> 15:45.740
图形的一个形状

15:45.780 --> 15:46.340
可以吧

15:47.500 --> 15:48.060
OK

15:48.060 --> 15:50.900
那这是一个观察者作标戏

15:50.900 --> 15:52.300
观察作标戏

15:53.220 --> 15:55.380
那在3D图形

15:55.580 --> 15:57.300
在3D图形当中

15:57.540 --> 16:00.180
在绘制一个3D图形当中

16:00.180 --> 16:02.340
我们现在已经把外界的所有的

16:02.340 --> 16:03.700
作标戏已经说完了

16:03.700 --> 16:04.220
对吧

16:04.460 --> 16:09.020
除了我们外部GR系统里面的作标戏

16:09.020 --> 16:10.780
我们现在已经都已经说完了

16:10.780 --> 16:11.260
对不对

16:11.260 --> 16:12.660
一个模型作标

16:12.660 --> 16:14.940
模型作标就是我们物体的一个作标

16:14.940 --> 16:15.140
对吧

16:15.140 --> 16:16.980
物体本身自身的一个作标

16:16.980 --> 16:19.780
用来确定一个物体的形状的

16:19.780 --> 16:20.100
对吧

16:20.100 --> 16:21.140
这样的一个作标戏

16:21.300 --> 16:22.740
然后还有世界作标戏

16:22.740 --> 16:25.460
就是我们页面的一个大体的一个作标

16:25.460 --> 16:25.860
对吧

16:25.860 --> 16:27.260
页面大体的一个作标

16:28.860 --> 16:30.740
然后还有我们观察者作标

16:30.740 --> 16:33.740
观察者作标也就是我们要观察的

16:33.780 --> 16:35.220
一个位置的一个作标

16:35.220 --> 16:35.620
对吧

16:35.620 --> 16:37.500
就像相机的一个作标戏

16:37.700 --> 16:38.260
可以吧

16:38.420 --> 16:42.220
那我们最终现在是不是已经把这些

16:44.020 --> 16:46.620
一些准备的一些作标都已经说完了

16:46.620 --> 16:47.060
对吧

16:47.060 --> 16:48.540
一些准备绘制的

16:48.940 --> 16:51.540
准备映射到我们页面上去的

16:51.980 --> 16:54.100
这个作标戏我们都已经说完了

16:54.300 --> 16:55.820
接下来我们来说一下

16:55.820 --> 16:57.860
我们真正绘制的时候

16:58.460 --> 17:01.140
真正另映射到我们页面当中的时候

17:01.140 --> 17:02.380
它的一个作标戏

17:03.340 --> 17:04.780
我们真正映射到

17:05.380 --> 17:07.380
真正映射到页面上去之后

17:07.380 --> 17:09.060
我们还有个裁检作标戏

17:09.220 --> 17:11.340
那这个裁检作标戏说的是什么呢

17:11.500 --> 17:13.900
我们刚才在观察者作标

17:13.900 --> 17:15.500
观察作标戏当中

17:15.500 --> 17:17.380
我是不是说提到了一个

17:17.740 --> 17:19.380
可视范围的一个问题

17:19.380 --> 17:19.860
对吧

17:19.980 --> 17:21.580
那我们观察一个物体

17:21.940 --> 17:23.980
它是有一个可视范围的

17:23.980 --> 17:24.220
对吧

17:24.220 --> 17:26.700
我们观察者眼睛

17:26.700 --> 17:30.420
你是可以是有一个可视区域的

17:30.420 --> 17:30.900
对吧

17:31.100 --> 17:32.380
超出了这个区域

17:32.380 --> 17:33.500
我们就看不见了

17:33.500 --> 17:34.100
对不对

17:34.700 --> 17:37.140
那这个区域在正社投影里面

17:37.140 --> 17:40.140
这个区域它就是一个立方体的一个形状

17:40.420 --> 17:41.140
这个区域

17:41.860 --> 17:43.140
可视区

17:43.580 --> 17:45.820
为立方体

17:46.740 --> 17:48.340
它就是立方体的一个区域

17:48.860 --> 17:50.300
然后透视投影

17:50.700 --> 17:52.100
它展示的这个区域

17:52.100 --> 17:57.420
就是类似于一种台体

17:57.540 --> 17:59.140
那这个台体是什么意思呢

17:59.260 --> 18:00.820
我们可以简单画一下这个图

18:01.460 --> 18:02.580
我简单画一下图

18:02.940 --> 18:04.220
它可能就是这个样子

18:05.220 --> 18:06.180
我在这画吧

18:06.580 --> 18:07.980
前面

18:08.260 --> 18:11.300
你看到的这个面可能小一点

18:12.420 --> 18:13.940
然后后面大一点

18:14.540 --> 18:16.620
然后每一个线都连一点

18:17.700 --> 18:18.740
我把这个连线

18:22.660 --> 18:24.540
我们看到的图形应该就是这样的

18:36.170 --> 18:37.650
把这个颜色都改一改

18:41.430 --> 18:41.910
OK

18:41.910 --> 18:42.910
然后我们再来

18:43.590 --> 18:44.950
把这些我们都连上

18:50.470 --> 18:50.910
好

18:50.910 --> 18:52.110
然后我们再来一个

18:57.570 --> 18:59.850
它会映射到这样的一个

19:02.170 --> 19:03.890
这样的一个图形当中去

19:03.890 --> 19:04.570
看到了吗

19:04.570 --> 19:06.730
近大圆小的一个原则

19:06.730 --> 19:07.250
可以吧

19:07.250 --> 19:08.890
近大圆小我这些法了

19:08.890 --> 19:09.170
对不对

19:09.170 --> 19:09.690
画法了

19:09.690 --> 19:11.250
应该是这边比较大

19:11.570 --> 19:12.250
这边比较大

19:12.250 --> 19:13.130
后面比较小

19:13.810 --> 19:16.250
你可以简单的感觉一下

19:16.250 --> 19:18.490
咱们就感觉一下它的一个

19:19.770 --> 19:20.690
透视投影

19:21.330 --> 19:22.730
它的一个可视区

19:22.730 --> 19:23.090
对吧

19:23.090 --> 19:23.930
那它可视区

19:23.930 --> 19:24.850
它是有个夹角的

19:24.850 --> 19:25.210
对不对

19:25.210 --> 19:27.090
我们发现近大圆小的话

19:27.090 --> 19:28.650
它肯定会有一个夹角

19:28.650 --> 19:29.090
对不对

19:29.090 --> 19:31.010
就是我们上下能看到的一个距离

19:31.370 --> 19:33.090
我这块有一个图

19:33.370 --> 19:34.050
我们可以看一下

19:34.050 --> 19:36.050
我们在绘制3D图形的时候

19:36.050 --> 19:37.410
我们是不是有一个图

19:37.410 --> 19:39.370
这块有一个可视范围

19:39.370 --> 19:39.890
看到了吗

19:39.890 --> 19:40.690
观察者

19:41.050 --> 19:42.170
然后已经可以发现

19:42.170 --> 19:44.530
我们观察者在不同的一个位置

19:44.530 --> 19:46.250
或者是这个角度不同的话

19:46.250 --> 19:48.690
它看到的物体形状也是不一样的

19:48.690 --> 19:49.170
对不对

19:49.170 --> 19:53.450
那这个就相对于我们这个透视投影而说的

19:53.450 --> 19:54.050
那这几了

19:54.050 --> 19:55.890
相对于我们透视投影而言的

19:57.010 --> 19:58.250
那也是一样的

19:58.250 --> 20:00.610
在这个范围当中的物体

20:00.610 --> 20:01.730
我们可以看到

20:01.730 --> 20:03.690
那在这个范围之外的物体

20:03.690 --> 20:04.810
我们是看不到的

20:05.250 --> 20:06.050
那这样的话

20:06.050 --> 20:07.930
我们一个物体放在我们这个

20:07.930 --> 20:10.050
可视范围当中去之后

20:11.450 --> 20:12.690
放到我们这个观察者

20:12.690 --> 20:14.290
做一个标戏当中之后

20:14.290 --> 20:16.650
可能有一部分的顶点

20:16.650 --> 20:18.650
它没在我这个可视范围当中

20:18.650 --> 20:19.130
对不对

20:19.290 --> 20:21.010
那它如果没有在的话

20:21.010 --> 20:24.010
它没有在我们这个可视范围当中的话

20:24.010 --> 20:25.610
我们就会给它裁剪

20:26.050 --> 20:26.570
可以吧

20:26.570 --> 20:29.370
也就是我们通过这个观察者做标戏

20:29.370 --> 20:31.850
我们可以把我们的物体的一些

20:31.850 --> 20:33.530
做标进行一些裁剪

20:33.530 --> 20:35.530
如果它没在我们可视范围的话

20:35.530 --> 20:36.730
我们就给它裁剪掉

20:36.730 --> 20:39.610
那裁剪掉之后的这个做标

20:39.610 --> 20:41.930
我们又管它剩下的这些做标

20:41.930 --> 20:44.450
又管它叫做裁剪做标

20:44.450 --> 20:44.970
可以吧

20:44.970 --> 20:46.570
又管它叫做裁剪做标

20:47.570 --> 20:48.970
那这个裁剪做标

20:49.250 --> 20:50.890
这个裁剪做标要求什么呢

20:50.890 --> 20:54.810
这个裁剪做标它的一个做标戏

20:54.810 --> 20:55.970
也就是这个样子的

20:55.970 --> 20:56.930
简单看一下

20:56.930 --> 20:58.490
就是我们之前所说的

20:58.490 --> 21:00.530
WebGL默认的一个做标戏

21:00.530 --> 21:03.210
它的一个方向就是水平向右

21:03.210 --> 21:04.610
然后数值向上

21:04.610 --> 21:06.690
然后垂直页面向里

21:06.690 --> 21:07.610
这是自己轴

21:07.610 --> 21:08.210
可以吗

21:08.850 --> 21:09.970
这是裁剪做标

21:09.970 --> 21:10.890
裁剪做标

21:12.010 --> 21:14.890
然后这个到目前为止

21:14.890 --> 21:16.610
我们是不是说到了一个透视

21:16.610 --> 21:17.010
对吧

21:17.010 --> 21:18.210
说到了一个透视

21:18.210 --> 21:22.130
那我们可能就是我们观察的可视范围

21:22.130 --> 21:23.850
可能是1到1000

21:23.850 --> 21:24.330
对吧

21:24.330 --> 21:26.090
1到1000这么距离

21:26.090 --> 21:27.690
那这个距离这个单位

21:27.690 --> 21:30.010
1到1000这个单位到底是什么

21:30.010 --> 21:32.330
这个大家可以认为是像素

21:32.330 --> 21:36.130
也可以认为是米好米都可以

21:36.130 --> 21:36.650
可以吧

21:36.650 --> 21:38.410
它只是一个单位长度

21:38.410 --> 21:40.410
它并没有任何的一个单位的

21:40.410 --> 21:42.050
它并没有任何的一个单位

21:43.850 --> 21:46.610
然后再接着往下来说

21:46.650 --> 21:48.810
就是我们获取到这个裁剪做标

21:48.810 --> 21:49.570
我们可以发现

21:49.570 --> 21:53.370
如果我的可视范围是1到1000这个之间的话

21:53.370 --> 21:55.210
就是我们眼睛可以看到

21:55.210 --> 21:58.250
1米到1000米之内的东西

21:58.250 --> 21:59.850
那超出这一部分的话

21:59.850 --> 22:00.770
我就看不到

22:00.770 --> 22:01.530
对吧

22:01.530 --> 22:03.250
那这样的话

22:03.250 --> 22:05.010
我们裁剪完了之后

22:05.010 --> 22:06.130
就是超出了我们

22:06.130 --> 22:08.730
超出只要超出我们这个可视范围的

22:08.730 --> 22:10.170
我们都会给它裁剪没

22:10.170 --> 22:10.530
对吧

22:10.530 --> 22:11.370
裁剪掉

22:12.370 --> 22:14.210
那剩下的

22:14.210 --> 22:19.170
是不是它的单位剩下的这个顶点

22:19.170 --> 22:20.490
剩下的顶点信息

22:20.490 --> 22:21.450
它的数据

22:21.450 --> 22:24.210
它的每一个顶点的一个作标

22:24.210 --> 22:26.850
是不是可能在我这个1到1000之间

22:26.850 --> 22:27.370
对不对

22:27.370 --> 22:28.410
1到1000之间

22:28.410 --> 22:29.810
并且它的数值方向

22:29.810 --> 22:31.050
可能就是我们的这个

22:31.050 --> 22:33.850
可视区域的一个夹角这个空间内

22:33.850 --> 22:34.290
对吧

22:35.370 --> 22:36.930
那这样的话

22:36.930 --> 22:38.930
它还俯视映射到我们

22:38.930 --> 22:41.890
webjl页面当中的一个作标

22:41.890 --> 22:43.610
我们之前说webjl

22:43.650 --> 22:44.410
页面当中

22:44.410 --> 22:46.370
它的一个作标系是什么样子的

22:46.370 --> 22:49.170
它的这个作标系

22:49.170 --> 22:50.370
是不是应该是

22:50.370 --> 22:51.690
我们在这里画一下

22:51.690 --> 22:53.610
应该是我们这是一个画布

22:53.610 --> 22:53.930
对吧

22:53.930 --> 22:55.250
这也是一个画布

22:55.250 --> 22:57.890
它的作标系是从左往右

22:57.890 --> 22:59.090
它是x轴

22:59.090 --> 23:00.810
但是它的原点在哪

23:00.810 --> 23:02.530
是不是在我们这个

23:03.290 --> 23:03.810
诶

23:03.810 --> 23:04.610
我把它

23:06.370 --> 23:07.410
画差一点

23:07.410 --> 23:10.010
它的作标原点是不是在我们这个

23:10.010 --> 23:11.730
cowards的中间

23:11.730 --> 23:12.290
对吧

23:12.330 --> 23:13.250
应该在这里

23:14.050 --> 23:15.010
对不对

23:15.010 --> 23:15.570
在这里

23:15.570 --> 23:17.970
并且它的一个单位长度是多少

23:17.970 --> 23:20.170
它的长度是不是

23:20.170 --> 23:22.290
左边这个顶点应该是-1

23:22.290 --> 23:23.450
右边这是-1

23:23.450 --> 23:23.890
对吧

23:23.890 --> 23:26.090
然后上面是-1

23:26.090 --> 23:27.050
下面是-1

23:27.050 --> 23:27.450
对不对

23:28.530 --> 23:30.010
那我们接下来

23:30.010 --> 23:33.330
我们现在有了裁键作标之后

23:33.330 --> 23:36.490
我们接下来就要把它转化成

23:36.490 --> 23:39.250
转化成我们webjl

23:39.250 --> 23:41.410
所能识别的一个作标

23:41.410 --> 23:43.530
就是复制到我们这个

23:44.730 --> 23:49.370
复制到我们的着色器当中的一个作标

23:49.370 --> 23:50.170
作标

23:50.170 --> 23:53.850
那这个作标我们又管它叫ndc作标系

23:53.850 --> 23:54.170
可以吧

23:54.170 --> 23:55.850
又管它叫ndc作标系

23:55.850 --> 23:57.010
然后这个作标系

23:57.010 --> 23:58.450
它这一轴也是一样的

23:58.450 --> 24:01.730
是垂直于我们的页面向里的

24:02.690 --> 24:03.090
可以吧

24:03.090 --> 24:04.890
它是这个样子的

24:04.890 --> 24:05.690
我就这样写吧

24:05.690 --> 24:06.250
这样画了

24:07.770 --> 24:09.330
那这个ndc作标

24:09.330 --> 24:11.250
那我们就要求我们所有的顶点

24:11.250 --> 24:13.130
应该都在复一到一之间

24:13.130 --> 24:13.850
对不对

24:13.850 --> 24:18.770
那这个怎么样把裁键作标转化成ndc作标呢

24:18.770 --> 24:23.650
我们还记得在传递webjl的一个作标值的时候

24:23.650 --> 24:25.370
作标顶点的时候

24:25.370 --> 24:27.490
它有四个分量吗

24:27.490 --> 24:30.930
大家是否还记得我们每一个作标点

24:30.930 --> 24:32.690
它都可以传四个分量

24:32.690 --> 24:33.330
对吧

24:33.330 --> 24:35.090
那前三个分量

24:35.090 --> 24:36.530
它是xy

24:36.530 --> 24:37.930
自己走的一个分量

24:37.930 --> 24:39.650
那最后一个分量是什么

24:39.650 --> 24:40.330
最后一个分量

24:40.330 --> 24:41.690
我之前也提到过

24:41.690 --> 24:42.650
它是w

24:42.650 --> 24:45.970
那它代表的就是一个透视的一个

24:45.970 --> 24:49.130
透视的一个分量

24:49.130 --> 24:50.170
透视分量

24:50.170 --> 24:51.930
那这个透视分量有什么用

24:51.930 --> 24:55.690
我们只需要把水平方向就是x作标

24:55.690 --> 24:56.330
y作标

24:56.330 --> 24:59.490
z作标去除以这个透视分量

24:59.490 --> 25:01.490
它会转化成

25:02.490 --> 25:06.050
它会把我们所有的作标顶点都转化成

25:07.010 --> 25:09.450
负的w

25:10.450 --> 25:11.450
负的w

25:11.450 --> 25:13.370
到w之间

25:13.370 --> 25:14.050
那这样的话

25:14.050 --> 25:17.450
我只需要把我们w和负w

25:17.450 --> 25:19.650
定位在负1到e之间

25:19.650 --> 25:20.650
是不是就可以

25:20.650 --> 25:21.530
对不对

25:21.530 --> 25:22.170
那这样的话

25:22.170 --> 25:25.610
我们每一个分量去除以这个透视分量的话

25:25.610 --> 25:27.650
它会它的值是不是

25:27.650 --> 25:30.530
就是在我们负1到e之间了

25:30.530 --> 25:31.050
对吧

25:32.650 --> 25:33.210
这么说

25:33.210 --> 25:35.450
我不知道大家能不能理解

25:35.450 --> 25:36.090
这块

25:36.090 --> 25:38.650
这块可能会有一点点难理解

25:39.730 --> 25:41.650
这块可能会有一点点难理解

25:41.650 --> 25:42.730
那这块

25:42.730 --> 25:45.170
大家可以直接就这么理解

25:45.170 --> 25:46.770
怎么理解呢

25:46.770 --> 25:50.170
你就理解我们要把裁剪作标戏

25:50.170 --> 25:51.730
裁剪之后的作标戏

25:51.730 --> 25:54.450
去转化成ndc作标戏

25:55.450 --> 25:56.650
ndc作标戏

25:56.650 --> 25:59.610
它的长度是负1到e之间的

25:59.610 --> 26:02.450
我们怎么样把我们看到的这个物体

26:02.450 --> 26:04.570
转化成负1到e之间的呢

26:04.690 --> 26:08.210
我们只需要去除以一个透视分量就可以了

26:08.210 --> 26:09.170
因为一般来说

26:09.170 --> 26:10.650
这个透视分量

26:10.650 --> 26:12.250
它都应该是

26:13.610 --> 26:14.930
这个透视分量

26:14.930 --> 26:17.330
都应该是大于你这个每一个零点的

26:17.330 --> 26:18.930
那即使它要不大于的话

26:18.930 --> 26:20.490
它除完这个透视分量

26:20.490 --> 26:21.250
它大于1了

26:21.250 --> 26:23.210
我们也会给它裁剪掉的

26:23.210 --> 26:23.650
可以吧

26:23.650 --> 26:24.770
也会给它裁剪掉的

26:27.290 --> 26:30.290
这里了解一下这么几个作标戏

26:30.290 --> 26:30.650
对吧

26:30.650 --> 26:32.530
那现在我们也知道了

26:32.530 --> 26:34.570
ndc作标它就是最终

26:34.570 --> 26:36.330
渲染到我们页面上的一个作标

26:36.330 --> 26:37.050
对吧

26:37.050 --> 26:39.450
那其实我们除了这个ndc作标

26:39.450 --> 26:42.410
它是我们webgr里面的作标系统之外

26:42.410 --> 26:44.090
我们其实应该还有一个作标

26:44.090 --> 26:47.970
是我们这个GPU它自动已经转化的

26:47.970 --> 26:50.970
因为我们在着色器里面去传入的作标

26:50.970 --> 26:53.170
是不是应该是这个ndc作标

26:53.170 --> 26:53.570
对吧

26:53.570 --> 26:55.370
我们传入的作标应该是mdc

26:55.370 --> 26:58.450
就是我们给这个grgumposition

26:58.450 --> 27:01.330
复职的这个grumposition

27:01.330 --> 27:05.930
puesitln

27:05.930 --> 27:09.770
给它复职的复的这个作标

27:09.770 --> 27:12.490
应该是我们这个ndc作标系

27:13.330 --> 27:14.730
内的这个作标

27:14.730 --> 27:15.210
可以吗

27:15.210 --> 27:18.450
ndc作标系内的这个作标

27:18.450 --> 27:19.210
作标点

27:21.370 --> 27:23.250
然后我们除了这个之外

27:23.250 --> 27:25.810
我们是不是最终要映射到我们页面上去

27:25.810 --> 27:26.290
对吧

27:26.290 --> 27:28.050
那映射到页面上去的话

27:28.050 --> 27:32.130
这个作标我们又管映射到页面当中去的

27:32.130 --> 27:33.810
那个作标叫屏幕作标

27:33.810 --> 27:38.570
那这个ndc作标再去转化成屏幕作标的话

27:38.570 --> 27:41.210
它就是我们这个GPU所做的工作了

27:41.210 --> 27:46.930
就不是我们在程序里面去写的了

27:46.930 --> 27:47.290
对吧

27:47.290 --> 27:49.050
就不是我们在程序里面写的了

27:51.050 --> 27:52.490
那到目前为止

27:52.490 --> 27:56.610
我已经把咱们webgl里面所有的作标系

27:56.610 --> 27:58.890
都给大家说了一遍

27:58.890 --> 28:00.850
那具体每一个

28:00.850 --> 28:03.050
具体每一个怎么来用

28:03.050 --> 28:03.810
怎么来用

28:03.810 --> 28:06.450
我再来再来补充一点

28:06.450 --> 28:06.770
可以吧

28:06.770 --> 28:08.090
再来补充一点

28:08.090 --> 28:11.450
那首先我们再写一个图形的时候

28:11.450 --> 28:12.690
会是一个图形的时候

28:12.690 --> 28:17.170
我们最好把模型作标和我们这个世界作标系

28:17.170 --> 28:19.250
模型作标系和世界作标系

28:19.250 --> 28:20.650
让它俩重合

28:20.650 --> 28:21.130
可以吧

28:21.130 --> 28:24.250
这样的话会减少我们很多的计算量

28:24.250 --> 28:25.330
这样的话

28:25.330 --> 28:27.090
会减少我们很多的计算量

28:27.090 --> 28:31.250
所以这里我们可以把我们模型作标和世界作标系

28:31.250 --> 28:33.570
让它俩进行一个重合

28:33.570 --> 28:34.210
可以吧

28:34.210 --> 28:36.730
然后再接下来就是一个观察者作标系

28:36.730 --> 28:39.170
那这个就没办法重合了

28:39.170 --> 28:39.570
这个

28:39.570 --> 28:41.650
因为这个观察者作标的话

28:41.650 --> 28:42.890
我们在不同的视角

28:42.890 --> 28:44.770
我们看到的图形是不一样的

28:44.770 --> 28:46.410
那我们观察者作标系

28:46.410 --> 28:48.370
就是这个仕途作标系

28:48.370 --> 28:50.770
我们通过我们观察者的一个位置

28:50.770 --> 28:53.290
我们就可以判断出它的一个作标系

28:53.290 --> 28:53.850
那你起码

28:53.850 --> 28:55.490
判断出它的一个作标

28:55.490 --> 29:01.530
然后通过我们这个矩震的一个惩罚

29:01.530 --> 29:02.490
矩震的一个惩罚

29:02.490 --> 29:07.610
我们就可以把我们的世界作标系里面的

29:07.610 --> 29:09.330
这个把我们这个图形

29:09.330 --> 29:12.090
让在世界作标系里面的顶点转化成

29:12.090 --> 29:14.290
在我们观察者作标系

29:14.290 --> 29:19.810
观察作标系里面的这个对应的一个作标

29:19.810 --> 29:20.250
可以吧

29:20.250 --> 29:23.130
对应的一个顶点作标都可以转换

29:24.050 --> 29:26.610
然后再其次就是我们这个裁剪作标

29:26.610 --> 29:28.330
裁剪作标也是一样的

29:28.330 --> 29:32.890
裁剪作标也是我们通过设置观察作标系之后

29:32.890 --> 29:34.610
设置我们这个

29:34.610 --> 29:36.490
不能说设置观察作标系

29:36.490 --> 29:39.570
应该是设置我们这个可视范围之后

29:39.570 --> 29:40.890
我们就可以确定了

29:40.890 --> 29:43.730
它就会自动给你裁剪掉了

29:43.730 --> 29:45.850
那剩下的它就是它的裁

29:45.850 --> 29:48.130
就是我们这个图形的一个裁剪作标

29:48.130 --> 29:50.970
那裁剪作标我们再通过透视

29:50.970 --> 29:53.730
这个透视出发 对吧

29:53.730 --> 29:56.410
那这个透视出发也不需要我们自己来做

29:56.410 --> 29:58.370
也不需要我们去程序来写

29:58.370 --> 30:00.250
也是在GPU当中

30:00.250 --> 30:03.730
它会自动的给你来执行的

30:03.730 --> 30:04.170
可以吧

30:04.170 --> 30:07.290
它也是会在GPU当中自动的给你执行的

30:07.290 --> 30:09.610
所以这里也不需要大家去

30:09.610 --> 30:12.890
也不需要大家

30:13.890 --> 30:16.890
也不需要大家去手动的去写

30:16.890 --> 30:17.210
可以吧

30:17.210 --> 30:18.330
手动去写

30:18.330 --> 30:18.930
OK

30:18.930 --> 30:22.650
然后最后这款裁剪作标到NDC作标

30:22.690 --> 30:25.330
这个过程刚才也给大家说了

30:25.330 --> 30:26.570
这个过程其实就是

30:26.570 --> 30:29.650
处理一个透视的一个分量

30:29.650 --> 30:29.890
对吧

30:29.890 --> 30:31.170
处理一个透视分量

30:33.290 --> 30:34.090
那这样的

30:34.090 --> 30:35.890
这个处理透视分量这个过程

30:35.890 --> 30:39.090
我们有管它叫透视出发的一个过程

30:39.090 --> 30:41.930
然后这个过程也是不需要大家来写

30:41.930 --> 30:44.210
那这个过程是GPU来做的

30:44.210 --> 30:44.530
可以吧

30:44.530 --> 30:46.010
这个过程是GPU做的

30:46.010 --> 30:49.050
那刚才所说的这个观察作标戏

30:49.050 --> 30:51.330
它转化成裁剪作标戏的话

30:51.330 --> 30:54.570
这个过程是CPU来做的

30:54.570 --> 30:54.970
可以吧

30:54.970 --> 30:56.810
这个过程是CPU来做的

30:56.810 --> 30:58.450
简单了解一下

30:58.450 --> 30:58.810
好吧

30:58.810 --> 31:00.010
简单了解一下

31:00.010 --> 31:05.250
然后最后这个NDC作标

31:05.250 --> 31:07.370
再去转化成屏幕作标的话

31:07.370 --> 31:08.730
它也是DPU来做的

31:08.730 --> 31:13.210
也不需要我们去手动的去做任何的事情

31:13.210 --> 31:13.690
可以吧

31:15.530 --> 31:18.890
我们只需要把我们上面的这些

31:18.890 --> 31:20.450
上面的这些作标

31:20.570 --> 31:23.330
像这个观察作标和世界作标

31:23.330 --> 31:25.610
这块的转化是需要我们来做的

31:25.610 --> 31:26.530
就是世界作标

31:26.530 --> 31:28.410
怎么转化成这个观察作标呢

31:28.410 --> 31:32.010
我们就需要通过这个试图变换了

31:32.010 --> 31:32.450
可以吧

31:32.450 --> 31:34.410
我们就需要通过试图变换了

31:36.250 --> 31:39.490
然后观察作标到裁剪作标

31:39.490 --> 31:42.290
我们需要通过投影变换

31:42.290 --> 31:43.370
投影变换

31:43.370 --> 31:45.370
那我刚才所说的这些变换

31:45.370 --> 31:48.490
都是通过我们举证来做的

31:48.490 --> 31:50.250
那举证是怎么来实现的呢

31:50.250 --> 31:54.050
举证我们只需要来运用举证的一个惩罚

31:54.050 --> 31:57.530
来实现这样的一个过程就可以了

31:57.530 --> 31:58.690
比较简单啊

31:58.690 --> 32:02.130
那可能有一些同学他对于举证不是很了解

32:02.130 --> 32:02.850
那没关系

32:02.850 --> 32:07.010
我们后面还有一堂课专门去讲一下

32:07.010 --> 32:08.290
我们WebGL当中

32:08.290 --> 32:12.450
我们需要用到的一些举证的计算方式

32:12.450 --> 32:13.090
可以吧

32:13.090 --> 32:15.930
那本堂课我们主要就是带着大家

32:15.970 --> 32:21.010
来了解一下WebGL当中所有的作标系统

32:21.010 --> 32:24.690
那现在不知道大家对于我们WebGL当中的

32:24.690 --> 32:27.810
所有的作标系统是否都有了解了

32:27.810 --> 32:28.850
是否都有了解了

32:30.770 --> 32:35.250
那后面我们在绘制3D图形的时候

32:35.250 --> 32:39.970
我们再来详细的去应用我们这个作标

32:39.970 --> 32:41.810
这个WebGL的一个作标系统

32:41.810 --> 32:42.450
可以吧

32:42.450 --> 32:43.010
那好

32:43.010 --> 32:45.690
那本堂课咱们就到这

32:45.690 --> 32:46.410
咱们下一个

