WEBVTT

00:00.110 --> 00:02.710
好 我们继续讲解我们的程式列表

00:02.710 --> 00:10.110
在上一节课的时候呢 我们完成了现在它的一个右边ABCD的定位

00:10.110 --> 00:15.710
然后呢 我们根据现在不同的屏幕大小

00:15.710 --> 00:21.110
能够计算出它每一个A纸或者说每一个字母的

00:21.110 --> 00:26.110
一个距离或者称之为每一个字母的它的一个高度

00:26.110 --> 00:27.110
咱们看到吗

00:27.110 --> 00:30.110
在iPhone 6的情况下 这边是Height 27.41

00:30.110 --> 00:34.110
那我切换到iPhone 6P

00:34.110 --> 00:39.110
那么我们来看一下 我们打开

00:39.110 --> 00:45.110
它是30.55对吧 它本身就有一个区别

00:45.110 --> 00:46.110
我们回来

00:46.110 --> 00:50.110
那么接下去呢 我们将做的是1

00:50.110 --> 00:55.110
点击上面这个按钮 我们让刚才所看到的那个

00:55.110 --> 01:00.110
谈出到底是ABC的这个区域出来 就是它

01:00.110 --> 01:03.110
对吧 我们想让它现在是shu A

01:03.110 --> 01:07.110
我们在这边其实是固定了一个纸A对吧

01:07.110 --> 01:10.110
但是我们想点那个按钮出那个

01:10.110 --> 01:14.110
那么它的显示与否呢 我们看到有一个

01:14.110 --> 01:17.110
It's shu little这个字的出现

01:17.110 --> 01:21.110
ok 那我们需要知道啊 有一个这样的一个变量

01:21.110 --> 01:24.110
我们如果设定我去 那么它就会出现

01:24.110 --> 01:27.110
如果设定为force 那么它就不出现 对吧

01:27.110 --> 01:31.110
那么接下去呢 我们看 我们想对上面的这个内容

01:31.110 --> 01:35.110
进行点击 点击的时候 我们说

01:35.110 --> 01:38.110
它该怎么样能把下面的这个出现呢

01:38.110 --> 01:40.110
所以我们应该做啊

01:40.110 --> 01:46.680
在我们的整个每一个上面 我们都去做一个

01:46.680 --> 01:51.680
click 单击 单击事件里面的话呢

01:51.680 --> 01:57.680
我们去做一个search start

01:57.680 --> 02:00.680
当然 在做这个事情的时候呢

02:00.680 --> 02:03.680
其实有时候啊 我们也可以啊 不用这个

02:03.680 --> 02:06.680
我们换一个写法给大家来看一下

02:06.680 --> 02:08.680
我们有时候并不是这样写

02:08.680 --> 02:11.680
那么微信里面大家是否记得啊

02:11.680 --> 02:13.680
我们有一个bound 跟touch 的区别

02:13.680 --> 02:15.680
这两个区别还记得吗

02:15.680 --> 02:17.680
bound 是一个可冒泡

02:17.680 --> 02:19.680
couch 是一个fake 沐泡

02:19.680 --> 02:22.680
那么我们如果说我们想在上面

02:22.680 --> 02:27.060
有时候碰到这种couch

02:27.060 --> 02:30.060
touch start

02:30.060 --> 02:34.060
就是我触摸它的时候 它开始执行

02:34.060 --> 02:37.060
这种时候的话 你写上去

02:37.060 --> 02:41.060
你比如说我写出search start

02:41.060 --> 02:43.060
你这样写 然后把这个方法呢

02:43.060 --> 02:51.090
我们写到message里面来

02:51.090 --> 02:54.090
我们这方法也告诉他这是属于什么呢

02:54.090 --> 03:07.540
这是我们现在的点击右侧

03:07.540 --> 03:13.480
字母后的时间

03:13.480 --> 03:15.480
那么search start

03:15.480 --> 03:16.480
我们可以看到

03:16.480 --> 03:19.480
这边 我们一旦点了以后

03:19.480 --> 03:21.480
就会触发 我们看能不能点

03:21.480 --> 03:24.480
这有个couch start

03:24.480 --> 03:26.480
我来看啊

03:26.480 --> 03:28.480
点上去

03:28.480 --> 03:32.480
你看它不是错 有一个r警告

03:32.480 --> 03:35.480
它告诉你component 组件

03:35.480 --> 03:38.480
在当前这个页面中

03:38.480 --> 03:40.480
does not have a message

03:40.480 --> 03:44.480
是没有一个叫做这样的一个

03:44.480 --> 03:47.480
具柄 事件 处理的

03:47.480 --> 03:49.480
它不会把这个去作为一个

03:49.480 --> 03:51.480
事件处理 它认为

03:51.480 --> 03:53.480
那么我们怎么办呢

03:53.480 --> 03:55.480
那么couch部分

03:55.480 --> 03:57.480
因为是阻止冒泡

03:57.480 --> 04:00.480
所以你可以依然把它换成at

04:00.480 --> 04:02.480
后面这个名称无所谓

04:02.480 --> 04:04.480
因为它换到我们的微信中区

04:04.480 --> 04:06.480
就是属于触摸点的操作

04:06.480 --> 04:09.480
但对于我们现在的mpview来讲

04:09.480 --> 04:11.480
它其实就好比说像单机一样

04:11.480 --> 04:13.480
你只是这样做了

04:13.480 --> 04:16.480
你后面可以自己去加一个touch ender

04:16.480 --> 04:18.480
结束的时候 这两个是可以的

04:18.480 --> 04:20.480
紧接着我们就让这个方式来

04:20.480 --> 04:23.480
但是我们想终止它的冒泡的话

04:23.480 --> 04:25.480
那么你脑中一定要出现的是

04:25.480 --> 04:27.480
事件修饰服务

04:27.480 --> 04:29.480
你可以跟上一个这个

04:29.480 --> 04:31.480
你可以跟上一个这个

04:31.480 --> 04:33.480
我们跳掉了

04:33.480 --> 04:35.480
你可以跟上一个这个结构

04:35.480 --> 04:37.480
这样的话呢

04:37.480 --> 04:39.480
我们看起来就会

04:39.480 --> 04:41.480
非常简单化了

04:41.480 --> 04:46.260
对吧 我们这样放

04:46.260 --> 04:55.020
那么我们加一个

04:55.020 --> 04:57.020
我们的stop

04:57.020 --> 04:59.020
当然你还能再这么做

04:59.020 --> 05:01.020
touch ender

05:01.020 --> 05:04.970
然后你可以给一个

05:04.970 --> 05:06.970
结束时

05:06.970 --> 05:08.970
按键结束时

05:08.970 --> 05:10.970
其实start and end

05:10.970 --> 05:12.970
我们结合起来

05:12.970 --> 05:14.970
我们就可以把它理解成

05:14.970 --> 05:16.970
这是一个单机事件

05:16.970 --> 05:18.970
对吧 但如果说

05:18.970 --> 05:20.970
你没有特殊情况下的话

05:20.970 --> 05:22.970
那么我们可以单写一个这个操作

05:22.970 --> 05:24.970
我就以这个模式来写

05:24.970 --> 05:26.970
代表的是 它是一个触摸

05:26.970 --> 05:28.970
并且它是一个所谓的

05:28.970 --> 05:30.970
我们的冒泡中止

05:30.970 --> 05:32.970
也就称之为事件

05:32.970 --> 05:34.970
我们的修饰服务

05:34.970 --> 05:36.970
然后给出一个

05:36.970 --> 05:38.970
search start

05:38.970 --> 05:40.970
然后我们在search start里面

05:40.970 --> 05:51.450
这样能不能触发到 我们看一下

05:51.450 --> 05:54.950
我们对它点击一下

05:54.950 --> 05:56.950
它这边还有

05:56.950 --> 05:58.950
是没保存吗

05:58.950 --> 06:03.100
我们保存一下

06:03.100 --> 06:05.100
是我这边写了个E

06:05.100 --> 06:07.100
我本来想写一个自付串

06:07.100 --> 06:09.100
它们写个AA

06:09.100 --> 06:11.100
不然你写个E 它认为这是个变量

06:11.100 --> 06:13.100
它告诉你E没定义

06:13.100 --> 06:15.100
你看我这边

06:15.100 --> 06:17.100
它把AA呈现出来了

06:17.100 --> 06:19.100
代表至少来说

06:19.100 --> 06:21.100
除了click以外

06:21.100 --> 06:23.100
我们去使用微信的一个

06:23.100 --> 06:25.100
移动事件 包括是我们刚才

06:25.100 --> 06:27.100
说的 就是

06:27.100 --> 06:29.100
touch start

06:29.100 --> 06:31.100
touch move

06:31.100 --> 06:33.100
touch ender 都可以

06:33.100 --> 06:35.100
scroller 都可以

06:35.100 --> 06:37.100
那我这边就以它作为我

06:37.100 --> 06:39.100
单击的一个事件的出发来做

06:39.100 --> 06:41.100
那么我们现在呢

06:41.100 --> 06:43.100
首先第一点

06:43.100 --> 06:45.100
去找到我们的search

06:45.100 --> 06:51.610
start

06:51.610 --> 06:53.610
然后呢

06:53.610 --> 06:55.610
我们传参可以进去

06:55.610 --> 06:57.610
首先第一点

06:57.610 --> 06:59.610
那么这个search start

06:59.610 --> 07:01.610
由于我们是坐在了哪

07:01.610 --> 07:03.610
我们本身把它坐在了

07:03.610 --> 07:07.430
我们现在我们往上看

07:07.430 --> 07:09.430
再的是for上面

07:09.430 --> 07:11.430
一旦你坐在for上面的

07:11.430 --> 07:13.430
意味着就是它的循环

07:13.430 --> 07:15.430
会让这里面每一项

07:15.430 --> 07:17.430
都会有一个单击

07:17.430 --> 07:19.430
理解吧

07:19.430 --> 07:21.430
那么这种情况下

07:21.430 --> 07:23.430
我对当前这个操作的

07:23.430 --> 07:25.430
search start的单击

07:25.430 --> 07:27.430
我想知道它是在哪个字母

07:27.430 --> 07:29.430
上面的 那该怎么玩

07:29.430 --> 07:31.430
玩法就是

07:31.430 --> 07:33.430
看我写的写法

07:33.430 --> 07:35.430
用帽号 我们做一个data

07:35.430 --> 07:37.430
然后跟上一个letal index

07:37.430 --> 07:39.430
然后等于

07:39.430 --> 07:41.430
我们的index

07:41.430 --> 07:43.430
这样去写

07:43.430 --> 07:45.430
这是什么呢 我解释一下

07:45.430 --> 07:47.430
帽号不用说了啊 强解析

07:47.430 --> 07:49.430
后面是自行定义的一个辨量名

07:49.430 --> 07:51.430
但是这个辨量名有个规则

07:51.430 --> 07:53.430
因为是微信的传执方式

07:53.430 --> 07:55.430
所以是data刚开头固定

07:55.430 --> 07:57.430
后面自己写一个起的辨量名

07:57.430 --> 07:59.430
然后在后面这个index

07:59.430 --> 08:01.430
为什么呢 这是什么东西

08:01.430 --> 08:03.430
它不是自付串

08:03.430 --> 08:05.430
这个index由于你用了一个for一曲

08:05.430 --> 08:07.430
所以它自带有一个所谓的锁影

08:07.430 --> 08:09.430
这我们利用这个锁影值

08:09.430 --> 08:11.430
来作为你现在的一个

08:11.430 --> 08:13.430
传执内容

08:13.430 --> 08:15.430
我们来完成这个传执

08:15.430 --> 08:17.430
我们接收到的时候

08:17.430 --> 08:19.430
就是会接收到一个01234的

08:19.430 --> 08:21.430
那么这个01234是什么

08:21.430 --> 08:23.430
是你现在整个字母

08:23.430 --> 08:25.430
它是不是search little

08:25.430 --> 08:27.430
是整个字母里面点a

08:27.430 --> 08:29.430
应该就是0

08:29.430 --> 08:31.430
你点b 应该就是e

08:31.430 --> 08:33.430
对吧 我们来看一下

08:33.430 --> 08:35.430
这时候才能打e

08:35.430 --> 08:40.220
我们点a

08:40.220 --> 08:46.660
你看 我们看一下

08:46.660 --> 08:48.660
我们打开

08:48.660 --> 08:50.660
我们的current target

08:50.660 --> 08:52.660
看这边里面有个data set

08:52.660 --> 08:54.660
里面有一个

08:54.660 --> 08:56.660
那个little index

08:56.660 --> 08:58.660
它是等于0的

08:58.660 --> 09:00.660
对吧 little index

09:00.660 --> 09:02.660
它是等于0的

09:02.660 --> 09:04.660
那么 所以我通过这个方式

09:04.660 --> 09:06.660
我可以获得到你当前

09:06.660 --> 09:08.660
你选择了哪一个

09:08.660 --> 09:10.660
我们的所谓的

09:10.660 --> 09:12.660
按键吧

09:12.660 --> 09:14.660
但是这个不够

09:14.660 --> 09:16.660
我们还要知道你现在到底选择

09:16.660 --> 09:18.660
一个字母 那么怎么办呢

09:18.660 --> 09:20.660
你看我的结构

09:20.660 --> 09:22.660
我们刚才是通过e

09:22.660 --> 09:24.660
current

09:24.660 --> 09:26.660
target.dataset

09:26.660 --> 09:28.660
来得到的

09:28.660 --> 09:30.660
little index

09:30.660 --> 09:32.660
里面得到这个值

09:32.660 --> 09:34.660
这个值是什么

09:34.660 --> 09:36.660
是我现在的

09:36.660 --> 09:38.660
id 是吧

09:38.660 --> 09:40.660
是我的 或者称之为就是我的

09:40.660 --> 09:42.660
咱们称之为index

09:42.660 --> 09:44.660
是一个锁影

09:44.660 --> 09:46.660
然后我就拿着这个锁影

09:46.660 --> 09:48.660
去哪儿拿

09:48.660 --> 09:50.660
是去我们现在的

09:50.660 --> 09:52.660
整个字母表 是吧

09:52.660 --> 09:54.660
好 那我就不接了

09:54.660 --> 09:56.660
我直接拿着

09:56.660 --> 09:58.660
当前的字母表

09:58.660 --> 10:00.660
search list

10:00.660 --> 10:07.300
search little

10:07.300 --> 10:09.300
叫做search little

10:09.300 --> 10:11.300
在search little里面

10:11.300 --> 10:13.300
用一个中国号

10:13.300 --> 10:15.300
把你传进来的内容

10:15.300 --> 10:17.300
作为我现在的锁影

10:17.300 --> 10:19.300
来查找我现在

10:19.300 --> 10:23.000
所点击的这个按钮

10:23.000 --> 10:26.890
究竟是什么样的一个

10:26.890 --> 10:28.890
就是我现在的

10:28.890 --> 10:30.890
choice little

10:30.890 --> 10:32.890
你选中的这个按钮

10:32.890 --> 10:34.890
或者称之为click little

10:34.890 --> 10:39.160
单击的这个按钮

10:39.160 --> 10:43.500
好 我们往下走啊

10:43.500 --> 10:45.500
在这边

10:45.500 --> 10:47.500
我们说先看一下

10:47.500 --> 10:49.500
是不是你能拿到这个按钮啊

10:49.500 --> 10:51.500
理论上是你点a

10:51.500 --> 10:53.500
这边应该就能显示出a来了

10:53.500 --> 10:59.750
打开

10:59.750 --> 11:01.750
出来了

11:01.750 --> 11:03.750
这边就是a的元素

11:03.750 --> 11:05.750
对吧

11:05.750 --> 11:07.750
然后呢点b

11:07.750 --> 11:09.750
nb对吧

11:09.750 --> 11:11.750
b就出来了

11:11.750 --> 11:13.750
然后它本身记得

11:13.750 --> 11:15.750
高度是多少 这边都有

11:15.750 --> 11:17.750
好 我们现在拿到了这个值

11:17.750 --> 11:19.750
然后紧接着 我们往下

11:19.750 --> 11:21.750
我们

11:21.750 --> 11:23.750
这里啊

11:23.750 --> 11:25.750
就是一旦你进行点击

11:25.750 --> 11:27.750
这个按钮的时候

11:27.750 --> 11:29.750
我们有几件事做

11:29.750 --> 11:31.750
第一件事

11:31.750 --> 11:33.750
我们可以让中间的这个区域

11:33.750 --> 11:35.750
给呈现出来

11:35.750 --> 11:37.750
第二件事情

11:37.750 --> 11:39.750
我们当然整个页面上的操作

11:39.750 --> 11:41.750
无外乎就是对它点击的一个

11:41.750 --> 11:43.750
滚动的操作对吧

11:43.750 --> 11:45.750
让它直接定位到你现在所要的

11:45.750 --> 11:50.920
比如说G

11:50.920 --> 11:52.920
G的显示部分

11:52.920 --> 11:56.300
所以它整个这块下面

11:56.300 --> 11:58.300
比如说我们写上

11:58.300 --> 12:00.300
获取

12:00.300 --> 12:02.300
点击的

12:02.300 --> 12:05.990
字幕对象

12:05.990 --> 12:07.990
对吧 它得到了整个对象

12:07.990 --> 12:09.990
然后呢

12:09.990 --> 12:14.010
这边我们是

12:14.010 --> 12:16.010
设置

12:16.010 --> 12:20.090
滚动操作

12:20.090 --> 12:22.090
这个滚动操作我们写一个

12:22.090 --> 12:24.090
set scholar

12:24.090 --> 12:26.090
top

12:26.090 --> 12:28.090
我们把this 传进去

12:28.090 --> 12:30.090
可以这样

12:30.090 --> 12:32.090
然后呢我们把当前的这个click

12:32.090 --> 12:34.090
我们叫show吧

12:34.090 --> 12:36.090
我们叫show little

12:36.090 --> 12:39.460
显示

12:39.460 --> 12:42.970
我们把它也传进去

12:42.970 --> 12:44.970
那么至于这个里面怎么写

12:44.970 --> 12:46.970
我们

12:46.970 --> 12:50.980
先写一个方法出来

12:50.980 --> 12:52.980
我们后面来写

12:52.980 --> 12:56.420
对吧 这个是

12:56.420 --> 12:58.420
设置

12:58.420 --> 13:00.420
左侧

13:00.420 --> 13:06.300
程式列表的

13:06.300 --> 13:08.300
滚动

13:08.300 --> 13:10.300
是这样一个结构

13:10.300 --> 13:12.300
注意了

13:12.300 --> 13:14.300
刚刚你看到的这个show little

13:14.300 --> 13:16.300
它里面其实已经是个对象了

13:16.300 --> 13:18.300
所以呢

13:18.300 --> 13:20.300
我们在外面显示的时候

13:20.300 --> 13:22.300
你再看一下

13:22.300 --> 13:24.300
因为我们在显示这个show little的时候

13:24.300 --> 13:26.300
它其实是对象了

13:26.300 --> 13:28.300
所以你现在在呈现的时候会有问题的

13:28.300 --> 13:30.300
那么怎么办呢

13:30.300 --> 13:32.300
我们就直接修改这个show little

13:32.300 --> 13:34.300
左侧字母

13:34.300 --> 13:42.790
你再来看一下

13:42.790 --> 13:44.790
我们的这个

13:44.790 --> 13:46.790
修改一下

13:46.790 --> 13:48.790
因为我在

13:48.790 --> 13:50.790
还没到这一块

13:50.790 --> 13:52.790
现在我们其实还没到做到这一块

13:52.790 --> 13:54.790
一旦你程序运行到这一块的时候

13:54.790 --> 13:56.790
你会发现

13:56.790 --> 13:58.790
它最后呈现出来的是一个对象

13:58.790 --> 14:00.790
那怎么就完成这个内容的修改呢

14:00.790 --> 14:02.790
很简单

14:02.790 --> 14:04.790
我们需要的是

14:04.790 --> 14:06.790
把现有的这个show little

14:06.790 --> 14:08.790
里面的点年拿出来

14:08.790 --> 14:10.790
因为我现在这个show little

14:10.790 --> 14:12.790
或者说我称之为页面的这个

14:12.790 --> 14:14.790
show little

14:14.790 --> 14:16.790
我现在只是取直使用

14:16.790 --> 14:18.790
你如果做这一步操作的话

14:18.790 --> 14:20.790
这里面主要

14:20.790 --> 14:22.790
就是你看着

14:22.790 --> 14:24.790
我们先把这个空打着

14:24.790 --> 14:26.790
你要去这样操作

14:26.790 --> 14:28.790
show this点

14:28.790 --> 14:30.790
show little

14:30.790 --> 14:32.790
你把它给复制过去的话

14:32.790 --> 14:34.790
那么你必须带上点年

14:34.790 --> 14:36.790
你必须带上这一步

14:36.790 --> 14:38.790
如果你不带这一步的话

14:38.790 --> 14:40.790
那它一定包错

14:40.790 --> 14:47.180
我们的一个对象概念

14:47.180 --> 14:49.180
因为我现在这边还没用到search

14:49.180 --> 14:51.180
对吧

14:51.180 --> 14:53.180
它是在哪个时候呢

14:53.180 --> 14:55.180
点击的时候对不对

14:55.180 --> 14:57.180
它是在点击的时候

14:57.180 --> 14:59.180
那么所以这边讲一下

14:59.180 --> 15:01.180
原有的我们的

15:01.180 --> 15:03.180
结构的话

15:03.180 --> 15:05.180
search little没问题

15:05.180 --> 15:07.180
它本身就是一个非常简单的

15:07.180 --> 15:09.180
我们是一个

15:09.180 --> 15:11.180
我们的数据

15:11.180 --> 15:13.180
然后的话这个数据是我们的

15:13.180 --> 15:15.180
数据出来

15:15.180 --> 15:17.180
那么这边的话

15:17.180 --> 15:19.180
如果说你需要去点击

15:19.180 --> 15:22.620
我们查找这个操作的时候

15:22.620 --> 15:24.620
那么这边的话

15:24.620 --> 15:29.720
我们里面还没有输出

15:29.720 --> 15:31.720
我们把输出语句给关了

15:31.720 --> 15:33.720
如果你现在需要去点击的时候

15:33.720 --> 15:35.720
那么你最好

15:35.720 --> 15:37.720
如果要对它重新复制

15:37.720 --> 15:39.720
从show little里面来

15:39.720 --> 15:41.720
那么你需要的是用它的点年的结构

15:41.720 --> 15:43.720
这边我写一下

15:43.720 --> 15:47.540
这是根据

15:47.540 --> 15:51.540
show little的

15:51.540 --> 15:53.540
当前数值

15:53.540 --> 15:57.050
修改复制语句

15:57.050 --> 16:03.050
有时需要

16:03.050 --> 16:05.050
show little有时候需要的是

16:05.050 --> 16:07.050
show little点年

16:07.050 --> 16:09.050
这样的结构

16:09.050 --> 16:11.050
这个咱们知道一下就行

16:11.050 --> 16:13.050
然后再往下呢

16:13.050 --> 16:15.050
就是弹框

16:15.050 --> 16:17.050
因为你所有的事情

16:17.050 --> 16:19.050
其实我到时候是到set

16:19.050 --> 16:21.050
scolar top去做的

16:21.050 --> 16:23.050
所以我这边呢就是

16:23.050 --> 16:25.050
弹出

16:25.050 --> 16:27.050
点击

16:27.050 --> 16:29.050
选项

16:29.050 --> 16:31.050
弹出点击选项

16:31.050 --> 16:33.050
其实就是this点

16:33.050 --> 16:35.050
show little

16:35.050 --> 16:37.050
设之为

16:37.050 --> 16:39.050
好我们来看一下

16:39.050 --> 16:44.980
点一下a出来了吧

16:44.980 --> 16:46.980
点一下b

16:46.980 --> 16:48.980
再点其他的

16:48.980 --> 16:50.980
a老师没出来

16:50.980 --> 16:52.980
原因是这个

16:52.980 --> 16:54.980
你需要把它给关了

16:54.980 --> 16:56.980
它自己不会关

16:56.980 --> 16:58.980
所以怎么办呢

16:58.980 --> 17:00.980
因为它不是微信的空间

17:00.980 --> 17:02.980
它只是我们这边做的div

17:02.980 --> 17:04.980
用了一个

17:04.980 --> 17:06.980
样式的结构做出来的

17:06.980 --> 17:08.980
所以在后面

17:08.980 --> 17:14.600
我们这样做一个什么呢

17:14.600 --> 17:16.600
延时

17:16.600 --> 17:22.470
我们做一个

17:22.470 --> 17:24.470
this点

17:24.470 --> 17:26.470
把这个再改回去

17:26.470 --> 17:28.470
再改成force

17:28.470 --> 17:30.470
但是过多久呢

17:30.470 --> 17:32.470
一秒钟

17:32.470 --> 17:34.470
我们做一个这个

17:34.470 --> 17:38.680
效果来看一下

17:38.680 --> 17:40.680
点击

17:40.680 --> 17:42.680
是不是

17:42.680 --> 17:44.680
点击它切换好了以后

17:44.680 --> 17:46.680
一秒钟隐藏它

17:46.680 --> 17:48.680
形成这样一个效果

17:48.680 --> 17:50.680
这是我们这边做到的一个

17:50.680 --> 17:52.680
弹出点击选项的格式

17:52.680 --> 17:54.680
ok那么这是第二块内容

17:54.680 --> 17:56.680
做好了

17:56.680 --> 17:58.680
第一块内容排版第二块

17:58.680 --> 18:00.680
第三块内容是左边的显示

18:00.680 --> 18:02.680
左边呢

18:02.680 --> 18:04.680
我们要看一下

18:04.680 --> 18:06.680
我们所给出的这个格式的话

18:06.680 --> 18:08.680
它其实也是

18:08.680 --> 18:10.680
做一个分类操作的

18:10.680 --> 18:12.680
什么意思

18:12.680 --> 18:14.680
你会看到的是a

18:14.680 --> 18:16.680
下面所有的是a级的

18:16.680 --> 18:18.680
b

18:18.680 --> 18:20.680
下面是b级的对不对

18:20.680 --> 18:22.680
它是这个

18:22.680 --> 18:24.680
所以我们刚才为什么去区分

18:24.680 --> 18:26.680
或者说以a做b

18:26.680 --> 18:28.680
进行我们的修list的一个

18:28.680 --> 18:30.680
重新的编写

18:30.680 --> 18:32.680
原因就在这儿

18:32.680 --> 18:34.680
我们后续需要的是它根据这块内容

18:34.680 --> 18:36.680
来完成你现在页面的一个

18:36.680 --> 18:38.680
布局的

18:38.680 --> 18:40.680
ok我们来做一下

18:40.680 --> 18:42.680
开始左侧显示

18:42.680 --> 18:48.740
首先我们先写一个

18:48.740 --> 18:50.740
我们把这个div说着

18:50.740 --> 18:54.180
当

18:54.180 --> 18:56.180
前

18:56.180 --> 18:59.690
选择

18:59.690 --> 19:01.690
城市

19:01.690 --> 19:03.690
你选择了哪一个

19:03.690 --> 19:05.690
然后呢

19:05.690 --> 19:07.690
后面是可以滚动的

19:07.690 --> 19:11.000
所以我们给的是

19:11.000 --> 19:15.400
scotter view

19:15.400 --> 19:17.400
给一个scotter view出来

19:17.400 --> 19:25.060
滚动的格式是这样的

19:25.060 --> 19:27.060
scotter y

19:27.060 --> 19:29.060
我们称之为

19:29.060 --> 19:31.060
这个是可以垂直滚动

19:31.060 --> 19:34.630
第二

19:34.630 --> 19:36.630
我们依然给它一个

19:36.630 --> 19:38.630
和我们左边

19:38.630 --> 19:40.630
基本相似的

19:40.630 --> 19:42.630
一样是结构

19:42.630 --> 19:44.630
style

19:44.630 --> 19:46.630
然后hide

19:46.630 --> 19:48.630
注意

19:48.630 --> 19:50.630
单影

19:50.630 --> 19:57.210
hide

19:57.210 --> 19:59.210
加上win hide

19:59.210 --> 20:01.210
加上win hide

20:01.210 --> 20:03.210
那么你看

20:03.210 --> 20:05.210
上面这个是item h

20:05.210 --> 20:07.210
这边是win hide

20:07.210 --> 20:09.210
我们加上也是一样

20:09.210 --> 20:11.210
我需要显示每单元格

20:11.210 --> 20:13.210
整个的高度

20:13.210 --> 20:15.210
它是一个

20:15.210 --> 20:17.210
它是要做整个高度

20:17.210 --> 20:19.210
进行在整个高度中

20:19.210 --> 20:21.210
显示区域的一个

20:21.210 --> 20:23.210
上下的拉动

20:23.210 --> 20:25.210
这个是

20:25.210 --> 20:27.210
不然的话你也可以缩小一点

20:27.210 --> 20:29.210
比如说你就缩到半个

20:29.210 --> 20:31.210
在这里面拉也可以

20:31.210 --> 20:33.210
那么这是根据你这个指

20:33.210 --> 20:35.210
单紧注意scot x

20:35.210 --> 20:37.210
如果设置为x的话

20:37.210 --> 20:39.210
它是可以横向滚动

20:39.210 --> 20:41.210
只要内容超过屏幕

20:41.210 --> 20:43.210
它是可以横向滚动的设定

20:43.210 --> 20:45.210
但是如果是scot y

20:45.210 --> 20:47.210
垂直的话一定要注意

20:47.210 --> 20:49.210
我们一定要在scot view上面

20:49.210 --> 20:51.210
去定义它的一个

20:51.210 --> 20:53.210
实体高度

20:53.210 --> 20:55.210
也就是我们说的看到这边的操作

20:55.210 --> 20:57.210
比如说高度是我们的

20:57.210 --> 20:59.210
当前值高度1000高度2000

20:59.210 --> 21:01.210
这样的实体高度

21:01.210 --> 21:03.210
不然的话它无法知道

21:03.210 --> 21:05.210
从哪一个区域进行显示

21:05.210 --> 21:07.210
和现在的一个拉动

21:07.210 --> 21:09.210
好了我们继续进行往下写

21:09.210 --> 21:11.210
到这儿了接下去

21:11.210 --> 21:13.210
我们写一个什么呢

21:13.210 --> 21:15.210
注意我们写一个这个

21:15.210 --> 21:17.210
scot top

21:17.210 --> 21:21.800
scot top

21:21.800 --> 21:23.800
这个是什么

21:23.800 --> 21:25.800
这个是什么我们把scot top

21:25.800 --> 21:27.800
先在

21:27.800 --> 21:29.800
我们的data中

21:29.800 --> 21:31.800
先写一下

21:31.800 --> 21:36.650
就是0

21:36.650 --> 21:38.650
我们说一下这是一个

21:38.650 --> 21:40.650
什么样的一个数值

21:40.650 --> 21:42.650
在scot view中

21:42.650 --> 21:44.650
这个属性叫scot top

21:44.650 --> 21:46.650
你如果设置这个值

21:46.650 --> 21:48.650
默认是0代表

21:48.650 --> 21:50.650
它是出现在整个scot的

21:50.650 --> 21:52.650
第一排

21:52.650 --> 21:54.650
如果你这个数值继续往后设置

21:54.650 --> 21:56.650
比如说100 200 300

21:56.650 --> 21:58.650
继续往下设置

21:58.650 --> 22:00.650
也就是说它会自动的

22:00.650 --> 22:02.650
向上先滚动100

22:02.650 --> 22:04.650
向上先滚动200

22:04.650 --> 22:06.650
显示第200个位置

22:06.650 --> 22:08.650
和第300个位置

22:08.650 --> 22:12.020
那么这样的话呢

22:12.020 --> 22:15.460
先想一下

22:15.460 --> 22:26.390
当前选择是

22:26.390 --> 22:28.390
我们看一下

22:28.390 --> 22:30.390
它这个是我排版样式上的

22:30.390 --> 22:32.390
它如果说是

22:32.390 --> 22:34.390
直接出现在这里面

22:34.390 --> 22:36.390
那就代表着

22:36.390 --> 22:38.390
我这块内容进入到了上一层的div中

22:38.390 --> 22:40.390
所以呢我们看一下

22:40.390 --> 22:42.390
它search little

22:42.390 --> 22:44.390
我们把它整个这一块内容

22:44.390 --> 22:46.390
把search little在下面的一个div

22:46.390 --> 22:48.390
拿出来

22:48.390 --> 22:50.390
直接放给它自己

22:50.390 --> 22:52.390
到哪呢

22:52.390 --> 22:54.390
我们让它自己做这个事情

22:54.390 --> 22:57.700
我们把这里

22:57.700 --> 22:59.700
它对应到这

22:59.700 --> 23:01.700
就让它自己去做它左侧的这个显示

23:01.700 --> 23:03.700
然后呢

23:03.700 --> 23:05.700
我们把这个所谓的右侧

23:05.700 --> 23:07.700
和我们的这个左侧程式

23:07.700 --> 23:09.700
全都拿出来

23:09.700 --> 23:11.700
全都拿出来

23:11.700 --> 23:13.700
然后的话呢我们直接对应到的是

23:13.700 --> 23:15.700
最外层的根本件

23:15.700 --> 23:17.700
我们现在来看一下

23:17.700 --> 23:19.700
是不是它出来了

23:19.700 --> 23:21.700
对吧

23:21.700 --> 23:23.700
我们点击以后它也大了

23:23.700 --> 23:25.700
A字在上面我们把A的那个样式

23:25.700 --> 23:27.700
简单调一下

23:27.700 --> 23:29.700
对A做一个简单的

23:29.700 --> 23:31.700
让它自体垂直集中

23:31.700 --> 23:33.700
垂直集中的做法

23:33.700 --> 23:35.700
我们就设个line height

23:35.700 --> 23:37.700
200rpmx

23:37.700 --> 23:39.700
这样时候

23:39.700 --> 23:41.700
你来看一下

23:41.700 --> 23:43.700
随便选一个按钮

23:43.700 --> 23:45.700
出现在中间了吧

23:45.700 --> 23:47.700
我们这里面没让它变

23:47.700 --> 23:49.700
我们去改它一个值

23:49.700 --> 23:51.700
因为这个是一个固定的初始值

23:51.700 --> 23:53.700
我们在

23:53.700 --> 23:55.700
data里面放好的

23:55.700 --> 23:57.700
我们data里放了一个初始值对吧

23:57.700 --> 24:02.230
修列头

24:02.230 --> 24:04.230
那么我们往上

24:04.230 --> 24:06.230
修列头里面咱们这边有一个修列头

24:06.230 --> 24:08.230
我们什么时候去改变这个修列头

24:08.230 --> 24:10.230
就是你点击的时候

24:10.230 --> 24:12.230
我们对它进行点击的时候

24:12.230 --> 24:14.230
我们去到现在的这个search start

24:14.230 --> 24:17.670
我们去到search start

24:17.670 --> 24:19.670
我们说改变

24:19.670 --> 24:21.670
你们说改变你现在的

24:21.670 --> 24:23.670
这个点击区域

24:23.670 --> 24:32.870
也就是我们的修列头

24:32.870 --> 24:34.870
我们把它附上

24:34.870 --> 24:36.870
然后点练

24:36.870 --> 24:38.870
我们这样做

24:38.870 --> 24:40.870
因为修列头在这里的时候

24:40.870 --> 24:42.870
它其实已经变成了一个对象了

24:42.870 --> 24:44.870
所以我们就把这行加上

24:44.870 --> 24:51.830
点击

24:51.830 --> 24:53.830
对不对

24:53.830 --> 24:55.830
jl1

24:55.830 --> 24:57.830
是不是出来了

24:57.830 --> 24:59.830
cb对吧

24:59.830 --> 25:01.830
这时候修对象了

25:01.830 --> 25:03.830
那么这个是我们之前做好的

25:03.830 --> 25:05.830
我们就是把它隐藏了

25:05.830 --> 25:07.830
接下去我们继续

25:07.830 --> 25:09.830
接下去我们看到

25:09.830 --> 25:11.830
我们想做左边的区域

25:11.830 --> 25:13.830
我们把左边的界面

25:13.830 --> 25:15.830
架构我们看到

25:15.830 --> 25:17.830
左边的话首先

25:17.830 --> 25:19.830
上面很简单

25:19.830 --> 25:21.830
我们把它移出来

25:21.830 --> 25:23.830
不在我们的head letter里面

25:23.830 --> 25:25.830
一起玩

25:25.830 --> 25:27.830
然后在这边当前选择的程式是什么

25:27.830 --> 25:29.830
我们默认是0

25:29.830 --> 25:31.830
0的话我们其实是从头开始

25:31.830 --> 25:33.830
是从头开始

25:33.830 --> 25:35.830
也就是顶部开始

25:35.830 --> 25:37.830
紧接着我们再来

25:37.830 --> 25:39.830
我们这边的做法

25:39.830 --> 25:45.100
我们往下写一个div

25:45.100 --> 25:47.100
看一下

25:47.100 --> 25:49.100
我们把整个结构

25:49.100 --> 25:51.100
这上面我们控制了它的高度

25:51.100 --> 25:53.100
同时我们这边

25:53.100 --> 25:55.100
又控制它的scotter

25:55.100 --> 25:57.100
那么代表它现在的

25:57.100 --> 25:59.100
你可以控制它的一个

25:59.100 --> 26:01.100
70位

26:01.100 --> 26:03.100
接下来

26:03.100 --> 26:05.100
这边来做一个class

26:05.100 --> 26:07.100
然后这边我们写一个selector

26:07.100 --> 26:09.100
selection

26:09.100 --> 26:11.100
做一个selection

26:11.100 --> 26:15.180
在这个selection里面

26:15.180 --> 26:17.180
我们做一个v4

26:17.180 --> 26:19.180
我们要做个循环

26:19.180 --> 26:21.180
你循环的是什么

26:21.180 --> 26:23.180
我们拿item出来

26:23.180 --> 26:25.180
然后硬 city list

26:25.180 --> 26:27.180
还记得我们里面写过一个

26:27.180 --> 26:29.180
city list对吧

26:29.180 --> 26:31.180
我们在js里面

26:31.180 --> 26:33.180
在我们的

26:33.180 --> 26:35.180
这边有一个city list

26:35.180 --> 26:37.180
它的复制是在我们onload里面

26:37.180 --> 26:39.180
onload里面的话是我们通过

26:39.180 --> 26:41.180
city list进行分组列表

26:41.180 --> 26:43.180
a有多少 b有多少

26:43.180 --> 26:45.180
是这样写的

26:45.180 --> 26:47.180
所以我回到这儿

26:47.180 --> 26:53.940
我们完成一个city list

26:53.940 --> 26:55.940
然后同时我们把这个关一下

26:55.940 --> 26:57.940
看得多一点

26:57.940 --> 26:59.940
同时我们说

26:59.940 --> 27:01.940
现在city list的循环出来的

27:01.940 --> 27:03.940
属于我们现在的

27:03.940 --> 27:05.940
一个一个的

27:05.940 --> 27:07.940
对象

27:07.940 --> 27:09.940
然后我们紧接着继续

27:09.940 --> 27:11.940
在div中

27:11.940 --> 27:17.690
我们再来一个class

27:17.690 --> 27:19.690
我们写上item letter

27:19.690 --> 27:23.700
写上item letter

27:23.700 --> 27:25.700
那么它显示的就是

27:25.700 --> 27:27.700
我们的item名称

27:27.700 --> 27:29.700
这个名称其实是什么

27:29.700 --> 27:31.700
这个名称就是

27:31.700 --> 27:33.700
什么神

27:33.700 --> 27:35.700
它其实是个神

27:35.700 --> 27:37.700
对于我们利用上面的item来写

27:37.700 --> 27:39.700
item.

27:39.700 --> 27:43.460
这个的话就是我们的字母

27:43.460 --> 27:50.420
是一个字母

27:50.420 --> 28:02.440
显示字母

28:02.440 --> 28:04.440
循环所有列表

28:04.440 --> 28:06.440
字母列表

28:06.440 --> 28:08.440
循环字母列表

28:08.440 --> 28:10.440
然后把它给

28:10.440 --> 28:12.440
放出来

28:12.440 --> 28:14.440
它是我们的某一个字母

28:14.440 --> 28:16.440
但是对于这个字母下面

28:16.440 --> 28:18.440
我们其实还有

28:18.440 --> 28:20.440
主要字母下面

28:20.440 --> 28:22.440
是a

28:22.440 --> 28:23.440
还有一个

28:23.440 --> 28:24.440
宿主

28:24.440 --> 28:26.440
它是为了让我们能够告诉

28:26.440 --> 28:28.440
我们现在这个字母a

28:28.440 --> 28:30.440
所对应到的

28:30.440 --> 28:32.440
有什么暗闪式啊

28:32.440 --> 28:34.440
这些的每个式

28:34.440 --> 28:36.440
所以在这个前提下面

28:36.440 --> 28:38.440
我们对它还要再做一个

28:38.440 --> 28:40.440
item city

28:40.440 --> 28:42.440
然后呢v4

28:42.440 --> 28:44.440
你还要再一次循环

28:44.440 --> 28:46.440
那么我们就用city来表示

28:46.440 --> 28:48.440
city

28:48.440 --> 28:50.440
它是在什么范围呢

28:50.440 --> 28:52.440
它的数组是在item

28:52.440 --> 28:54.440
的city

28:54.440 --> 28:56.440
info里面

28:56.440 --> 29:00.580
它是在item的cityinfo里面

29:00.580 --> 29:02.580
那么请注意啊

29:02.580 --> 29:04.580
如果说你一旦发现

29:04.580 --> 29:06.580
有两个forage

29:06.580 --> 29:08.580
浅套的话那你后面在这里必须

29:08.580 --> 29:10.580
也把它的

29:10.580 --> 29:12.580
index也标注出来

29:12.580 --> 29:14.580
你在这里也要标注

29:14.580 --> 29:16.580
所以你在这边

29:16.580 --> 29:18.580
后面这个所谓的可写可不写

29:18.580 --> 29:20.580
这里的index一定得出来了

29:20.580 --> 29:22.580
index1

29:22.580 --> 29:24.580
我们称之为

29:24.580 --> 29:28.020
然后这边呢我们写出

29:28.020 --> 29:30.020
index2

29:30.020 --> 29:32.020
就这样写

29:32.020 --> 29:34.020
ok当你这样写好

29:34.020 --> 29:36.020
我们下面这边就写上

29:36.020 --> 29:38.020
你是用通过city里面

29:38.020 --> 29:40.020
取得程式

29:40.020 --> 29:45.060
这样的结构

29:45.060 --> 29:47.060
一面有错吗没有

29:47.060 --> 29:49.060
显示出来了吧

29:49.060 --> 29:51.060
只是没样式啊没关系

29:51.060 --> 29:53.060
现在这个滚动的区域

29:53.060 --> 29:55.060
其实是我scholarview的

29:55.060 --> 29:57.060
格式

29:57.060 --> 29:59.060
这是a

29:59.060 --> 30:01.060
它的显示是通过它来完成的

30:01.060 --> 30:03.060
然后city呢

30:03.060 --> 30:05.060
是我们在item里面还有一个

30:05.060 --> 30:07.060
叫做cityinfo

30:07.060 --> 30:09.060
由它所给出的

30:09.060 --> 30:11.060
city对不对

30:11.060 --> 30:13.060
好现在呢我们简单的

30:13.060 --> 30:15.060
把它的一个样式啊简单定一下

30:15.060 --> 30:17.060
shu selector

30:17.060 --> 30:26.650
leto

30:26.650 --> 30:28.650
就是这个是select

30:28.650 --> 30:30.650
对啊我们这有对吧

30:30.650 --> 30:32.650
我们这个select都有

30:32.650 --> 30:36.150
然后我们紧接着我们看一下后面一个

30:36.150 --> 30:44.460
我们看后面一个

30:44.460 --> 30:46.460
叫做selection

30:46.460 --> 30:48.460
selection没有

30:48.460 --> 30:55.350
我们从selection开始写一下

30:55.350 --> 30:57.350
selection的话呢

30:57.350 --> 30:59.350
我们做一个display

30:59.350 --> 31:01.350
然后呢我们做它的一个

31:01.350 --> 31:03.350
display的flex

31:03.350 --> 31:07.430
好

31:07.430 --> 31:09.430
宽度我们做100%

31:09.430 --> 31:11.430
flex

31:11.430 --> 31:13.430
direction我们做成

31:13.430 --> 31:15.430
colon

31:15.430 --> 31:17.430
垂直排列我们其实写一个

31:17.430 --> 31:21.770
就能看一部分的效果

31:21.770 --> 31:23.770
那先让它垂直定位定好

31:23.770 --> 31:25.770
selection

31:25.770 --> 31:27.770
紧接着我们再来写

31:27.770 --> 31:31.720
selection是大范围里面有我们的

31:31.720 --> 31:33.720
item对吧

31:33.720 --> 31:35.720
我们有item little跟item city

31:35.720 --> 31:37.720
我们把这两个加上

31:37.720 --> 31:42.250
item

31:42.250 --> 31:46.460
little

31:46.460 --> 31:49.900
display

31:49.900 --> 31:51.900
flex

31:51.900 --> 31:53.900
background color

31:53.900 --> 31:55.900
给出的是

31:55.900 --> 31:57.900
f8 f8 f8

31:57.900 --> 31:59.900
再来的是

31:59.900 --> 32:01.900
height我们给出

32:01.900 --> 32:05.340
60rpx

32:05.340 --> 32:07.340
它现在的每一行的

32:07.340 --> 32:09.340
字母的字体的高度

32:09.340 --> 32:11.340
60相当于30像素

32:11.340 --> 32:13.340
pelling我们

32:13.340 --> 32:15.340
左边离开一点吧

32:15.340 --> 32:17.340
左边离开个20rpx

32:17.340 --> 32:19.340
然后align

32:19.340 --> 32:21.340
垂直

32:21.340 --> 32:23.340
它是做集中处理

32:23.340 --> 32:25.340
为什么叫垂直呢

32:25.340 --> 32:27.340
因为它的display flex

32:27.340 --> 32:28.340
它没有射

32:28.340 --> 32:29.340
但是射的话呢

32:29.340 --> 32:31.340
我们大家也可以

32:31.340 --> 32:33.340
可以做一个direction

32:33.340 --> 32:35.340
它其实是行

32:35.340 --> 32:37.340
那么它的横向的话

32:37.340 --> 32:39.340
应该gest

32:39.340 --> 32:41.340
应该gest contender对吧

32:41.340 --> 32:43.340
那么它纵向的话

32:43.340 --> 32:45.340
就是属于align item

32:45.340 --> 32:47.340
那再来啊

32:47.340 --> 32:49.340
item city

32:49.340 --> 32:51.340
item city

32:51.340 --> 32:53.340
把这个字也补上

32:53.340 --> 32:55.340
display

32:55.340 --> 32:57.340
flex

32:57.340 --> 32:59.340
flex

32:59.340 --> 33:01.340
然后

33:01.340 --> 33:03.340
background color

33:03.340 --> 33:05.340
然后

33:05.340 --> 33:07.340
白色

33:07.340 --> 33:09.340
宽度我们定成

33:09.340 --> 33:11.340
80rpx

33:11.340 --> 33:13.340
这是城市的那个

33:13.340 --> 33:15.340
上面窄一点

33:15.340 --> 33:17.340
就是little字母

33:17.340 --> 33:19.340
城市稍微宽一点

33:19.340 --> 33:21.340
然后padding left

33:21.340 --> 33:23.340
左边呢

33:23.340 --> 33:25.340
我们做一个20rpx

33:25.340 --> 33:27.340
然后align item

33:27.340 --> 33:29.340
依然是处于中心位置

33:29.340 --> 33:31.340
然后指示呢

33:31.340 --> 33:33.340
我们给它加一个

33:33.340 --> 33:35.340
button

33:35.340 --> 33:37.340
我们做二rpx

33:37.340 --> 33:39.340
然后solid

33:39.340 --> 33:41.340
再给它一个f8

33:41.340 --> 33:43.340
现在我们再来看一下效果

33:43.340 --> 33:48.120
基本上这样的

33:48.120 --> 33:50.120
结构出来了对吧

33:50.120 --> 33:52.120
我们不求就是特漂亮

33:52.120 --> 33:54.120
这个至少来说

33:54.120 --> 33:56.120
我们看到有一个当前这样的一个

33:56.120 --> 33:58.120
能够很好的操作了

33:58.120 --> 34:00.120
能够进行往下拉

34:00.120 --> 34:02.120
并且这里面有显示出来了

34:02.120 --> 34:04.120
现在选择一项

34:04.120 --> 34:06.120
c也可以出来

34:06.120 --> 34:08.120
d1也可以出来对吧

34:08.120 --> 34:10.120
那么外乎还有两个操作

34:10.120 --> 34:12.120
第一个呢你选择当前某个城市

34:12.120 --> 34:14.120
把这个城市放在上面

34:14.120 --> 34:16.120
第二个对它点击以后

34:16.120 --> 34:18.120
除了出d以外

34:18.120 --> 34:20.120
你应该这个页面直接显示

34:20.120 --> 34:22.120
你不就是这样转啊

34:22.120 --> 34:24.120
我们直接显示

34:24.120 --> 34:26.120
因为你选下面的时候这样

34:26.120 --> 34:28.120
咬咬咬咬走的太多了

34:28.120 --> 34:30.120
我们直接跳转到那个上面去

34:30.120 --> 34:34.200
好显示d出来

34:34.200 --> 34:36.200
那我们先做

34:36.200 --> 34:38.200
第一步

34:38.200 --> 34:40.200
我们做第一步

34:40.200 --> 34:42.200
就是我们点击abz

34:42.200 --> 34:44.200
我们默认来修改一下

34:44.200 --> 34:48.600
这个字看一下

34:48.600 --> 34:50.600
保存你来看一下这个效果

34:50.600 --> 34:55.320
是不是现在安庆市

34:55.320 --> 34:57.320
是不是上面有好几项

34:57.320 --> 34:59.320
它先定位到这儿

34:59.320 --> 35:03.460
我们再往下走

35:03.460 --> 35:05.460
1000

35:05.460 --> 35:10.250
保存

35:10.250 --> 35:12.250
我们来看一下这个字

35:12.250 --> 35:14.250
是不是保山市

35:14.250 --> 35:16.250
它一直在往下走

35:16.250 --> 35:18.250
那就是说我们现在需要知道的是

35:18.250 --> 35:20.250
当我点击它以后

35:20.250 --> 35:22.250
是这个逻辑吧

35:22.250 --> 35:24.250
它往下走几格

35:24.250 --> 35:26.250
那么我们来说

35:26.250 --> 35:28.250
脑中咱们先过滤一下

35:28.250 --> 35:30.250
怎么去计算它往下走几个

35:30.250 --> 35:32.250
你脑中里没有这个逻辑吗

35:32.250 --> 35:34.250
并不是在这儿

35:34.250 --> 35:36.250
和这个高度的问题

35:36.250 --> 35:40.330
怎么去计算它的几个

35:40.330 --> 35:42.330
你是否还记得

35:42.330 --> 35:44.330
我们前面说过

35:44.330 --> 35:46.330
上面整个这个

35:46.330 --> 35:48.330
一个

35:48.330 --> 35:50.330
字母的它本身有个t

35:50.330 --> 35:52.330
t height

35:52.330 --> 35:54.330
跟b height两个值吗

35:54.330 --> 35:56.330
你可以想象出来吗

35:56.330 --> 35:58.330
点击任何一个按钮的时候的话

35:58.330 --> 36:00.330
是不是我可以计算出它

36:00.330 --> 36:02.330
离上面字母差几个

36:02.330 --> 36:04.330
那么此时我就可以定位到这个位置

36:04.330 --> 36:06.330
有没有这样一个概念

36:06.330 --> 36:08.330
ok

36:08.330 --> 36:10.330
那么先提示一下啊

36:10.330 --> 36:12.330
那么待会我们会写的

36:12.330 --> 36:14.330
如果有兴趣同学

36:14.330 --> 36:16.330
你过快的同学

36:16.330 --> 36:18.330
你可以先思考起来了

36:18.330 --> 36:20.330
你这样一个按钮的时候

36:20.330 --> 36:22.330
当我点击任何一个

36:22.330 --> 36:24.330
在我字母上面的时候

36:24.330 --> 36:26.330
我们依然回到我们现在的代码中

36:26.330 --> 36:28.330
那个文件呢始终在

36:28.330 --> 36:30.330
但是我们一直没往里面去写

36:30.330 --> 36:32.330
我们去到我们现在的

36:32.330 --> 36:34.330
这个

36:34.330 --> 36:36.330
search star

36:36.330 --> 36:38.330
进去

36:38.330 --> 36:40.330
进去以后是不是这有一个

36:40.330 --> 36:42.330
设置滚动操作

36:42.330 --> 36:44.330
set score top

36:44.330 --> 36:46.330
是不是这儿

36:46.330 --> 36:48.330
现在开始到写的时候了

36:48.330 --> 36:50.330
当我点击

36:50.330 --> 36:52.330
上面一个按钮的时候

36:52.330 --> 36:54.330
也就是abcd任何一个操作的时候

36:54.330 --> 36:56.330
它一定要传给我

36:56.330 --> 36:58.330
两个参数

36:58.330 --> 37:00.330
第一个所有的字母

37:00.330 --> 37:02.330
所有的字母在这

37:02.330 --> 37:04.330
第二个这个disk对象

37:04.330 --> 37:06.330
你可以这边拿这个disk对象

37:06.330 --> 37:08.330
然后呢

37:08.330 --> 37:10.330
这边我们取名叫that

37:10.330 --> 37:12.330
这样是可以的

37:12.330 --> 37:14.330
第二呢我们先把show little

37:14.330 --> 37:16.330
接下来所有的字母

37:16.330 --> 37:18.330
好了我们开始做这一块

37:18.330 --> 37:20.330
这一块呢也是比较重要的一块啊

37:20.330 --> 37:22.330
首先

37:22.330 --> 37:27.880
我们订一个变量

37:27.880 --> 37:29.880
top等于0

37:29.880 --> 37:31.880
第二个来

37:31.880 --> 37:33.880
city

37:33.880 --> 37:38.090
lister

37:38.090 --> 37:40.090
我们定义that点

37:40.090 --> 37:42.090
citylister

37:42.090 --> 37:44.090
用这样的结构也可以

37:44.090 --> 37:46.090
我把它理解成

37:46.090 --> 37:48.090
整个scolar 2

37:48.090 --> 37:50.090
它里面的所有操作

37:50.090 --> 37:52.090
就把它自认为是个封装

37:52.090 --> 37:54.090
所以它对外部的调用来讲

37:54.090 --> 37:56.090
我们都可以用外部

37:56.090 --> 37:58.090
传入disk对象

37:58.090 --> 38:00.090
内部用that的一个行参来接

38:00.090 --> 38:02.090
然后完成你现在

38:02.090 --> 38:04.090
外部的这个citylister的调用

38:04.090 --> 38:06.090
这个结构

38:06.090 --> 38:08.090
依然是可行的

38:08.090 --> 38:10.090
然后我们紧接着往下

38:10.090 --> 38:12.090
我们在这边的时候呢

38:12.090 --> 38:14.090
接到两个值

38:14.090 --> 38:16.090
再来city

38:16.090 --> 38:18.090
你看着我写一下啊

38:18.090 --> 38:20.090
count

38:20.090 --> 38:22.090
设定为0

38:22.090 --> 38:27.260
再来一个

38:27.260 --> 38:29.260
initr count

38:29.260 --> 38:31.260
我们设定为0

38:31.260 --> 38:34.890
这个也可以

38:34.890 --> 38:36.890
好了

38:36.890 --> 38:38.890
我们把几个初始值

38:38.890 --> 38:40.890
设定好以后的话

38:40.890 --> 38:46.820
我们开始做0

38:46.820 --> 38:48.820
i小于

38:48.820 --> 38:50.820
citylister

38:50.820 --> 38:54.330
的长度

38:54.330 --> 38:59.050
再来加加

38:59.050 --> 39:01.050
if

39:01.050 --> 39:03.050
当前

39:03.050 --> 39:05.050
当前的showlittle

39:05.050 --> 39:07.050
点念

39:07.050 --> 39:09.050
这个showlittle是什么

39:09.050 --> 39:11.050
是你传进来的这个

39:11.050 --> 39:13.050
对吧 是我们这边传进来的

39:13.050 --> 39:15.050
那么这个传进来的是什么

39:15.050 --> 39:17.050
是你点击的那个

39:17.050 --> 39:19.050
对吧

39:19.050 --> 39:21.050
你现在点了一个a

39:21.050 --> 39:23.050
那么这个a的点念

39:23.050 --> 39:25.050
就出现了这个a

39:25.050 --> 39:27.050
正好等于

39:27.050 --> 39:29.050
我循环lister

39:29.050 --> 39:31.050
注意啊 这地方不要去打disk

39:31.050 --> 39:33.050
因为本身这个citylister

39:33.050 --> 39:35.050
就是它自己里面

39:35.050 --> 39:37.050
你disk的话就不是它了

39:37.050 --> 39:39.050
你把它给成

39:39.050 --> 39:41.050
citylister

39:41.050 --> 39:43.050
它就是我们现在的外部拿进来的

39:43.050 --> 39:45.050
整个这个

39:45.050 --> 39:47.050
字幕表或者说分组的列表

39:47.050 --> 39:49.050
我们通过它的i

39:49.050 --> 39:51.050
拿到了它的initr

39:51.050 --> 39:53.050
和它的initr正好

39:53.050 --> 39:55.050
相等的话

39:55.050 --> 39:57.050
代表的是你现在

39:57.050 --> 39:59.050
要查看的是b

39:59.050 --> 40:01.050
那么它里面找到了和它b一样

40:01.050 --> 40:04.940
那怎么办呢

40:04.940 --> 40:06.940
那么就要做一个事

40:06.940 --> 40:08.940
你来看我现在

40:08.940 --> 40:13.210
往下滚动多少

40:13.210 --> 40:15.210
就是这个top去设定一下

40:15.210 --> 40:17.210
我们做的是initr count

40:17.210 --> 40:19.210
去乘以

40:19.210 --> 40:21.210
30

40:21.210 --> 40:23.210
加上city count

40:23.210 --> 40:25.210
去乘以

40:25.210 --> 40:29.030
这样的

40:29.030 --> 40:31.030
然后

40:31.030 --> 40:33.030
break 直接终止掉它

40:33.030 --> 40:35.030
如果现在

40:35.030 --> 40:37.030
比如说你现在选择的是

40:37.030 --> 40:39.030
c

40:39.030 --> 40:41.030
第一次循环的时候

40:41.030 --> 40:43.030
这次拿出来肯定是a嘛

40:43.030 --> 40:45.030
它肯定不等 那我们往下走

40:45.030 --> 40:47.030
这时候怎么办呢 很简单

40:47.030 --> 40:49.030
我们让里边的

40:49.030 --> 40:51.030
这个叫做initr count

40:51.030 --> 40:53.030
初始值

40:53.030 --> 40:55.030
让它自增

40:55.030 --> 40:57.030
然后呢

40:57.030 --> 41:01.560
再完成city count

41:01.560 --> 41:03.560
自增

41:03.560 --> 41:05.560
city count 也自增

41:05.560 --> 41:07.560
它自增的方式是

41:07.560 --> 41:09.560
city listr

41:09.560 --> 41:11.560
里面某一个i

41:11.560 --> 41:16.660
它的city info的长度

41:16.660 --> 41:18.660
好 你来看一下

41:18.660 --> 41:20.660
整个这个写法上

41:20.660 --> 41:22.660
循环过程中

41:22.660 --> 41:24.660
如果你现在

41:24.660 --> 41:26.660
能够有一个选中的值

41:26.660 --> 41:28.660
和我现在

41:28.660 --> 41:30.660
当前循环里面这个值

41:30.660 --> 41:34.550
在一样的情况下

41:34.550 --> 41:36.550
那我们就可以做后面这个了

41:36.550 --> 41:38.550
重要 那么我们

41:38.550 --> 41:40.550
再来看一下 我们现在的fg

41:40.550 --> 41:42.550
如果你当前选中的是

41:42.550 --> 41:44.550
比如说 选中是c

41:44.550 --> 41:46.550
那么现在这边

41:46.550 --> 41:48.550
过来的是a 不等

41:48.550 --> 41:50.550
那么初始化的这个值

41:50.550 --> 41:52.550
你得加加加一

41:52.550 --> 41:54.550
同时呢 我们的city count

41:54.550 --> 41:56.550
这个值 你也得往下加

41:56.550 --> 41:58.550
它是总高度

41:58.550 --> 42:00.550
整个数量

42:00.550 --> 42:02.550
那么它的方式是整个的高度

42:02.550 --> 42:04.550
加上去

42:04.550 --> 42:06.550
那么它里面呢 这是个简单算法

42:06.550 --> 42:08.550
那么如果是每一个

42:08.550 --> 42:10.550
30基本上 我们称之为

42:10.550 --> 42:12.550
基本上是你现在的

42:12.550 --> 42:14.550
一个字母的高度

42:14.550 --> 42:16.550
是这样一个字母的高度

42:16.550 --> 42:18.550
那么城市的高度呢

42:18.550 --> 42:20.550
就是我们说城市的数量

42:20.550 --> 42:22.550
那么乘以41

42:22.550 --> 42:24.550
那么我们现在给到的是

42:24.550 --> 42:26.550
41个城市

42:26.550 --> 42:28.550
所以这样的做法呢 就形成了

42:28.550 --> 42:30.550
我们可以有一个

42:30.550 --> 42:32.550
大高度的获取

42:32.550 --> 42:34.550
我们有个大高度

42:34.550 --> 42:36.550
如果说是 你看一下 你想一下

42:36.550 --> 42:38.550
我们现在如果是选c的话

42:38.550 --> 42:40.550
那么这边是a

42:40.550 --> 42:42.550
那么这边走了几次 走了两次

42:42.550 --> 42:44.550
所以它的确

42:44.550 --> 42:46.550
就是你看到我这边的

42:46.550 --> 42:48.550
1 2

42:48.550 --> 42:50.550
往下走两步

42:50.550 --> 42:52.550
每一个高度我们算

42:52.550 --> 42:54.550
默认是30的话

42:54.550 --> 42:56.550
我们不会说是特别精准

42:56.550 --> 42:58.550
然后呢 我们说

42:58.550 --> 43:00.550
这边是silicons

43:00.550 --> 43:02.550
它每次的话呢 都会去拿到

43:02.550 --> 43:04.550
当前这一项的

43:04.550 --> 43:06.550
长度 为什么叫当前这一项

43:06.550 --> 43:08.550
你来看

43:08.550 --> 43:10.550
因为我a这一项可能是

43:10.550 --> 43:12.550
10个 但是我b这一项

43:12.550 --> 43:14.550
可能是15个

43:14.550 --> 43:16.550
所以它要往上移的时候

43:16.550 --> 43:18.550
它不是简单

43:18.550 --> 43:20.550
大家都以10个

43:20.550 --> 43:22.550
你需要去告诉它

43:22.550 --> 43:24.550
b的长度多少

43:24.550 --> 43:26.550
b的长度多少 理解吧

43:26.550 --> 43:28.550
它需要有这个

43:28.550 --> 43:30.550
那么你是c的话

43:30.550 --> 43:32.550
你必须是把a的长度

43:32.550 --> 43:34.550
去加上c的长度

43:34.550 --> 43:36.550
理解吧 这是加等的概念

43:36.550 --> 43:38.550
那么这样的话

43:38.550 --> 43:40.550
我们再过去做操作

43:40.550 --> 43:42.550
这样的话呢 就得出了

43:42.550 --> 43:44.550
你最终想移的一个高度

43:44.550 --> 43:46.550
那么这个高度

43:46.550 --> 43:48.550
如果你已经设定好了

43:48.550 --> 43:50.550
那我们现在呢

43:50.550 --> 43:53.860
that点

43:53.860 --> 43:55.860
scolotop

43:55.860 --> 43:57.860
等于scolotop

43:57.860 --> 43:59.860
你可以这样去做

43:59.860 --> 44:01.860
好 我们再来看一下

44:01.860 --> 44:06.200
点一下 是不是

44:06.200 --> 44:08.200
地到这个位置了

44:08.200 --> 44:10.200
点一下 是不是到这了

44:10.200 --> 44:12.200
有了吧 这个出来了

44:12.200 --> 44:14.200
这个也变了

44:14.200 --> 44:16.200
你点b

44:16.200 --> 44:18.200
它是怎么算的 你还记得吗

44:18.200 --> 44:20.200
它拿a的长度

44:20.200 --> 44:22.200
情绪 同时

44:22.200 --> 44:24.200
去加上a的整个这个高度

44:24.200 --> 44:26.200
对吧

44:26.200 --> 44:28.200
那形成了我们现在所干的

44:28.200 --> 44:30.200
这个高度干嘛用的

44:30.200 --> 44:32.200
其实就是它现在

44:32.200 --> 44:34.200
你点击那按钮的

44:34.200 --> 44:36.200
整个这个a的这个位置

44:36.200 --> 44:38.200
这个a加上整个这个长度

44:38.200 --> 44:40.200
这个b加上整个这个长度

44:40.200 --> 44:42.200
它用这样的方式 简单的看到

44:42.200 --> 44:44.200
那么再接下去呢

44:44.200 --> 44:46.200
我们做一个事情

44:46.200 --> 44:48.200
你点击当前的

44:48.200 --> 44:50.200
某一个 比如说贵扬市

44:50.200 --> 44:52.200
把贵扬市呈现出来

44:52.200 --> 44:54.200
对吧 我们做一个这个动作

44:54.200 --> 44:56.200
我要制作一个点击的

44:56.200 --> 44:58.200
按钮的话 我们就在

44:58.200 --> 45:00.200
当前的这个DIV上

45:00.200 --> 45:02.200
因为在每一个

45:02.200 --> 45:04.200
那个城市所显示的位置嘛

45:04.200 --> 45:06.200
我们在这边写上

45:06.200 --> 45:08.200
add click

45:08.200 --> 45:10.200
然后称之为

45:10.200 --> 45:12.200
city show

45:12.200 --> 45:14.200
我们做一个city show

45:14.200 --> 45:16.200
它需要传直

45:16.200 --> 45:18.200
我们所以给一个叫做

45:18.200 --> 45:20.200
city show

45:20.200 --> 45:22.200
我们称之为

45:22.200 --> 45:24.200
city把下面的这个city

45:24.200 --> 45:26.200
全部复制上来

45:26.200 --> 45:28.200
因为它呈现的也是属于

45:28.200 --> 45:30.200
当前的这个

45:30.200 --> 45:32.200
我们的城市名称

45:32.200 --> 45:34.200
写法依然是

45:34.200 --> 45:36.200
自己定一个city name

45:36.200 --> 45:39.580
然后完成city show

45:39.580 --> 45:52.550
的一个方法的定义

45:52.550 --> 45:58.420
city show

45:58.420 --> 46:00.420
我们说注释一下

46:00.420 --> 46:02.420
它叫做选择

46:02.420 --> 46:06.380
城市

46:06.380 --> 46:08.380
那么我们要做的是

46:08.380 --> 46:10.380
它上面我们已经定义过一个city

46:10.380 --> 46:12.380
所以我们把这个city定义到data

46:12.380 --> 46:15.690
里面来对吧

46:15.690 --> 46:17.690
默认给它一个空

46:17.690 --> 46:19.690
然后在这里

46:19.690 --> 46:21.690
我们说this.city

46:21.690 --> 46:23.690
等于我们从这边

46:23.690 --> 46:25.690
拿着

46:25.690 --> 46:27.690
我们从下面其实可以看到

46:27.690 --> 46:29.690
人家拿的时候呢

46:29.690 --> 46:31.690
就是按照这个结构

46:31.690 --> 46:33.690
所以呢 我也就是这个结构

46:33.690 --> 46:35.690
我只是把后面的这个改掉

46:35.690 --> 46:37.690
对吧

46:37.690 --> 46:39.690
我后面的这个是我上面

46:39.690 --> 46:41.690
存的data后面的内穿东西

46:41.690 --> 46:45.260
叫做city name

46:45.260 --> 46:47.260
我们在这边把那个city name 给加上

46:47.260 --> 46:49.260
好 就看一下效果了

46:49.260 --> 46:54.940
安静式

46:54.940 --> 46:56.940
对吧 出来了

46:56.940 --> 46:58.940
随便选哪里

46:58.940 --> 47:00.940
可以切换

47:00.940 --> 47:02.940
当前选择是青岛式

47:02.940 --> 47:04.940
对吧 我现在可以这样切换了

47:04.940 --> 47:06.940
是不是这个功能就做好了

47:06.940 --> 47:08.940
那么整个这功能相对而言呢

47:08.940 --> 47:10.940
界面布局

47:10.940 --> 47:12.940
到真的还可以啊

47:12.940 --> 47:14.940
不是说没有复杂度

47:14.940 --> 47:16.940
只是简单的一个布局

47:16.940 --> 47:18.940
只是这个数据

47:18.940 --> 47:20.940
怎么去拿出来

47:20.940 --> 47:22.940
包括怎么样能够选择

47:22.940 --> 47:24.940
这套的一个小案例呢

47:24.940 --> 47:26.940
它重点讲解的是这里边的一个结构

47:26.940 --> 47:28.940
包括是它的一个小硬算

47:28.940 --> 47:30.940
这里面会比较复杂一点

47:30.940 --> 47:32.940
那么这给大家呢

47:32.940 --> 47:34.940
也是除界面以外

47:34.940 --> 47:36.940
更多的做一些数据上的了解和

47:36.940 --> 47:38.940
一些算法上面结构化的

47:38.940 --> 47:40.940
一个操作

47:40.940 --> 47:42.940
希望大家呢能够拿着这代码

47:42.940 --> 47:44.940
好好地去研究一下看一下

47:44.940 --> 47:46.940
行 那么这个案例呢

47:46.940 --> 47:48.940
我们就先讲到这儿

