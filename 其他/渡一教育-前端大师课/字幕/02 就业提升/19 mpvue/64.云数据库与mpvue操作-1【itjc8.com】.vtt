WEBVTT

00:00.050 --> 00:03.850
好 我们继续讲解一下NPV的一个功能

00:03.850 --> 00:06.650
特别是针对于云开发的

00:06.650 --> 00:08.750
那么小程序的云开发呢

00:08.750 --> 00:12.450
方便于我们光使用前台后台数据没有

00:12.450 --> 00:14.050
这样的一个总净

00:14.050 --> 00:18.850
那么现在呢云端呢可以非常简单的帮我们进行数据的存储

00:18.850 --> 00:22.450
比如说你有一些图片可以先存在云端

00:22.450 --> 00:27.050
第二呢我们讲小程序本身自己可以带一些数据

00:27.050 --> 00:29.650
那么以前呢要不就是我们造尾数据

00:29.650 --> 00:33.550
要不就是我们通过第三方接口把数据下载下来

00:33.550 --> 00:37.650
但是呢我们本身的这些数据如果是你自行开发的

00:37.650 --> 00:40.050
那其实很难去作为一个存储

00:40.050 --> 00:43.850
因为呢我们不但是自己要去做一个服务器啊

00:43.850 --> 00:46.050
并且存储数据服务器

00:46.050 --> 00:51.250
那么这也要耗费掉你现在的一些服务器端的一些开发能力

00:51.250 --> 00:55.650
所以呢我们现在的微信呢开发出了一个云端接口

00:55.650 --> 01:00.450
它可以帮助我们来实现数据的获取和存储

01:00.450 --> 01:02.750
那么云端的数据库呢

01:02.750 --> 01:05.850
那么在之前的案例中呢说到过一点点

01:05.850 --> 01:07.650
但是呢没有很全

01:07.650 --> 01:08.650
所以呢这些课呢

01:08.650 --> 01:12.050
我们把云端的数据库的操作给大家都讲一下

01:12.050 --> 01:14.250
云端的数据库呢首先第一点

01:14.250 --> 01:15.750
你要开发云端的话呢

01:15.750 --> 01:18.150
一定要去申请一个VVID

01:18.150 --> 01:21.950
因为只有真实的VVID才可以入云啊

01:21.950 --> 01:23.550
如果你用测试号的话

01:23.550 --> 01:26.550
那么肯定是没有办法进行这部分操作的

01:26.550 --> 01:32.950
第二呢云端呢除了简单的有云含数存储和数据库以外呢

01:32.950 --> 01:35.550
它本身呢也可以有一定的分析啊

01:35.550 --> 01:37.250
你本身这上面还能看到啊

01:37.250 --> 01:39.550
什么时间做了什么有多少访问

01:39.550 --> 01:40.950
那么我们由于现在呢

01:40.950 --> 01:44.550
利用了一个啊免费的或者称之为啊

01:44.550 --> 01:47.750
微信提供给我们能够自由使用的

01:47.750 --> 01:51.550
那么呢比如说数据库容量是两G容量啊

01:51.550 --> 01:55.950
每天请求的次数是5万字顶峰是个法指

01:55.950 --> 02:00.550
然后呢那个存储容量呢我们说是5G的

02:00.550 --> 02:01.950
然后本月的CDN啊

02:01.950 --> 02:04.550
这个是一个快速的流量

02:04.550 --> 02:06.750
那么我们讲我们没有

02:06.750 --> 02:08.550
然后呢后面这个也没用

02:08.550 --> 02:11.750
所以呢这个只要是你现在或者公司本身

02:11.750 --> 02:14.550
不是特别多业务在小程序上的话呢

02:14.550 --> 02:16.950
那么云空间是足够的啊

02:16.950 --> 02:20.050
当然你如果想更多的向外进行啊

02:20.150 --> 02:23.050
一些拓展的话也可以进行购买啊

02:23.050 --> 02:26.050
这个包括是用户你有多少用户在访问

02:26.050 --> 02:29.750
这上面其实这边也能看到以及监控啊

02:29.750 --> 02:32.750
这上面到底是啊各种监控数据

02:32.750 --> 02:34.050
那么也可以看到

02:34.050 --> 02:38.850
所以云端的控制台不单是简单的一个数据存储

02:38.850 --> 02:42.450
他其实还有一些数据统计和分析的功能

02:42.450 --> 02:46.250
所以呢他称之为叫运营分析的这样的一个入口

02:46.250 --> 02:48.050
那么这些课呢主要给大家呢

02:48.050 --> 02:51.450
并不是说这一部分而是完成数据库的概念

02:51.450 --> 02:53.850
在之前原生时候呢我们介绍过

02:53.850 --> 02:55.950
那么这边呢如果同学们有点忘的话

02:55.950 --> 02:57.950
我做一个简单的复习

02:57.950 --> 03:01.350
数据库的存储其实对于云端来讲

03:01.350 --> 03:04.350
他并非是真正意义上的一个

03:04.350 --> 03:07.550
所谓的啊比如说我外面用到的任何数据库

03:07.550 --> 03:10.450
包括是什么微软的6 server or oracle啊

03:10.450 --> 03:12.550
包括是那个其他的一些

03:12.550 --> 03:16.450
他其实呢是一个数据集合的存储地

03:16.450 --> 03:19.950
所以呢我们看到这边有个名词叫做集合

03:19.950 --> 03:22.950
这个名词呢代表着这里面的所有数据啊

03:22.950 --> 03:27.450
他都是以一种对象的形式在进行存储

03:27.450 --> 03:29.350
那么对象放在一起

03:29.350 --> 03:32.750
那么形成了现在的一个数据库的结构

03:32.750 --> 03:34.850
当然我们没有办法说

03:34.850 --> 03:39.550
一个数据库里面必非得是一种数据结构

03:39.550 --> 03:42.550
也就是说我们平时所谓的表

03:42.550 --> 03:44.950
一般性我们以前的表的话呢

03:44.950 --> 03:46.550
如果是关系型的话

03:46.550 --> 03:49.350
一定是所谓的需要有一个列

03:49.350 --> 03:51.850
它是属于什么类型的对吧

03:51.850 --> 03:55.450
布尔类型啊日期类型啊数值类型啊

03:55.450 --> 03:57.950
那么你只能存储这种类型的数据

03:57.950 --> 04:00.550
但对于我们现在的这个集合来讲

04:00.550 --> 04:05.450
其实他更多的是像我们的一些非关系型数据库

04:05.450 --> 04:07.150
比如说mongo dv啊

04:07.150 --> 04:09.950
那么在这种情况下呢

04:09.950 --> 04:11.850
他本身就可以做到一点

04:11.850 --> 04:18.450
就是每一个对象里面的数据可以不一样

04:18.450 --> 04:20.450
我们说了可以不一样

04:20.450 --> 04:22.550
那么你在获取数据的时候呢

04:22.550 --> 04:24.950
其实你可以根据自己的情况

04:24.950 --> 04:28.750
不断的往这个对象中增加或者减少数据

04:28.750 --> 04:30.450
使我们的整个页面呢

04:30.450 --> 04:31.950
或者我们的数据呢

04:31.950 --> 04:34.250
能够非常的丰满啊

04:34.250 --> 04:35.250
是这个逻辑

04:35.250 --> 04:36.250
但是同时呢

04:36.250 --> 04:40.450
他也可以做到两表之间的数据关联啊

04:40.450 --> 04:42.650
查长这种也可以

04:42.650 --> 04:45.950
所以讲我们的云端的数据库呢

04:45.950 --> 04:47.350
我们暂时称之为数据库

04:47.350 --> 04:49.750
他应该称为数据库集合

04:49.750 --> 04:52.150
应该讲是非常的灵活的

04:52.150 --> 04:54.350
那么首先我们在这个数据库里面

04:54.350 --> 04:55.750
我们能看到的是

04:55.750 --> 04:57.750
这边是我之前新建的一些啊

04:57.750 --> 04:59.050
随便名称啊

04:59.050 --> 05:00.150
包括是收集啊

05:00.150 --> 05:02.150
包括是数据库123呢

05:02.150 --> 05:03.750
那么随便点开一个以后

05:03.750 --> 05:05.950
你会发现比如说像这个

05:05.950 --> 05:06.750
点开以后的话

05:06.750 --> 05:09.050
你会发现这里面就是他的记录

05:09.050 --> 05:11.150
我们也称之为是对象

05:11.150 --> 05:13.950
每一个自动会生成一个下纲ID

05:13.950 --> 05:15.950
作为他的唯一标识服务

05:15.950 --> 05:17.150
然后后面这个呢

05:17.150 --> 05:21.250
是他现在所能看到的一个我们的数据啊

05:21.250 --> 05:22.250
数据里面呢

05:22.250 --> 05:23.550
那么说一下

05:23.550 --> 05:25.950
这个是自动生成的

05:25.950 --> 05:27.850
那么你后面还有几项

05:27.850 --> 05:30.050
后面的这个年跟微信呢

05:30.050 --> 05:31.950
其实这是我们

05:31.950 --> 05:34.050
通过我们的程序也好

05:34.050 --> 05:35.450
或者说是通过

05:35.450 --> 05:36.450
添加记录也好

05:36.450 --> 05:38.350
自行添加的

05:38.350 --> 05:41.150
但是在这个上面有一个OpenID

05:41.150 --> 05:42.150
这个ID呢

05:42.150 --> 05:43.750
是我们程序

05:43.750 --> 05:47.650
通过你现在的一个Add命令

05:47.650 --> 05:48.950
创建的时候

05:48.950 --> 05:50.450
给你自动添加的

05:50.450 --> 05:51.550
什么意思

05:51.550 --> 05:53.950
如果你现在是通过这里

05:53.950 --> 05:55.850
比如说我们news新闻

05:55.850 --> 05:56.650
咱们看

05:56.650 --> 05:58.050
这篇

05:58.050 --> 06:00.350
这篇里面是不是没有那个

06:00.350 --> 06:01.450
OpenID

06:01.450 --> 06:02.250
那么意味着

06:02.250 --> 06:05.650
他是通过我自己这边添加记录的方式

06:05.650 --> 06:08.150
手工的往里加进来的

06:08.150 --> 06:09.450
手工加入的时候呢

06:09.450 --> 06:11.550
他是不会有OpenID的

06:11.550 --> 06:12.950
那么这种时候

06:12.950 --> 06:15.550
我们如果在读取记录的时候

06:15.550 --> 06:17.150
就要非常小心了

06:17.150 --> 06:20.050
因为本身的集合

06:20.050 --> 06:21.850
会有一个最大的点

06:21.850 --> 06:24.350
就是我们不会去区分

06:24.350 --> 06:25.850
这是谁是谁

06:25.850 --> 06:27.050
一个客户端

06:27.050 --> 06:30.350
我们大家分发给各个人使用

06:30.350 --> 06:32.750
比如说就两个人张三和李四吧

06:32.750 --> 06:36.650
他们两个人各自在他的手机上面进行操作

06:36.650 --> 06:42.050
那么他们所针对的我的云开发的环境是一个

06:42.050 --> 06:43.550
那么这种时候

06:43.550 --> 06:44.750
为了区分

06:44.750 --> 06:48.150
哪些记录是张三哪些记录是李四的话

06:48.150 --> 06:49.750
我们要做的事情是

06:49.750 --> 06:53.950
我们会通过这个叫做OpenID的方式来区分

06:53.950 --> 06:55.250
而并非

06:55.250 --> 06:56.550
我们以前比如说

06:56.550 --> 06:58.750
Oracle的话各自是各自的

06:58.750 --> 07:02.150
然后如果说是关心数据库的话

07:02.150 --> 07:03.850
那你还得去区分

07:03.850 --> 07:05.850
是他的一个比如说

07:05.850 --> 07:09.350
Open那个叫做个人的账号ID

07:09.350 --> 07:09.850
对不对

07:09.850 --> 07:12.050
我们应该在表中有一个个人账号ID

07:12.050 --> 07:14.350
那么根据这ID来区分谁是谁

07:14.350 --> 07:15.350
那么这边一样

07:15.350 --> 07:17.650
如果你现在没有这个OpenID

07:17.650 --> 07:19.950
意味着你手工添加的时候

07:19.950 --> 07:21.650
那么这边有个全线设置

07:21.650 --> 07:22.750
待会来讲

07:22.750 --> 07:26.950
全线设置是要求我们根据不同的全线

07:26.950 --> 07:30.850
能够访问哪些数据的一些配置

07:30.850 --> 07:32.450
我们通过我们的

07:32.450 --> 07:33.250
先回来

07:33.250 --> 07:35.050
通过我们的设置以后

07:35.050 --> 07:36.450
这里面就有数据了

07:36.450 --> 07:37.450
这些数据呢

07:37.450 --> 07:39.150
我们可以进行修改在这

07:39.150 --> 07:39.950
比如说小石头

07:39.950 --> 07:41.950
你可以在这直接把它给改了

07:41.950 --> 07:43.550
把他数据类型也改了

07:43.550 --> 07:45.550
但是在整个这个过程中呢

07:45.550 --> 07:47.050
你会发现一点啊

07:47.050 --> 07:49.750
就是所有的数据

07:49.750 --> 07:51.550
本身在存储时候

07:51.550 --> 07:54.550
他都是一个对象格式

07:54.550 --> 07:55.150
ok

07:55.150 --> 07:55.950
这一点

07:55.950 --> 07:56.750
这个呢

07:56.750 --> 07:57.350
我们看到

07:57.350 --> 08:00.650
这后面都会有一个所谓的修改和删除

08:00.650 --> 08:01.950
但这个是没有的

08:01.950 --> 08:02.950
这个ID

08:02.950 --> 08:05.850
是无法进行所谓的自行修改的

08:05.850 --> 08:06.450
这点

08:06.450 --> 08:08.450
如果大家学过我们的自增ID

08:08.450 --> 08:09.750
那个概念的话

08:09.750 --> 08:11.650
其实逻辑上是一样的

08:11.650 --> 08:12.650
我们也可以导入导出

08:12.650 --> 08:14.050
这就不说了啊

08:14.050 --> 08:14.850
那么同时呢

08:14.850 --> 08:18.550
我们可以对他进行更多的一些啊

08:18.550 --> 08:20.150
建立不同的集合

08:20.150 --> 08:23.150
你可以采取不同的ID的关联

08:23.150 --> 08:23.350
好

08:23.350 --> 08:24.850
刚才说到了这个全线

08:24.850 --> 08:26.250
我们来看一下

08:26.250 --> 08:26.850
全线里面

08:26.850 --> 08:29.250
系统给到了我们任何一个集合

08:29.250 --> 08:30.950
不同的全线配置

08:30.950 --> 08:31.950
比如说

08:31.950 --> 08:35.050
有一个比如说所有用户不可读写

08:35.050 --> 08:36.250
这个表的话呢

08:36.250 --> 08:37.550
就是被封装了

08:37.550 --> 08:39.850
或者说被隐藏了

08:39.850 --> 08:42.350
你没法对他进行任何的操作了

08:42.350 --> 08:43.350
那么比如说啊

08:43.350 --> 08:44.850
我们在某一个时刻

08:44.850 --> 08:46.350
我们想统计一下

08:46.350 --> 08:47.150
今天呢

08:47.150 --> 08:48.850
网站进行维护啊

08:48.850 --> 08:49.550
这时候的话

08:49.550 --> 08:50.550
我们关闭网站

08:50.550 --> 08:52.450
关闭我们的小程序

08:52.450 --> 08:55.250
这时候我们的数据是不可读写的啊

08:55.250 --> 08:56.050
第二种情况

08:56.050 --> 08:58.050
所有用户可读写

08:58.050 --> 08:58.950
这种时候呢

08:58.950 --> 09:02.350
其实是不区分OpenID的

09:02.350 --> 09:03.150
比如说

09:03.150 --> 09:04.350
张三创掉一条

09:04.350 --> 09:06.550
装张三创建的一条记录

09:06.550 --> 09:08.150
李斯可以修改

09:08.150 --> 09:08.950
这种叫做

09:08.950 --> 09:10.850
所有用户可读写

09:10.850 --> 09:11.750
默认状态下

09:11.750 --> 09:12.650
是在这叫

09:12.650 --> 09:15.650
仅创建者可读写

09:15.650 --> 09:17.150
仅创建者

09:17.150 --> 09:18.350
那么也就意味着

09:18.350 --> 09:20.350
你在读取数据的时候

09:20.350 --> 09:21.750
你只能读取

09:21.750 --> 09:25.750
带有你个人标识的那个OpenID的数据

09:25.750 --> 09:26.550
理解吧

09:26.550 --> 09:28.050
是这个逻辑

09:28.050 --> 09:29.150
那么你的写

09:29.150 --> 09:32.650
你也只能写入OpenID的这个逻辑

09:32.650 --> 09:33.150
这个写

09:33.150 --> 09:34.050
其实有两种

09:34.050 --> 09:35.250
一种是增加

09:35.250 --> 09:36.950
一种是修改

09:36.950 --> 09:38.250
那么还有一种

09:38.250 --> 09:38.850
这种呢

09:38.850 --> 09:40.250
应该说比较常用

09:40.250 --> 09:40.950
就是什么呢

09:40.950 --> 09:44.350
就是你可以去读取到其他人的数据

09:44.350 --> 09:47.350
但是你只能改自己的

09:47.350 --> 09:48.550
我们想一下

09:48.550 --> 09:50.250
基本上有些论坛

09:50.250 --> 09:52.750
就是以这种逻辑在错处理

09:52.750 --> 09:54.350
谁发布的内容

09:54.350 --> 09:55.950
我们大家都能读取到

09:55.950 --> 09:56.950
但是呢

09:56.950 --> 09:58.150
我们不可以说

09:58.150 --> 09:59.650
我修改别的内容

09:59.650 --> 10:01.150
你可以回贴

10:01.150 --> 10:01.850
回贴内容

10:01.850 --> 10:03.250
你可以自行修改

10:03.250 --> 10:04.150
那么但是呢

10:04.150 --> 10:05.750
你也可以删除

10:05.750 --> 10:06.750
但是你不能说

10:06.750 --> 10:08.350
我把别人的给删了

10:08.350 --> 10:09.350
对吧

10:09.350 --> 10:09.950
好

10:09.950 --> 10:11.150
这就是我们说

10:11.150 --> 10:16.950
你针对当前这个集合里的数据的全线配置

10:16.950 --> 10:18.450
根据你现在的

10:18.450 --> 10:21.150
当然不需要大家所有的数据都用这个

10:21.150 --> 10:22.350
如果用大的话

10:22.350 --> 10:23.750
那是出问题了

10:23.750 --> 10:24.850
但如果你只用的

10:24.850 --> 10:26.250
仅开发着读写的话

10:26.250 --> 10:28.650
会有一个测试上的难点

10:28.650 --> 10:29.750
就是如果说

10:29.750 --> 10:32.550
我现在只想做我的数据查询

10:32.550 --> 10:34.750
在这边我自行写入点数据

10:34.750 --> 10:36.450
那么由于他没有OpenID

10:36.450 --> 10:38.950
所以你这时候这个是读不到的

10:38.950 --> 10:41.950
所以我们一般都会去选择最上面这个

10:41.950 --> 10:44.650
我们说所有数据测试时候呢

10:44.650 --> 10:46.950
你也可以说所有读据可读写

10:46.950 --> 10:47.850
然后这边的话呢

10:47.850 --> 10:48.950
你也可以选择这个

10:48.950 --> 10:50.350
这是测试时使用的

10:50.350 --> 10:51.150
ok

10:51.150 --> 10:53.750
云开发的简单介绍在这

10:53.750 --> 10:56.250
特别是云开发的数据库里面这一块

10:56.250 --> 10:57.650
后面两个咱们还没讲

10:57.650 --> 10:59.350
那么我们今天就把人数据库

10:59.350 --> 11:01.450
对于数据库的操作来讲

11:01.450 --> 11:05.050
其实他主要分为的就是那几步

11:05.050 --> 11:10.450
首先我们打开云端的那个微信的官方文打

11:10.450 --> 11:12.650
对云开发里面来讲的话呢

11:12.650 --> 11:14.650
他主要的有几个操作

11:14.650 --> 11:15.650
第一个

11:15.650 --> 11:17.650
我们针对数据库的查看

11:17.650 --> 11:18.450
数据库呢

11:18.450 --> 11:19.650
他有表行力啊

11:19.650 --> 11:20.450
这个我们不说了

11:20.450 --> 11:22.850
刚才说过其实都是集合

11:22.950 --> 11:24.350
集合里面是这种数据啊

11:24.350 --> 11:24.750
对吧

11:24.750 --> 11:26.650
都是属于对象啊

11:26.650 --> 11:27.850
数组概念

11:27.850 --> 11:29.550
然后我们往下开发指引

11:29.550 --> 11:31.150
在开发指引里面的话呢

11:31.150 --> 11:32.950
我们可以通过这来看

11:32.950 --> 11:33.750
首先

11:33.750 --> 11:35.450
数据库本身自己的话呢

11:35.450 --> 11:36.250
数据类型

11:36.250 --> 11:37.950
这边的话有很多类型啊

11:37.950 --> 11:39.650
注意下有些是时间

11:39.650 --> 11:40.850
有些是地理位置

11:40.850 --> 11:42.250
他给的是一个坐标啊

11:42.250 --> 11:43.050
这些

11:43.050 --> 11:43.950
那么我们今天呢

11:43.950 --> 11:45.250
要开始从这开始

11:45.250 --> 11:47.550
我们sdk的增三改查

11:47.550 --> 11:49.350
增三改查这个操作

11:49.350 --> 11:51.050
我们主要的要完成

11:51.050 --> 11:53.650
怎么样利用npview的方式

11:53.650 --> 11:56.850
完成增三改查的四大操作

11:56.850 --> 11:58.250
这也是我们数据库的

11:58.250 --> 12:01.850
主要的c u r d的格式垮

12:01.850 --> 12:02.650
我们看到

12:02.650 --> 12:04.250
现在在整个里边

12:04.250 --> 12:06.150
他需要做几件事情

12:06.150 --> 12:08.150
如果你还记得原生开发的话

12:08.150 --> 12:09.550
你要回忆一下

12:09.550 --> 12:10.650
数据库的操作

12:10.650 --> 12:14.050
一定会去使用微信的clouder这个操作

12:14.050 --> 12:16.950
然后完成你现在的一个对象

12:16.950 --> 12:19.650
数据库db对象的呃内获取

12:19.650 --> 12:20.650
那么同时呢

12:20.650 --> 12:21.450
如果说

12:21.450 --> 12:23.950
你现在已经设定了一个env

12:23.950 --> 12:25.550
也就是我们的environment

12:25.550 --> 12:26.350
环境

12:26.350 --> 12:28.350
你要把环境的编号写在这

12:28.350 --> 12:29.550
合为环境

12:29.550 --> 12:31.350
那么我们再打开云端的

12:31.350 --> 12:32.750
这个结构来看

12:32.750 --> 12:33.850
我每次

12:33.850 --> 12:35.550
因为我这边已经新建过了

12:35.550 --> 12:36.050
所以呢

12:36.050 --> 12:36.750
对大家来讲

12:36.750 --> 12:38.750
直接进来能看到这样的一个界面

12:38.750 --> 12:40.250
如果你是第一次打开的时候

12:40.250 --> 12:41.250
他需要你

12:41.250 --> 12:42.750
添加一个环境

12:42.750 --> 12:44.950
环境其实就是中间有个按钮点一下

12:44.950 --> 12:46.150
开通就可以了

12:46.150 --> 12:47.350
他不需要你配置

12:47.350 --> 12:48.950
只要有个按钮点一下

12:48.950 --> 12:50.150
环境开通以后的话

12:50.150 --> 12:51.550
你在设置里面

12:51.550 --> 12:52.950
咱们这边就能看到

12:52.950 --> 12:55.050
这边有一个叫环境id

12:55.050 --> 12:57.150
那么环境的操作好处呢

12:57.150 --> 12:59.850
是我们的呃开发过程中

12:59.850 --> 13:02.450
我们可以配置两个

13:02.450 --> 13:04.050
一个正式环境

13:04.050 --> 13:05.750
一个测试环境

13:05.750 --> 13:07.550
那么我们的正式和测试

13:07.550 --> 13:10.250
在数据结构上面和数据的

13:10.250 --> 13:12.050
呃那个集合上面

13:12.050 --> 13:13.850
集合上面都是保持一致的

13:13.850 --> 13:15.450
那么在这种情况下呢

13:15.450 --> 13:16.850
我们就很容易

13:16.850 --> 13:17.850
再采取的是

13:17.850 --> 13:19.050
测试完成以后

13:19.150 --> 13:21.450
直接切换我们的正式

13:21.450 --> 13:22.750
它就不会有问题

13:22.750 --> 13:24.050
一般会这种

13:24.050 --> 13:24.550
好了

13:24.550 --> 13:25.650
那么由于我们现在呢

13:25.650 --> 13:26.750
不需要有正式测试

13:26.750 --> 13:27.550
我们只要一个

13:27.550 --> 13:29.950
那么我们只需要把这个拿下来

13:29.950 --> 13:32.150
这个是你现在系统在深沉

13:32.150 --> 13:33.450
一个环境的时候

13:33.450 --> 13:35.050
它自动给你完成的

13:35.050 --> 13:36.850
当前的这样的一个

13:36.850 --> 13:37.550
ok吧

13:37.550 --> 13:38.650
自动给你完成的

13:38.650 --> 13:40.850
那我们很好的解决办法就是

13:40.850 --> 13:43.350
我们把这个内容给它复制下来

13:43.350 --> 13:43.950
之后呢

13:43.950 --> 13:46.850
我们放到程序的这个位置来

13:46.850 --> 13:48.050
env来

13:48.050 --> 13:49.750
那么我们如果不给的话

13:49.750 --> 13:52.650
它默认只会取当前默认的一个

13:52.650 --> 13:53.650
因为我们就一个

13:53.650 --> 13:55.250
它也会取到它

13:55.250 --> 13:56.150
ok

13:56.150 --> 13:59.050
当你现在取得了这个叫做我们的

13:59.050 --> 14:00.050
环境

14:00.050 --> 14:02.950
也就是我们的整个数据集合的时候

14:02.950 --> 14:04.650
主要它是个大集合

14:04.650 --> 14:08.550
你要去找到你里面用的是哪一个collection

14:08.550 --> 14:10.950
也就是我们刚才所谓的表明

14:12.650 --> 14:14.650
我们加到to-do's里面

14:14.650 --> 14:16.150
然后to-do's里面加好以后

14:16.150 --> 14:18.450
我们就可以进行我们的更多的一些

14:18.450 --> 14:19.750
增三改套作了

14:19.750 --> 14:22.050
那么联合写法就是这个就是

14:22.050 --> 14:22.950
你看一下

14:22.950 --> 14:24.850
我们找到to-do's

14:24.850 --> 14:26.850
这样的一个集合

14:26.850 --> 14:28.250
再找到主要

14:28.250 --> 14:29.250
do'sc

14:29.250 --> 14:30.550
do'sc 你看

14:30.550 --> 14:33.150
集合上可以通过地球来获取集合中

14:33.150 --> 14:34.850
一个指定ID

14:34.850 --> 14:35.750
它是什么

14:35.750 --> 14:38.450
它其实是你的ID

14:38.450 --> 14:40.750
就是刚才那个下杠ID的那个字

14:40.750 --> 14:42.350
是唯一标识符

14:42.350 --> 14:44.050
能够找到这条记录

14:44.150 --> 14:46.250
然后对这条记录进行操作

14:46.250 --> 14:47.250
是这个逻辑

14:47.250 --> 14:47.950
好了

14:47.950 --> 14:49.150
简单看到以后的话

14:49.150 --> 14:51.050
我们就开始写这个程序

14:51.050 --> 14:53.750
我们打开了我们的npview

14:53.750 --> 14:55.450
然后在npview上面

14:55.450 --> 15:04.910
我们这边进行一个简单的启动

15:04.910 --> 15:07.010
我们做一个简单的启动

15:07.010 --> 15:08.510
然后让程序能看到

15:08.510 --> 15:10.610
我们是能够正常跑起来的

15:10.610 --> 15:11.510
对吧

15:11.510 --> 15:12.110
好

15:12.110 --> 15:14.510
然后我们修改一下简单里面的

15:14.510 --> 15:15.510
比如说这边

15:15.510 --> 15:22.100
我们说是cloud db

15:22.100 --> 15:23.400
数据库的操作

15:25.200 --> 15:32.780
然后我们新建一个页面

15:32.780 --> 15:33.680
咱们称之为

15:35.080 --> 15:44.700
cloud db

15:44.700 --> 15:49.400
首先里面我们建的man.js

15:49.400 --> 15:52.400
第二个我们再新建一个我们的

15:54.000 --> 16:00.700
index.viewe

16:00.700 --> 16:22.840
viewe 把它的整个的框架给写好

16:22.840 --> 16:24.140
好把它的框架给写好

16:25.140 --> 16:28.540
紧接着我们把manus写掉

16:28.540 --> 16:29.940
manus结构很简单

16:29.940 --> 16:40.450
我们从logs里面复制出来

16:40.450 --> 16:41.550
我们有页面了

16:41.550 --> 16:45.350
把这个页面的路径写到我们的

16:45.350 --> 16:57.300
app.json

16:57.300 --> 17:02.030
cloud db

17:02.030 --> 17:02.730
配置好了

17:02.730 --> 17:05.530
那么我们把下面我们本身

17:05.530 --> 17:08.530
不需要那些所谓的tabba

17:08.530 --> 17:21.580
我们app.json再把那个删掉

17:21.580 --> 17:21.780
好

17:21.780 --> 17:22.480
我们开始写

17:23.480 --> 17:26.980
我们做页面做数据的增三改查

17:26.980 --> 17:28.280
那么这里边的话

17:28.280 --> 17:30.680
我们会设计到些样式

17:30.680 --> 17:31.880
我们把这个样式

17:31.880 --> 17:33.280
我就直接先放在这

17:33.280 --> 17:34.680
之后的话大家可以拿到

17:34.680 --> 17:36.180
其实很简单

17:36.180 --> 17:37.680
就几个简单的格式化

17:37.680 --> 17:40.580
我们把几个样式

17:40.580 --> 17:42.480
简单的放一下以后

17:42.480 --> 17:43.280
我们直接做页面

17:43.280 --> 17:46.960
我们直接做页面

17:46.960 --> 17:51.100
首先第一点

17:51.100 --> 17:52.500
我们要参考一下

17:52.500 --> 17:54.400
我们本身介面中的

17:54.400 --> 17:56.700
app.container

17:56.800 --> 17:57.800
注意一下

17:57.800 --> 17:59.600
那么app.container

17:59.600 --> 18:00.400
app.json

18:00.400 --> 18:02.500
那个app view

18:02.500 --> 18:03.600
我们有个container

18:03.600 --> 18:06.300
但这个container本身来讲的话

18:06.300 --> 18:08.600
是系统所给到我们的整个配置

18:08.600 --> 18:10.600
我们可以对它进行一个简单修改

18:10.600 --> 18:14.800
比如说我把这个值改成flex start

18:14.800 --> 18:17.000
它虽然是属于数状排列

18:17.000 --> 18:19.600
但数状排列我们让它往顶靠

18:19.600 --> 18:22.000
这是属于垂直状态上的顶

18:22.000 --> 18:24.900
然后它是属于水平状态的操作

18:25.000 --> 18:27.400
所以垂直顶水平衡

18:27.400 --> 18:32.500
然后每个上下隔开50gapx

18:32.500 --> 18:34.400
这样就觉得可以了

18:34.400 --> 18:35.200
OK

18:35.200 --> 18:38.700
然后我们继续回到页面中

18:38.700 --> 18:41.000
我们把页面的布局打一下

18:41.000 --> 18:42.000
样式

18:42.000 --> 18:44.700
我就在这不去写了

18:44.700 --> 18:49.830
container

18:49.830 --> 18:51.430
class

18:51.430 --> 18:53.030
pader

18:53.030 --> 18:54.830
birdie

18:54.830 --> 18:56.830
是一个pader的大birdie结构

18:56.830 --> 18:57.830
然后

18:57.830 --> 19:03.410
每个里面一部分我都把它叫做pader section

19:03.410 --> 19:04.710
每个都叫pader section

19:04.710 --> 19:06.710
那么我们下面的每一块增生改差

19:06.710 --> 19:09.510
都用我们的pader section来做

19:09.510 --> 19:11.310
div

19:11.310 --> 19:12.910
class

19:12.910 --> 19:14.510
pader

19:14.510 --> 19:17.210
section title

19:17.210 --> 19:25.290
我们写上数据入入操作

19:25.290 --> 19:27.790
下面是我们要书写的内容

19:27.790 --> 19:34.920
我们做一个pader

19:34.920 --> 19:36.620
section

19:36.620 --> 19:41.820
content

19:41.820 --> 19:43.420
表单

19:43.420 --> 19:45.720
表单

19:45.720 --> 19:51.500
表单去掉用微信的表单结构

19:51.500 --> 19:53.000
submit

19:53.000 --> 19:54.400
等于

19:54.400 --> 19:56.200
fone

19:56.200 --> 19:59.520
submit

19:59.520 --> 20:02.600
div

20:02.600 --> 20:04.500
class

20:04.500 --> 20:08.330
section row

20:08.330 --> 20:09.130
span

20:09.130 --> 20:15.680
姓名

20:15.680 --> 20:22.220
我们写上一个import

20:22.220 --> 20:25.420
写上一名字叫user-name

20:25.420 --> 20:26.420
写上一个class

20:26.420 --> 20:27.820
我们下面已经定义过

20:27.820 --> 20:35.190
它这个叫做import style

20:35.190 --> 20:37.490
import style

20:37.490 --> 20:39.990
紧接着我们再来

20:39.990 --> 20:43.790
那么现在是属于有一个姓名

20:43.790 --> 20:45.290
我们可以给它重启一下

20:45.290 --> 20:48.890
让它把这个页面进行所谓的

20:48.890 --> 20:49.790
编译一下

20:49.790 --> 20:51.990
就是我们的新页面

20:51.990 --> 20:53.090
那么怎么样看出来

20:53.090 --> 20:54.790
之前我教过大家

20:54.790 --> 20:57.990
你去到dist里面看

20:57.990 --> 20:59.890
打开dist

20:59.890 --> 21:01.190
然后打开paders

21:01.190 --> 21:03.290
看一下cloud DB有没有

21:03.290 --> 21:04.290
有的话打开

21:04.290 --> 21:07.090
有没有index view.wxml这个文件

21:07.090 --> 21:09.290
有了表示已经完成了

21:09.290 --> 21:11.790
接下去我们可以倒入了

21:11.790 --> 21:14.390
我们把这个页面打开一下

21:14.390 --> 21:19.200
这个app id一定要用一个真实的

21:19.200 --> 21:20.700
如果还没有同学的话

21:20.700 --> 21:23.900
你自个耳机申请一个在官网上面

21:23.900 --> 21:26.000
找到小程去驻车入口

21:26.000 --> 21:44.560
然后一步一步跟着它走就可以了

21:44.560 --> 21:48.680
我们打开一下

21:48.780 --> 21:50.180
数据库操作姓名

21:50.180 --> 21:55.280
这有了

21:55.280 --> 21:57.580
紧接着数据库操作姓名有了

21:57.580 --> 21:59.980
我们下面就是和它一样的结构

21:59.980 --> 22:03.540
我们复制一下

22:03.540 --> 22:09.290
这个是什么年龄

22:09.290 --> 22:11.490
这个是年龄

22:11.490 --> 22:13.090
年龄里面的话

22:13.090 --> 22:19.560
我们这边写上的是一个textor

22:19.560 --> 22:20.360
这个是ok

22:20.360 --> 22:23.360
名称我们改一改

22:23.360 --> 22:32.040
userager

22:32.040 --> 22:33.340
还有一个叫按钮

22:33.340 --> 22:36.440
这就是增加操作我们做的是

22:36.440 --> 22:43.510
type primary phone type

22:43.510 --> 22:47.310
等于submit

22:47.310 --> 22:50.210
数据库的入入

22:50.210 --> 22:53.510
数据库的入入这个结构

22:53.510 --> 22:56.410
好看一下页面

22:56.410 --> 22:57.310
出来了吧

22:57.310 --> 22:58.910
就保持这个就行了

22:58.910 --> 23:01.310
我们输两个直进来进行操作

23:01.310 --> 23:03.310
那么我们一旦把直输入了

23:03.410 --> 23:05.510
我们去做你现在的

23:05.510 --> 23:07.910
fonesubmit

23:07.910 --> 23:09.610
fonesubmit本身来讲的话

23:09.610 --> 23:10.910
它其实很简单

23:10.910 --> 23:12.010
它只要完成

23:12.010 --> 23:13.310
你现在数据获取

23:13.310 --> 23:15.210
并且和我们云端结合

23:15.210 --> 23:26.940
先做数据获取

23:26.940 --> 23:29.540
数据获取

23:29.540 --> 23:34.030
拿个e

23:34.030 --> 23:35.730
我们上面两个输入框

23:35.730 --> 23:37.630
两个输入框本身来讲的话

23:37.630 --> 23:39.430
它只有我们现在的年

23:39.430 --> 23:41.530
叫做user年跟userager

23:41.530 --> 23:42.830
只有这两个操作

23:42.830 --> 23:44.930
所以我们这边看一下

23:44.930 --> 23:47.030
我们是不是可以点击这按钮以后

23:47.030 --> 23:47.930
得到这两个直

23:47.930 --> 23:50.130
姓名

23:50.130 --> 23:51.130
张三

23:51.130 --> 23:51.830
年龄

23:51.830 --> 23:53.430
19岁

23:53.430 --> 23:55.030
数据库入入

23:55.030 --> 23:56.330
打开

23:56.330 --> 24:00.770
拉上来一点

24:00.770 --> 24:02.870
在我们的

24:02.870 --> 24:04.170
target.value里面

24:04.170 --> 24:05.970
咱们看user年张三

24:05.970 --> 24:07.470
userager19

24:07.470 --> 24:09.070
是不是可以获得

24:09.070 --> 24:09.770
ok

24:09.770 --> 24:12.170
那我们这边就直接可以把这两个直

24:12.170 --> 24:13.070
拿下来

24:13.070 --> 24:13.970
并且呢

24:13.970 --> 24:17.470
我们把它存储到一个我们的自定义的

24:17.470 --> 24:21.730
节省对象里面去

24:21.730 --> 24:28.090
存储到user年

24:28.090 --> 24:34.700
e点

24:34.700 --> 24:35.800
target

24:35.800 --> 24:38.100
e点target点

24:38.100 --> 24:38.400
对吧

24:38.400 --> 24:40.200
e点target点

24:40.200 --> 24:53.360
value user年

24:53.360 --> 24:55.960
userager e点

24:55.960 --> 24:57.760
target点

24:57.760 --> 24:59.260
value点

24:59.260 --> 25:01.560
userager

25:01.560 --> 25:10.910
我们把它存储到这样一个对象中

25:10.910 --> 25:14.110
获取对象的

25:14.110 --> 25:19.780
陆入的数据

25:19.780 --> 25:22.380
获取陆入的数据

25:22.380 --> 25:23.380
紧接着

25:23.380 --> 25:30.790
我们做数据库操作

25:30.790 --> 25:31.890
我们写上

25:31.890 --> 25:33.290
this点

25:33.290 --> 25:40.480
clouder

25:40.480 --> 25:41.280
db

25:41.280 --> 25:44.380
我们做数据添加

25:44.380 --> 25:45.880
我们给到

25:45.880 --> 25:47.480
this点clouder

25:47.480 --> 25:49.780
那么这是我们下面可以写的一个

25:49.780 --> 26:05.630
方法

26:05.630 --> 26:07.830
数据添加

26:07.830 --> 26:16.870
接收

26:16.870 --> 26:18.570
就以这样的方式来做

26:18.570 --> 26:20.170
那么这里的话呢

26:20.170 --> 26:22.270
需要连接我们数据库了

26:22.270 --> 26:24.170
数据库操作的我们说过

26:24.170 --> 26:25.270
数据库本身自己

26:25.270 --> 26:27.770
它需要有几项内容的

26:27.770 --> 26:29.170
格式化

26:29.170 --> 26:31.370
所以我们先做第一步

26:31.370 --> 26:34.270
打开app.view

26:34.270 --> 26:36.170
原来在微信里面在哪里呢

26:36.170 --> 26:38.970
原来它是在app.gs里面操作

26:38.970 --> 26:40.570
那么我们必须在这个里面

26:40.570 --> 26:42.170
所以我们在crate里面

26:42.170 --> 26:43.170
在第一行上面

26:43.170 --> 26:45.270
我们做一个叫做

26:45.270 --> 26:45.970
数据库

26:45.970 --> 26:53.990
云数据库出实化

26:53.990 --> 26:55.990
微信点

26:55.990 --> 26:57.790
clouder点

26:57.790 --> 27:03.990
init

27:03.990 --> 27:06.890
user tree

27:06.890 --> 27:08.290
表示

27:08.290 --> 27:11.290
用户的信息是否进行跟踪

27:11.290 --> 27:13.990
我们做测试时都会用这个

27:13.990 --> 27:15.390
env

27:15.390 --> 27:17.190
代表你现在的环境

27:17.190 --> 27:18.990
我们写上我们刚才的环境

27:18.990 --> 27:23.490
叫做test.conf.jj55w

27:23.490 --> 27:24.290
第一步

27:24.290 --> 27:29.790
完成你现在在app.view中的云出实化

27:29.790 --> 27:30.490
第二步

27:30.490 --> 27:33.390
那么我们会在我们的

27:33.390 --> 27:37.490
在云函数目录

27:37.490 --> 27:39.290
云函数目录

27:39.290 --> 27:40.690
npview的话

27:40.690 --> 27:41.690
它不会给你生成

27:41.690 --> 27:43.590
但是我们可以把它的配置

27:43.590 --> 27:44.490
依然写好

27:44.490 --> 27:45.290
在哪里呢

27:45.290 --> 27:50.690
在project.conffigure里面

27:50.690 --> 27:51.790
project.conffigure

27:51.790 --> 27:53.390
然后打开

27:53.390 --> 27:55.190
在这里面我们写上

27:55.190 --> 27:59.000
云的一个跟目录配置

27:59.000 --> 28:01.400
clouder

28:01.400 --> 28:08.430
function root

28:08.430 --> 28:10.130
clouder

28:10.130 --> 28:14.440
functions

28:14.440 --> 28:16.140
这样的结构走

28:16.140 --> 28:19.260
clouder functions

28:19.260 --> 28:22.560
那么云本身自己在微信小程序中

28:22.560 --> 28:23.360
你这样写好

28:23.360 --> 28:25.160
它会帮你配置出一个

28:25.160 --> 28:28.360
所谓的云的一个跟目录出来

28:28.360 --> 28:29.960
但是你现在这样写的话呢

28:29.960 --> 28:31.260
我们看到

28:31.260 --> 28:33.660
它这边是那个跟目录不会配置

28:33.660 --> 28:34.660
但是它的位置

28:34.660 --> 28:37.260
应该是在app.js里面的

28:37.260 --> 28:39.260
那么我们会打开这个来看

28:39.260 --> 28:40.960
我们打开dister

28:40.960 --> 28:43.660
我们看app.js有这个文件

28:43.660 --> 28:45.060
有这个文件

28:45.060 --> 28:47.260
那么你说我往这文件里面写

28:47.260 --> 28:48.660
那么你注意

28:48.660 --> 28:49.960
你现在这句话

28:49.960 --> 28:52.660
它其实是一个配置杰森对象

28:52.660 --> 28:55.360
但现在这个app.json文件

28:55.360 --> 28:57.860
它的配置杰森对象在哪

28:57.860 --> 28:58.260
对吧

28:58.260 --> 29:01.060
它其实已经帮你进行封装了

29:01.060 --> 29:02.960
这部分内容

29:02.960 --> 29:04.460
就按照标准结构

29:04.460 --> 29:06.060
我们先配置在这

29:06.060 --> 29:07.860
那么之后云函数的操作

29:07.860 --> 29:09.860
我们后面再回答讲解

29:09.860 --> 29:11.060
先把这两步写好

29:11.060 --> 29:12.560
第一步我们前面

29:12.560 --> 29:14.560
会有一个我们的初始化

29:14.560 --> 29:16.960
第二步做一个云目录设定

29:16.960 --> 29:18.160
当这两步做好了

29:18.160 --> 29:18.860
那么接下去

29:18.860 --> 29:20.760
你就可以简单的完成

29:20.760 --> 29:22.960
我们现在的一个数据操作了

29:22.960 --> 29:24.960
你能直接访问到我们的

29:24.960 --> 29:26.760
这个数据结构了

29:26.760 --> 29:26.960
好

29:26.960 --> 29:28.360
我们来看一下

29:28.360 --> 29:29.060
首先

29:29.060 --> 29:30.960
我们大家可以直接使用

29:30.960 --> 29:32.760
我们现在的第一种方法

29:32.760 --> 29:36.430
回调方法

29:36.430 --> 29:37.930
使用回调方法

29:37.930 --> 29:39.830
第一步

29:39.830 --> 29:47.270
创建数据库对象

29:47.270 --> 29:48.770
ConstaDB

29:48.770 --> 29:51.970
等于微信点

29:51.970 --> 29:53.770
Cloud

29:53.770 --> 29:55.370
Database

29:55.370 --> 29:56.170
称对象

29:56.170 --> 29:57.170
里面是env

29:57.170 --> 29:58.370
我告诉他

29:58.370 --> 30:03.030
我现在就要连接到的

30:03.030 --> 30:12.210
TestJJ55W

30:12.210 --> 30:14.610
接下去

30:14.610 --> 30:18.410
选择数据库集合

30:18.410 --> 30:24.400
并添加数据

30:24.400 --> 30:27.400
创建服务器端

30:27.400 --> 30:30.020
实践

30:30.020 --> 30:35.540
db.collection

30:35.540 --> 30:38.040
连接到哪个数据库

30:38.040 --> 30:39.040
那么我们这边

30:39.040 --> 30:40.340
我们就给大家看一下

30:40.340 --> 30:42.840
我们就连接到一个叫数据库3

30:42.840 --> 30:44.440
比较简单一点

30:44.440 --> 30:45.940
这名称大家可以自己

30:45.940 --> 30:48.640
如果说大家在之后拿到代码的时候

30:48.640 --> 30:50.640
你自己在这里面创建个数据库3

30:50.640 --> 30:52.140
或者你创建个章3

30:52.140 --> 30:53.240
或者说其他的结构

30:53.240 --> 31:02.060
都可以

31:02.060 --> 31:04.260
写一下

31:04.260 --> 31:08.270
备注

31:08.270 --> 31:11.370
运行前

31:11.370 --> 31:14.330
自行

31:14.330 --> 31:19.270
创建

31:19.270 --> 31:22.330
集合

31:22.330 --> 31:23.130
当它好了以后

31:23.130 --> 31:27.220
我们做个add

31:27.220 --> 31:29.020
做个add

31:29.020 --> 31:32.720
我们把数据可以全部的放在这里面

31:32.720 --> 31:34.820
首先里边有一个data

31:34.820 --> 31:38.120
add里面是有一个data数据集合

31:38.120 --> 31:38.720
它里面呢

31:38.720 --> 31:40.420
主要你想放哪些内容

31:40.420 --> 31:42.860
比如说我现在想放的是

31:42.860 --> 31:44.020
net

31:44.020 --> 31:45.620
那我从哪来呢

31:45.620 --> 31:46.720
这个net的数据

31:46.720 --> 31:50.820
其实我需要通过我们传进来

31:50.820 --> 31:53.720
这个UserInfo传进来

31:53.720 --> 31:54.520
UserInfo

31:54.520 --> 31:55.520
传进来以后呢

31:55.520 --> 31:56.320
这里边是什么

31:56.320 --> 31:58.820
一个是UserNet对吧

31:58.820 --> 32:01.660
UserNet

32:01.660 --> 32:02.960
第二个

32:02.960 --> 32:04.860
Ager

32:04.860 --> 32:06.360
UserInfo

32:06.360 --> 32:07.760
点

32:07.760 --> 32:13.750
UserAger

32:13.750 --> 32:16.050
GreatTime

32:16.050 --> 32:18.350
我们创建时间

32:18.350 --> 32:18.950
创建时间

32:18.950 --> 32:19.950
你可以给一个

32:19.950 --> 32:21.450
比如说当前的时间

32:21.450 --> 32:23.050
你可以给一个

32:23.050 --> 32:24.550
或者你指定一个时间

32:24.550 --> 32:26.450
比如说2019年的

32:26.450 --> 32:27.050
随便写一下

32:27.050 --> 32:29.450
今年的1月1号

32:29.450 --> 32:32.660
你这样的方式给

32:32.660 --> 32:34.360
那么当你这样创建好以后呢

32:34.360 --> 32:35.760
我们说

32:35.760 --> 32:39.690
完成了

32:39.690 --> 32:40.990
success

32:40.990 --> 32:46.200
做res

32:46.200 --> 32:46.900
我们说一下

32:46.900 --> 32:49.200
它成功后

32:49.200 --> 32:53.240
会

32:53.240 --> 32:54.840
返回

32:54.840 --> 32:58.910
新纪录的

32:58.910 --> 33:01.010
这个id

33:01.010 --> 33:11.910
我们来看一下

33:11.910 --> 33:12.310
OK

33:12.310 --> 33:14.410
我把这些内容已经做到这了

33:14.410 --> 33:15.310
然后紧接着

33:15.310 --> 33:16.110
我们看一下

33:16.110 --> 33:18.110
运行它的时候

33:18.110 --> 33:19.210
它是不是会爆出来

33:19.210 --> 33:21.310
如果说

33:21.310 --> 33:22.210
它没有爆出来

33:22.210 --> 33:23.810
代表的是这里面有错误

33:23.810 --> 33:24.410
但如果说

33:24.410 --> 33:26.010
它已经爆出来新的id了

33:26.010 --> 33:27.910
我们到数据库再看一下

33:27.910 --> 33:28.310
对吧

33:28.310 --> 33:29.510
首先看一下

33:29.510 --> 33:32.010
现在3里面的数据库

33:32.010 --> 33:32.910
一共是两个

33:32.910 --> 33:33.710
对吧

33:33.710 --> 33:38.250
我们来新增加一个

33:38.250 --> 33:40.350
我们写上

33:40.350 --> 33:42.250
TOM

33:42.250 --> 33:44.350
年龄

33:44.950 --> 33:46.050
4岁

33:46.050 --> 33:48.550
添加数据库

33:48.550 --> 33:49.650
data对吧

33:49.650 --> 33:50.450
我们看一下

33:50.450 --> 33:54.150
我的data是在哪里

33:54.150 --> 33:59.060
data

33:59.060 --> 34:03.350
再来一次

34:03.350 --> 34:15.040
刷新它一下

34:15.040 --> 34:17.040
TOM

34:17.040 --> 34:17.940
19岁

34:17.940 --> 34:19.440
数据库

34:19.440 --> 34:20.140
你

34:20.140 --> 34:22.140
我们不是改了吗

34:22.140 --> 34:23.140
没存

34:23.140 --> 34:24.240
没存

34:24.240 --> 34:32.240
Countress保存

34:32.240 --> 34:33.340
TOM

34:33.340 --> 34:34.740
19

34:34.740 --> 34:35.940
点击

34:35.940 --> 34:36.840
看到吗

34:36.840 --> 34:38.640
它返回了一个data id

34:38.640 --> 34:39.540
这个id

34:39.540 --> 34:41.640
它告诉你collection at OK

34:41.640 --> 34:43.140
表示正常

34:43.140 --> 34:45.740
然后ID给你一个这个数值

34:45.740 --> 34:46.940
所以我们这边

34:46.940 --> 34:47.840
你可以看到

34:47.840 --> 34:50.740
它每次添加都是collection at OK

34:50.740 --> 34:51.640
是有这个判断的

34:51.640 --> 34:52.840
可以做一个

34:52.840 --> 34:55.940
然后这个数值是EAF

34:55.940 --> 34:58.340
我们到云端来看一下

34:58.340 --> 34:59.340
我们到云端

34:59.340 --> 35:01.740
云端我们这边点一个刷新

35:01.740 --> 35:02.740
是不是有

35:02.740 --> 35:03.940
EAF

35:03.940 --> 35:04.640
TOM

35:04.640 --> 35:05.240
对不对

35:05.240 --> 35:06.240
给出了一个

35:06.240 --> 35:08.140
我们自行设定的时间

35:08.140 --> 35:10.540
然后这边是我们的一个年龄

35:10.540 --> 35:11.640
注意这个

35:11.640 --> 35:14.140
这个是我现在正在使用的

35:14.140 --> 35:15.340
一个OpenID

35:15.340 --> 35:19.240
那么OpenID是唯一能够代表你微信

35:19.240 --> 35:22.340
和微信的一个身份标志服

35:22.340 --> 35:23.940
类似于身份证

35:23.940 --> 35:25.240
但是它的话

35:25.240 --> 35:27.440
如果你不是用云端的话

35:27.440 --> 35:30.040
你需要通过其他的一些复杂的方式

35:30.040 --> 35:31.040
来操作

35:31.040 --> 35:34.040
比如说你要用Login获得Code

35:34.040 --> 35:36.140
然后再用你的Secret

35:36.140 --> 35:38.440
然后进行服务器的重新申请

35:38.440 --> 35:41.140
然后二次申请以后再返回OpenID

35:41.140 --> 35:41.940
那么现在呢

35:41.940 --> 35:43.740
我们只要客户端和云端呢

35:43.740 --> 35:47.340
进行一个这样的操作的过程中

35:47.340 --> 35:50.540
云是作为免贱权模式的

35:50.540 --> 35:51.340
也就是说

35:51.340 --> 35:52.240
它认为

35:52.240 --> 35:55.140
只要你有权登录开发小程序

35:55.140 --> 35:57.940
那么就可以拥有你现在的OpenID

35:57.940 --> 35:59.640
所以它直接会返回给你

35:59.640 --> 36:01.940
它现在的一个OpenID的存储

36:01.940 --> 36:04.740
是这个意思

36:04.740 --> 36:07.240
那么我们现在看到数据已经被添加进来了

36:07.240 --> 36:08.040
是不是

36:08.040 --> 36:09.740
我们回过头来再来看

36:09.740 --> 36:10.440
数据添加

36:10.440 --> 36:12.440
其实对于我们的这部操作来讲

36:12.440 --> 36:15.040
它是非常的简单

36:15.040 --> 36:15.540
当然

36:15.540 --> 36:18.440
我们有时候也不用这样的方式

36:18.440 --> 36:19.740
我们用什么

36:19.740 --> 36:20.940
我们用第二种模式

36:20.940 --> 36:22.640
叫Promise模式

36:22.640 --> 36:24.140
我们用Promise模式也可以

36:24.140 --> 36:35.000
那么我这边再写一下

36:35.000 --> 36:36.500
我们来DB

36:36.500 --> 36:38.000
咱们看

36:38.000 --> 36:48.040
第二种Promise方式

36:48.040 --> 36:51.060
DB点

36:51.060 --> 36:53.160
Collection

36:53.160 --> 36:56.060
数据库3

36:56.060 --> 37:01.880
点ADD

37:01.880 --> 37:04.720
Data

37:04.720 --> 37:06.620
念

37:06.620 --> 37:17.210
UserInfo

37:17.210 --> 37:17.810
点

37:17.810 --> 37:21.940
后面应该是UserName

37:21.940 --> 37:22.740
Ager

37:22.740 --> 37:23.940
帽号

37:23.940 --> 37:27.140
UserInfo

37:27.140 --> 37:28.240
点

37:28.240 --> 37:31.920
UserAger

37:31.920 --> 37:33.520
再来

37:33.520 --> 37:35.720
我写个Crit time

37:35.720 --> 37:37.920
前面我们写的是

37:37.920 --> 37:41.690
我这边直接用我们的

37:41.690 --> 37:44.660
DB点

37:44.660 --> 37:46.360
Server

37:46.360 --> 37:47.960
Data

37:47.960 --> 37:52.420
用服务器时间

37:52.420 --> 37:54.320
当它完成以后用Xen

37:54.320 --> 37:56.620
咱们不要用Success了

37:56.620 --> 37:59.220
RES

37:59.220 --> 38:06.980
告诉我是否完成

38:06.980 --> 38:09.480
RES

38:09.480 --> 38:10.980
或者

38:10.980 --> 38:16.730
Catch

38:16.730 --> 38:28.840
Ary

38:28.840 --> 38:29.540
好了

38:29.540 --> 38:31.740
那么我们把这个内容做好以后

38:31.740 --> 38:41.640
我们再来试一下

38:41.740 --> 38:43.440
马力

38:43.440 --> 38:45.940
18岁

38:45.940 --> 38:48.940
同样可以返回一个0757

38:48.940 --> 38:53.000
查一下数据库

38:53.000 --> 38:54.600
0757出来了

38:54.600 --> 38:55.300
OK

38:55.300 --> 38:57.100
代表的是我们这两个

38:57.100 --> 39:01.900
所谓的不同的方式的操作都可以

39:01.900 --> 39:02.600
对吧

39:02.600 --> 39:04.200
那么这是我们说到的

39:04.200 --> 39:05.000
第一个

39:05.000 --> 39:08.600
就是添加数据

39:08.600 --> 39:09.600
第二个

39:09.600 --> 39:11.700
获取数据

39:11.700 --> 39:14.000
往上

39:14.000 --> 39:15.300
添加数据好了以后

39:15.300 --> 39:16.200
那我们要获取

39:16.200 --> 39:18.300
我们获取其实我们很简单

39:18.300 --> 39:21.600
我们只需要拿到你现在的

39:21.600 --> 39:23.100
所有的比如说这里边

39:23.100 --> 39:25.000
或者我们指定一条数据

39:25.000 --> 39:28.410
那种方式都行

39:28.410 --> 39:29.510
那么我们来做

39:29.510 --> 39:31.310
我们首先我们找到

39:31.310 --> 39:34.310
把上面的这个给隐藏掉

39:34.310 --> 39:35.910
在Section下面

39:35.910 --> 39:37.710
我们在这里写上注释

39:37.710 --> 39:39.810
这叫做

39:39.810 --> 39:43.330
添加数据

39:43.330 --> 39:49.760
这边我们叫做

39:49.760 --> 39:56.350
获取数据

39:56.350 --> 39:57.450
把上面的复制一下

39:57.450 --> 39:59.150
我们其实是Session

39:59.150 --> 40:04.300
Payter section

40:04.300 --> 40:05.700
把上面复制一下吧

40:05.700 --> 40:11.920
标题

40:11.920 --> 40:21.160
我们叫做数据获取

40:21.160 --> 40:22.760
在下面

40:22.760 --> 40:31.650
内容区域

40:31.650 --> 40:32.750
在内容里面

40:32.750 --> 40:34.350
我们首先

40:34.350 --> 40:37.650
我们可以做一个View

40:37.650 --> 40:39.750
告诉他

40:39.750 --> 40:40.850
Section row

40:40.850 --> 40:45.100
它是Section的一行

40:45.100 --> 40:49.000
我们可以通过循环的方式

40:49.000 --> 40:52.000
拿出数据库的所有数据出来

40:52.000 --> 40:52.800
这个数据

40:52.800 --> 40:55.000
我们做成一个数组

40:55.000 --> 40:57.800
叫做UserList

40:57.800 --> 41:00.940
叫做UserList

41:00.940 --> 41:10.720
需要有一个Key

41:10.720 --> 41:15.470
DIV

41:15.470 --> 41:19.590
用户姓名

41:19.590 --> 41:20.990
从Item里面我们拿念

41:20.990 --> 41:23.990
我们直接标注一下

41:23.990 --> 41:24.890
第二个

41:24.890 --> 41:29.640
我们拿的是Ager

41:29.640 --> 41:31.140
可以循环的拿出来

41:31.140 --> 41:32.540
然后此时

41:32.540 --> 41:34.840
我们在Section里面

41:34.840 --> 41:40.900
我们在这边写上一个按钮

41:40.900 --> 41:42.700
按钮类型

41:42.700 --> 41:45.500
Private綠色结构

41:45.500 --> 41:48.200
对它进行点击

41:48.200 --> 41:58.570
我们叫做GetUserRecorder

41:58.570 --> 42:02.120
数据库

42:02.120 --> 42:03.020
读取记录

42:03.020 --> 42:06.340
我们这么讲

42:06.340 --> 42:06.740
好了

42:06.740 --> 42:08.240
页面也OK了

42:08.240 --> 42:10.040
紧接着我们来看一下效果

42:10.040 --> 42:11.740
我们其实就是一按钮

42:11.740 --> 42:12.340
点一下

42:12.340 --> 42:15.140
从这边把数据拿出来

42:15.140 --> 42:33.040
进到GetUserRecorder里面来

42:33.040 --> 42:35.540
依然我们需要去完成

42:35.540 --> 42:39.540
现在的一个数据的

42:39.540 --> 42:40.640
Collection的操作

42:40.640 --> 42:42.040
我们要回到Collection的结构

42:42.040 --> 42:43.740
首先我们先订一下

42:43.740 --> 42:47.980
Let this

42:47.980 --> 42:53.180
然后使用回调方式

42:53.180 --> 42:53.880
回调方式

42:53.880 --> 42:59.700
db.collection

42:59.700 --> 43:01.700
先写上我们叫做什么

43:01.700 --> 43:04.000
数据库

43:04.400 --> 43:05.300
对吧

43:05.300 --> 43:16.380
然后点GetSuccess

43:16.380 --> 43:19.080
先看一下

43:19.080 --> 43:22.480
IS的数据输出

43:22.480 --> 43:23.680
当然你有个db

43:23.680 --> 43:34.620
所以我们从下面搬一个db出来

43:34.620 --> 43:35.320
搬一个db

43:35.320 --> 43:36.820
那么db找到以后

43:36.820 --> 43:37.720
找到这个库

43:37.720 --> 43:39.820
然后Get取出它里面所有数据

43:39.820 --> 43:45.490
我们通过现在的控制台显示

43:45.490 --> 43:46.190
有了吧

43:46.190 --> 43:48.390
4条数据

43:48.390 --> 43:50.890
1234都取出来了

43:50.890 --> 43:51.690
好

43:51.690 --> 43:54.490
紧接着我们再来看

43:54.490 --> 43:56.490
4条数据被取出来以后的话

43:56.490 --> 43:58.690
那么我们直接可以把它

43:58.690 --> 44:02.690
绑定到我们现在的页面上面

44:02.690 --> 44:03.590
绑定方式

44:03.590 --> 44:06.290
外活就是通过我们的UserList

44:06.290 --> 44:07.790
当然回调模式

44:07.790 --> 44:21.800
我们还可以用的是Promise

44:21.800 --> 44:30.830
db.collection

44:30.830 --> 44:35.810
数据库3点Get

44:35.810 --> 44:37.110
Then

44:37.110 --> 44:42.130
IS

44:42.130 --> 44:43.930
我们得写个Zart

44:43.930 --> 44:45.730
我们这边得来一个

44:45.730 --> 44:46.730
有了我们刚才

44:46.730 --> 44:48.530
这边已经定义过一个Zart

44:48.530 --> 44:49.730
所以这边我们直接可以用

44:49.730 --> 44:52.330
因为它是在内部

44:52.330 --> 45:03.120
setZart.直接用UserList

45:03.120 --> 45:05.720
我们这边的UserList

45:05.720 --> 45:08.420
我们在data中应该还没定义

45:08.420 --> 45:17.180
我们data中定义一下

45:17.180 --> 45:19.680
UserList

45:19.680 --> 45:21.780
它等于

45:21.780 --> 45:26.600
IS

45:26.600 --> 45:30.800
IS我们看一下页面

45:30.800 --> 45:36.280
IS下面的data

45:36.280 --> 45:37.980
IS下面的data

45:37.980 --> 45:39.580
这个结构

45:39.580 --> 45:42.080
那么把这个直接付给进去以后的话

45:42.080 --> 45:43.780
它通过item的方式循环

45:43.780 --> 45:44.380
里面有NAM

45:44.380 --> 45:45.580
里面有Ager

45:45.580 --> 45:48.620
我们来看一下效果

45:48.620 --> 45:50.320
是不是出来了

45:50.320 --> 45:51.620
1 2 3 4

45:51.620 --> 45:52.320
对吧

45:52.320 --> 45:53.420
那么4条记录就出来了

45:53.420 --> 45:54.820
所以它用这样的方式

45:54.820 --> 45:55.520
当然

45:55.520 --> 45:57.020
我这边是做一个演示

45:57.020 --> 46:00.320
我们能看到它现在数据的提取

46:00.320 --> 46:00.820
对吧

46:00.820 --> 46:02.620
数据提取

46:02.620 --> 46:03.820
那么

46:03.820 --> 46:05.820
继续往下看

46:05.820 --> 46:07.720
两种模式都可以

46:07.720 --> 46:09.820
Promise模式是直接Get方式

46:09.820 --> 46:12.020
后面用Zend的方式来操作

46:12.020 --> 46:14.420
微调模式用Success来操作

46:14.420 --> 46:16.820
这两种方式都可以完成

46:16.820 --> 46:18.720
这是数据的提取

46:18.720 --> 46:20.420
OK

46:20.420 --> 46:21.720
我们休息一下

46:21.720 --> 46:22.920
待会我们讲一下

46:22.920 --> 46:25.620
我们的数据的更新和删除

