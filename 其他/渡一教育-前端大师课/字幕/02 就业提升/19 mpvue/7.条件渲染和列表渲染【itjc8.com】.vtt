WEBVTT

00:00.000 --> 00:02.840
好 我们进去讲MPVU的系列课程

00:02.840 --> 00:06.000
系列课呢 给它介绍一下调研宣然和列表宣然

00:06.500 --> 00:09.500
这两块内容呢 无论是在小程序 还在VU里面

00:09.500 --> 00:11.300
应该说大家已经非常熟了

00:11.600 --> 00:15.500
那么我这边呢 只做我们现在在MPVU这简单应用

00:15.500 --> 00:17.100
大家看一下就可以了 好吧

00:17.800 --> 00:20.900
那么对于那个调研宣传来讲的话呢

00:20.900 --> 00:23.200
我们在那个VU中呢

00:23.200 --> 00:26.000
我们主要用的是那个VF的指令

00:26.400 --> 00:30.700
然后呢 它主要还是作为我们的一种属性指令操作

00:31.200 --> 00:35.100
一旦它被作为显示Q这样的一个格式的话呢

00:35.100 --> 00:36.000
那它被显示

00:36.400 --> 00:38.900
如果它现在里面的支撑作为假

00:38.900 --> 00:40.700
或者说是那个0的话

00:40.700 --> 00:42.100
那么条件为不显示

00:42.700 --> 00:43.700
也就是所谓的

00:43.900 --> 00:46.100
它的不显示主要的还是存在于

00:46.100 --> 00:49.300
它不会让你在宣传的时候在页面中出现

00:50.600 --> 00:53.200
接下去呢 是VLs跟VLsF

00:53.700 --> 00:55.100
那么这两个呢 主要是

00:55.100 --> 00:57.400
你现在在FU不满足情况下

00:57.400 --> 00:58.700
那么下面会有一个

00:58.700 --> 01:01.000
所谓的另外的一个选择

01:01.200 --> 01:02.400
不是 就是

01:02.700 --> 01:04.900
要不那么这样的一个概念

01:07.140 --> 01:08.840
在我们的模板中

01:09.740 --> 01:11.540
我们依然是可以使用Template

01:11.740 --> 01:14.140
作为我们现在的一个叫做渲染分组

01:14.340 --> 01:15.340
渲染分组的话呢

01:15.340 --> 01:16.940
可以让你能够很好的

01:17.140 --> 01:18.540
让一阻带嘛

01:18.540 --> 01:21.240
能够在我们的控制区域内

01:21.240 --> 01:23.040
能够显示和不显示的操作

01:23.540 --> 01:25.740
那么这个当然给它演示一下就可以了

01:26.140 --> 01:27.740
然后View的key呢

01:27.740 --> 01:28.940
在管理上的话

01:28.940 --> 01:31.640
特别是在我们的一组过程中

01:31.640 --> 01:34.340
我们说是可以去作为它的一个

01:36.040 --> 01:37.440
可用可不用的一个状态

01:37.440 --> 01:37.940
为什么呢

01:37.940 --> 01:39.540
因为在View上面的话呢

01:39.540 --> 01:41.540
我们key的话可以完成

01:41.540 --> 01:42.940
你现在的一个

01:43.240 --> 01:44.340
就是复用率

01:44.340 --> 01:46.140
它本身在View上面会有一个

01:46.140 --> 01:48.040
强制的一个复用率的问题

01:48.540 --> 01:50.940
那么在我们的MPView上面的话呢

01:50.940 --> 01:52.840
这个概念就基本上是

01:52.840 --> 01:53.540
不存在了

01:53.940 --> 01:55.840
因为我们现在View中

01:55.840 --> 01:57.440
MPView中的所有的内容

01:57.440 --> 01:58.840
都会被直接刷新掉

01:58.840 --> 02:01.840
而不会说是使用就是可复用

02:01.840 --> 02:03.240
可复用元素的状态

02:03.940 --> 02:05.740
那么这个我们先这边说一下

02:06.240 --> 02:07.040
第二的话呢

02:07.040 --> 02:08.040
我们讲到的

02:08.040 --> 02:09.340
既然讲到VF的话呢

02:09.340 --> 02:10.640
一定会讲到V秀

02:10.640 --> 02:11.940
那V秀指令的话

02:11.940 --> 02:14.540
代表的是这块区域的显示和隐藏

02:14.540 --> 02:15.440
那么请注意

02:15.740 --> 02:17.540
V秀跟AF的区别

02:17.540 --> 02:18.840
这个是我们每次讲到

02:18.840 --> 02:20.440
这块链的时候都会提一下

02:20.740 --> 02:22.040
那么两者的区别

02:22.040 --> 02:24.240
主要是在于VF的话呢

02:24.240 --> 02:26.040
它是一种显示

02:26.040 --> 02:27.940
也就是说显示和不显示的

02:27.940 --> 02:28.840
多型操作

02:29.140 --> 02:31.440
也就是如果你没有对它进行

02:31.640 --> 02:33.040
所谓的显示区域的话

02:33.040 --> 02:34.840
它根本就不进行所谓的渲染

02:35.140 --> 02:36.140
但V秀的话呢

02:36.140 --> 02:37.340
它肯定会渲染

02:37.340 --> 02:39.240
因为本身来讲的话呢

02:40.340 --> 02:41.340
本身是一个

02:41.340 --> 02:43.540
它是一个最后显示的时候

02:43.940 --> 02:45.840
会是一个我们所谓的

02:45.840 --> 02:47.040
CSS的格式

02:47.040 --> 02:48.340
它是一个CSS的格式

02:48.340 --> 02:49.740
就是我们Helen的操作

02:50.240 --> 02:51.240
是这个意思

02:51.640 --> 02:52.940
那么VF的话呢

02:52.940 --> 02:54.040
它不会说是

02:54.040 --> 02:55.740
你现在如果不执行

02:55.740 --> 02:56.440
或者不显示

02:56.440 --> 02:58.340
再会把里面内内容出来

02:58.340 --> 02:59.940
因为所以从我们的原码上

02:59.940 --> 03:02.440
大家之前应该都会比较过这个区别

03:05.090 --> 03:06.490
然后接下来就说一下内表渲染

03:06.490 --> 03:07.790
内表渲染是V4

03:07.790 --> 03:08.990
V4的话呢

03:08.990 --> 03:11.090
那么主要的我们讲的简单一点

03:11.090 --> 03:13.590
那么就是在于我们的一些模板

03:13.590 --> 03:15.690
和展示区域的一种循环

03:16.090 --> 03:17.190
那么这个循环呢

03:17.190 --> 03:18.790
也是非常的简单啊

03:18.790 --> 03:21.090
我们只要用过我们现在的

03:21.890 --> 03:23.290
V4同学都会学过

03:23.290 --> 03:24.390
后面是一个Array

03:24.390 --> 03:26.290
或者称之为一个附合类型

03:26.290 --> 03:28.690
然后前面是你现在所需要的一个

03:30.090 --> 03:31.090
循环值啊

03:31.090 --> 03:32.290
这个循环值的话呢

03:32.290 --> 03:33.890
如果你后面是什么类型的

03:33.890 --> 03:35.090
那么前面每一个

03:35.090 --> 03:36.290
就代表的是这种类型

03:36.790 --> 03:39.190
如果你后面是一个自付串素组

03:39.190 --> 03:40.290
那么它就是自付串

03:40.290 --> 03:41.890
如果是素质它就是素质

03:41.890 --> 03:43.090
如果是个对象的话

03:43.090 --> 03:44.190
那么它就是对象

03:44.690 --> 03:45.990
如果素组对象的话

03:45.990 --> 03:47.390
那么素组中每拿出来的

03:47.390 --> 03:48.290
它还是一个对象

03:48.690 --> 03:49.690
是这样一个逻辑

03:49.690 --> 03:50.590
所以这样的话呢

03:50.590 --> 03:52.690
我们大家其实是很简单用起来

03:53.090 --> 03:54.390
不会说是很复杂

03:54.790 --> 03:56.390
同时我们这边也说到的是

03:56.790 --> 03:57.890
V4语句的话呢

03:57.890 --> 03:59.690
我们在那个

04:00.890 --> 04:02.490
VUE的官网上面的话呢

04:02.490 --> 04:03.590
它会强调一点

04:03.590 --> 04:06.990
就是说我们尽量不要去和VVF的

04:06.990 --> 04:08.190
进行配合使用

04:08.790 --> 04:13.490
因为我们在做VVF跟V4的时候呢

04:13.490 --> 04:15.990
其实他们之间会有一个

04:15.990 --> 04:17.590
所谓的优先级的问题

04:17.590 --> 04:18.990
因为F的优先级呢

04:19.390 --> 04:22.090
我们说比我们的FOR会低一点

04:22.590 --> 04:25.190
这是属于在VUE上面所讲的

04:25.490 --> 04:27.590
那么在我们的MPV上面呢

04:27.590 --> 04:29.390
其实这个逻辑也是存在着的

04:30.090 --> 04:32.790
所以我们尽量的还是可以使用

04:32.790 --> 04:35.590
其他的一些方法来对它进行一些处理

04:36.190 --> 04:38.890
同时我们说V4的话呢

04:38.890 --> 04:40.290
在我们组件上

04:40.290 --> 04:42.390
依然是可以进行使用的

04:42.990 --> 04:45.790
在我们的MPV中组件也有

04:46.190 --> 04:47.890
是这个一个逻辑

04:48.090 --> 04:50.290
所以我们基本上我们这么讲吧

04:50.290 --> 04:53.890
就是在我们的VUE中所使用的

04:53.890 --> 04:55.490
调电渲染和列表渲染

04:55.890 --> 04:58.290
在我们的MPV中基本上都能用上

04:58.790 --> 05:00.490
只不过有一点就是

05:00.490 --> 05:01.490
我们其实这个的话

05:01.490 --> 05:04.890
我觉得在我们的MPV中和VUE中都是一样

05:05.290 --> 05:09.190
就是两者如果是有欠套列表渲染的话

05:09.190 --> 05:11.090
就是V4套V4

05:11.490 --> 05:14.290
我们一定要指定它的一个索引值

05:14.690 --> 05:16.990
不然的话你在里面循环的时候

05:16.990 --> 05:18.390
会出现就是

05:18.390 --> 05:19.290
并不知道是哪个

05:19.290 --> 05:21.090
不要用它的默认索引概念

05:21.390 --> 05:21.990
ok

05:22.590 --> 05:23.990
那么这是V4的特点

05:23.990 --> 05:26.790
那么现在我们给大家来演示一下吧

05:26.790 --> 05:28.190
看一下效果就可以了

05:28.190 --> 05:29.990
我们不做其他的复杂的

05:31.590 --> 05:32.590
首先第一点

05:32.590 --> 05:36.190
我们把调电渲染简单的看一下吧

05:36.390 --> 05:38.690
就是我们在模板里面

05:38.690 --> 05:44.180
我们完成一个简单的标签

05:44.180 --> 05:45.180
然后标签的话

05:45.180 --> 05:47.380
注意这边你不能去这么做

05:47.680 --> 05:48.780
你不能去这么做

05:49.680 --> 05:51.380
首先我们拿正常的来看一下

05:51.380 --> 05:54.080
我们说是VF

05:54.080 --> 05:54.880
然后的话

05:54.880 --> 05:57.080
我们给出一个最简单的条件

05:57.080 --> 05:59.680
咱们称之为flag

06:01.280 --> 06:02.680
里面写上的就是

06:03.480 --> 06:09.390
就是MPVUE的VF

06:12.230 --> 06:14.430
我们这边写上了一个MPVUEF

06:14.430 --> 06:17.230
然后我们在data return里面

06:17.230 --> 06:19.030
我们去把flag定义一下

06:19.330 --> 06:21.030
如果我们定义为q的话

06:21.030 --> 06:23.630
那么现在页面中一定是能够呈现的

06:23.630 --> 06:25.030
我们把它启动一下

06:25.430 --> 06:26.430
npn star

06:27.630 --> 06:29.630
同时我们也启动一下我们的

06:36.660 --> 06:37.660
微信开发者工具

06:39.660 --> 06:40.760
好 它启动起来了

06:41.860 --> 06:43.660
这个的话大家应该能看清对吧

06:43.760 --> 06:45.460
那么等会我们只是做一个实例

06:45.460 --> 06:46.660
演示一下就可以了

06:52.800 --> 06:54.400
这边是我是一个新页面

06:54.400 --> 06:55.300
就是tester

06:56.400 --> 06:59.800
那么它的Mendon.js依然是存在着

07:00.300 --> 07:01.000
导入View

07:01.000 --> 07:04.800
导入你现在的这一个页面级的View文件

07:04.800 --> 07:08.800
然后完成你现在NewView的一个对象的创建

07:09.100 --> 07:11.100
然后完成对象的一个挂载

07:12.900 --> 07:13.700
咱们看到了

07:13.700 --> 07:16.100
那么我们现在的MPVUEF

07:16.100 --> 07:18.500
就是MPVUEF就先出来了

07:18.500 --> 07:22.200
如果说我现在把它设置为first

07:25.960 --> 07:27.160
咱们看到就没有了

07:27.160 --> 07:27.660
OK

07:28.060 --> 07:29.360
那么这是很简单对吧

07:29.660 --> 07:30.960
然后紧接着继续

07:31.960 --> 07:34.660
我们每个都演示一遍就可以了

07:35.060 --> 07:37.060
你这时候的话如果来个Ls

07:37.060 --> 07:38.160
如果来个Ls

07:38.560 --> 07:39.960
那么这是MPVUE

07:40.860 --> 07:42.260
我们称为VLs

07:43.060 --> 07:44.460
如果是这样保存的话

07:44.460 --> 07:45.560
那么我们来看一下

07:47.360 --> 07:48.460
对吧Ls出来了

07:48.460 --> 07:48.960
OK

07:49.360 --> 07:51.060
然后的话我们再演示一下

07:51.060 --> 07:53.160
就是VLsF

07:53.760 --> 07:54.460
这个结构

07:54.460 --> 07:56.660
这个结构其实我们讲

07:56.660 --> 07:58.960
其实是在V的2.0里面

07:58.960 --> 08:00.460
其实我们很早就用到了

08:00.460 --> 08:00.960
对吧

08:01.260 --> 08:03.060
所以我们在这边写上

08:06.100 --> 08:07.600
GUN F

08:07.900 --> 08:09.600
如果等于我们写上

08:09.600 --> 08:11.000
如果把它写成为

08:11.000 --> 08:12.800
它如果等于等于1

08:13.500 --> 08:14.300
这样一个写法

08:14.300 --> 08:15.400
如果Flag

08:16.000 --> 08:17.500
这个等等2

08:18.800 --> 08:19.800
这样的格式

08:19.800 --> 08:20.800
然后再来

08:21.300 --> 08:23.300
那么它就是我们所谓的2

08:23.600 --> 08:24.600
它就是1

08:24.900 --> 08:26.300
我们这个写上3

08:26.800 --> 08:28.000
那么这个就是3

08:28.300 --> 08:29.400
最后写一个

08:29.800 --> 08:32.000
我们的H表签

08:32.400 --> 08:34.200
然后是VLs

08:34.800 --> 08:35.800
它是最后的

08:38.420 --> 08:39.220
好最后

08:41.020 --> 08:41.820
这样写上

08:41.920 --> 08:43.320
那么你把它改一下

08:43.420 --> 08:44.920
它如果是1的话

08:45.920 --> 08:47.320
那我们应该看到第一块

08:48.020 --> 08:48.420
对吧

08:49.020 --> 08:50.720
然后它如果是3的话

08:51.120 --> 08:52.620
那我们应该看到第三块

08:54.850 --> 08:55.350
对吧

08:55.550 --> 08:57.150
它如果是4的话

08:57.250 --> 08:58.550
那我们应该看到最后一块

09:02.000 --> 09:02.400
对吧

09:02.400 --> 09:02.700
好

09:02.900 --> 09:03.800
这个就很简单

09:03.800 --> 09:05.200
我们大家都能看懂了

09:05.200 --> 09:06.800
包括是之前咱们都做过

09:07.200 --> 09:08.400
第二我们说一下

09:08.400 --> 09:10.400
就是它现在有一个

09:10.600 --> 09:12.800
我们刚才说到的Template的使用方式

09:13.200 --> 09:14.800
那么Template的使用方式

09:14.800 --> 09:16.000
一定注意一下

09:16.600 --> 09:17.800
我们所谓的Template

09:17.800 --> 09:19.300
并不是我们现在所看到的

09:19.300 --> 09:20.800
外层的Template

09:21.400 --> 09:23.100
之前有同学一直这么干

09:23.100 --> 09:26.700
他是从外层去做Template的VF套作

09:26.800 --> 09:27.700
这个是不对的

09:28.100 --> 09:29.500
那么我们主要的做法

09:29.500 --> 09:32.300
是在它内部形成一个Template的区域

09:32.300 --> 09:34.700
如果你之前还记得我们微信小证据的话

09:34.700 --> 09:36.000
你是否还记得这个表签

09:37.400 --> 09:38.500
还记得一个Block

09:38.900 --> 09:39.300
对吧

09:39.500 --> 09:41.200
那么如果说你在这里面

09:41.200 --> 09:42.100
我们看一下

09:42.200 --> 09:44.200
如果你在这里面依然使用

09:44.200 --> 09:45.600
比如说我现在有一句

09:45.800 --> 09:47.600
就是h1我写出来

09:48.400 --> 09:53.500
这是我们的h1标签

09:57.940 --> 09:59.340
这是我们的h1标签

09:59.340 --> 10:00.940
然后我后面写上

10:02.040 --> 10:02.940
写点文字

10:02.940 --> 10:03.840
这是p

10:05.040 --> 10:11.660
就是新学习新知识

10:12.560 --> 10:12.860
好

10:12.860 --> 10:13.560
写上这个

10:13.560 --> 10:14.060
可以了

10:14.560 --> 10:16.260
那么我希望把这个内容

10:16.260 --> 10:17.760
一股脑的进行显示

10:17.760 --> 10:18.460
而并不是

10:18.460 --> 10:19.960
如果后面还有其他标签

10:19.960 --> 10:21.860
那么在我们的微信小证据里面

10:21.860 --> 10:22.960
咱们用的是这个

10:24.660 --> 10:25.360
你还记得吗

10:25.560 --> 10:26.560
我们可以用Block

10:27.060 --> 10:28.560
作为一个区块来显示

10:28.560 --> 10:29.660
那么这里能不能用呢

10:29.660 --> 10:30.660
我们来看一下

10:32.600 --> 10:33.700
我们一直说过

10:33.700 --> 10:34.900
在MPView中的话

10:35.000 --> 10:38.400
它其实是可以把你现在的部分的

10:38.400 --> 10:39.600
微信小证据的代码

10:39.600 --> 10:42.000
和我们的html5代码是放在一起的

10:42.000 --> 10:43.300
但这个能不能用啊

10:43.700 --> 10:44.200
你来看

10:44.600 --> 10:46.100
我们写上af

10:46.100 --> 10:46.700
然后呢

10:46.700 --> 10:48.600
我们依然带上我们的

10:49.000 --> 10:50.600
就是区块

10:50.600 --> 10:54.560
我们称之为Block

10:55.060 --> 10:55.460
f

11:01.470 --> 11:02.570
我们给它一个q

11:06.180 --> 11:06.380
好

11:06.380 --> 11:07.480
你来看一下效果

11:07.480 --> 11:08.480
我如果这样打

11:11.160 --> 11:12.260
它呈现出来了

11:12.260 --> 11:13.460
那么现在我们看一下

11:14.060 --> 11:15.160
给它一个first

11:19.570 --> 11:20.770
你看就没有了

11:21.070 --> 11:21.770
是不是说

11:21.970 --> 11:23.670
也就是我们在MPView中

11:23.670 --> 11:25.770
我们学到的那个template

11:25.770 --> 11:26.970
在这边依然可以用

11:26.970 --> 11:28.870
我们先说一下微信小证据

11:29.170 --> 11:30.570
我们基本都可以用这个

11:30.570 --> 11:31.870
但是这个很有意思啊

11:32.170 --> 11:34.170
就是我们刚才强调了

11:34.170 --> 11:36.370
就是这个vf语句的话呢

11:36.370 --> 11:38.370
它是属于view的语法

11:38.370 --> 11:40.070
微信里面的写法是怎么写的

11:40.070 --> 11:40.770
你还记得吗

11:41.170 --> 11:43.070
微信帽号yif这样写的

11:43.470 --> 11:44.070
这样写的话

11:44.070 --> 11:44.870
你保存

11:44.870 --> 11:46.670
它的编译过程是没有问题的

11:46.970 --> 11:48.070
这时候你来看一下

11:48.070 --> 11:49.170
但是它的运行时候

11:49.170 --> 11:50.270
会有一个小问题

11:50.270 --> 11:50.870
就是说

11:51.170 --> 11:53.170
它无论你这里面给什么值

11:53.270 --> 11:54.970
它永远是会进行显示

11:54.970 --> 11:55.970
它不会爆错

11:56.370 --> 11:57.970
微信yif你会发现

11:57.970 --> 11:59.370
我如果给一个force

11:59.370 --> 12:00.070
你们看到了

12:00.070 --> 12:01.370
这边会呈现出来的

12:01.670 --> 12:03.570
我给一个q的话是一样的

12:07.750 --> 12:09.050
你看它也会呈现

12:09.350 --> 12:10.250
所以讲的是

12:10.450 --> 12:13.950
这个语句如果说你真的这么打了

12:13.950 --> 12:15.950
那么语法上是不会爆错

12:15.950 --> 12:17.550
因为我们强调的是

12:18.250 --> 12:20.450
在整个的我们template里面

12:20.450 --> 12:22.750
我们是可以用我们的微信小证语法

12:22.750 --> 12:23.750
但是v

12:23.950 --> 12:26.450
特别是针对于我们的条件宣认来讲

12:27.250 --> 12:29.150
它只识别我们的

12:29.350 --> 12:31.950
vue的条件宣认的写法结构

12:32.150 --> 12:33.950
所以这种结构

12:33.950 --> 12:34.950
这样写的

12:35.050 --> 12:36.850
除非你是有特别需求

12:37.050 --> 12:37.950
否则的话

12:37.950 --> 12:38.850
我们说

12:39.550 --> 12:40.950
特殊需求的意思是指

12:40.950 --> 12:43.150
我已经习惯性用block了

12:43.150 --> 12:45.150
那么它这个看起来更舒服

12:45.150 --> 12:46.350
或者说你更有

12:46.650 --> 12:48.150
就是你希望就是这么写的

12:48.150 --> 12:49.550
那么你才可以去用它

12:49.950 --> 12:52.450
因为我如果说你已经习惯了我们的

12:53.150 --> 12:53.950
那个叫做

12:55.650 --> 12:56.650
vue的写法的话

12:56.650 --> 12:57.950
就是template的写法的话

12:57.950 --> 12:59.850
那你也可以用template来表述

12:59.850 --> 13:01.250
我们把这个换一下

13:01.950 --> 13:03.250
用template来写

13:05.670 --> 13:07.870
那么无论你用block还是template

13:07.870 --> 13:09.770
你在识别这个内容的时候

13:09.770 --> 13:11.670
我们本身最后的这个

13:11.670 --> 13:12.270
f

13:12.370 --> 13:14.070
那个标签就是template

13:14.070 --> 13:15.670
它是不会呈现出来的

13:17.370 --> 13:18.070
我们来看

13:18.670 --> 13:19.470
我们打开了

13:19.470 --> 13:21.370
用圆码的方式来看一下

13:21.470 --> 13:22.370
我们发现吗

13:22.370 --> 13:23.570
里面是没有template

13:23.570 --> 13:24.670
最大的vue里面

13:24.670 --> 13:26.470
跟文素下面就出现了两个

13:26.470 --> 13:27.570
我们所要的标签

13:28.370 --> 13:28.870
ok

13:28.870 --> 13:29.970
那么这个的话

13:29.970 --> 13:32.170
就是随便你写h1还p标签

13:32.170 --> 13:34.370
然后它最后总会把它转换成

13:34.370 --> 13:36.570
我们现在的vue标签

13:37.170 --> 13:37.970
vue标签

13:38.170 --> 13:40.370
所以这里的这个样式

13:40.370 --> 13:41.970
你首先要区别出

13:41.970 --> 13:44.570
它并非是按照你现在这个

13:44.570 --> 13:45.970
你说我这个想大一点

13:45.970 --> 13:46.970
这个想小一点

13:46.970 --> 13:47.470
不是

13:47.770 --> 13:48.670
它转换的时候

13:48.670 --> 13:49.970
全部转成vue标签

13:50.570 --> 13:51.570
全是靠样式来

13:51.570 --> 13:54.270
因为我们想微信小程序里面

13:54.270 --> 13:56.470
怎么会存在着h1标签呢

13:56.870 --> 13:58.370
就算它没有这个概念

13:58.370 --> 14:00.870
你想想看它怎么可能把这个字体给放大

14:00.870 --> 14:03.870
它的放大需要通过它的wxss来完成的

14:04.370 --> 14:04.870
对吧

14:05.070 --> 14:06.670
所以这点你也要明确

14:07.070 --> 14:07.970
所以这边的话

14:07.970 --> 14:11.070
我们一般性h1是我现在这边写的

14:11.270 --> 14:12.770
一般性如果是行的话

14:12.770 --> 14:15.570
我们基本上都可以给一个div

14:23.630 --> 14:24.530
你来看一下

14:26.920 --> 14:27.720
是不是一样的

14:28.120 --> 14:29.520
所以对于文字的显示

14:29.520 --> 14:31.920
我们一般都会以div来呈现

14:32.320 --> 14:33.320
不要说是

14:33.320 --> 14:34.420
因为在页面中

14:34.420 --> 14:36.620
特别是对于我们h5的布局来讲的话

14:36.620 --> 14:40.220
有时候是我们可能会注意一些

14:40.220 --> 14:41.820
标签的语异化概念

14:42.020 --> 14:43.920
但是在我们的mpv中的时候

14:44.220 --> 14:47.020
特别是它不会让你html标签

14:47.020 --> 14:48.020
它会进行转换

14:48.620 --> 14:50.020
那么只有两种情况

14:50.020 --> 14:52.120
第一种就是你已经做好h5页面了

14:52.120 --> 14:53.320
你想快速移植

14:53.320 --> 14:54.920
那么你不需要去改里面标签

14:54.920 --> 14:56.320
你直接拿过来用就行

14:56.520 --> 14:59.420
但如果说你是直接用mpv进行开发的话

14:59.420 --> 15:02.020
那么你不需要特别的去注意

15:02.020 --> 15:03.320
这种标签的展示

15:03.320 --> 15:04.420
有时候我们脑子里面

15:04.420 --> 15:06.220
会把这种标签的语异化

15:06.420 --> 15:08.020
先给成立出来

15:08.520 --> 15:10.920
这个是大可不必的

15:11.220 --> 15:11.720
OK

15:11.720 --> 15:13.420
那么我们说到了template

15:13.420 --> 15:15.120
那么同时这个template

15:15.120 --> 15:18.420
依然是可以存在着我们所谓的两极化

15:18.420 --> 15:19.820
也就是我们的ls预据

15:19.820 --> 15:21.020
我们把它复制一下

15:21.020 --> 15:21.820
修改一下

15:23.720 --> 15:24.920
你把它改一下

15:27.700 --> 15:35.570
这是我们的v标签e24部分

15:37.170 --> 15:40.670
这是我们v标签的f部分

15:43.640 --> 15:44.640
我们来看一下

15:45.140 --> 15:47.840
我们给个q应该显示是上面这一块

15:47.840 --> 15:48.240
对吧

15:48.240 --> 15:49.040
f部分

15:49.540 --> 15:50.840
然后我们给一个first

15:56.270 --> 15:57.170
ls部分

15:57.170 --> 15:57.670
对吧

15:57.670 --> 15:58.270
OK

15:58.470 --> 15:59.270
那么这样的话

15:59.270 --> 16:02.570
我们也是能够完成你现在的一个操作的

16:02.870 --> 16:04.070
那么紧接着

16:04.470 --> 16:05.470
我们来说一下

16:05.670 --> 16:07.070
在key里面

16:07.070 --> 16:08.070
在view里面

16:08.370 --> 16:11.270
我们强调了一个叫做key的管理

16:11.270 --> 16:12.970
可附用元素的概念

16:14.770 --> 16:15.870
这个我们注意一下

16:25.310 --> 16:27.410
就是有一个可附用元素的概念

16:27.410 --> 16:28.910
那么它的做法

16:28.910 --> 16:30.910
主要是借助于template

16:31.110 --> 16:35.410
来完成里面一些相同级代码

16:35.410 --> 16:38.610
不同属性的一些值得可附用性

16:38.910 --> 16:39.810
那么这个的话

16:39.810 --> 16:41.210
我这边强调一下

16:41.610 --> 16:43.610
那么这个在我们的mpview中

16:43.610 --> 16:44.610
也有一所区别

16:44.610 --> 16:45.210
这个是

16:46.410 --> 16:48.610
我们把标签打出来

16:50.110 --> 16:53.010
template我们写上vf

16:53.510 --> 16:55.610
然后我们这里边内容改一改

16:56.110 --> 16:59.010
因为我们需要有一些可附用元素

16:59.910 --> 17:01.410
vf我们写上

17:02.010 --> 17:02.810
那个

17:05.410 --> 17:06.010
登录

17:06.210 --> 17:07.810
我们称之为登录

17:08.810 --> 17:09.910
称为login name

17:11.410 --> 17:12.010
登录名

17:13.810 --> 17:15.710
如果等于我们的

17:18.070 --> 17:20.470
登录名如果正好等于我们的

17:20.970 --> 17:21.470
Hello

17:22.170 --> 17:23.670
那么它将显示

17:23.770 --> 17:25.970
这个template里面的内容

17:26.370 --> 17:27.970
我们内容显示为

17:28.870 --> 17:29.470
label

17:30.170 --> 17:32.270
这个label我们只是作为一个呈现

17:32.370 --> 17:33.670
就是你现在的

17:37.440 --> 17:38.540
这个改logging吧

17:42.560 --> 17:43.960
log

17:44.260 --> 17:45.660
然后user name

17:47.060 --> 17:48.760
user name我们呢

17:49.060 --> 17:51.460
告诉他你现在是一个输入框

17:52.460 --> 17:54.260
输入框的我们这个不用打

17:54.260 --> 17:54.960
然后呢

17:54.960 --> 17:57.560
我们直接可以给他一个placeholder

17:57.860 --> 17:59.560
告诉他你显示

18:02.010 --> 18:03.810
输入用湖名

18:04.810 --> 18:06.310
啊你可以这就是这样一个字

18:06.710 --> 18:08.910
然后呢同时你也可以

18:10.010 --> 18:11.110
用template

18:12.710 --> 18:13.710
给一个else

18:20.270 --> 18:20.670
对吧

18:20.770 --> 18:21.370
这样给

18:21.570 --> 18:22.270
然后呢

18:22.270 --> 18:24.570
我们下面来一个template

18:25.070 --> 18:27.370
然后里边的内容结构是一样的

18:27.370 --> 18:29.670
也是一个label加import

18:29.970 --> 18:31.070
只不过这边呢

18:31.070 --> 18:33.170
我们写上的是你现在的

18:33.670 --> 18:34.170
呃

18:35.170 --> 18:35.670
telephone

18:43.400 --> 18:44.700
请输入电话

18:48.920 --> 18:49.920
输入电话好

18:50.220 --> 18:51.620
我们就举这个实例

18:51.880 --> 18:54.520
那么这个实例你会发现的事情是什么呢

18:54.520 --> 18:57.320
是我们现在在上面运行的时候

18:57.520 --> 18:58.820
和下面运行的时候

18:58.820 --> 19:00.620
其实里面元素结构是一样的

19:00.620 --> 19:02.420
它都是一个label加一个import

19:02.420 --> 19:03.520
label加import

19:03.820 --> 19:06.220
只不过就是在这label里面的文字

19:06.220 --> 19:06.620
不一样

19:06.620 --> 19:09.520
以及我们import里面的这份内容不一样

19:09.960 --> 19:12.720
那么此时我们在这边注意了

19:12.960 --> 19:15.160
我们去做一个按钮

19:15.160 --> 19:17.960
我们的按钮会进行logging

19:18.060 --> 19:19.560
那个nand的切换

19:19.960 --> 19:20.960
会进行切换

19:21.060 --> 19:22.960
在它切换的过程中呢

19:23.160 --> 19:26.260
那么view的操作和我们现在的

19:26.260 --> 19:28.960
这个mpview里面的操作相对而言

19:28.960 --> 19:30.060
有个小区别

19:30.360 --> 19:31.260
是这个意图

19:31.560 --> 19:32.560
我们来看一下

19:32.960 --> 19:34.460
首先我们做一个按钮

19:34.460 --> 19:35.560
我们来看一下

19:37.360 --> 19:38.260
按钮的话呢

19:38.260 --> 19:39.360
我们给一个

19:40.060 --> 19:40.660
click

19:40.760 --> 19:41.560
单击时间

19:41.560 --> 19:42.660
我们称之为

19:43.460 --> 19:45.260
牵着logging

19:47.490 --> 19:48.790
然后把这个事件

19:48.790 --> 19:50.690
我们写到message里面来

19:51.490 --> 19:51.890
对吧

19:51.890 --> 19:52.990
我们写到message

19:54.970 --> 19:56.470
然后我们改变一下

19:56.470 --> 19:57.170
改变什么

19:57.170 --> 20:03.360
我们改变的是这个logging-nand的值

20:05.470 --> 20:07.870
默认这个值是logging

20:09.970 --> 20:11.570
接下去我们改变一下

20:11.970 --> 20:14.270
diss直接点logging-nand

20:14.470 --> 20:17.570
等于我们给值给一个吉他值

20:17.570 --> 20:21.470
这就是telephone

20:23.410 --> 20:25.710
那么这边写上就是

20:26.810 --> 20:27.710
改变登录

20:31.090 --> 20:32.090
好你来看一下

20:34.230 --> 20:35.230
页面呈现的时候

20:35.230 --> 20:37.130
会上面是个logging-nand label

20:37.130 --> 20:38.730
然后有一个输入框

20:38.730 --> 20:39.430
没问题

20:39.730 --> 20:41.430
你的输入框中会输东西

20:41.730 --> 20:42.530
随便输啥

20:42.830 --> 20:45.330
然后一旦你现在完成输入以后

20:45.330 --> 20:46.430
你点改变登录

20:46.430 --> 20:48.830
那么这时候它会跳转到第二个模板

20:49.230 --> 20:50.630
那么这里请注意一下

20:50.830 --> 20:53.430
在viewe上面有一点强调的是

20:53.430 --> 20:56.230
如果你里面是两个相同的元素

20:56.230 --> 20:59.330
只是有一个简单属性不一样的时候

20:59.530 --> 21:01.030
当你进行跳转的时候

21:01.030 --> 21:03.430
它其实会保留原有的这个值

21:03.830 --> 21:05.230
但是对view来讲的话

21:05.230 --> 21:06.430
对mpview来讲的话

21:06.430 --> 21:08.030
它其实是全新的改变

21:08.330 --> 21:09.630
它是一种全新的改变

21:10.030 --> 21:10.930
它就意味着

21:10.930 --> 21:13.430
它会把两个部分的内容

21:13.430 --> 21:16.710
包括是下面这个全身替换成一个新的

21:16.710 --> 21:17.430
input元素

21:17.930 --> 21:19.430
它不会去保留原值

21:19.730 --> 21:21.630
那么在我们原有的那个上面

21:21.630 --> 21:22.830
它会做这个事情的

21:23.730 --> 21:25.630
这点咱们需要知道一下就可以了

21:25.930 --> 21:27.530
那么在原有的

21:27.530 --> 21:30.330
特别是针对于view的一个操作上面

21:30.330 --> 21:31.430
怎么解决那个问题

21:31.430 --> 21:32.230
你还记得吗

21:32.930 --> 21:34.430
你那时候的解决方式是

21:34.430 --> 21:36.830
你可以在我们的每一个input后面

21:36.830 --> 21:38.030
去加上一个key

21:38.530 --> 21:39.830
你可以去加上一个key

21:40.130 --> 21:41.230
那时候是这么做的

21:41.430 --> 21:42.230
你可以加上一个

21:42.230 --> 21:44.430
这个是叫做u3n

21:44.830 --> 21:47.130
我们称之为这个key

21:47.130 --> 21:49.230
然后这里加上是telephone

21:52.130 --> 21:53.230
你可以这样叫

21:53.530 --> 21:56.030
这样以至区别这是两个部分

21:56.030 --> 21:57.030
你这样写好以后

21:57.030 --> 21:58.930
你在这边去做的话是一样的

21:59.630 --> 22:01.030
你看它也能切换

22:01.030 --> 22:01.530
对吧

22:01.630 --> 22:02.530
所以讲的是

22:02.630 --> 22:05.130
这个不存在我们所谓的一个

22:05.130 --> 22:06.330
可复用的问题

22:06.330 --> 22:07.530
我们本身来讲

22:07.530 --> 22:08.930
它的每次的操作

22:09.030 --> 22:11.830
都会换成一个全新的空间的显示

22:12.530 --> 22:14.430
这边部分大家也能看到

22:14.730 --> 22:15.230
ok

22:15.330 --> 22:17.130
那么这个我就不在这多说了

22:17.530 --> 22:19.030
那么再讲下去

22:19.030 --> 22:20.430
就是讲的是秀了

22:20.430 --> 22:21.530
刚才PPT说到的

22:21.530 --> 22:22.730
那么秀的呈现

22:22.730 --> 22:25.030
其实本上对我们来讲不是难题

22:25.530 --> 22:26.830
我们比较一下

22:26.830 --> 22:27.830
写一个就可以了

22:27.830 --> 22:28.530
我们说

22:28.530 --> 22:29.530
我们做一个

22:29.730 --> 22:30.330
注意

22:30.330 --> 22:31.330
有同学老师问

22:31.330 --> 22:32.030
有会说

22:32.030 --> 22:33.730
老师你这里面能用view吗

22:34.330 --> 22:35.430
你来看一下吧

22:39.480 --> 22:40.880
他说你是html表签

22:40.880 --> 22:41.980
你能用view吗

22:43.580 --> 22:44.580
我们这里面

22:45.080 --> 22:47.080
view tag

22:49.150 --> 22:50.350
默认保存

22:50.350 --> 22:52.050
我们来看一下它的呈现

22:52.950 --> 22:54.550
view tag可以呈现

22:54.550 --> 22:55.050
对吧

22:55.250 --> 22:56.450
然后在这上面

22:56.450 --> 22:57.450
我们再来

22:57.450 --> 22:59.750
这边如果你写上的是我们的

23:00.050 --> 23:00.950
view

23:01.450 --> 23:03.550
我们看能不能去把它出来

23:03.550 --> 23:05.550
那么我们依然采用的是这个

23:05.550 --> 23:07.750
因为这里有一个token force

23:08.450 --> 23:09.750
这边是一个force

23:10.250 --> 23:11.350
所以view tag

23:11.550 --> 23:12.150
没有

23:12.750 --> 23:13.350
再来

23:13.750 --> 23:15.750
我们改成true

23:20.130 --> 23:20.930
依然可以

23:20.930 --> 23:21.230
对吧

23:21.230 --> 23:21.830
呈现

23:22.130 --> 23:24.030
从我们的原码来看的话

23:24.030 --> 23:25.030
那么

23:25.330 --> 23:25.930
这个

23:26.130 --> 23:28.030
它本身就是我们所谓的

23:29.430 --> 23:30.030
看到吗

23:30.130 --> 23:31.030
这边一个view

23:31.930 --> 23:33.330
我们还是那句话

23:33.330 --> 23:36.330
就是你本身的我们的所有的

23:36.630 --> 23:38.230
那个微信小程序的标签

23:38.230 --> 23:39.430
其实这里面都能用

23:39.730 --> 23:41.630
但是我们不必要去这样用

23:41.630 --> 23:43.230
除非你现在是微信小程序

23:43.230 --> 23:44.630
哪边有这段代码

23:44.630 --> 23:45.630
你已经做过了

23:45.630 --> 23:47.630
你想把它复制过来

23:48.230 --> 23:50.330
这个时候你才会搬这个标签

23:51.430 --> 23:52.730
我们特别强调一点

23:52.730 --> 23:53.430
就是说

23:54.430 --> 23:57.830
我们不是不允许你在里面完全地使用

23:57.830 --> 24:00.830
h5和那个小程序的那个混变码

24:00.830 --> 24:02.630
因为有时候必须是混变码

24:02.930 --> 24:04.530
但是我们没有义务

24:04.530 --> 24:07.230
或者说没有理由就是在没有这种

24:07.630 --> 24:08.630
特殊情况情况下

24:08.630 --> 24:10.130
你自个儿就混

24:10.730 --> 24:14.430
就是说你明明这边是可以去使用到div

24:14.430 --> 24:16.030
或者说是h5标签的

24:16.030 --> 24:17.330
它系统会帮你转换的

24:17.330 --> 24:18.830
你非自己去做这个

24:19.130 --> 24:21.630
那么这个合法是我们是不建议不可许的

24:21.930 --> 24:22.430
这个是

24:22.730 --> 24:24.430
我只是说一下可以用

24:25.030 --> 24:27.130
所以我们一般性我们这边都可以

24:27.130 --> 24:28.830
直接用div的表示调

24:29.630 --> 24:32.030
不然的话你就失去了npview的概念了

24:32.030 --> 24:34.530
你这里面直接去写你现在的view结构

24:34.530 --> 24:35.130
何必呢

24:35.130 --> 24:35.530
对吧

24:36.330 --> 24:37.330
我们来删一下

24:37.330 --> 24:39.830
我们现在给了一个我们的force

24:44.690 --> 24:46.290
我们给完force以后的话

24:46.290 --> 24:47.990
见面中你会简单的看到

24:47.990 --> 24:49.290
它本身没有呈现

24:49.290 --> 24:51.990
也就意味着你会发现这里面什么元素都没有

24:51.990 --> 24:54.090
这其实就是我们刚才最早说到的

24:54.090 --> 24:56.390
就是fg和qe的区别

24:56.390 --> 24:57.390
秀语区的区别

24:57.890 --> 24:58.590
区别就在于

24:58.590 --> 25:00.190
但是它如果没有的话

25:00.190 --> 25:01.690
那就不用整个都没有

25:02.290 --> 25:04.090
或者称之为我们的一个

25:04.890 --> 25:05.990
我们把它拿出来

25:05.990 --> 25:06.990
你看到这边

25:12.200 --> 25:16.100
我们把它的内容我们里面再做一集进来

25:16.100 --> 25:17.300
你只要看得更清楚

25:17.300 --> 25:18.600
我们再写一个view

25:26.980 --> 25:27.780
你来看一下

25:31.130 --> 25:31.830
看到没有

25:32.130 --> 25:33.930
这边的view tagger

25:34.930 --> 25:37.230
这个标签它是有的

25:37.530 --> 25:39.730
在我们见面中的原码里面

25:39.730 --> 25:44.730
在我们见面的原码里面

25:44.730 --> 25:46.330
是有这个view tagger

25:46.330 --> 25:47.730
但是它不呈现

25:48.630 --> 25:49.130
OK吧

25:49.530 --> 25:50.030
是这个

25:50.230 --> 25:51.530
但是你注意这里

25:51.830 --> 25:52.730
你注意这里

25:53.130 --> 25:55.130
这里的有意思的点在哪里

25:55.330 --> 25:55.730
就是

25:56.830 --> 25:58.530
我们把这个放上来

25:58.630 --> 25:59.930
我们把这个取消也可以

26:00.530 --> 26:01.530
你会发现的是

26:01.730 --> 26:05.330
它本身给到了一个系统格式样式

26:05.330 --> 26:06.330
这叫系统格式

26:06.530 --> 26:07.530
系统格式的样式

26:07.930 --> 26:11.330
它是没有去做一个所谓的隐藏

26:11.330 --> 26:13.330
这是我们所谓的hidden操作的

26:13.930 --> 26:15.730
在我们的view中

26:15.930 --> 26:18.330
我们可以看到它是有一个隐藏操作

26:18.330 --> 26:18.730
对不对

26:19.430 --> 26:22.930
但是在我们的整个微信小程序里面

26:23.030 --> 26:25.630
它本身这边你是看不见那个隐藏的

26:25.630 --> 26:28.530
它内部对它做了一个隐藏的

26:28.630 --> 26:30.730
一个样式的过渡效果

26:31.330 --> 26:33.330
所以这点又是一个小区别

26:33.330 --> 26:34.430
所以一定要记住

26:34.830 --> 26:36.830
就是在我们微信小程序

26:36.830 --> 26:38.330
或者称之为mpview

26:38.330 --> 26:40.730
所对的visual的一个过程中

26:41.030 --> 26:43.930
它页面中是会有这个解析

26:43.930 --> 26:46.530
但是它本身微信小程序

26:46.730 --> 26:48.330
不在样式上操作

26:48.730 --> 26:50.930
而是直接在它内部完成了

26:50.930 --> 26:52.130
对这个格式的隐藏

26:53.330 --> 26:54.730
这个是这边要讲到的

26:55.030 --> 26:56.030
不然你会找

26:56.030 --> 26:58.530
老师怎么没找到我们的hidden隐藏

26:58.730 --> 27:00.530
原因就在于它是内部格式

27:01.130 --> 27:03.730
它并不是在我们你所看到的样式上

27:03.730 --> 27:04.530
给你设置出来

27:05.730 --> 27:09.530
这就是visual本身在显示与否上面

27:09.530 --> 27:11.130
那么我们上面的话不说了

27:11.130 --> 27:12.030
只显示一块

27:12.030 --> 27:13.730
你压根儿看不到那一块的存在

27:15.830 --> 27:16.730
是这个原因

27:17.130 --> 27:19.030
那么同时我们再说一下

27:19.030 --> 27:21.130
就是刚才我们前面强调过的

27:21.130 --> 27:22.130
这个我在这儿补

27:22.130 --> 27:23.230
只是还是强调一下

27:23.230 --> 27:25.430
vif跟visual

27:25.730 --> 27:27.530
如果你同时使用的话

27:27.530 --> 27:30.530
那么它其实两者之间会有一个

27:32.130 --> 27:34.330
主要vif跟visual同时使用

27:34.530 --> 27:36.930
两者之间由于它本性上的区别

27:36.930 --> 27:38.530
所以它们两者的呈现

27:38.730 --> 27:41.530
会有一定的问题

27:41.730 --> 27:45.730
所以visual跟visual也不要嵌套使用

27:46.030 --> 27:48.030
visual跟visual也不要嵌套使用

27:49.030 --> 27:51.030
讲到这儿的话我们觉得就差不多

27:51.030 --> 27:52.730
我们条件渲染就可以了

27:53.130 --> 27:54.430
然后最后还是那句话

27:54.430 --> 27:55.930
就是条件渲染的话

27:56.530 --> 27:57.930
就是和vifual

27:57.930 --> 28:01.030
我们特别是在我们的vue跟npvue中

28:01.030 --> 28:03.930
也是尽量不要去对它进行所谓的

28:05.730 --> 28:07.330
所谓的就是嵌套使用

28:07.530 --> 28:09.130
这个使用因为本身来讲

28:09.130 --> 28:10.930
它会有一个优先级的区别

28:12.230 --> 28:14.130
这是属于条件渲染的概念

28:15.130 --> 28:16.930
紧接着我们后面继续

28:17.330 --> 28:18.530
我们在ppd的后面

28:18.530 --> 28:20.330
我们开始讲解列表渲染

28:21.330 --> 28:24.130
的话其实对于我们大家的

28:24.130 --> 28:25.630
所有的操作同学来讲

28:25.630 --> 28:27.630
其实还是不陌生的一个东西

28:28.130 --> 28:31.330
我们其实讲得够专业列表渲染

28:31.330 --> 28:34.930
其实就是我们在试图层的一种

28:34.930 --> 28:36.130
所谓的循环

28:36.330 --> 28:37.930
只不过它的这个循环

28:37.930 --> 28:39.330
是在系统做渲染

28:39.530 --> 28:41.930
做页面的时候会自动完成的

28:42.330 --> 28:44.130
所以我们把这个注销一下

28:54.560 --> 28:55.760
简单说一下就可以

28:56.560 --> 28:58.960
那么在npvue中的列表渲染

28:58.960 --> 29:02.560
其实它还是延续着我们之前

29:02.560 --> 29:05.560
大家所要求的或者说所看到的那种

29:06.060 --> 29:08.860
就是我们data中的数据复制

29:08.860 --> 29:10.660
然后在页面中呈现的效果

29:10.860 --> 29:12.120
做一个简单势力

29:12.120 --> 29:13.160
演示一下就可以

29:13.760 --> 29:15.160
我们做一个UL

29:15.560 --> 29:16.760
做个UL结构

29:16.760 --> 29:19.960
然后UL结构我们里面去写上li

29:20.360 --> 29:21.760
li我们做渲染

29:21.760 --> 29:22.760
那么本身来讲

29:22.760 --> 29:26.160
我们就应该做在li上做一个v4

29:26.560 --> 29:28.360
然后我们后面给出的是

29:28.360 --> 29:30.160
你现在所要显示的

29:30.460 --> 29:31.760
我们内容比如说

29:31.960 --> 29:33.360
我们的student

29:34.460 --> 29:35.460
我们称为item吧

29:35.460 --> 29:37.160
这是属于每一项对吧

29:37.360 --> 29:41.860
硬针对于我们的student学员

29:42.360 --> 29:43.560
当然这个学员的话

29:43.560 --> 29:45.460
我们下面会给出他的一个宿主

29:45.860 --> 29:48.160
然后在li里面我们去给出

29:48.160 --> 29:49.860
我们每一个hush tabs

29:50.160 --> 29:53.760
我们item里面的每一个学员的姓名

29:54.360 --> 29:54.860
这样给

29:55.860 --> 29:58.260
然后我们在data里面

29:58.260 --> 30:00.160
我们去给出这一个宿主

30:00.160 --> 30:02.260
student, students

30:02.660 --> 30:03.460
他是个宿主

30:03.460 --> 30:06.460
但是由于他里面需要的是一个

30:06.460 --> 30:08.660
对象的点属性的协防

30:09.060 --> 30:11.360
所以这边我们给的就是一个

30:11.760 --> 30:12.760
学员的姓名

30:13.060 --> 30:15.160
名字我们称之为叫tom

30:15.660 --> 30:17.360
然后第二个我们来

30:17.760 --> 30:18.960
叫做写两个

30:19.460 --> 30:20.660
我们写上marry

30:21.760 --> 30:23.660
这样的话虽然这边报红线

30:23.660 --> 30:26.560
这个红线我们大可不用理他

30:26.560 --> 30:27.160
为什么

30:27.160 --> 30:29.460
因为我们现在的这个写法

30:29.460 --> 30:32.560
其实是我们并不是微信所

30:32.560 --> 30:34.360
不是微信所就是vscoder

30:34.360 --> 30:35.960
这个软件所能识别的

30:36.260 --> 30:37.460
不是它能识别的

30:37.760 --> 30:39.260
所以在这个前提下面的话

30:39.260 --> 30:39.860
它会报

30:40.460 --> 30:41.660
如果你不想看的话

30:41.660 --> 30:42.460
你可以隐藏掉

30:42.460 --> 30:43.460
但是我们现在的话

30:44.260 --> 30:45.460
显示着也无所谓

30:45.860 --> 30:47.860
但是我们只要把它保存好

30:47.860 --> 30:49.260
让它编译完成以后

30:49.460 --> 30:50.360
就可以运行

30:51.060 --> 30:54.060
我们看到这边有一个小的一个

30:56.220 --> 30:57.020
警告吗

30:57.020 --> 30:57.820
我们看一下

30:58.020 --> 30:58.620
显示

30:58.920 --> 30:59.520
没问题

30:59.520 --> 31:00.120
这些是

31:00.320 --> 31:01.420
fone marry

31:02.520 --> 31:03.420
我们看到的是

31:03.620 --> 31:06.120
现在它依然是通过这样的方式

31:06.120 --> 31:08.220
能够呈现出我们现在的数据来

31:08.220 --> 31:08.620
对吧

31:09.120 --> 31:10.120
这个是可以的

31:12.420 --> 31:13.020
好

31:13.020 --> 31:13.820
紧接着

31:13.920 --> 31:14.820
下面是个警告

31:14.820 --> 31:15.620
不用管他

31:17.420 --> 31:19.420
警告是说这个标签

31:19.420 --> 31:20.220
这上面的

31:20.720 --> 31:22.420
hazel xlist key

31:22.920 --> 31:23.820
这个没有关系

31:23.820 --> 31:25.220
这是属于那个

31:26.220 --> 31:27.820
给出的一个告诉我

31:27.820 --> 31:29.020
这个标签

31:29.020 --> 31:31.020
就是在组建列表上面

31:31.020 --> 31:32.920
循环里面会有一个v4

31:32.920 --> 31:34.220
可能存在着一个

31:36.780 --> 31:37.580
key的问题

31:37.780 --> 31:38.380
这个

31:42.690 --> 31:43.890
因为我们本身来讲

31:43.890 --> 31:45.990
这个不是view

31:45.990 --> 31:47.790
我们所以直接这样用的话

31:47.790 --> 31:49.290
我们看到效果上面

31:49.290 --> 31:50.790
就可以直接出来效果了

31:51.290 --> 31:52.790
紧接着我们往下看

31:52.990 --> 31:56.690
如果说你现在v4与g这样简单运用

31:56.690 --> 31:57.190
会了

31:57.390 --> 31:59.390
那我们觉得这个就是很简单了

31:59.390 --> 32:00.990
紧接着我们还去往下

32:01.490 --> 32:04.490
有时候我们经常需要用到它的锁影

32:04.490 --> 32:06.390
所以我们经常给一扩号

32:06.390 --> 32:08.390
是不是这边经常给一个锁影呢

32:08.590 --> 32:10.590
所以我们前面这边很简单

32:10.590 --> 32:14.630
我们会给一个index

32:15.230 --> 32:16.030
然后保存

32:16.030 --> 32:17.230
然后我们来看一下

32:18.830 --> 32:19.930
是不是01

32:19.930 --> 32:20.930
锁影就出来了

32:21.530 --> 32:21.930
ok

32:23.030 --> 32:23.730
再往下

32:23.930 --> 32:25.630
我们这边还能继续往下看

32:25.730 --> 32:27.830
那么如果说你现在

32:28.530 --> 32:32.530
还需要有更多的一些的那个设置的话

32:32.530 --> 32:34.430
那么我们完全可以在里面

32:34.730 --> 32:36.030
把它给显示出来

32:36.030 --> 32:38.030
比如说我们有一个

32:38.630 --> 32:40.530
二参三参的纸的套作

32:40.530 --> 32:42.330
因为你现在呢是两个value

32:42.330 --> 32:44.130
我们想直接显示对吧

32:44.330 --> 32:45.430
这个也可以

32:45.630 --> 32:48.130
在循环里面除了你循环内容以外

32:48.130 --> 32:50.730
我们其实可以嵌入到任何其他的部分

32:50.730 --> 32:52.730
比如说你像你一个普通辨量

32:53.130 --> 32:54.430
你把它嵌入进来

32:54.430 --> 32:56.330
然后我每次进行循环的时候

32:56.330 --> 32:57.830
我会带着你一起走

32:57.830 --> 33:00.930
只不过呢每次上面后面的会进行数据变化

33:00.930 --> 33:01.830
你是固定的

33:02.430 --> 33:02.930
对不对

33:03.030 --> 33:03.630
这结构

33:04.230 --> 33:06.030
同时呢我们继续去往下说呢

33:06.030 --> 33:09.430
就是说你其实可以把这个标签在我们的

33:10.430 --> 33:12.030
view中你是可以替换的

33:12.030 --> 33:14.330
比如说view你替换成off

33:14.730 --> 33:15.630
你来看一下

33:16.030 --> 33:16.930
在我们这里边

33:17.430 --> 33:18.630
逻辑上没问题吧

33:18.630 --> 33:20.330
语法上也能显示出来吧

33:20.530 --> 33:21.030
ok

33:21.230 --> 33:22.230
那么这代表着

33:22.630 --> 33:25.530
我们的view的语法在这边全部通用

33:25.930 --> 33:27.130
随便你有哪一个

33:27.130 --> 33:29.630
我们一般性喜欢的话就是硬啊

33:29.730 --> 33:31.230
这个用的比较多

33:31.830 --> 33:33.630
然后紧接着呢我们说一下

33:33.630 --> 33:38.130
就是如果用我们的for

33:38.230 --> 33:39.830
便利一个对象的时候

33:39.830 --> 33:41.330
这是属于速度对象

33:41.330 --> 33:42.830
便利一个对象的时候呢

33:42.830 --> 33:45.530
那么你直接可以进行我们所谓的

33:45.830 --> 33:47.130
一个view值

33:47.130 --> 33:48.030
特别是注意啊

33:48.230 --> 33:49.530
我们现在view值的获取

33:49.530 --> 33:52.830
现在你拿出来的是一个我们的对象点内

33:53.330 --> 33:55.030
单职的话你直接可以拿

33:55.030 --> 33:58.030
但是注意v4这条语句

33:58.130 --> 34:03.630
它是会把当前的这个标签一同进行循环

34:04.130 --> 34:06.130
就讲到这一步就差不多了

34:07.030 --> 34:09.630
我们包括是在这个用法上面啊

34:09.630 --> 34:11.330
如果还有不熟的同学的话

34:11.330 --> 34:14.430
那么多去看一下现在的一些view的语法

34:14.830 --> 34:16.830
然后呢我这边只是举两个实例

34:16.830 --> 34:17.630
给大家过一下

34:17.630 --> 34:18.430
如果复习一下

34:18.430 --> 34:21.930
同时看一下v4这种渲染操作在这边用法

34:22.330 --> 34:23.930
我们下面再举一个实例

34:23.930 --> 34:28.530
就是列表操作的一个vvalue的呈现

34:28.530 --> 34:30.130
不过三速组的呈现啊

34:32.650 --> 34:36.450
我们写上value key

34:36.850 --> 34:39.450
再写上index这样的形式

34:42.480 --> 34:44.080
我们来看一下我们呢

34:44.080 --> 34:47.480
就这样我们把还是一样div吧

34:47.580 --> 34:48.880
做个div出来

34:49.580 --> 34:55.080
然后这边是v4循环

34:55.380 --> 34:57.980
然后呢我们后面给值这里边呢

34:57.980 --> 35:02.080
我们主要的通过下面先给它附上一个值

35:02.580 --> 35:03.480
下面的值呢

35:03.480 --> 35:04.980
我们写上的是

35:11.680 --> 35:13.880
我们就拿一个学生来讲

35:33.270 --> 35:34.570
拿出这个来啊

35:35.770 --> 35:38.270
那么我们直接可以把这个内容啊

35:38.270 --> 35:40.270
我们通过循环的方式

35:40.270 --> 35:42.370
我们把它显示出来

35:42.370 --> 35:44.670
首先呢我们这边你是可以显示

35:45.470 --> 35:46.070
value

35:46.470 --> 35:48.470
然后再显示是我们的

35:48.970 --> 35:50.970
呃念我们就这么取名

35:50.970 --> 35:52.270
然后再起成index

35:52.670 --> 35:55.170
然后呢我们从这个从我们的

35:56.070 --> 35:57.270
student里面拿

35:57.770 --> 35:58.670
student里面

35:58.670 --> 36:00.170
然后你拿出来我们先一个

36:00.170 --> 36:01.470
然后修改一下这个

36:01.870 --> 36:04.170
首先我们看到我们现在的

36:04.270 --> 36:05.870
index

36:06.870 --> 36:08.570
然后后边的是

36:10.670 --> 36:13.370
在后边的是我们的value

36:17.230 --> 36:18.330
这样存好

36:20.270 --> 36:20.870
看到吗

36:20.870 --> 36:22.070
哎我们index的

36:22.070 --> 36:23.270
nan jack

36:23.270 --> 36:23.870
aider

36:23.870 --> 36:25.170
20 gender

36:25.170 --> 36:25.870
这个有

36:27.640 --> 36:28.740
这个index

36:28.740 --> 36:30.940
index是它的索引值就是

36:31.240 --> 36:33.140
那么它的索引值呢

36:33.440 --> 36:34.640
由于它只有一项

36:34.640 --> 36:36.740
我们可以把它多做一些

36:37.440 --> 36:39.140
需要这个错不报的话

36:39.140 --> 36:41.540
那么你就直接这边写一个啊

36:41.540 --> 36:42.540
带上一个key

36:42.540 --> 36:43.740
你写上index

36:44.040 --> 36:45.040
这边一样啊

36:45.540 --> 36:46.340
带上个key

36:46.340 --> 36:47.140
你写上

36:48.940 --> 36:49.740
index

36:57.220 --> 36:58.320
那这就可以啊

36:58.720 --> 36:59.220
好了

36:59.320 --> 37:01.220
那么整个这个里面的话呢

37:01.220 --> 37:02.720
循环包括是

37:02.720 --> 37:05.320
4条件的操作和我们在view上面

37:05.320 --> 37:07.720
没什么特别大的区别

37:07.720 --> 37:08.620
在我们的

37:09.120 --> 37:10.420
领表宣染上面

37:11.320 --> 37:12.020
同时呢

37:12.220 --> 37:13.520
那么这边再说一下

37:13.820 --> 37:16.820
那么我们在领表宣染上面的时候呢

37:16.820 --> 37:18.920
也会有几点需要注意一下

37:19.420 --> 37:21.320
比如说我们现在

37:21.520 --> 37:21.920
呃

37:22.420 --> 37:24.120
嵌套使用的过程中

37:24.120 --> 37:27.620
我们依然需要去完成这个index的从命名啊

37:27.820 --> 37:29.220
这点需要大家注意一下的

37:29.220 --> 37:30.020
不然的话呢

37:30.020 --> 37:31.320
你肯定会出现

37:31.620 --> 37:34.320
你现在找不到你现在这个元素的情况

37:34.620 --> 37:35.220
同时呢

37:35.220 --> 37:37.220
我们对循环操作来讲

37:37.220 --> 37:39.420
特别是针对于我们的template来讲

37:39.420 --> 37:40.720
依然是可以使用

37:41.120 --> 37:41.420
好

37:41.420 --> 37:42.460
简单举一实力

37:42.460 --> 37:44.420
简单看一看template的操作

37:45.020 --> 37:46.420
依然是可以有的

37:46.420 --> 37:48.320
比如说我们把它注释掉

37:55.380 --> 37:56.680
那这边有对吧

37:57.480 --> 37:58.080
我们

37:59.080 --> 38:00.180
这边就拿掉吧

38:00.180 --> 38:02.380
我们不然的话这注释起来不方便

38:03.180 --> 38:03.580
这样

38:04.780 --> 38:06.280
紧接着我们下面啊

38:06.580 --> 38:08.880
针对于template

38:10.920 --> 38:11.820
它是可以的

38:13.820 --> 38:14.520
这样行啊

38:16.720 --> 38:17.620
它依然可以

38:17.620 --> 38:19.120
我们称之为v4

38:19.720 --> 38:22.720
那么我们做一个小实力就可以了

38:22.720 --> 38:25.920
我们把现有的v4里面

38:26.220 --> 38:29.920
我们把它做上的是前后是一个ul的结构

38:31.620 --> 38:34.120
前后是一个ul的结构

38:34.820 --> 38:35.620
然后呢

38:35.720 --> 38:38.920
里边我们放的是li的内容

38:39.520 --> 38:40.620
这样的结构出来

38:41.020 --> 38:41.820
然后呢

38:41.920 --> 38:44.620
这里边咱们放上的我们需要的一些

38:45.220 --> 38:47.620
只我们通过循环的方式把它呈现

38:47.620 --> 38:49.820
比如说我们就呈现这个student

38:51.620 --> 38:52.820
我们看一看就可以了啊

38:52.820 --> 38:53.520
student

38:53.620 --> 38:55.020
然后前面用in

38:55.320 --> 38:55.820
对吧

38:56.120 --> 38:58.520
然后在前面一个学生student

38:59.220 --> 39:01.620
然后一个学生拿过来以后的话

39:01.620 --> 39:03.720
我们把它的链呈现一下

39:06.590 --> 39:07.090
是吧

39:07.390 --> 39:08.390
然后我们看一下

39:09.990 --> 39:11.790
他们跟merry出来了吧

39:12.190 --> 39:12.590
ok

39:12.790 --> 39:14.490
那么模板操作

39:14.490 --> 39:17.590
特别是在template的使用上面依然可以啊

39:18.190 --> 39:18.790
哦

39:28.550 --> 39:29.250
也可以啊

39:29.450 --> 39:29.850
ok

39:30.250 --> 39:31.950
那么本身来讲的话呢

39:31.950 --> 39:33.450
特别针对于这种循环

39:33.450 --> 39:35.650
我们可以给大家一个index

39:35.750 --> 39:36.350
具体的话

39:36.350 --> 39:38.750
大家可以在key上面

39:38.750 --> 39:40.550
如果你学过view的话

39:40.550 --> 39:42.350
我们上面依然会有这个提示的

39:43.950 --> 39:44.650
template

39:49.700 --> 39:50.400
template

39:50.500 --> 39:52.400
然后我们把这个取消掉

39:54.000 --> 39:54.500
ok了

39:54.800 --> 39:55.200
好

39:55.200 --> 39:57.900
那么本身来讲这个内容就讲到这里了

39:57.900 --> 39:59.800
因为我们的v4 vf的话呢

39:59.800 --> 40:01.900
我们不去再过多的去涉及了

40:01.900 --> 40:03.000
但是注意点

40:03.000 --> 40:05.000
我们把几个注意点强调性的

40:05.000 --> 40:06.200
给大家去过一遍

40:06.500 --> 40:07.200
希望大家呢

40:07.200 --> 40:09.100
那么在后期的我们运用过程中

40:09.100 --> 40:10.300
我们也有一些

40:10.600 --> 40:12.300
特别多的一些东西

40:12.300 --> 40:14.900
可以给大家去使用

40:15.100 --> 40:15.900
但是这点呢

40:15.900 --> 40:18.100
还是需要你在原有的一些基础上面

40:18.100 --> 40:20.300
做得更保守一点

40:20.300 --> 40:22.500
或者称之为更准确一点

40:22.700 --> 40:23.200
ok吧

40:23.300 --> 40:23.600
好

40:23.700 --> 40:27.300
那么这就是v4跟vf的一些使用方式

40:27.500 --> 40:30.100
那么一定是去多练习以后脑子里面

40:30.100 --> 40:32.100
把这内容一根深蒂固进去啊

40:32.200 --> 40:32.600
好

40:32.700 --> 40:35.500
那么至于其他的一些还有相关点呢

40:35.500 --> 40:36.800
我们讲到后面课程的时候

40:36.800 --> 40:39.200
我们再给大家来一步一步地阐述

