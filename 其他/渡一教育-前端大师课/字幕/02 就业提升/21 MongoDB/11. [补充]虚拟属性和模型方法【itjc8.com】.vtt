WEBVTT

00:00.000 --> 00:06.720
这一刻咱们把那个MangoDB里边虚拟属性和模型方法给它补充一下

00:06.720 --> 00:10.560
这个补充完了过后呢MangoDB基本上就没啥东西了

00:10.560 --> 00:14.280
这Mango's里面啊Mango's里面的虚拟属性和模型方法

00:14.280 --> 00:19.720
虚拟属性呢在loader.js里边咱们讲麦射构的时候还记得吗

00:19.720 --> 00:22.360
我们展现了个欧安明框架Securize

00:22.360 --> 00:24.440
它里边其实就有虚拟属性

00:24.440 --> 00:28.600
它就是跟数据库不直接对应数据库的制断

00:29.040 --> 00:30.600
它不也不存在数据库

00:30.600 --> 00:33.600
但是读的时候呢可以就把它做一个属性读出来

00:33.600 --> 00:35.480
比方说我们这里的一个例子啊

00:35.480 --> 00:37.640
有个数据库里边一个文档呢

00:37.640 --> 00:40.800
它的结构是first name 有那是name的啊 性和名

00:40.800 --> 00:42.680
然后呢我们有一个属性叫full name

00:42.680 --> 00:45.400
那么这个属性呢就可以根据这个性和名来组合出来

00:45.400 --> 00:45.840
对吧

00:45.840 --> 00:47.680
那么该配置的一个virtual

00:47.680 --> 00:49.920
表示虚拟的 把设为true

00:49.920 --> 00:51.280
表示它是一个虚拟属性

00:51.280 --> 00:53.040
那么它就跟数据库不对应了

00:53.720 --> 00:55.640
然后呢我们是写一个get函数啊

00:55.640 --> 00:57.400
就表示当读这个属性的时候呢

00:57.440 --> 00:58.720
它就会运行这个函数啊

00:58.720 --> 01:01.120
返回其他的制断的组合

01:01.120 --> 01:02.880
或者是运行一些别的方法啊

01:02.880 --> 01:03.880
别的东西都可以

01:03.880 --> 01:05.000
反正这是个函数嘛

01:05.000 --> 01:06.280
里边写任何东西都可以

01:06.280 --> 01:07.920
比方说咱们举个例子吧

01:07.920 --> 01:09.400
呃在U字里边呢

01:09.400 --> 01:11.560
我们可以看一下吧

01:11.560 --> 01:14.000
我们可以给它写这么一个是一个啥呀

01:15.880 --> 01:17.800
咱们给它写一个info吧

01:19.560 --> 01:21.200
就是用户信息啊

01:21.200 --> 01:22.600
我们把它组装成一个字幕上

01:23.680 --> 01:25.480
我们这里呢就该配置一个virtual

01:26.480 --> 01:28.320
把设为true跟数据库无关

01:28.320 --> 01:29.760
它是一个虚拟的东西啊

01:29.760 --> 01:31.680
也不在数据库里面存储

01:31.680 --> 01:32.480
呃我们这里呢

01:32.480 --> 01:33.920
写个get函数

01:33.920 --> 01:35.240
当调一个get函数的时候呢

01:35.240 --> 01:36.280
我们返回啊

01:36.280 --> 01:37.200
一个模板字幕上

01:39.640 --> 01:41.200
n 然后一个兜号

01:43.360 --> 01:44.040
年龄

01:46.120 --> 01:48.920
年龄是一个 age

01:48.920 --> 01:51.040
啊 z 叫 age

01:51.040 --> 01:51.800
那么这里是啊

01:51.840 --> 01:52.840
这姓名

01:53.640 --> 01:54.320
啊 z 点

01:55.160 --> 01:55.440
内

01:56.760 --> 01:57.960
啊没问题吧

01:57.960 --> 01:59.640
那么这里我们就把一个info呢

01:59.640 --> 02:01.080
就变成一个字无窜啊

02:01.080 --> 02:02.440
得得得得到这么一个东西

02:02.440 --> 02:03.800
好我们用的时候呢怎么用呢

02:03.800 --> 02:05.080
用就很简单啊

02:05.080 --> 02:06.040
比方说我们这里呢

02:06.040 --> 02:07.640
就把这个删除掉

02:07.640 --> 02:08.960
呃就用嘛

02:08.960 --> 02:10.960
我们这里输出有点

02:10.960 --> 02:11.720
呃info

02:12.800 --> 02:13.960
好保存

02:13.960 --> 02:14.880
加上来打开

02:14.880 --> 02:15.280
通谈

02:18.580 --> 02:20.100
好加点没有 npm star

02:21.620 --> 02:23.260
哎在这里报了一个错

02:23.260 --> 02:23.900
啊什么错呢

02:25.260 --> 02:28.900
呃去 is not the value type

02:28.900 --> 02:29.780
or pass

02:29.780 --> 02:31.660
哦这里还要给他设置一个那个

02:31.660 --> 02:33.380
还要给他设置一个内容

02:33.380 --> 02:34.340
啊

02:34.340 --> 02:36.700
实际

02:36.700 --> 02:37.700
好保存

02:37.700 --> 02:38.820
啊你看

02:38.820 --> 02:40.020
就得到这么一个东西

02:40.020 --> 02:41.340
就这么简单啊

02:41.340 --> 02:42.580
它是一个虚拟的属性

02:42.580 --> 02:44.340
数据后里边本身并不存在

02:44.340 --> 02:45.380
当调完那个属性的时候

02:45.380 --> 02:46.540
还会运行一个方法

02:46.540 --> 02:48.820
啊这是这个这个知识点

02:48.820 --> 02:50.580
呃下一个

02:50.580 --> 02:52.860
下一个呢是关于这个模型方法

02:52.860 --> 02:54.580
就是我们可以往那个模型里边呢

02:54.620 --> 02:55.740
出入一些静态方法

02:55.740 --> 02:57.180
或者是一些实力方法

02:57.180 --> 02:57.740
怎么意思呢

02:57.740 --> 02:59.620
比方这里进行了一个就是

02:59.620 --> 03:00.420
呃schema

03:00.420 --> 03:01.020
schema里边呢

03:01.020 --> 03:03.300
我们可以往没设置里边加一些方法

03:03.300 --> 03:06.340
啊那么表示的是添加一些实力方法

03:06.340 --> 03:06.820
啥意思呢

03:06.820 --> 03:07.740
比较举个例子吧

03:07.740 --> 03:08.180
嗯

03:08.180 --> 03:08.860
这个

03:10.420 --> 03:12.020
呃这个就是you the schema

03:13.180 --> 03:16.060
呃我们比方说给他加上一个

03:16.060 --> 03:17.740
加上一个啥呀

03:17.740 --> 03:23.020
加上一个呃呃没设置

03:23.020 --> 03:24.740
然后添加一个方法

03:24.740 --> 03:25.620
叫prince吧

03:25.660 --> 03:26.100
打印

03:27.580 --> 03:28.260
添加一个方法

03:28.260 --> 03:28.620
打印

03:30.500 --> 03:31.380
呃打印的时候呢

03:31.380 --> 03:34.420
我们就打印打印出呃

03:36.660 --> 03:38.700
或者是我们这样吧

03:38.700 --> 03:39.140
我们这样

03:40.140 --> 03:41.260
呃就打印吧

03:41.260 --> 03:42.020
就打印啊

03:42.020 --> 03:44.380
打印出一个字不算啊

03:44.380 --> 03:44.820
姓名

03:46.620 --> 03:47.380
来自于

03:48.060 --> 03:48.620
z

03:49.580 --> 03:49.980
这里

03:52.340 --> 03:52.620
好

03:52.620 --> 03:53.540
然后再来

03:53.540 --> 03:54.140
姓别

03:57.540 --> 03:59.020
这我没有姓别是吧

03:59.620 --> 04:00.140
年龄

04:03.050 --> 04:03.450
呃

04:03.450 --> 04:03.970
z

04:04.930 --> 04:05.130
叫

04:05.130 --> 04:05.330
a

04:09.030 --> 04:09.310
好

04:09.310 --> 04:10.230
然后再来一个

04:10.230 --> 04:10.990
呃

04:10.990 --> 04:12.070
爱好

04:12.070 --> 04:13.030
love

04:13.030 --> 04:16.900
爱好

04:16.900 --> 04:17.540
z

04:17.540 --> 04:18.420
love

04:18.420 --> 04:18.740
然后呢

04:18.740 --> 04:19.900
我们只能用join

04:19.900 --> 04:21.300
join个都好

04:21.300 --> 04:22.420
数组吗

04:22.420 --> 04:22.700
好

04:22.700 --> 04:23.180
保存

04:23.180 --> 04:25.220
那么现在就给他加了一个实力方法

04:25.220 --> 04:26.060
在实力方法里面

04:26.060 --> 04:26.900
我们怎么来用呢

04:26.900 --> 04:28.100
只要你得到一个实力

04:28.100 --> 04:28.260
啊

04:28.260 --> 04:28.980
模型实力

04:28.980 --> 04:29.980
我们就可以调用个方法

04:29.980 --> 04:30.420
prince

04:31.700 --> 04:32.780
prince

04:32.780 --> 04:34.020
好保存

04:34.020 --> 04:34.500
你看一下

04:35.500 --> 04:36.780
姓名年龄爱好

04:37.340 --> 04:37.500
对吧

04:37.500 --> 04:38.740
是不是完事了

04:38.740 --> 04:39.660
就这么简单

04:39.660 --> 04:40.780
都是实力方法

04:40.780 --> 04:41.460
那么另外一种呢

04:41.460 --> 04:42.660
还有静态方法

04:42.660 --> 04:44.340
比方说我们可以加一些静态方法

04:44.340 --> 04:45.020
怎么加呢

04:45.020 --> 04:46.620
就使用you the skipper

04:46.620 --> 04:47.300
100个函数

04:47.300 --> 04:48.220
static

04:48.220 --> 04:48.700
那么

04:48.700 --> 04:50.420
第一个传说来写方法的名字

04:50.420 --> 04:51.060
方法的名字呢

04:51.060 --> 04:52.580
我们比方说我们写上

04:52.580 --> 04:53.740
呃

04:53.740 --> 04:54.780
get users

04:54.780 --> 04:56.380
得到一些用户啊

04:56.380 --> 04:57.900
那么这里既然是静态方法

04:57.900 --> 04:58.660
以后我们调用的时候

04:58.660 --> 05:00.260
肯定是这样调用的

05:00.260 --> 05:01.140
user

05:01.140 --> 05:03.180
get user

05:03.180 --> 05:05.420
就是get users

05:05.420 --> 05:06.140
就这样调用的

05:06.180 --> 05:07.180
有没有意思吧

05:07.180 --> 05:07.340
好

05:07.340 --> 05:08.700
那咱们来试一下吧

05:08.700 --> 05:09.300
get users

05:09.300 --> 05:11.780
那么后边第二拆出去写一张方法

05:11.780 --> 05:13.820
你给我传一个业码

05:13.820 --> 05:15.580
分业码比方说我们还没有写过分业

05:15.580 --> 05:15.980
对吧

05:15.980 --> 05:17.100
你给我传个业容量

05:17.100 --> 05:18.500
然后给我传个关键字

05:18.500 --> 05:22.430
那我来来进行分业

05:22.430 --> 05:23.310
好分业的时候呢

05:23.310 --> 05:24.790
我返回了就是

05:24.790 --> 05:25.870
有一个分业的数据

05:25.870 --> 05:26.830
有一个种数

05:26.830 --> 05:27.070
对吧

05:27.070 --> 05:29.270
我们就可以不把那个service啊

05:29.270 --> 05:30.910
就是把那个业务逻辑呢

05:30.910 --> 05:31.510
就直接

05:31.510 --> 05:32.950
把那个就是业务逻辑

05:32.950 --> 05:33.950
可以直接写到这儿了

05:33.950 --> 05:34.150
哇

05:34.150 --> 05:34.990
写成一个静态方法

05:34.990 --> 05:36.190
全部在模型里面搞定

05:36.190 --> 05:37.630
都可以

05:37.950 --> 05:38.790
我们这里怎么写呢

05:38.790 --> 05:40.030
我们就是要

05:40.030 --> 05:41.230
因为我们要查询嘛

05:41.230 --> 05:42.430
对不对

05:42.430 --> 05:43.550
这里的race啊

05:43.550 --> 05:44.630
这里的race指的是

05:44.630 --> 05:45.510
就不是个实力的

05:45.510 --> 05:46.550
因为它是静态方法

05:46.550 --> 05:48.590
只能是这个模型本身

05:48.590 --> 05:50.310
就比方是模型本身

05:50.310 --> 05:52.110
race

05:52.110 --> 05:54.270
比方说我们这里fan

05:54.270 --> 05:56.950
fan条件

05:56.950 --> 05:58.310
比方说我们就随便写一个吧

05:58.310 --> 06:01.230
随便写个fan的limit

06:01.230 --> 06:02.510
limit

06:02.510 --> 06:02.950
10个

06:02.950 --> 06:04.390
所以先随便写个试一下

06:04.390 --> 06:05.430
我们来试一下

06:05.430 --> 06:06.470
查找10个

06:06.510 --> 06:07.750
查到10个数据

06:07.750 --> 06:08.470
return

06:08.470 --> 06:10.870
await

06:10.870 --> 06:11.630
保存

06:11.630 --> 06:12.630
我们这边呢

06:12.630 --> 06:13.070
await

06:13.070 --> 06:14.710
因为它是个异步方法

06:14.710 --> 06:15.390
看不见

06:15.390 --> 06:16.030
这里

06:16.030 --> 06:16.910
它是个异步方法

06:16.910 --> 06:18.750
所以我们这里有await

06:18.750 --> 06:19.550
呃

06:19.550 --> 06:21.710
在得到数据

06:21.710 --> 06:23.910
get users

06:23.910 --> 06:25.070
输出us

06:25.070 --> 06:25.790
咱们来看一下

06:25.790 --> 06:26.830
保存

06:26.830 --> 06:27.790
你看什么拿到数据了

06:27.790 --> 06:27.950
对吧

06:27.950 --> 06:29.030
就这么简单啊

06:29.030 --> 06:30.390
把它写成一个静态方法

06:30.390 --> 06:31.150
这是方法的名字

06:31.150 --> 06:32.670
这是具体的方法内容

06:32.670 --> 06:34.150
那我们就把它写完吧

06:34.150 --> 06:36.150
就是面板写完

06:36.470 --> 06:37.190
配级

06:37.190 --> 06:40.230
页码和页容量

06:40.230 --> 06:41.310
那么我们要skip

06:41.310 --> 06:42.470
我们得到两个辩量

06:42.470 --> 06:43.670
一个是skip

06:43.670 --> 06:44.670
跳过多少条

06:44.670 --> 06:45.390
跳过多少条呢

06:45.390 --> 06:46.470
配级演义

06:46.470 --> 06:47.470
成义

06:47.470 --> 06:48.190
limit

06:48.190 --> 06:48.390
对吧

06:48.390 --> 06:49.390
跳过这么多条

06:49.390 --> 06:49.590
好

06:49.590 --> 06:50.230
那么这里limit

06:50.230 --> 06:51.110
我们用什么呢

06:51.110 --> 06:53.310
用limit

06:53.310 --> 06:53.630
好

06:53.630 --> 06:55.630
这个skip呢

06:55.630 --> 06:58.110
就用skip

06:58.110 --> 07:00.230
skip

07:00.230 --> 07:00.790
好

07:00.790 --> 07:01.710
就这样子写

07:01.710 --> 07:03.270
然后后边还有个条件

07:03.270 --> 07:03.790
条件呢

07:03.790 --> 07:06.110
就是用keyword来作为条件

07:06.190 --> 07:07.390
条件怎么写呢

07:07.390 --> 07:09.110
条件我们这里写下来吧

07:10.110 --> 07:11.670
keyword作为条件

07:11.670 --> 07:12.750
就是filter

07:12.750 --> 07:13.590
不就是一个

07:13.590 --> 07:14.910
就是把这个filter传到这儿

07:14.910 --> 07:15.350
对吧

07:15.350 --> 07:16.070
无非就是个对象

07:16.070 --> 07:17.070
我们之前学过的

07:17.070 --> 07:18.590
我们先把它构造成一个对象

07:18.590 --> 07:19.830
它传过来就行了

07:19.830 --> 07:20.870
条件呢

07:20.870 --> 07:21.670
就是说

07:21.670 --> 07:23.070
比如说我们用一个org嘛

07:24.910 --> 07:26.190
关键字查询

07:26.190 --> 07:27.110
名字

07:27.110 --> 07:30.150
帐号都可以用来这一型查询

07:30.150 --> 07:31.830
第一个就是name

07:31.830 --> 07:33.550
名字里边要带这个什么

07:33.550 --> 07:34.430
带这个关键字

07:34.430 --> 07:35.310
那这个怎么写呢

07:35.350 --> 07:36.470
这是个正轴的表达式

07:36.470 --> 07:37.230
这怎么写呢

07:37.230 --> 07:39.150
要包含这个关键字

07:39.150 --> 07:40.190
你不能这样子写

07:40.190 --> 07:40.750
你不能这样子写

07:40.750 --> 07:41.630
这就是什么意思呢

07:41.630 --> 07:43.710
这名字里边必须要包含这个单词

07:43.710 --> 07:44.590
那就不是辨量了

07:44.590 --> 07:45.110
对吧

07:45.110 --> 07:46.190
那怎么写呢

07:46.190 --> 07:48.030
不要把基础忘了

07:48.030 --> 07:51.030
我们是不是可以勾结一个正轴表达式

07:51.030 --> 07:52.390
勾结一个正轴表达式对象

07:52.390 --> 07:53.470
把这个keyword传进去

07:53.470 --> 07:53.710
对吧

07:53.710 --> 07:55.230
这里边不是传字无券吗

07:55.230 --> 07:57.670
把用这个字无券来作为正轴表达式的内容

07:57.670 --> 07:58.630
传进去

07:58.630 --> 08:00.470
然后把这个正轴表达式对象放在这儿

08:00.470 --> 08:00.830
对吧

08:00.830 --> 08:02.110
要理解这个表达式

08:02.150 --> 08:05.150
本身这个写法就是正轴的字面量写法

08:05.150 --> 08:07.110
这个是对象的写法

08:07.110 --> 08:09.230
我们这里就用对象的写法

08:09.230 --> 08:11.670
那么这是内面要满足这个要求

08:11.670 --> 08:12.990
或者是什么呢

08:12.990 --> 08:14.870
或者是农民ID

08:14.870 --> 08:16.190
一定要满足这个要求

08:16.190 --> 08:17.590
比方说我们一个关键字

08:17.590 --> 08:18.750
当然还可以查询更多了

08:18.750 --> 08:20.190
比方说年龄的虚先

08:20.190 --> 08:21.870
包括那个什么

08:21.870 --> 08:23.310
包括那个

08:25.750 --> 08:27.830
有点里面还有啥呀

08:27.830 --> 08:29.470
还有柱子

08:29.470 --> 08:30.150
对吧

08:30.150 --> 08:30.830
还有什么呢

08:30.870 --> 08:32.110
还有那个就是

08:34.070 --> 08:34.710
还有什么

08:35.590 --> 08:35.910
年龄

08:35.910 --> 08:36.790
还有爱好对不对

08:36.790 --> 08:38.230
这些都可以进行查询

08:38.230 --> 08:38.870
就这么个意思

08:38.870 --> 08:40.670
我们就随便弄一弄

08:40.670 --> 08:40.870
好

08:40.870 --> 08:41.350
FILTER

08:41.350 --> 08:42.190
关起来对吧

08:42.190 --> 08:43.470
那么这里是不是查出来的

08:43.470 --> 08:44.950
满足要求的

08:44.950 --> 08:45.910
保存

08:45.910 --> 08:46.550
那么现在呢

08:46.550 --> 08:46.870
现在呢

08:46.870 --> 08:48.030
因为我这个关键字

08:48.030 --> 08:49.190
默认是

08:49.190 --> 08:50.430
默认是空字不算

08:50.430 --> 08:51.990
所以说查询的所有的

08:51.990 --> 08:53.230
当然一页只有10条

08:53.230 --> 08:53.870
只有10条

08:53.870 --> 08:55.550
当然我们可以传一些参数

08:55.550 --> 08:56.630
比方说我们得到第一页

08:56.630 --> 08:57.590
每页两条

08:57.590 --> 08:58.830
给它个关键字了

08:58.830 --> 09:00.190
这么关键字是吧

09:00.190 --> 09:00.790
比方说

09:00.950 --> 09:01.710
听

09:02.270 --> 09:02.910
灯

09:02.910 --> 09:03.870
看有没有新灯的

09:05.390 --> 09:06.510
包含灯这个字的

09:07.390 --> 09:08.030
保存

09:09.630 --> 09:10.310
有

09:10.310 --> 09:11.230
灯条

09:11.230 --> 09:11.910
灯哥

09:11.910 --> 09:12.310
对吧

09:12.310 --> 09:13.470
只有两条数据

09:13.470 --> 09:14.510
每页两条

09:14.510 --> 09:15.830
那么一共有多少条数据呢

09:15.830 --> 09:16.950
我们这里还没有查出来

09:16.950 --> 09:17.270
对不对

09:17.270 --> 09:18.350
所以说我们再来查一个

09:18.350 --> 09:19.670
一共有多少条数据

09:19.670 --> 09:19.910
好

09:19.910 --> 09:20.430
来吧

09:20.430 --> 09:20.910
我们这里呢

09:20.910 --> 09:21.990
得到一个

09:22.550 --> 09:23.230
CUT

09:25.230 --> 09:26.190
await

09:26.190 --> 09:26.870
ZS

09:26.870 --> 09:27.190
什么

09:27.190 --> 09:27.590
CUT

09:27.590 --> 09:27.830
对吧

09:27.830 --> 09:29.510
把条件传进去

09:29.510 --> 09:30.550
这样子是不是可以查询

09:30.590 --> 09:31.510
一共有多少条数据

09:31.510 --> 09:31.670
对吧

09:31.670 --> 09:32.790
这个ZS就是模型

09:32.790 --> 09:33.750
就是模型

09:33.750 --> 09:34.790
我们这里呢

09:34.790 --> 09:36.070
这次我们得到的是什么呢

09:36.070 --> 09:36.750
数据

09:37.590 --> 09:38.270
这是CUT

09:38.270 --> 09:39.830
最后来我们把回个对象

09:39.830 --> 09:40.750
总数

09:40.750 --> 09:41.630
这里总数

09:41.630 --> 09:42.390
用偷偷

09:44.310 --> 09:45.030
总数

09:45.990 --> 09:46.470
数数

09:46.470 --> 09:46.790
对吧

09:46.790 --> 09:47.550
把人给你

09:48.390 --> 09:48.670
好了

09:48.670 --> 09:49.550
咱们来看一下吧

09:50.590 --> 09:51.150
保存

09:51.710 --> 09:52.390
你看

09:52.390 --> 09:53.510
总数有八条数据

09:53.510 --> 09:54.190
这是第一页

09:54.190 --> 09:56.030
第一页只有两条数据

09:56.030 --> 09:56.510
对不对

09:56.510 --> 09:56.710
好

09:56.710 --> 09:57.990
那么这就查出来了

09:57.990 --> 09:58.510
这里

09:58.510 --> 09:59.910
这个CUT过时了

09:59.910 --> 10:00.230
对吧

10:00.270 --> 10:01.630
应该不用用CUT

10:01.630 --> 10:02.550
应该用CUT

10:03.310 --> 10:04.230
Document

10:07.820 --> 10:08.500
Document

10:10.540 --> 10:11.500
怎么了

10:11.500 --> 10:12.860
Z isCut

10:12.860 --> 10:13.700
扣的写错了

10:16.260 --> 10:17.060
应该是Document

10:17.060 --> 10:17.700
应该是复数

10:19.460 --> 10:19.740
好了

10:19.740 --> 10:20.380
就查出来了

10:20.380 --> 10:20.740
对吧

10:21.380 --> 10:21.620
好了

10:21.620 --> 10:22.540
那么这种做法

10:22.540 --> 10:24.180
就可以把这些逻辑

10:24.180 --> 10:26.420
就全部集中在模型里面

10:26.420 --> 10:28.220
就不用去专门写一个service程了

10:29.620 --> 10:29.740
好

10:29.740 --> 10:31.260
这是关于这个mongodb里面

10:31.260 --> 10:32.500
我们要补充了一些知识

10:32.500 --> 10:33.940
其他的也就没啥了

10:33.980 --> 10:35.020
当然mongodb里边

10:35.020 --> 10:36.380
还包括mongos里边

10:36.380 --> 10:38.380
还有很多很多的高级概念

10:38.380 --> 10:39.940
因为咱们毕竟也不是

10:39.940 --> 10:41.620
做数据库的方向

10:41.620 --> 10:42.900
我们是做前端的

10:42.900 --> 10:44.060
不要忘了初心

10:44.060 --> 10:44.900
技术这个行业

10:45.260 --> 10:46.500
咱们是学不完的

10:46.500 --> 10:48.060
一辈子都学不完的

10:48.060 --> 10:49.660
所以说我们还是

10:49.660 --> 10:51.500
要把主要的精力放在前端上

10:51.500 --> 10:52.260
数据库这一块

10:52.260 --> 10:53.820
你只要知道怎么去存数据

10:53.820 --> 10:54.700
怎么去取数据

10:54.700 --> 10:55.700
一些简单的操作

10:55.700 --> 10:56.620
CRUD操作

10:56.620 --> 10:57.540
你要会做就行了

10:57.540 --> 10:59.020
不用太过于去深究

10:59.020 --> 11:01.100
特别是对于前期学习的时候

11:01.100 --> 11:02.540
把学习的重心

11:02.540 --> 11:03.860
还是要放到前端的一块

11:04.260 --> 11:04.540
好了

11:04.540 --> 11:05.460
我们这里就讲完了

11:05.460 --> 11:05.900
数据库

