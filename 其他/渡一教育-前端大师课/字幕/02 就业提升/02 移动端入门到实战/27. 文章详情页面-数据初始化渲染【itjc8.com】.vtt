WEBVTT

00:02.100 --> 00:07.620
各位同学大家好 这期课我们继续文章详情页面一个制作学习

00:07.620 --> 00:12.020
那么本节课我们来实现一下它的数据的一个初始化渲染

00:12.020 --> 00:15.860
那么在数据初始化渲染的过程当中我们需要注意两个问题

00:15.860 --> 00:19.380
首先就是什么呢 我们这里面会有一个预选的过程

00:19.380 --> 00:23.620
什么叫预选的过程呢 我们可以看一下完成的这个案例里面

00:23.620 --> 00:28.740
我们在这个跳转到我们的这个详情界面的时候

00:28.900 --> 00:33.860
其实呢在文章列表里面我们也可以获取到文章的一些基本信息

00:33.860 --> 00:37.300
只不过是呢 除了这个content我们是没办法获取之外

00:37.300 --> 00:41.060
那至于其他的比如说作者的信息包括文章的分类

00:41.060 --> 00:45.860
文章的标题 图片以及其他相关的这个浏览等信息

00:45.860 --> 00:47.780
我们这些呢是可以获取到的

00:47.780 --> 00:52.180
那既然可以获取到在我们跳转到文章详情界面的时候

00:52.180 --> 00:57.460
那我们就可以做到一种使用这种提前把它通过地址栏

00:57.540 --> 01:01.700
参数进行一个携带的这种形式来进行一个传递

01:01.700 --> 01:03.780
那这样做的一个好处是什么呢

01:03.780 --> 01:06.740
保证我们在文章详情界面获取数据的时候

01:06.740 --> 01:10.740
不需要再次的进行我们服务器的一个请求发送

01:10.740 --> 01:16.900
可以很快速的让用户能看到我们整个文章的一个基本信息

01:16.900 --> 01:18.740
至于这个文章的内容呢

01:18.740 --> 01:22.580
我们通过文章基本信息里的指定的ID值

01:22.580 --> 01:25.060
再来进行一个获取 这样就ok了

01:25.140 --> 01:28.660
那这个呢其实也是一个体验感增强的一种需求

01:29.780 --> 01:32.260
好的 那我们接下来啊就来实现一下

01:32.260 --> 01:34.820
首先呢就是说我们在跳转过程当中

01:34.820 --> 01:37.940
把这个里面的相关参数给它携带过去

01:38.580 --> 01:40.980
ok 打开我们的这个编辑器

01:42.100 --> 01:45.540
这样本节课我使用vscode的为什么使用vscode呢

01:45.540 --> 01:48.740
因为在文章宣的时候我们要使用它的中端

01:48.740 --> 01:52.900
中端啊来进行一个我们三方插件的安装

01:52.980 --> 01:54.020
还有一个就是什么呢

01:54.020 --> 01:58.100
我们这个HPU的插上节课它在使用的时候稍微有些卡顿

01:58.100 --> 02:00.660
所以说呢我这节课使用vscode的

02:00.660 --> 02:02.420
那也可以同学们掩饰一下

02:02.420 --> 02:05.300
在vscode当中如何来进行代码编写

02:05.300 --> 02:06.420
其实我这里面啊

02:06.420 --> 02:11.380
安装版本呢还是以这个HPU的插的这个安装的这个版本为准

02:11.380 --> 02:14.500
所以说呢我这里面要运行工程的话

02:14.500 --> 02:15.780
首先你保证啊

02:15.780 --> 02:17.940
你这个HPU的插要开启状态

02:17.940 --> 02:21.060
并且在HPU的插里面进行我们的代码运行

02:21.060 --> 02:25.620
比如说我们这个谷歌浏览器的运行以及微信小程序的运行

02:26.820 --> 02:30.820
当你在运行上并且保证这个HPU的插不关闭的情况下

02:30.820 --> 02:32.820
那你此时使用这个vscode的

02:32.820 --> 02:37.380
其实呢和我们正常的在HPU的插里面编写是完全一致的

02:37.380 --> 02:40.980
你编写的每一行代码都会同步到HPU的插里面啊

02:42.260 --> 02:42.580
好的

02:42.580 --> 02:43.860
那我们就来写一下

02:43.860 --> 02:46.980
首先呢我们跳转的时候需要携带参数

02:46.980 --> 02:52.500
那我们找到我们的compromise到list的card下面打开打开之后

02:52.500 --> 02:55.380
这个呢就是我们跳转当时要做的事

02:55.380 --> 02:57.780
直接的我们当时马上就跳转过去了

02:57.780 --> 02:58.340
对吧

02:58.340 --> 02:59.300
那在这个里面啊

02:59.300 --> 03:01.060
我们要做一件事是啥事呢

03:01.060 --> 03:04.340
我们把一些相关的参数给携带过去啊

03:04.340 --> 03:05.940
怎么来携带相关参数呢

03:05.940 --> 03:07.540
其实在每个卡片里面

03:07.540 --> 03:09.700
我们都会接收到一个item

03:09.700 --> 03:13.940
那这个item里面就有我们需要的这个相关的参数

03:13.940 --> 03:15.060
我们可以来看一下

03:16.020 --> 03:20.180
打印一下这个item到我们的这个界面里面

03:22.180 --> 03:23.780
打开console我们刷新一下

03:24.980 --> 03:27.540
ok这个里面我们重新回去啊

03:27.540 --> 03:29.220
回去之后再来携带一下

03:29.220 --> 03:31.940
好的我一点击item有脑底泛的

03:31.940 --> 03:32.900
那这个是因为什么

03:32.900 --> 03:34.420
这里面应该是这一次

03:35.380 --> 03:36.420
第二item

03:36.420 --> 03:39.860
ok再次刷新进行跳转

03:40.740 --> 03:43.060
这里面有一个地址是没访问到啊

03:43.060 --> 03:44.100
这个不要紧啊

03:44.180 --> 03:46.420
或者是你从你启动一下就ok了

03:46.420 --> 03:47.380
好的那过来之后

03:47.380 --> 03:48.660
其实你会发现

03:48.660 --> 03:49.860
我们一点击的时候

03:49.860 --> 03:52.980
这个里面item是不是携带了相关信息啊

03:52.980 --> 03:55.380
所以说我们就把这些相关信息

03:55.380 --> 03:57.060
在跳转到想尽界面的时候

03:57.060 --> 03:58.420
给他携带过来就ok了

03:58.420 --> 04:00.340
所以说在这个里面写一下

04:01.620 --> 04:03.460
首先给他做一个解构啊

04:03.460 --> 04:05.700
我这里面console的我都需要什么呢

04:05.700 --> 04:06.340
这个里面

04:07.460 --> 04:11.140
首先我们需要这个下滑线的一个id

04:11.140 --> 04:13.060
也就是说文章的id值

04:13.140 --> 04:15.540
并且呢把他的这个title给携带过去

04:16.340 --> 04:20.500
作者的信息 also 以及create time

04:22.100 --> 04:24.020
他的创建时间

04:24.020 --> 04:26.340
以及咱们这个点啊

04:26.340 --> 04:28.500
那个是否这个点赞啊

04:29.380 --> 04:31.700
这个叫sims up count

04:39.100 --> 04:39.900
ok

04:39.900 --> 04:41.500
然后呢还有一个是呢

04:41.500 --> 04:43.100
还有一个是browards card

04:45.020 --> 04:46.620
好的那等于一个什么呢

04:46.620 --> 04:48.940
等于我们的一个这次点下滑线

04:49.020 --> 04:51.180
我们这个啊sorry没有小线

04:51.180 --> 04:53.020
这次点item

04:53.020 --> 04:53.660
ok

04:53.660 --> 04:55.420
那拿到他之后我们怎么办呢

04:55.420 --> 04:56.700
我们把这些参数啊

04:56.700 --> 04:58.140
想准备携带过去

04:58.140 --> 05:00.460
所以说这里面我们定一个parameters

05:01.900 --> 05:03.980
给他做一个收集

05:03.980 --> 05:05.500
收集的这个值呢

05:05.500 --> 05:07.500
其实就是这些值对吧

05:07.500 --> 05:09.340
那我们把这个解构出来的值

05:09.340 --> 05:10.460
给他放在这个里面

05:10.460 --> 05:12.780
那这样这些值就可以进行使用了

05:12.780 --> 05:15.580
然后呢我们把这个通过地址来

05:15.580 --> 05:16.700
携带一个参数

05:16.700 --> 05:17.580
然后传递过去

05:17.580 --> 05:18.620
整个是一个对象

05:18.700 --> 05:19.660
那这个对象呢

05:19.660 --> 05:21.660
我们使用这种啊json的形式

05:21.660 --> 05:23.500
给他做一个转移啊

05:23.500 --> 05:26.380
那这里面u rl使用模板自幅创

05:28.620 --> 05:30.940
ok那这里面写一个问号

05:30.940 --> 05:33.740
问号之后是parameters等于

05:33.740 --> 05:35.100
我们的这个doubler

05:35.100 --> 05:39.660
doubler里面我用json.streamfile的方法

05:39.660 --> 05:41.820
把这个parameters给他传递

05:41.820 --> 05:43.180
过去就可以了

05:44.060 --> 05:44.300
ok

05:46.300 --> 05:47.500
好的在这个里面

05:48.460 --> 05:49.740
sams up count

05:49.740 --> 05:50.940
我看一眼啊这个值啊

05:52.540 --> 05:53.500
这个写错了

05:53.500 --> 05:54.940
我给他调整一下

05:54.940 --> 05:56.860
这个我觉得拼写不对啊

05:56.860 --> 05:58.140
sams up count

05:58.140 --> 06:00.140
ok那这些值呢就带过去

06:00.140 --> 06:01.020
带过去之后

06:01.020 --> 06:02.460
此时呢我们这面

06:02.460 --> 06:04.300
在这个article底太后

06:04.300 --> 06:06.460
如何来进行接收呢

06:06.460 --> 06:07.340
那我们这个里面

06:08.060 --> 06:10.780
使用onload来进行接收

06:10.780 --> 06:12.540
我们这里面定一下onload

06:12.540 --> 06:14.380
这里面呢就会有一个参数

06:14.380 --> 06:15.420
参数是什么呢

06:15.420 --> 06:16.460
是这个options

06:17.900 --> 06:18.460
我把这个

06:19.180 --> 06:20.460
有一个默认的形态

06:20.460 --> 06:21.580
我把它给解析出来

06:21.580 --> 06:22.860
咱们可以看一下

06:22.860 --> 06:25.420
打印一下这个options

06:25.420 --> 06:25.740
ok

06:26.780 --> 06:28.380
来重新跳转一下

06:28.380 --> 06:30.300
我们在这个里面刷新界面

06:30.300 --> 06:31.980
然后呢使用第一条

06:31.980 --> 06:33.500
或者第二条跳转都可以啊

06:33.500 --> 06:35.100
我这里面使用第二条跳转

06:35.100 --> 06:35.900
sams count

06:35.900 --> 06:36.780
一脑底翻呢

06:36.780 --> 06:39.580
ok这个是刚才换了上面

06:39.580 --> 06:41.420
没有换这个底下啊

06:41.980 --> 06:43.980
换了底下没有换到上面

06:43.980 --> 06:44.300
好的

06:46.220 --> 06:47.420
刷新一下界面

06:47.420 --> 06:48.860
再进行一个跳转

06:48.860 --> 06:50.060
跳转的时候你会发现

06:50.060 --> 06:50.780
这时候

06:50.780 --> 06:53.260
我是不是就能获取到一个参数

06:53.260 --> 06:54.060
这个参数呢

06:54.060 --> 06:55.580
因为我们带过来的时候

06:55.580 --> 06:56.220
是一个

06:56.860 --> 06:58.060
json的字符创

06:58.060 --> 06:58.940
所以说我们在这里面

06:58.940 --> 07:00.540
给它做一个解析就可以了

07:00.540 --> 07:01.980
你会发现它是一个数组

07:01.980 --> 07:03.900
那取数组的第零下就ok了

07:03.900 --> 07:05.180
这里面我们来做一下

07:06.540 --> 07:08.540
也就是说在article底太后里面

07:08.540 --> 07:09.660
我们打印的时候

07:09.660 --> 07:11.100
那这个应该怎么打印

07:11.100 --> 07:14.860
首先我们对它进行一个json点

07:16.300 --> 07:17.020
json点

07:17.900 --> 07:19.100
给它做一个解析

07:19.100 --> 07:20.140
解析谁

07:20.140 --> 07:22.460
解析就是我们options

07:22.460 --> 07:24.700
下面的一个地零下

07:24.700 --> 07:25.260
然后呢

07:25.260 --> 07:26.860
它的点parmaris

07:28.540 --> 07:28.860
ok

07:28.860 --> 07:30.380
我们来看一下是否可行

07:30.380 --> 07:32.940
这个里面就把这个值给解析出来了

07:32.940 --> 07:33.900
解析出来这个值

07:33.900 --> 07:35.500
就是我们刚才携带过来了

07:35.500 --> 07:36.780
一二三四五

07:36.780 --> 07:38.540
第五一共五相值对不对

07:38.540 --> 07:39.420
那这五相值呢

07:39.420 --> 07:40.540
我们就可以根据它

07:41.020 --> 07:42.460
来进行一个渲染

07:42.460 --> 07:43.260
是不是就可以了

07:43.260 --> 07:43.740
对吧

07:43.740 --> 07:44.940
那我们就从这里面

07:44.940 --> 07:46.060
来给它进行一个渲染

07:46.060 --> 07:46.620
就ok了

07:47.100 --> 07:48.060
如何来实现呢

07:48.060 --> 07:50.380
我们这个里面在data里面

07:50.380 --> 07:52.860
我们定一个自己本地的数据

07:52.860 --> 07:55.340
那这个叫article data

07:55.340 --> 07:56.220
article data呢

07:56.220 --> 07:57.980
我们这里面给它一个

07:59.100 --> 07:59.420
ok

07:59.420 --> 08:01.420
初始化的时候是不复制的

08:01.420 --> 08:03.260
然后什么时候来进行复制呢

08:03.260 --> 08:05.100
就是在我获取到它之后

08:05.100 --> 08:07.180
我把这个值给它复成

08:07.180 --> 08:08.300
我们的article data

08:08.300 --> 08:09.180
是不是就可以了

08:09.180 --> 08:09.900
那也就是说

08:09.900 --> 08:11.660
这次点article data

08:11.660 --> 08:14.540
等于我们的这个json点parse

08:15.660 --> 08:16.460
ok这样呢

08:16.460 --> 08:18.860
我们就可以实现一个值的获取了

08:18.860 --> 08:20.220
我们看vio这里的话

08:20.220 --> 08:21.500
就能找到它

08:21.500 --> 08:22.460
article detail

08:22.460 --> 08:24.620
这里面article data是不是又值了

08:24.620 --> 08:25.420
有值之后

08:25.420 --> 08:27.100
那我们现在一次的进行渲染

08:27.100 --> 08:27.980
是不是就可以了

08:27.980 --> 08:30.700
所以说我们回到我们的这个界面里面

08:32.060 --> 08:34.860
一次的对我们刚才获取到的这个值

08:34.860 --> 08:36.780
来给它进行一个渲染

08:36.780 --> 08:39.020
首先是我们article data

08:39.020 --> 08:40.460
下面的点title

08:41.020 --> 08:42.700
article data

08:42.700 --> 08:43.420
点title

08:43.420 --> 08:44.860
ok这是第一个

08:44.860 --> 08:46.140
第一个渲染完成之后呢

08:46.220 --> 08:49.020
我们再进行这个第二个内容的渲染

08:49.020 --> 08:51.100
也就是说这个图片文件

08:51.100 --> 08:52.460
img src

08:52.460 --> 08:54.300
这个里面我们来处理一下

08:54.300 --> 08:55.340
处理的时候

08:55.340 --> 08:58.140
这里面使用一个mahar src

08:58.140 --> 09:00.620
然后是article data

09:00.620 --> 09:01.660
del also

09:02.700 --> 09:04.860
也就是说作者的del beta

09:05.500 --> 09:05.820
ok

09:06.780 --> 09:07.020
定

09:08.140 --> 09:09.580
好的完成之后呢

09:09.580 --> 09:12.140
我们再继续下面的一个渲染

09:12.140 --> 09:12.620
之后呢

09:12.620 --> 09:15.180
这个是作者的一个什么

09:15.180 --> 09:16.060
姓名对不对

09:16.060 --> 09:18.620
那我们直接的就是把它可以复制一下

09:19.180 --> 09:19.660
also

09:19.660 --> 09:21.820
del一个什么的name就可以了

09:22.700 --> 09:23.580
article data

09:23.580 --> 09:24.380
del also

09:24.380 --> 09:25.340
del also name

09:26.780 --> 09:27.500
ok

09:27.500 --> 09:28.300
好的

09:28.300 --> 09:29.180
del also

09:29.180 --> 09:31.100
应该是想发现name

09:31.100 --> 09:32.620
把这个里面获取一下

09:32.620 --> 09:34.300
之后这个是时间

09:34.300 --> 09:34.940
时间呢

09:34.940 --> 09:37.180
直接就在article data上面挂在

09:37.180 --> 09:39.100
我们直接在这里面使用一下

09:39.100 --> 09:40.540
article data

09:40.540 --> 09:40.940
del

09:40.940 --> 09:43.980
我们是这个create time

09:46.140 --> 09:46.860
好的

09:46.860 --> 09:49.340
之后是我们的这个浏览量

09:49.340 --> 09:50.940
把这个就给写一下

09:50.940 --> 09:53.340
这个是article data

09:53.340 --> 09:55.820
del一个browers count

10:02.540 --> 10:02.940
ok

10:02.940 --> 10:04.220
这个也处理完了

10:04.220 --> 10:06.940
多少次browers count

10:06.940 --> 10:09.180
browers count处理完成之后

10:09.180 --> 10:10.620
那就是几个赞

10:10.620 --> 10:11.740
几个赞这一块

10:11.740 --> 10:14.540
就是我们的article data

10:14.540 --> 10:16.460
del sums up count

10:19.100 --> 10:19.820
sums

10:21.740 --> 10:22.300
up

10:24.960 --> 10:25.280
ok

10:26.000 --> 10:27.840
这个是article data

10:27.840 --> 10:29.200
del sums count

10:29.200 --> 10:29.520
好的

10:29.520 --> 10:30.640
那这几个都搞定了

10:30.640 --> 10:31.200
搞定之后

10:31.200 --> 10:32.560
那我们来看一下是否可行

10:33.280 --> 10:34.720
回来一次的看一下

10:34.720 --> 10:36.480
我们直接的2020年

10:36.480 --> 10:38.880
3月13日11点39分

10:38.880 --> 10:40.160
浏览了一次

10:40.160 --> 10:41.520
我们来看一下

10:41.520 --> 10:43.440
浏览的次数是这个

10:43.440 --> 10:45.600
浏览次数没上去

10:45.600 --> 10:47.200
那这个browers count

10:47.200 --> 10:48.320
它是没有传递过来

10:48.320 --> 10:48.960
我们看一眼

10:48.960 --> 10:53.280
这里面多了一个什么

10:53.280 --> 10:54.400
多了一个r

10:54.400 --> 10:56.000
我们再来看一下

10:56.000 --> 10:57.440
browers count

10:57.440 --> 10:58.000
这个里面

10:58.000 --> 10:58.640
如果说

10:58.640 --> 11:00.080
你现在在刷行动时候

11:00.080 --> 11:01.360
这个就没有戏了

11:01.360 --> 11:02.080
怎么办

11:02.080 --> 11:02.880
你再回退一下

11:02.880 --> 11:03.360
因为啥呢

11:03.360 --> 11:05.600
刚才我们在卡片里面

11:05.600 --> 11:06.720
传指是传错的

11:06.720 --> 11:08.080
所以说我们再跳过来

11:08.080 --> 11:08.880
跳过来的时候

11:08.880 --> 11:10.160
这个里面有一个问题

11:10.160 --> 11:11.520
browers count

11:11.520 --> 11:12.720
is now defined

11:12.720 --> 11:13.680
是什么原因

11:13.680 --> 11:14.800
还是这个原因

11:14.800 --> 11:16.160
我们改了上面

11:16.160 --> 11:17.040
在复制的时候

11:17.040 --> 11:18.000
没有进行调整

11:19.760 --> 11:20.160
OK

11:20.160 --> 11:22.400
我们再进行一次点击

11:22.400 --> 11:23.200
点击的时候

11:23.200 --> 11:24.240
这样就过来了

11:24.240 --> 11:24.800
过来之后

11:24.800 --> 11:26.400
我们可以查看一下

11:26.400 --> 11:28.720
它里面的173次浏览

11:28.720 --> 11:29.360
5赞

11:29.360 --> 11:32.400
然后2020年3月16日17点50

11:32.400 --> 11:33.920
图片以及相关信息

11:33.920 --> 11:34.560
是不是都过来了

11:34.560 --> 11:35.360
我们看这个

11:35.360 --> 11:36.720
这个是不是也正常的

11:36.720 --> 11:37.440
所以说这样

11:37.440 --> 11:38.400
你会发现什么呢

11:38.400 --> 11:39.600
它比较快速

11:39.600 --> 11:40.560
就是说我们直接

11:40.560 --> 11:41.840
在出手画的时候

11:41.840 --> 11:42.560
我们直接的

11:42.560 --> 11:44.080
就可以进行一个预选人

11:44.080 --> 11:45.200
这个在移动端

11:45.200 --> 11:46.320
是经常使用的

11:46.320 --> 11:46.960
所以说这个

11:46.960 --> 11:48.640
同学们要掌握一下

11:48.720 --> 11:49.120
好的

11:49.120 --> 11:50.880
既然你已经获取到了之后

11:50.880 --> 11:52.080
我们接下来要做什么

11:52.080 --> 11:52.960
接下来其实就是

11:52.960 --> 11:55.280
开始进行一个数据的请求

11:55.280 --> 11:56.320
是不是就可以了

11:56.320 --> 11:56.800
也就是说

11:56.800 --> 11:59.840
我们在Article Detail下面

11:59.840 --> 12:01.680
找到我们上面的一个方法

12:01.680 --> 12:02.240
Unload

12:02.240 --> 12:02.720
Unload

12:02.720 --> 12:04.320
我既然给它复完之后

12:04.320 --> 12:07.120
我这里面就开始进行一个什么

12:07.120 --> 12:08.960
文章详情的一个获取

12:11.440 --> 12:13.360
文章详情获取怎么来做呢

12:13.360 --> 12:14.560
我直接的就可以

12:14.560 --> 12:15.360
点一个方法

12:15.360 --> 12:17.040
这次点下发现

12:17.040 --> 12:19.120
Gate Article Detail

12:23.300 --> 12:24.260
Article Detail

12:24.260 --> 12:24.980
那这个方法

12:24.980 --> 12:26.260
我给它定义一下

12:26.260 --> 12:26.900
在这里面

12:27.460 --> 12:28.660
然后这个是

12:28.660 --> 12:30.020
因为是一个异步操作

12:30.020 --> 12:31.540
这里面使用一个

12:31.540 --> 12:32.420
Async

12:32.420 --> 12:35.060
让它返回一个Promise对象

12:35.060 --> 12:36.900
is等于avit

12:36.900 --> 12:37.860
这次点dollar

12:37.860 --> 12:38.740
http

12:38.740 --> 12:39.860
点Gate

12:39.860 --> 12:40.980
然后这个里面

12:40.980 --> 12:42.020
我们就写一个

12:42.020 --> 12:43.700
新的云海数名的

12:43.700 --> 12:45.620
Article Detail

12:46.660 --> 12:46.980
OK

12:46.980 --> 12:49.060
那我们就定义这么一个方法

12:49.060 --> 12:50.260
定义这个方法的时候

12:50.260 --> 12:50.900
此时呢

12:50.900 --> 12:52.500
我们需要给它传递一个纸

12:52.500 --> 12:53.220
纸是啥呢

12:53.220 --> 12:54.340
这个里面肯定得把

12:54.340 --> 12:55.540
这个Article ID

12:55.540 --> 12:56.340
给它传递过去

12:56.340 --> 12:57.780
因为我们要找指定的

12:57.780 --> 12:58.660
某一篇文章

12:58.660 --> 12:59.940
而不是说找所有文章了

12:59.940 --> 13:00.420
对不对

13:00.420 --> 13:01.380
那我这里面就是

13:01.380 --> 13:03.460
Article下发现ID

13:03.460 --> 13:05.140
然后这个里面来接一下

13:05.140 --> 13:05.940
Article

13:05.940 --> 13:07.380
这个就不用拖风了

13:07.380 --> 13:08.180
Article ID

13:08.180 --> 13:09.700
那这个就是等于什么呢

13:09.700 --> 13:10.340
我们这个

13:10.340 --> 13:12.100
这次点Article

13:12.100 --> 13:13.220
Date点

13:13.220 --> 13:14.260
下发现ID

13:14.260 --> 13:15.540
这个里面是不是有一个纸

13:15.540 --> 13:16.020
对吧

13:16.100 --> 13:17.300
那这样就定义好了

13:17.300 --> 13:18.340
定义好之后

13:18.340 --> 13:20.180
我再前台打印一下

13:20.180 --> 13:20.980
这个什么呢

13:20.980 --> 13:21.620
IS

13:21.620 --> 13:21.860
OK

13:23.540 --> 13:23.940
好的

13:23.940 --> 13:25.780
再回到我们的这个

13:26.660 --> 13:27.540
阿迦克斯里面

13:27.540 --> 13:28.660
我们来做一下处理

13:28.660 --> 13:29.300
我们到这个

13:30.180 --> 13:30.900
HTTP

13:30.900 --> 13:32.260
这里面已经有个加载中啊

13:32.260 --> 13:33.060
咱不用考虑了

13:33.060 --> 13:33.780
我们到这个

13:33.780 --> 13:35.060
Interface下面

13:35.060 --> 13:36.340
Home interface

13:36.340 --> 13:37.380
这里面来写一下

13:37.380 --> 13:38.420
这个就是什么呢

13:38.420 --> 13:40.100
获取文章详情啊

13:44.210 --> 13:45.730
文章详情

13:45.730 --> 13:46.290
OK

13:46.290 --> 13:47.730
这里面就来写一下

13:47.730 --> 13:49.330
EXPOT

13:49.330 --> 13:49.810
然后呢

13:49.810 --> 13:51.490
我们Const

13:51.490 --> 13:52.530
GuideArticle

13:52.530 --> 13:53.090
Sorry啊

13:53.090 --> 13:54.290
这个不应该复制它啊

13:54.290 --> 13:55.490
这个应该是什么呢

13:55.490 --> 13:57.570
我们的GuideArticleDetail

13:57.570 --> 13:58.290
对吧

13:58.290 --> 13:59.410
把它写一下

13:59.410 --> 14:01.730
然后等于我们的一个Data

14:03.250 --> 14:04.130
这里面是

14:04.130 --> 14:05.010
ADX

14:05.010 --> 14:06.290
阿迦克斯

14:06.290 --> 14:06.930
然后呢

14:06.930 --> 14:07.730
Name

14:07.730 --> 14:08.850
和它是同名的

14:08.850 --> 14:09.490
这里面就

14:10.930 --> 14:11.730
阿迦克斯

14:11.730 --> 14:13.410
然后是我们的Name

14:13.970 --> 14:14.690
Name呢

14:14.690 --> 14:16.130
就是我们云寒树的名字

14:16.130 --> 14:17.410
和它一致就可以

14:17.490 --> 14:17.890
然后呢

14:17.890 --> 14:19.730
把这个Data传过去啊

14:19.730 --> 14:21.650
这里面少了一个箭头

14:23.890 --> 14:24.290
OK

14:24.290 --> 14:25.250
这样就可以了

14:25.250 --> 14:25.890
可以之后

14:25.890 --> 14:26.610
那我们接下来

14:26.610 --> 14:27.170
就是什么

14:27.170 --> 14:29.090
创建云寒树的过程

14:29.090 --> 14:29.570
对吧

14:29.570 --> 14:30.690
那创建云寒树呢

14:30.690 --> 14:32.530
其实在这个里面也可以

14:32.530 --> 14:33.170
我们怎么办

14:33.170 --> 14:34.050
我们到这个

14:34.050 --> 14:35.970
UniCloud的阿迦云下面

14:35.970 --> 14:37.570
找到我们的这个

14:37.570 --> 14:38.610
Cloud的Function

14:38.610 --> 14:39.890
我这里面就写一下

14:39.890 --> 14:41.730
新建一个文件夹

14:41.730 --> 14:42.210
那这个呢

14:42.210 --> 14:42.930
其实在这里面

14:42.930 --> 14:44.290
创建云寒树还是

14:44.290 --> 14:44.930
比较麻烦的

14:44.930 --> 14:45.570
那怎么办呢

14:45.650 --> 14:47.730
我们因为现在已经开启了

14:47.730 --> 14:48.690
两个编辑器

14:48.690 --> 14:48.930
对吧

14:48.930 --> 14:50.530
那我要创建云寒树

14:50.530 --> 14:51.730
想生成一套默认模板

14:51.730 --> 14:52.050
怎么办

14:52.050 --> 14:53.010
我在这个里面来做

14:53.010 --> 14:54.050
也是可以的

14:54.050 --> 14:54.690
我这里面

14:54.690 --> 14:55.730
新建云寒树

14:55.730 --> 14:56.370
新建云寒树

14:56.370 --> 14:58.290
把我们刚才复制的这个名字

14:58.290 --> 15:00.450
Gate Article Detail

15:00.450 --> 15:00.770
OK

15:00.770 --> 15:01.970
我一点击创建

15:01.970 --> 15:03.010
这时候就有了

15:03.010 --> 15:03.490
有了之后

15:03.490 --> 15:04.130
你再回来

15:04.130 --> 15:04.930
其实你会发现

15:04.930 --> 15:05.810
这里面是不是多了

15:05.810 --> 15:07.090
一个Gate Article Detail

15:07.090 --> 15:07.570
对吧

15:07.570 --> 15:08.210
把一些

15:08.210 --> 15:08.610
就是说

15:08.610 --> 15:09.890
它有提示的功能

15:09.890 --> 15:11.730
我们直接在这个里面完成

15:11.730 --> 15:12.450
然后有一些

15:12.450 --> 15:14.210
它比较感觉卡顿的

15:14.210 --> 15:15.090
或者我们有一些

15:15.090 --> 15:15.890
其他的

15:15.890 --> 15:17.410
需要在这个

15:17.410 --> 15:18.770
Vatcode里面实现的

15:18.770 --> 15:19.090
比如说

15:19.090 --> 15:21.090
你有一些什么

15:21.090 --> 15:22.850
常用的编辑快件什么的

15:22.850 --> 15:23.810
那我使这个习惯

15:23.810 --> 15:24.210
怎么办

15:24.210 --> 15:25.570
你也可以在这个里面编写

15:25.570 --> 15:26.370
这都是可以的

15:27.570 --> 15:27.810
好的

15:27.810 --> 15:29.010
我们来写一下吧

15:29.010 --> 15:29.570
首先呢

15:29.570 --> 15:31.010
我们Cons的DB

15:31.010 --> 15:33.250
等于uniclode.database

15:33.250 --> 15:34.050
OK

15:34.050 --> 15:35.250
然后这个里面

15:35.250 --> 15:36.930
我们首先要获取

15:36.930 --> 15:39.090
前端传递过来的参数

15:39.090 --> 15:39.650
是什么呢

15:39.650 --> 15:41.970
Cons的我们的这个Article ID

15:43.650 --> 15:44.850
把它获取一下

15:44.930 --> 15:46.930
等于我们的event

15:46.930 --> 15:47.410
之后呢

15:47.410 --> 15:49.410
我们就开始进行一个什么呢

15:49.410 --> 15:50.210
进行一个

15:51.250 --> 15:52.130
云海数的

15:52.130 --> 15:53.810
数据库的一个引用使用

15:53.810 --> 15:55.410
Cons的我们的这个

15:55.410 --> 15:57.330
Article List

15:57.330 --> 15:59.970
然后这里面等于一个avata

15:59.970 --> 16:00.610
avata呢

16:00.610 --> 16:03.170
我调用db.collection

16:05.170 --> 16:06.450
Collection Article

16:06.450 --> 16:07.730
找到这个Article之后

16:07.730 --> 16:10.610
我们使用聚合操作.aggrate

16:12.210 --> 16:12.690
OK

16:12.690 --> 16:13.650
在这个里面

16:13.730 --> 16:14.850
使用aggrate

16:14.850 --> 16:15.410
然后呢

16:15.410 --> 16:17.810
我通过这个.match的形式

16:17.810 --> 16:18.610
这里面写一下

16:19.890 --> 16:20.690
.match

16:20.690 --> 16:21.250
OK

16:21.250 --> 16:22.050
这个match呢

16:22.050 --> 16:23.170
找一个匹配对象

16:23.170 --> 16:23.570
然后呢

16:23.570 --> 16:24.930
我这里面使用id

16:24.930 --> 16:26.290
来进行查询

16:26.290 --> 16:27.170
那查询的时候

16:27.170 --> 16:29.330
就是我们前端传递过来的这个

16:29.330 --> 16:30.370
Article ID

16:30.370 --> 16:31.570
当你查询完成之后

16:31.570 --> 16:33.090
咱们现在其实也什么也不做

16:33.090 --> 16:33.490
对吧

16:33.490 --> 16:34.370
那我直接的

16:34.370 --> 16:35.490
其他的就不做了

16:35.490 --> 16:36.770
那我直接就让你

16:36.770 --> 16:37.330
按的

16:37.330 --> 16:38.530
返回就可以了

16:38.530 --> 16:39.010
之后呢

16:39.010 --> 16:42.290
我给你前端进行一个值的返回

16:42.370 --> 16:44.530
这里面写一个coll的是零

16:45.810 --> 16:46.210
OK

16:46.210 --> 16:47.810
继续写msg

16:47.810 --> 16:50.530
那这个我们叫一个文章获取成功

16:50.530 --> 16:51.730
获取成功

16:52.370 --> 16:52.690
好的

16:52.690 --> 16:54.050
这个处理完成之后

16:54.050 --> 16:54.850
我们最后呢

16:54.850 --> 16:56.690
把这个data给它返回去

16:56.690 --> 16:57.330
我们都知道

16:57.330 --> 16:58.450
这是一个数组形式

16:58.450 --> 16:59.010
所以说呢

16:59.010 --> 17:00.210
我们就返回

17:00.210 --> 17:02.770
article list.data

17:02.770 --> 17:04.050
下面的一个什么呢

17:04.050 --> 17:05.090
它下面的零

17:05.090 --> 17:05.650
这一项

17:05.650 --> 17:06.850
是不是就可以返回去了

17:06.850 --> 17:07.730
那返回去之后

17:07.730 --> 17:09.410
我们来看一下是否可行

17:09.410 --> 17:09.970
如果行的话

17:09.970 --> 17:11.010
我们初始化的时候

17:11.090 --> 17:12.530
是不是就能获取到

17:12.530 --> 17:13.170
对吧

17:13.170 --> 17:13.490
好的

17:13.490 --> 17:14.130
那现在啊

17:14.130 --> 17:14.770
你看啊

17:14.770 --> 17:16.130
我们初始化的时候

17:16.130 --> 17:16.770
network

17:16.770 --> 17:19.890
因为我们这个只要把这个参数

17:19.890 --> 17:20.930
解析完成之后

17:20.930 --> 17:22.210
那解析完成参数之后

17:22.210 --> 17:23.810
我们马上就继续进行

17:23.810 --> 17:26.290
get article detail的一个请求

17:26.290 --> 17:27.010
请求之后

17:27.890 --> 17:30.210
这个时候就能给我们获取到

17:30.210 --> 17:32.930
当前的这个文章的

17:32.930 --> 17:34.130
所有的一个内容

17:35.010 --> 17:36.290
我们拿到这个内容之后

17:36.290 --> 17:37.330
那现在来干什么呢

17:37.330 --> 17:38.610
其实我们现在要做的事

17:38.610 --> 17:40.130
就是比较简单了

17:40.130 --> 17:41.970
我们只要是重新的

17:41.970 --> 17:43.170
把我们的这个

17:43.890 --> 17:46.130
article data来进行一个覆盖

17:46.130 --> 17:47.090
是不是就可以了

17:47.090 --> 17:48.450
那其实原来的这些纸

17:48.450 --> 17:49.570
那原来这些纸

17:49.570 --> 17:51.810
它其实跟这个文章是完全一致的

17:51.810 --> 17:52.770
那我只要覆盖一下

17:52.770 --> 17:53.490
是不是就可以

17:53.490 --> 17:54.050
所以说呢

17:54.050 --> 17:55.410
我拿到这个纸之后

17:55.410 --> 17:57.730
这里面应该是一个data

17:57.730 --> 17:58.050
对吧

17:58.050 --> 17:59.010
也不需要解析了

18:00.690 --> 18:02.450
或者说我就写ais

18:02.450 --> 18:02.850
这样吧

18:02.850 --> 18:03.890
写data

18:03.890 --> 18:04.690
写data之后

18:04.690 --> 18:05.970
那我直接在这个里面

18:05.970 --> 18:08.290
这一次点article data

18:08.370 --> 18:09.010
然后呢

18:09.010 --> 18:11.810
等于我们的这个新获取的data

18:11.810 --> 18:12.530
最起码这样

18:12.530 --> 18:13.810
它不会影响什么呢

18:13.810 --> 18:15.410
不会影响我上面的这个内容

18:15.410 --> 18:15.810
对吧

18:15.810 --> 18:16.930
因为什么获取一次

18:16.930 --> 18:17.970
然后重新的

18:17.970 --> 18:19.410
把这个给做一个复制

18:19.410 --> 18:20.050
是不是就可以了

18:20.050 --> 18:20.610
对吧

18:20.610 --> 18:21.970
那这个处理完成之后

18:21.970 --> 18:23.170
我们接下来要做什么呢

18:23.170 --> 18:25.330
就是我们要把这个content

18:25.330 --> 18:26.290
给它做一个渲染

18:26.290 --> 18:26.770
对吧

18:26.770 --> 18:29.010
那在这个content的渲染过程当中呢

18:29.010 --> 18:30.450
它是复文门解析

18:30.450 --> 18:30.850
并且呢

18:30.850 --> 18:33.570
我们可以看一下这个返回纸上

18:33.570 --> 18:36.050
返回纸这个里面是个什么样子的呢

18:36.050 --> 18:37.410
它这个content的里面

18:37.410 --> 18:38.050
其实啊

18:38.050 --> 18:39.410
这个是一个

18:39.410 --> 18:40.690
我们一个什么呢

18:40.690 --> 18:41.890
一个markdown文档

18:41.890 --> 18:44.050
那对这种markdown文档解析呢

18:44.050 --> 18:44.450
然后呢

18:44.450 --> 18:47.890
我们是可以通过一些三方插件来处理的

18:47.890 --> 18:49.010
然后这个怎么来做

18:49.010 --> 18:51.410
我们使用一个u pass的一个插件

18:51.410 --> 18:53.010
来解析我们的复文门

18:53.010 --> 18:55.330
而不是用它原生的这个rich tax的

18:55.330 --> 18:57.810
为什么不用原生的rich tax的

18:57.810 --> 18:59.810
如果说我们用原生的rich tax的

18:59.810 --> 19:01.090
来解析复文门的话

19:01.090 --> 19:03.010
那我们自己的代码会写的很多

19:03.010 --> 19:04.690
所以说这个跟我们的主业网

19:05.810 --> 19:07.250
是有一点儿脱离的

19:07.250 --> 19:08.690
那这个里面我们就借助啊

19:08.690 --> 19:11.410
别人封装好的一个三方插件就ok了

19:11.410 --> 19:12.050
怎么来搞

19:12.050 --> 19:13.490
那我直接到工具里面

19:13.490 --> 19:15.010
我到插件安装

19:15.010 --> 19:17.970
首先打开我们的这个插件市场

19:17.970 --> 19:19.890
然后安装新插件

19:19.890 --> 19:20.770
到这个里面

19:20.770 --> 19:21.650
我们找一下

19:21.650 --> 19:23.250
找一下这个插件叫什么呢

19:23.250 --> 19:24.290
叫u pass啊

19:25.730 --> 19:27.730
然后我们搜索一下全部啊

19:29.250 --> 19:31.330
ok或者是刚才没带全部啊

19:31.330 --> 19:33.650
我们直接搜或者是我们搜索什么呢

19:33.650 --> 19:34.930
复文本解析啊

19:37.330 --> 19:38.050
点击搜索

19:38.050 --> 19:39.410
那你看第一个就是什么

19:39.410 --> 19:41.010
u pass复文本解析

19:41.010 --> 19:42.450
我们找到这个就可以了

19:42.450 --> 19:45.170
然后他这里面呢就这个使用方法啊

19:45.170 --> 19:45.810
使用方法

19:45.810 --> 19:47.410
那我们直接的这里面还说了

19:47.410 --> 19:48.770
还如何炫耳麦克当

19:48.770 --> 19:50.370
是不是他都给咱们提供了

19:50.370 --> 19:52.210
那我直接的就来用就可以了

19:52.210 --> 19:53.010
怎么用

19:53.010 --> 19:55.410
使用hbo的插导入插件就可以

19:55.410 --> 19:57.570
那我这里面打开hbo的插

19:57.570 --> 19:59.010
学习项目启动

19:59.010 --> 20:00.130
我一点击确认

20:00.130 --> 20:02.290
然后这里面就会有一个安装

20:02.290 --> 20:03.090
这个安装啊

20:03.090 --> 20:05.330
我们安装完成之后要看一下啊

20:05.330 --> 20:06.050
看一个什么呢

20:06.050 --> 20:07.970
我们折叠所有这里面啊

20:07.970 --> 20:09.090
你首先要看啊

20:09.090 --> 20:10.530
他这个是安装到哪了

20:10.530 --> 20:11.250
其实呢

20:11.250 --> 20:12.130
这个安装

20:12.130 --> 20:14.210
他是安装在components下面了

20:14.210 --> 20:16.210
components刚才经过我们操作之后

20:16.210 --> 20:17.970
这里面就有一个u pass

20:17.970 --> 20:21.250
然后这里面就是有这个u pass wheel啊

20:21.250 --> 20:24.610
他其实不是安装在什么unimodals下面

20:24.610 --> 20:25.970
一般的我们是不是都安装在

20:25.970 --> 20:27.090
unimodals下面

20:27.090 --> 20:28.370
所以说你这个使用的时候

20:28.370 --> 20:30.690
你需要给他做一个什么隐入操作

20:30.690 --> 20:33.010
这个呢是我们需要注意的一个点啊

20:33.010 --> 20:34.290
而且这里面已经说了

20:34.290 --> 20:35.970
就是怎么来进行使用

20:36.130 --> 20:37.010
那这个里面

20:37.010 --> 20:38.290
引炮的u pass

20:38.290 --> 20:39.890
直接的at complements

20:39.890 --> 20:41.250
然后直接你第一句话

20:41.250 --> 20:43.010
把它给搞过来就可以了

20:43.010 --> 20:44.130
搞过来那放在哪

20:44.130 --> 20:46.210
放在我们的这个article detail

20:46.210 --> 20:48.050
第一句引炮的u pass

20:48.050 --> 20:48.450
之后呢

20:48.450 --> 20:51.170
你这个里面注册一下这个组件啊

20:51.170 --> 20:52.770
那我组件注册的话

20:52.770 --> 20:53.890
就在这个里面

20:53.890 --> 20:54.690
在第一个吗

20:56.690 --> 20:57.490
components

20:57.490 --> 20:58.130
OK

20:58.130 --> 20:58.930
components呢

20:58.930 --> 21:01.250
那我就来进行一个使用

21:01.250 --> 21:03.410
把这个里面来逗号

21:03.410 --> 21:05.170
这个里面接下来怎么使用

21:05.250 --> 21:06.770
这里面说了components

21:06.770 --> 21:08.130
你就把这个u pass放进去

21:08.130 --> 21:09.010
是不是就可以了

21:09.010 --> 21:09.490
对吧

21:09.490 --> 21:10.930
这是他的这一步啊

21:10.930 --> 21:12.610
之后来使用的时候

21:12.610 --> 21:13.650
咱们再看一下

21:13.650 --> 21:15.810
这里面u pass解析的时候

21:15.810 --> 21:18.210
把你这个内容给他放进去就可以啊

21:18.210 --> 21:19.170
他是这么说的

21:19.170 --> 21:21.010
那咱们直接文章内容

21:21.010 --> 21:22.530
这个是不是我们需要解析的

21:22.530 --> 21:24.210
那我就把它给放进来啊

21:24.210 --> 21:25.490
然后放进来之后

21:25.490 --> 21:27.810
u pass content等于我们的这个

21:27.810 --> 21:28.770
需要解析的内容

21:28.770 --> 21:30.530
这里面还有preview

21:30.530 --> 21:32.050
还有navgate导航

21:32.050 --> 21:33.010
这都是什么意思啊

21:33.010 --> 21:33.730
navgate

21:33.810 --> 21:34.930
我们来看一下

21:36.050 --> 21:36.690
preview

21:36.690 --> 21:38.530
图片地址原始事件

21:38.530 --> 21:41.010
然后navgate连接地址原始事件

21:41.010 --> 21:41.970
这个我觉得啊

21:41.970 --> 21:43.330
我们暂时是不需要的

21:43.330 --> 21:43.730
对不对

21:43.730 --> 21:44.210
所以说呢

21:44.210 --> 21:45.010
我们在这个里面

21:45.010 --> 21:47.090
就给他干掉就可以啊

21:47.090 --> 21:48.050
那这个article呢

21:48.050 --> 21:49.810
其实就是我们解析的内容

21:49.810 --> 21:50.130
对不对

21:50.130 --> 21:51.730
那我们直接的在这个里面

21:51.730 --> 21:52.530
处理一下

21:52.530 --> 21:53.730
我们应该是谁

21:53.730 --> 21:56.210
是不是我们article.content

21:56.210 --> 21:58.210
也就是说我们这个刚才

21:58.210 --> 22:00.290
从这个里面给他获取到的

22:00.290 --> 22:01.010
这个content

22:01.010 --> 22:01.570
对吧

22:01.570 --> 22:03.410
article.content

22:03.970 --> 22:04.610
给他加上

22:04.610 --> 22:05.330
是不是就可以了

22:05.330 --> 22:06.130
咱们来看一眼

22:06.130 --> 22:06.690
是否可行

22:08.450 --> 22:09.170
感觉可以

22:09.170 --> 22:09.490
是不是

22:09.490 --> 22:10.210
感觉可以

22:10.210 --> 22:11.970
但是现在变成一坨了

22:11.970 --> 22:13.330
一坨是因为啥原因呢

22:13.330 --> 22:14.130
咱们说了

22:14.130 --> 22:14.770
我们这个啊

22:14.770 --> 22:15.810
是一个markdown文档

22:15.810 --> 22:16.210
但是呢

22:16.210 --> 22:17.650
这个里面解析的时候

22:17.650 --> 22:18.610
他应该是按着文本

22:18.610 --> 22:19.410
给咱们解析的

22:19.410 --> 22:20.210
解析出来一坨

22:20.210 --> 22:21.730
你看一下u view

22:21.730 --> 22:22.850
这里面是不是一坨啊

22:22.850 --> 22:23.250
对吧

22:23.250 --> 22:23.970
所以说呢

22:23.970 --> 22:25.730
我们得把这个markdown文档

22:25.730 --> 22:27.330
首先得给解析出来

22:27.330 --> 22:28.370
那怎么来进行这个

22:28.370 --> 22:29.570
markdown文档的解析呢

22:29.570 --> 22:31.330
这底片也说了啊

22:31.330 --> 22:32.690
这里面其实还有一句话

22:32.690 --> 22:33.570
咱们先不管他

22:33.570 --> 22:34.610
咱们先来说

22:34.610 --> 22:36.370
这个里面轩染markdown文档

22:36.370 --> 22:38.610
你要npm install markdown

22:38.610 --> 22:40.210
然后我们把这个markdown

22:40.210 --> 22:41.490
得做一个安装

22:41.490 --> 22:43.170
那打开我们的这个工程

22:43.170 --> 22:44.130
我这里面

22:44.130 --> 22:45.970
我使用ear add

22:45.970 --> 22:48.210
然后把这句话给他安装一下

22:48.210 --> 22:48.930
因为我这里面

22:48.930 --> 22:50.610
是使用的ear快一些

22:50.610 --> 22:51.650
ear add markdown

22:51.650 --> 22:52.370
那我就来给他

22:52.370 --> 22:53.650
在这个全局安装一下

22:55.170 --> 22:56.450
安装这样就完成了

22:56.450 --> 22:57.570
是非常快的

22:57.570 --> 22:58.850
那你安装完成之后

22:58.850 --> 23:00.130
咱们怎么来做呢

23:00.130 --> 23:00.850
再回来

23:00.850 --> 23:01.570
到这个里面

23:01.570 --> 23:02.050
他说了

23:02.050 --> 23:03.090
你引入他

23:03.090 --> 23:04.130
引入他之后呢

23:04.130 --> 23:05.250
你这里面

23:05.250 --> 23:06.290
给他做一个什么呢

23:06.290 --> 23:07.330
把这个article

23:07.330 --> 23:08.930
你获取到的这个article

23:08.930 --> 23:10.210
你给他做一个处理

23:10.210 --> 23:11.810
通过mark的函数

23:11.810 --> 23:13.170
给他封装一下就可以了

23:13.170 --> 23:14.850
那这个是比较简单的

23:14.850 --> 23:16.530
我们回到article detail

23:16.530 --> 23:18.050
这里面引入一下

23:18.050 --> 23:18.610
引入一下

23:18.610 --> 23:19.970
这个就不需要组件了

23:19.970 --> 23:21.490
那我们直接给他

23:21.490 --> 23:22.450
解析一下就可以

23:22.450 --> 23:23.250
那解析一下

23:23.250 --> 23:24.930
我们直接在这个里面

23:24.930 --> 23:26.610
咱们刚才使用的是什么

23:26.610 --> 23:28.290
我们article.content

23:28.290 --> 23:28.770
对不对

23:28.770 --> 23:29.570
那我这里面

23:29.570 --> 23:30.610
可以使用一个什么呢

23:30.610 --> 23:31.650
计算属性

23:31.650 --> 23:32.930
我们来给他解析

23:32.930 --> 23:33.890
那这里面

23:33.890 --> 23:35.410
computed

23:35.410 --> 23:36.370
computed

23:36.370 --> 23:37.650
我们就通过这种

23:37.650 --> 23:39.570
计算属性的形式

23:39.570 --> 23:41.010
computed

23:41.010 --> 23:41.490
OK

23:41.490 --> 23:42.610
我们写一个什么

23:42.610 --> 23:43.410
content

23:43.410 --> 23:44.210
content呢

23:44.210 --> 23:44.930
我们就给他

23:44.930 --> 23:45.810
return出去

23:45.810 --> 23:46.450
一个值

23:46.450 --> 23:47.570
return一个什么

23:47.570 --> 23:50.370
我们这个就可以使用这个mark的

23:51.810 --> 23:52.610
mark的是

23:52.610 --> 23:54.450
这次点article date

23:54.450 --> 23:55.090
OK

23:55.090 --> 23:56.690
点content

23:56.690 --> 23:57.170
对吧

23:57.170 --> 23:58.530
我们直接解析这个

23:58.530 --> 23:59.890
来看一眼行不行

23:59.890 --> 24:00.770
回到我们的这个

24:00.770 --> 24:02.130
文章详情里面

24:02.130 --> 24:03.810
感觉上好像是不行

24:03.810 --> 24:05.010
这个不行的原因是什么

24:05.010 --> 24:06.210
我们来看一眼

24:06.210 --> 24:07.250
这里面

24:07.250 --> 24:08.370
这一次点mark的

24:08.370 --> 24:09.970
upass解析的时候

24:09.970 --> 24:11.330
这个里面还是没解析出来

24:11.330 --> 24:12.210
为啥没解析出来

24:12.210 --> 24:13.010
你看一眼

24:13.010 --> 24:14.450
我们可以打印一个什么呢

24:14.450 --> 24:16.450
这一次点article

24:16.450 --> 24:17.330
点content

24:17.330 --> 24:18.210
我们先给他打印

24:19.170 --> 24:19.970
sorry

24:19.970 --> 24:20.850
这个里面

24:20.850 --> 24:22.290
是因为在这个里面

24:22.290 --> 24:23.650
我们是不是要给他调整

24:23.650 --> 24:24.690
换一下的对吧

24:24.690 --> 24:25.170
也就是说

24:25.170 --> 24:26.770
把一个article content

24:26.770 --> 24:27.970
给他换成

24:27.970 --> 24:29.250
我们的这个content

24:29.250 --> 24:30.370
你看这样是不是就感觉

24:30.370 --> 24:31.090
解析出来了

24:31.090 --> 24:32.450
然后再刷新一下

24:32.450 --> 24:33.010
刷新一下

24:33.010 --> 24:34.850
你会发现出手话有问题

24:34.850 --> 24:35.970
出手话有啥问题呢

24:35.970 --> 24:37.090
就是说这个

24:37.090 --> 24:39.090
我们的这个article detail

24:39.090 --> 24:40.930
article date点content呢

24:40.930 --> 24:41.890
其实它这个呢

24:41.890 --> 24:43.890
是我们在这个出手话的时候

24:43.890 --> 24:45.730
通过一步请求获取的

24:45.730 --> 24:47.170
那你一步请求获取的

24:47.170 --> 24:48.690
其实我们这个

24:48.690 --> 24:51.730
在我们出这个computer data

24:51.730 --> 24:52.530
出手话的时候

24:52.530 --> 24:54.130
它是没办法获取到的

24:54.130 --> 24:55.090
没办法获取到

24:55.090 --> 24:56.370
你mark的直接解析

24:56.370 --> 24:57.250
这个肯定不行

24:57.250 --> 24:57.810
对不对

24:57.810 --> 24:58.450
那肯定不行

24:58.450 --> 24:58.770
怎么办

24:58.770 --> 25:00.690
那我直接得要判断一下

25:00.690 --> 25:02.130
这次点article data

25:02.130 --> 25:03.890
点content成立吗

25:03.890 --> 25:05.170
如果说成立的话

25:05.170 --> 25:06.450
那你去解析

25:06.450 --> 25:07.090
否则呢

25:07.090 --> 25:08.370
那我就给你一个什么

25:08.370 --> 25:08.690
no

25:08.690 --> 25:09.570
是不是就可以了

25:09.570 --> 25:09.970
对吧

25:09.970 --> 25:10.850
那咱们来看一下

25:10.850 --> 25:13.490
这种操作是否可行啊

25:13.490 --> 25:14.130
我刷新一下

25:14.130 --> 25:15.810
这样是不是就感觉没问题了

25:15.810 --> 25:16.290
对吧

25:16.290 --> 25:17.170
没问题了

25:17.170 --> 25:18.930
但是我们再看一个问题

25:18.930 --> 25:19.570
是啥呢

25:19.570 --> 25:22.050
是我们的这个小程序的这一块啊

25:22.050 --> 25:22.450
然后呢

25:22.450 --> 25:23.890
我们这是小程序代码

25:23.890 --> 25:24.690
我们一点击

25:24.690 --> 25:26.530
你会发现这里面还有包错

25:26.530 --> 25:27.570
还有包错是一个什么呢

25:27.570 --> 25:29.010
是我们这个content的包错了

25:29.010 --> 25:29.570
对吧

25:29.570 --> 25:30.770
那这个东西啊

25:30.770 --> 25:32.130
是因为什么呢

25:32.130 --> 25:35.010
还是因为我们这个计算属性的问题啊

25:35.010 --> 25:36.370
就是说他出手话的时候

25:36.370 --> 25:37.170
小程序

25:37.170 --> 25:39.170
你直接读取一个位置的属性

25:39.170 --> 25:40.050
他直接就给你

25:40.050 --> 25:40.530
包错了

25:40.530 --> 25:42.050
他不允许你这样写啊

25:42.050 --> 25:42.850
语法上有错

25:42.850 --> 25:43.490
那怎么办

25:43.490 --> 25:44.610
我们再优化一下

25:44.610 --> 25:45.810
我们可以通过什么

25:45.810 --> 25:47.090
try catch的形式

25:47.090 --> 25:47.650
是不是

25:47.650 --> 25:49.410
也就是说try catch

25:49.410 --> 25:50.850
我尝试性的

25:50.850 --> 25:51.570
做一个什么

25:51.570 --> 25:52.290
解析

25:52.290 --> 25:52.930
return

25:52.930 --> 25:54.290
这个mark的

25:54.290 --> 25:56.130
这一次点article content

25:56.210 --> 25:57.250
然后我直接的

25:57.250 --> 25:58.770
这里面给他调整一下

25:58.770 --> 25:59.970
那我这个mark的

25:59.970 --> 26:01.650
就给他使用这个吧

26:03.010 --> 26:04.690
我不使用判断条件了

26:04.690 --> 26:06.610
我就是说直接的去解析他

26:06.610 --> 26:07.090
如果说

26:07.090 --> 26:08.370
那这第一次肯定有包错

26:08.370 --> 26:08.850
对不对

26:08.850 --> 26:09.970
那假如说有包错

26:09.970 --> 26:11.570
我直接的在这个里面

26:11.570 --> 26:12.930
我return一个什么

26:12.930 --> 26:13.810
return一个nau

26:13.810 --> 26:14.770
是不是就可以了

26:14.770 --> 26:15.730
那这样啊

26:15.730 --> 26:16.770
首先第一次进来

26:16.770 --> 26:17.330
他执行

26:17.330 --> 26:18.530
执行我让他returnnau

26:18.530 --> 26:19.330
是不是就可以了

26:19.330 --> 26:20.290
那就保证

26:20.290 --> 26:21.490
他也不去解析这个

26:21.490 --> 26:23.490
也不会有这个语法错误

26:23.490 --> 26:23.890
对不对

26:23.890 --> 26:25.410
就是这么一个过程啊

26:25.410 --> 26:26.690
ok 我们可以看一下

26:26.690 --> 26:27.970
小程序的这个啊

26:27.970 --> 26:29.250
再回到这个里面

26:29.250 --> 26:29.730
然后呢

26:29.730 --> 26:31.410
小程序这个是自己默认

26:31.410 --> 26:32.690
他如果说你编一碗了

26:32.690 --> 26:34.450
他手里面一定是这个对不对

26:34.450 --> 26:35.490
我点击一下

26:35.490 --> 26:36.770
你看这时候此时

26:36.770 --> 26:37.730
是不是就没有包错了

26:37.730 --> 26:38.290
对吧

26:38.290 --> 26:39.330
没有包错了之后

26:39.330 --> 26:40.610
我们再回到

26:40.610 --> 26:41.810
我们的一个什么

26:41.810 --> 26:43.490
我们谷歌溜烂器里面

26:43.490 --> 26:44.050
咱们看一下

26:44.050 --> 26:45.810
谷歌溜烂器是否可行

26:45.810 --> 26:46.530
发行一下

26:46.530 --> 26:48.050
然后到这里面一跳转

26:48.050 --> 26:48.610
一跳转

26:48.610 --> 26:50.050
感觉是不是也没什么问题

26:50.050 --> 26:50.530
对吧

26:50.530 --> 26:51.090
那这个呢

26:51.090 --> 26:52.530
是也是成功的啊

26:52.530 --> 26:53.330
成功之后

26:53.330 --> 26:54.530
那咱们再回来啊

26:54.530 --> 26:55.730
现在看一下什么呢

26:55.730 --> 26:56.930
我们的这个样式没有

26:56.930 --> 26:57.410
对吧

26:57.410 --> 26:58.930
感觉你刚才也做了

26:58.930 --> 27:01.170
但是样式是没有做任何处理的

27:01.170 --> 27:02.050
那这个样式啊

27:02.050 --> 27:03.490
他在这个里面也说了

27:03.490 --> 27:04.130
怎么来做呢

27:05.650 --> 27:06.450
这里面找到

27:07.330 --> 27:09.090
如果说你在使用的时候

27:09.090 --> 27:11.090
你要引入这么一个样式啊

27:11.090 --> 27:12.530
你看爱的compromise

27:12.530 --> 27:15.890
upass upass.css是吧

27:15.890 --> 27:17.090
你直接的要把这个

27:18.050 --> 27:20.530
样式给他进行一个引入啊

27:20.530 --> 27:21.730
那怎么来引入呢

27:21.730 --> 27:23.490
我们直接的这个

27:23.650 --> 27:24.690
他这里面还没说啊

27:24.690 --> 27:26.770
我记得他是有这么一句话的

27:26.770 --> 27:28.850
先将markdown转换为atml

27:29.410 --> 27:30.050
ok啊

27:30.050 --> 27:31.810
那咱们直接就给他引入就可以了

27:31.810 --> 27:33.650
我告诉同学们在哪里引入啊

27:33.650 --> 27:34.850
这个应该在哪里引入呢

27:34.850 --> 27:37.250
我们直接找到我们的这个

27:37.250 --> 27:38.450
app.view

27:38.450 --> 27:40.050
然后在这个里面

27:40.050 --> 27:42.850
通过item pod的形式全局引入

27:42.850 --> 27:43.490
那这样呢

27:43.490 --> 27:46.130
他就可以正常的给我们做一个解析了

27:46.130 --> 27:46.530
你看啊

27:46.530 --> 27:48.210
刚才通过引入之后

27:48.210 --> 27:49.890
这个样式是不是就正常了

27:49.890 --> 27:50.370
对吧

27:50.370 --> 27:51.810
那此时就ok了

27:51.810 --> 27:53.330
然后我们再看一下什么呢

27:53.330 --> 27:54.610
看一下我们的这个

27:55.890 --> 27:56.850
小程序里面啊

27:56.850 --> 27:57.970
他是否正常啊

27:58.610 --> 27:59.010
好的

27:59.010 --> 28:00.690
我们刷新一下界面啊

28:02.370 --> 28:03.810
直接在这里面刷新一下

28:03.810 --> 28:04.770
刷新一下之后

28:04.770 --> 28:05.650
我们点击

28:05.650 --> 28:07.890
点击你会发现小程序里面的样式

28:07.890 --> 28:08.850
是不是也ok的

28:08.850 --> 28:09.810
那这样就保证了

28:09.810 --> 28:10.770
我们一个什么

28:10.770 --> 28:12.610
正常的一个渲染

28:12.610 --> 28:13.410
那这几个呢

28:13.410 --> 28:13.970
其实呢

28:13.970 --> 28:15.170
我们就是把这个

28:15.170 --> 28:17.170
整个的初始化渲染的这一部分

28:17.170 --> 28:18.370
来给他实现一下

28:18.370 --> 28:19.090
其实呢

28:19.090 --> 28:21.010
这个内容不是特别复杂

28:21.010 --> 28:22.290
我们主要是什么呢

28:22.370 --> 28:23.490
这个里面掌握的点

28:23.490 --> 28:25.650
第一个就是我们的一个预渲染的

28:25.650 --> 28:26.770
这么一个过程

28:26.770 --> 28:29.010
也就是说在我们文章卡片

28:29.010 --> 28:30.610
跳转到文章想请的时候

28:30.610 --> 28:32.690
我们是有这么一个预渲染的

28:32.690 --> 28:33.890
这么一个形式

28:33.890 --> 28:34.930
然后第二个是啥呢

28:34.930 --> 28:36.690
就是我们借助三方插件

28:36.690 --> 28:37.970
把我们的这个

28:37.970 --> 28:40.050
马克当文档给做了一个解析

28:40.050 --> 28:40.450
这个呢

28:40.450 --> 28:41.410
我们要注意一下

28:41.410 --> 28:42.290
就ok了

28:42.290 --> 28:42.610
好的

28:42.610 --> 28:44.770
那我们本节课内容就到这里

