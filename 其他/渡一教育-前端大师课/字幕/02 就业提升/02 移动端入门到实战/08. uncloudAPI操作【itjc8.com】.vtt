WEBVTT

00:01.580 --> 00:06.180
各位同学 大家好 这节课我们继续UniCloud的一个学习

00:06.180 --> 00:10.980
那么本节课我们来通过编程的形式实现一个云数去固的调用

00:10.980 --> 00:16.980
实现它的一个基本的增山改查 也就是说它的CRUD的一个操作

00:16.980 --> 00:22.180
如何来实现呢 首先我们在前端创建一个简单的表单填充项

00:22.180 --> 00:26.980
向后端发送一个数据 然后后端接送到这个数据之后

00:26.980 --> 00:30.580
也就是说我们的云韩数 获取我们前端的数据

00:30.580 --> 00:34.780
实现一个我们向数据固存储 这样一个操作就可以

00:34.780 --> 00:40.780
怎么来实现 首先我们第一步先带前端创建两个input输入框

00:40.780 --> 00:44.780
然后将这个输入框的内容传递给我们的这个云韩数

00:44.780 --> 00:48.580
那我们来写一下 首先我们在这个里面input

00:48.580 --> 00:52.280
input有一个默认的歪两 我们可以换成我们VIO的写法

00:52.280 --> 00:56.580
Vigamodel这种形式 那这个叫UserName

00:56.580 --> 01:01.580
ok 这是第一个 第一个我再写一个Tax的 这个叫用户名

01:01.580 --> 01:04.180
ok 或者是把他们给换一下位置啊

01:04.180 --> 01:08.780
然后这是一个 一个之后我们再来写第二个Tax它

01:08.780 --> 01:14.180
我们这个叫年龄 然后呢我们再来一个inputVigamodel

01:14.180 --> 01:17.780
同样的我们这个是给一个H

01:17.780 --> 01:19.580
ok 这个就完成了 完成之后呢

01:19.580 --> 01:22.780
我们把这两个值给进行一个定义

01:22.780 --> 01:27.780
data return 我们在这个里面先是有一个UserName

01:27.780 --> 01:29.780
初识化呢 给它一个空直

01:29.780 --> 01:32.780
然后在这个里面再定义一个H

01:32.780 --> 01:34.580
好了 可以了 给了之后呢

01:34.580 --> 01:36.980
我们这里面底下是不是得有一个发送按钮

01:36.980 --> 01:39.780
所以说我在这个里面写一个什么button

01:39.780 --> 01:43.380
然后呢 这个里面发送提交表单吧

01:43.380 --> 01:47.380
然后呢 给它进行一个atclick 事件的绑定

01:47.380 --> 01:51.780
我们这个send的UserInfo

01:51.780 --> 01:54.780
由于它呢 这个里面啊 我们是一个接口调用

01:54.780 --> 01:57.180
默认的啊 我这里面给它一个下滑线

01:57.180 --> 02:00.680
当然这个是个习惯啊 并不是强制性的一个操作

02:00.680 --> 02:06.280
然后呢 我这里面vmexer的这个叫sendUserInfo

02:06.280 --> 02:07.780
把它写一下

02:07.780 --> 02:12.180
sendUserInfo ok 那这个里面我们就开始进行一个什么

02:12.180 --> 02:16.380
数据的发送 那咱们知道啊 从过上几课的学习

02:16.380 --> 02:19.680
我们uniclode的点一个call function

02:19.680 --> 02:21.780
可以实现一个向云寒数传递

02:21.780 --> 02:26.180
那我这里面写一下conc的res等于一个wait

02:26.180 --> 02:28.880
然后呢 前面加一个修饰服

02:28.880 --> 02:32.780
使用promise结合syncwait这种形式啊

02:32.780 --> 02:35.580
首先第一个是我们云寒数的名字

02:35.580 --> 02:37.980
那这个云寒数名字我们怎么来写呢

02:37.980 --> 02:40.380
当时写了一个type的level1以及level2

02:40.380 --> 02:45.180
那这两个呢 我重新来创建一个带领同学们再回顾一下

02:45.180 --> 02:48.080
首先呢 就是我们的这个新建云寒数

02:48.080 --> 02:50.380
那我们叫C我

02:50.380 --> 02:53.780
然后呢User或者是我们叫

02:53.780 --> 02:57.880
i的下线UserInfo ok

02:57.880 --> 02:59.980
那这个呢 就定义好了啊

02:59.980 --> 03:01.780
或者是叫i的User就ok了

03:01.780 --> 03:03.680
i的User我们创建一下

03:03.680 --> 03:07.280
创建完成之后这个里面名字是可以啊

03:07.280 --> 03:08.880
添加了添加成什么呢

03:08.880 --> 03:12.780
就是我们刚才创建的这个i的User ok

03:12.780 --> 03:15.380
把这里面改一下conc的

03:15.380 --> 03:18.280
好的 那这个里面呢 还会有一个数据的发送

03:18.280 --> 03:19.980
那我这里面写一个data

03:19.980 --> 03:23.980
data呢 就是我们这一次点UserName和这个A字

03:23.980 --> 03:27.280
那我这里面就写一下UserName

03:27.280 --> 03:29.980
是我们的这一次点UserName

03:29.980 --> 03:32.080
然后呢 还有一个A字

03:32.080 --> 03:35.480
是我们这一次点A字 ok

03:35.480 --> 03:37.280
那这个呢 就填写完成了

03:37.280 --> 03:38.480
填写完成之后呢

03:38.480 --> 03:42.380
其实呢 我们现在就想对这个云寒数给它发送数据

03:42.380 --> 03:43.480
那这个云寒数里呢

03:43.580 --> 03:44.880
我们先要做几件事啊

03:44.880 --> 03:50.680
首先呢 我要把前端传递过来的数据进行一个获取操作

03:50.680 --> 03:52.780
也就是说我们在这个里面

03:53.480 --> 03:58.680
第一步就是获取前端传递的数据

03:58.680 --> 03:59.880
如何在获取呢

03:59.880 --> 04:00.880
因为这个event啊

04:00.880 --> 04:03.680
包含了我们前端传递过来的所有信息

04:03.680 --> 04:07.480
所以说我在这个里面UserName和这个A字

04:07.480 --> 04:11.480
从这个event里面进行一个解构

04:11.480 --> 04:12.480
解构完成之后

04:12.480 --> 04:13.680
那你想啊 这时候呢

04:13.680 --> 04:16.780
我们要对数据库来进行一个操作了

04:16.780 --> 04:18.480
那对数据库进行操作呢

04:18.480 --> 04:23.580
首先我们的第一步要是获取到数据库的一个引用啊

04:26.420 --> 04:27.120
这个里面呢

04:27.120 --> 04:28.820
我们已经给同学们写好了啊

04:28.820 --> 04:30.420
同学们在第一次使用的时候

04:30.420 --> 04:31.920
如果说不太熟悉的话

04:31.920 --> 04:34.620
可以按这个文档一步一步的来实现

04:34.620 --> 04:36.620
这里面有一个Counts的DP

04:36.620 --> 04:39.920
等于you need to load the data base

04:39.920 --> 04:42.220
你就按这个一步一步的走啊

04:42.320 --> 04:43.720
而且呢 跟同学们说啊

04:43.720 --> 04:46.020
如果说你API量比较大的情况下

04:46.020 --> 04:49.620
比如说我们现在开始学习这个UniClosed

04:49.620 --> 04:51.020
那它里面的一些概念

04:51.020 --> 04:53.320
或者一些API属性特别多

04:53.320 --> 04:53.920
怎么办

04:53.920 --> 04:55.720
我们要学会查文档啊

04:55.720 --> 04:57.220
而不是说要你啊

04:57.220 --> 04:59.620
去我们机械性的一个记忆

04:59.620 --> 05:01.420
如果说你以后用的多了

05:01.420 --> 05:03.520
以后开发过程当中使用的比较多

05:03.520 --> 05:04.720
那你自然而然呢

05:04.720 --> 05:06.920
就会有一个机械性的记忆了

05:06.920 --> 05:08.320
好的 那我们来做一下

05:09.420 --> 05:11.420
获取数据库的引用怎么写

05:11.420 --> 05:14.020
那我们这里面Counts的DP

05:14.020 --> 05:17.220
等于我们的UniClosed啊

05:17.220 --> 05:18.620
还是UniClosed

05:18.620 --> 05:21.020
UniClosed的点data base

05:21.020 --> 05:22.420
ok 这就获取了

05:22.420 --> 05:24.720
然后呢获取完这个之后

05:24.720 --> 05:26.020
那我们在这个里面

05:26.020 --> 05:27.920
第一个是获取前端集合

05:27.920 --> 05:29.320
其实我在这个前面

05:29.320 --> 05:32.720
我们如果说想对某一个表操作

05:32.720 --> 05:35.420
我还要获取这个表的集合

05:35.420 --> 05:37.720
那也就是说这里面再给大家写一下

05:37.720 --> 05:41.320
获取某一个数据表的集合

05:41.320 --> 05:45.020
某一个数据表的集合

05:45.020 --> 05:46.120
那我们可以看一下

05:46.120 --> 05:47.620
现在我们的数据表

05:48.720 --> 05:51.820
我们在这个State的UniClosed里面

05:51.820 --> 05:53.020
创建的这个数据表

05:53.020 --> 05:54.320
只有一个Demo

05:54.320 --> 05:55.020
那这里面呢

05:55.020 --> 05:56.920
我们还想定一个User

05:56.920 --> 05:58.320
那这个怎么来定义呢

05:58.320 --> 06:00.620
如果说你要是直接在这个里面添加

06:00.620 --> 06:02.320
ok 这是没有问题的

06:02.320 --> 06:03.220
或者是呢

06:03.220 --> 06:04.820
在我们新增的时候

06:04.820 --> 06:05.720
假如你没有

06:05.720 --> 06:08.420
它会默认给我们创建这样一个表

06:08.420 --> 06:08.820
这个呢

06:08.820 --> 06:10.120
有点像我们操作

06:10.120 --> 06:12.120
Mango数据库这种形式

06:12.120 --> 06:13.120
那我在这里面

06:13.120 --> 06:14.120
咱们直接的

06:14.120 --> 06:15.320
因为现在没有嘛

06:15.320 --> 06:15.820
但是呢

06:15.820 --> 06:17.220
我想让它创建一个

06:17.220 --> 06:19.920
那我这里面Cons的获取一个表的集合

06:22.420 --> 06:23.220
Collection

06:23.220 --> 06:27.320
定一个变量等于我们的DB点

06:27.320 --> 06:28.620
找到一个表

06:28.620 --> 06:29.420
那这个表呢

06:29.420 --> 06:30.720
我们叫它User

06:32.120 --> 06:33.320
ok 那这个时候呢

06:33.320 --> 06:35.520
我们就获取到这个表的集合了

06:35.520 --> 06:37.220
获取这个表的集合之后

06:37.220 --> 06:40.020
我们现在就可以做一个新增操作

06:40.120 --> 06:41.820
那也就是说Collection

06:41.820 --> 06:43.620
那这个里面调用什么方法

06:43.620 --> 06:44.320
你看

06:44.320 --> 06:45.420
这里面有一个什么

06:45.420 --> 06:46.720
Add方法对不对

06:46.720 --> 06:48.220
那这个Add方法是什么呢

06:48.220 --> 06:52.120
就是进行一个什么新增的这个操作

06:52.120 --> 06:52.720
在这个里面

06:52.720 --> 06:54.120
也给同学们写了

06:54.120 --> 06:56.620
新增记录Collection.Add

06:56.620 --> 06:59.320
把你刚才需要获取到的这个前团的

06:59.320 --> 07:02.320
直接传递给我们这个云汉数之后

07:02.320 --> 07:05.220
那我们直接云汉数可以在这个里面添加

07:05.220 --> 07:05.620
这样呢

07:05.620 --> 07:08.520
就可以对这个数据库里面的这个表里面

07:08.520 --> 07:10.520
进行一个记录的添加了啊

07:10.520 --> 07:12.320
那我这里面Collection.Add

07:12.320 --> 07:13.420
这是个对象

07:13.420 --> 07:14.720
那我这个里面添什么呢

07:14.720 --> 07:18.720
就是把我们前台获取到的这个User

07:18.720 --> 07:19.320
内幕

07:19.320 --> 07:22.420
还有这个H进行一个添加啊

07:22.420 --> 07:22.820
然后呢

07:22.820 --> 07:27.720
这里面的写一下添加数据操作啊

07:27.720 --> 07:29.920
或者是我们可以理解为是什么

07:29.920 --> 07:32.420
我们添加记录的一个操作

07:32.420 --> 07:33.520
ok 那你这个呢

07:33.520 --> 07:36.020
其实它是有一个返回值的

07:36.020 --> 07:39.420
我们这里面Counts的res等于一个await

07:39.420 --> 07:42.220
这个时候我们把这个res

07:42.220 --> 07:44.020
然后呢在这里打印一下可以

07:44.020 --> 07:46.820
那我直接给它前端返回也可以

07:46.820 --> 07:48.420
我在这个前端返回的时候

07:48.420 --> 07:50.720
那这里面就是code0

07:50.720 --> 07:53.220
然后呢给它一个msg信息

07:53.220 --> 07:54.420
res

07:54.420 --> 07:56.020
整体的给它做一个返回

07:56.020 --> 07:56.820
就ok了

07:56.820 --> 07:57.520
那这样呢

07:57.520 --> 07:59.520
我们来试一下看是否能成功

07:59.520 --> 08:00.420
怎么办呢

08:00.420 --> 08:03.020
我们先不进行前台的一个操作

08:03.020 --> 08:06.920
我们先来对这个index里啊

08:06.920 --> 08:10.220
这个爱的User这个表来进行一个上传操作

08:10.220 --> 08:14.320
也就是说让它关联我们远端的这个云浮气啊

08:14.320 --> 08:15.720
那我们上传部署

08:15.720 --> 08:17.520
ok 那上传完成之后呢

08:17.520 --> 08:18.420
它代表什么意思

08:18.420 --> 08:20.420
就是说我们刚才这个云函数

08:20.420 --> 08:24.020
已经添加到我们这个云空间里面了

08:24.020 --> 08:25.620
那我们来可以看一下

08:25.620 --> 08:28.820
的函数列表里面会有一个爱的User

08:28.820 --> 08:29.220
对不对

08:29.220 --> 08:30.020
在这个里面

08:30.020 --> 08:30.320
好的

08:30.320 --> 08:33.820
那我们现在就开始正式的进行一个调用

08:33.820 --> 08:34.620
那在这个里面呢

08:34.620 --> 08:37.420
我们有用户名和一个年龄两项

08:37.420 --> 08:39.020
那我们就来添加一下

08:39.020 --> 08:41.720
查看一下它的返回指示

08:41.720 --> 08:42.520
用户名呢

08:42.520 --> 08:47.520
我写一个L年龄是20提角表单

08:47.520 --> 08:48.520
提角表单

08:48.520 --> 08:50.020
刚才发现有一个喷定

08:50.020 --> 08:50.520
然后呢

08:50.520 --> 08:51.920
爱的User返回

08:51.920 --> 08:52.720
返回之后

08:52.720 --> 08:54.320
这里面有一个返回结果

08:54.320 --> 08:58.120
返回结果code0id是60FA

08:58.120 --> 08:59.220
那这是啥意思啊

08:59.220 --> 08:59.620
这个呢

08:59.620 --> 09:03.220
就是我们获取到的插入成功之后的

09:03.220 --> 09:05.620
一个这条记录的指定的唯一值

09:05.620 --> 09:06.620
我们来可以看一下

09:06.620 --> 09:07.920
是否插入成功

09:07.920 --> 09:09.620
回到我们的数据库里面

09:09.620 --> 09:10.620
此时数据库里面

09:10.620 --> 09:13.420
除了我们上节和定义的这个单冒之外

09:13.420 --> 09:15.220
还有一个就是这个User

09:15.220 --> 09:17.720
也就是说刚才我们要新增记录的

09:17.720 --> 09:18.720
那个数据表

09:18.720 --> 09:19.820
那这个数据表里面呢

09:19.820 --> 09:21.520
就有一条插入的这个值

09:21.520 --> 09:22.520
User name

09:22.520 --> 09:23.920
以及 age 是不是

09:23.920 --> 09:26.220
这是一种实现的形式啊

09:26.220 --> 09:27.420
还有一种是什么呢

09:27.420 --> 09:28.520
咱们之前说了

09:28.520 --> 09:31.520
我们可以通过这种测试的形式来实现

09:31.520 --> 09:32.220
那咋办呢

09:32.220 --> 09:35.320
我们之间可以配置一个运行参数

09:35.320 --> 09:36.720
也可以实现啊

09:36.720 --> 09:39.220
这里面我们User name

09:39.220 --> 09:39.720
然后呢

09:39.720 --> 09:40.820
我这里面写一个什么

09:40.820 --> 09:42.120
写一个job

09:42.120 --> 09:43.720
或者是写个中文啊

09:43.720 --> 09:44.620
小铭

09:44.620 --> 09:45.320
写完了之后

09:45.320 --> 09:47.220
这里面再添一个 age

09:47.220 --> 09:48.820
age 是一个15

09:49.920 --> 09:50.820
OK

09:50.820 --> 09:51.420
保存一下

09:51.420 --> 09:52.420
保存完成之后

09:52.420 --> 09:52.720
哎

09:52.720 --> 09:53.420
这个 age 啊

09:53.420 --> 09:55.120
一定是要用一个json

09:55.120 --> 09:55.920
好了

09:55.920 --> 09:56.420
保存

09:56.420 --> 09:57.520
保存完成之后呢

09:57.520 --> 09:59.420
这个时候我们可以啊

09:59.420 --> 10:01.120
现在不通过前台

10:01.120 --> 10:02.620
那我们直接在这个里面

10:02.620 --> 10:04.020
上传并运行

10:04.020 --> 10:05.820
来进行一下测试

10:05.820 --> 10:07.020
但是跟同学们说啊

10:07.020 --> 10:08.020
这种形式呢

10:08.020 --> 10:09.320
它相对是比较慢的

10:09.320 --> 10:09.920
因为什么呢

10:09.920 --> 10:11.220
它要经过两个部分

10:11.220 --> 10:11.720
首先呢

10:11.720 --> 10:12.120
第一

10:12.120 --> 10:14.120
它是将我们的这个

10:14.120 --> 10:15.620
里面的这个云海硕尔

10:15.620 --> 10:17.120
进行一次上传操作

10:17.120 --> 10:19.320
然后第二次是做一个什么是操作呢

10:19.320 --> 10:21.920
它是把我们这里面的一些测试内容

10:21.920 --> 10:23.320
来进行一次运行

10:23.320 --> 10:25.920
所以说它这个过程是有一些慢的

10:25.920 --> 10:27.220
当我上传成功之后

10:27.220 --> 10:28.520
你会看到啊

10:28.520 --> 10:30.720
这里面有一个打印日志

10:30.720 --> 10:32.920
它的这个返回结果是扣的零

10:32.920 --> 10:33.520
msg

10:34.720 --> 10:36.520
给了我们上传成功之后

10:36.520 --> 10:38.120
这条记录纸的一个id

10:38.920 --> 10:39.420
而且呢

10:39.420 --> 10:41.320
我们可以从这个数据表里面

10:41.320 --> 10:42.720
来进行一个查看

10:42.720 --> 10:45.420
这里面是又多了一条记录纸啊

10:45.420 --> 10:45.720
ok

10:45.720 --> 10:47.520
那这个是没有问题的

10:47.520 --> 10:48.220
那没有问题

10:48.220 --> 10:51.620
接下来我们来进行第二步的一个操作

10:51.620 --> 10:52.720
来做什么呢

10:52.720 --> 10:55.220
我们来做一个记录的删除

10:55.220 --> 10:55.820
也就是说

10:55.920 --> 10:57.720
你看这里面有两条记录

10:57.720 --> 10:59.420
我想删除一条怎么来做呢

10:59.420 --> 11:00.920
我就通过这种

11:01.720 --> 11:02.320
doc

11:02.320 --> 11:05.120
然后指定获取到它的这个id

11:05.120 --> 11:07.120
进行一个水幕这种形式

11:07.120 --> 11:10.220
来对它进行一个删除的一个操作

11:10.220 --> 11:11.820
但是你现在进行删除啊

11:11.820 --> 11:12.820
首先有一个问题

11:12.820 --> 11:13.820
就是什么问题呢

11:13.820 --> 11:15.020
我们得先获取到它

11:15.020 --> 11:15.620
对吧

11:15.620 --> 11:17.320
那在我们前台这一块

11:17.320 --> 11:19.220
如果说想用这个

11:19.220 --> 11:22.020
我们前台来实现这种删除的话

11:22.020 --> 11:24.120
那你这里面现在是不是没有这两项

11:24.120 --> 11:25.720
也就是说我们刚才上传的

11:25.820 --> 11:26.720
这两项是没有的

11:26.720 --> 11:27.120
对吧

11:27.120 --> 11:30.020
那我们来可以进行一下获取

11:30.020 --> 11:31.320
那获取怎么获取呢

11:31.320 --> 11:34.420
获取我们直接用这种数据查找的形式

11:34.420 --> 11:35.620
就可以来获取

11:35.620 --> 11:36.520
两种形式

11:36.520 --> 11:37.920
第一种是什么呢

11:37.920 --> 11:41.220
我们通过这种collection.get

11:41.220 --> 11:44.020
然后我们查找到全部的

11:44.020 --> 11:45.920
这个表里面的数据

11:45.920 --> 11:47.020
还有一种是什么呢

11:47.020 --> 11:49.920
我们通过这种doc的形式

11:49.920 --> 11:53.120
来指定我们通过id

11:53.120 --> 11:54.920
来进行一个数据的查找

11:55.820 --> 11:57.020
那么其他的形式呢

11:57.020 --> 11:58.920
其他形式就是通过这种ware

11:58.920 --> 12:01.420
以指定的名字来进行一个查找

12:01.420 --> 12:04.620
那我们依次的来进行一个尝试

12:04.620 --> 12:05.220
怎么办呢

12:05.220 --> 12:06.120
我们在这个里面

12:06.120 --> 12:07.920
先把这个数据查找这一块

12:07.920 --> 12:09.920
我们先来做一下吧

12:09.920 --> 12:11.120
那我们这个里面

12:11.120 --> 12:11.820
首先啊

12:11.820 --> 12:12.320
这次呢

12:12.320 --> 12:14.720
我们就先定义云含数

12:14.720 --> 12:16.020
这里面有爱的U字

12:16.020 --> 12:18.120
我在这个里面写一个新建云含数

12:18.120 --> 12:18.820
叫什么

12:18.820 --> 12:20.820
叫getU字

12:20.820 --> 12:21.520
OK

12:21.520 --> 12:22.220
getU字呢

12:22.220 --> 12:24.820
就是对这个用户的一个获取

12:24.820 --> 12:25.520
同样的啊

12:25.520 --> 12:27.920
我们继续来写一些基础的

12:27.920 --> 12:29.120
Counts的db

12:29.120 --> 12:34.320
等于我们uniclode.database

12:34.320 --> 12:34.920
然后呢

12:34.920 --> 12:37.620
获取我们这个数据表的集合

12:37.620 --> 12:39.620
Counts的collection

12:39.620 --> 12:43.620
等于我们db.collection

12:43.620 --> 12:46.420
然后这个里面是我们的这个表明

12:46.420 --> 12:47.120
U字

12:47.120 --> 12:48.420
然后之后

12:48.420 --> 12:51.220
我们就可以来进行这个查询了

12:51.220 --> 12:53.120
那怎么查询collection

12:53.120 --> 12:55.120
我们这里面就可以通过简单的

12:55.120 --> 12:57.120
guide形式获取所有啊

12:57.120 --> 12:58.920
那我先来试一下

12:58.920 --> 13:00.720
Counts iis

13:00.720 --> 13:03.120
等于一个collection.guide

13:03.120 --> 13:03.520
然后呢

13:03.520 --> 13:04.920
如果说他获取之后

13:04.920 --> 13:06.420
我这里面要做一点什么事

13:06.420 --> 13:08.620
就是把这个iis返回给前端

13:08.620 --> 13:09.520
就OK了

13:09.520 --> 13:14.120
那我这里面写一个code

13:14.120 --> 13:16.120
比如说code是零

13:16.120 --> 13:19.020
这里面给他返回一个list

13:19.020 --> 13:20.320
叫iis

13:20.320 --> 13:21.520
当然了这个iis啊

13:21.520 --> 13:23.120
并不一定要是我们

13:23.120 --> 13:24.720
整个的直接就是一个数组了

13:24.720 --> 13:26.020
但是我们得看一下是什么

13:26.020 --> 13:26.520
对不对

13:26.520 --> 13:27.120
那不要紧啊

13:27.120 --> 13:29.720
我们直接返回给前端就OK了啊

13:29.720 --> 13:30.420
在这个里面

13:30.420 --> 13:31.820
如果说定义好了之后

13:31.820 --> 13:34.620
那我们就来进行一下上传

13:34.620 --> 13:36.720
db collection collection.guide

13:36.720 --> 13:37.320
没问题

13:37.320 --> 13:40.820
那我们直接的guide user进行一个上传部署

13:40.820 --> 13:42.020
上传部署成功之后

13:42.020 --> 13:44.220
那我们可以通过什么呢

13:44.220 --> 13:46.820
通过前端来实现一个调用啊

13:46.820 --> 13:47.820
那这个里面咋办呢

13:47.820 --> 13:49.920
我还是回到index见面

13:49.920 --> 13:51.820
回到index见面之后

13:51.820 --> 13:53.820
我从下面继续来写

13:53.820 --> 13:58.020
那我这里面进行一个什么数据获取啊

13:58.020 --> 14:01.920
比如说这里面叫用 class等于list

14:01.920 --> 14:06.120
然后这里面写一个叫用户列表

14:06.120 --> 14:07.320
给他做一个区分

14:07.320 --> 14:10.120
在底下就开始进行填写了

14:10.120 --> 14:14.520
这里面呢写一个list.wrapper

14:14.520 --> 14:17.120
然后在这个里面写这个vill

14:17.120 --> 14:17.820
那vill呢

14:17.820 --> 14:19.920
就是我们的这个list啊

14:19.920 --> 14:21.320
当然你也可以不写样式啊

14:21.320 --> 14:22.320
也可以添加样式

14:22.320 --> 14:23.820
这个看你自己啊

14:23.820 --> 14:24.620
我们怎么办

14:24.620 --> 14:27.220
我们这里面肯定是vfall循环对吧

14:27.220 --> 14:28.320
vfall循环干啥

14:28.320 --> 14:29.420
要获取数据

14:29.420 --> 14:31.120
那我直接的vfall

14:31.120 --> 14:33.320
然后是item index

14:33.320 --> 14:35.620
因我们的user list的

14:35.620 --> 14:38.120
我在前端定一个user list的

14:38.120 --> 14:40.120
然后呢这里面最好指定一个什么

14:40.120 --> 14:41.020
k值

14:41.020 --> 14:43.720
我们这里面冒号一个key

14:43.720 --> 14:46.320
等于一个我们的这个index值

14:46.320 --> 14:47.620
ok 这个就写完了

14:47.620 --> 14:50.060
把我们的这个item

14:50.060 --> 14:50.620
选出来

14:50.620 --> 14:52.220
然后呢再给他一个小按钮

14:52.220 --> 14:52.820
小按钮呢

14:52.820 --> 14:54.520
我们做一个删除对吧

14:54.520 --> 14:56.020
那我们这里面tax的

14:56.020 --> 14:59.120
tax里面就是把我们这个item

14:59.120 --> 15:00.220
写上写上之后

15:00.220 --> 15:02.120
这里面有一个button

15:02.120 --> 15:02.820
那button呢

15:02.820 --> 15:04.520
我们给他一个size

15:04.520 --> 15:05.720
让他小一点啊

15:05.720 --> 15:07.120
size等于一个mini

15:07.120 --> 15:08.920
这里面做一个删除

15:08.920 --> 15:09.720
然后这样呢

15:09.720 --> 15:11.120
我们获取数据和删除

15:11.120 --> 15:12.220
这个英文操作

15:12.220 --> 15:12.920
那这两步啊

15:12.920 --> 15:15.620
就都可以来进行实现了啊

15:15.620 --> 15:16.720
这样写完之后呢

15:16.820 --> 15:18.220
我们进行一下定义

15:18.220 --> 15:19.020
这个呢叫什么

15:19.020 --> 15:20.920
叫我们的user list

15:20.920 --> 15:22.220
把这个调整一下

15:22.220 --> 15:23.720
user list

15:23.720 --> 15:26.220
ok 这里面写一下

15:26.220 --> 15:27.420
user list的呢

15:27.420 --> 15:29.020
他出这话应该是一个

15:29.020 --> 15:29.420
no

15:29.420 --> 15:30.520
也就是说没有值

15:30.520 --> 15:31.020
对吧

15:31.020 --> 15:33.220
那我们就来再进行获取

15:33.220 --> 15:33.820
获取的时候

15:33.820 --> 15:34.620
你比如说

15:34.620 --> 15:36.220
像我们一般获取列表的时候

15:36.220 --> 15:38.420
什么时间段这个来进行获取

15:38.420 --> 15:40.720
也就是说在哪个阶段来进行获取

15:40.720 --> 15:41.720
那你这个获取的时候

15:41.720 --> 15:43.020
我们可以想一下

15:43.020 --> 15:45.420
假如说我们刷新介面之后

15:45.520 --> 15:47.020
如果说有用户信息

15:47.020 --> 15:48.020
比如说有一个列表

15:48.020 --> 15:48.820
我们是不是出这话

15:48.820 --> 15:49.820
就得展示出来

15:49.820 --> 15:50.520
所以说呢

15:50.520 --> 15:51.120
那这个呢

15:51.120 --> 15:51.720
我们啊

15:51.720 --> 15:54.220
要在一个钩子里面指定的时间段

15:54.220 --> 15:55.820
来进行一个获取

15:55.820 --> 15:56.520
那一般呢

15:56.520 --> 15:57.820
我们在这个配置里面

15:57.820 --> 15:59.220
在哪里面进行数据获取

15:59.220 --> 16:01.120
我们可以在这个onload里面

16:01.120 --> 16:02.920
是不是我们整个的

16:02.920 --> 16:04.720
这个页面加载啊

16:04.720 --> 16:05.120
对吧

16:05.120 --> 16:06.020
那我在这个里面

16:06.020 --> 16:07.620
就可以调用一个Z4点

16:07.620 --> 16:08.220
下号线

16:08.220 --> 16:09.820
我们这个init

16:09.820 --> 16:11.220
user info

16:11.220 --> 16:12.820
这样一个函数

16:12.820 --> 16:14.320
那这个user info函数呢

16:14.320 --> 16:16.720
我在买四二的里面就定一下

16:16.720 --> 16:19.620
由于它是我们的这个一部操作

16:19.620 --> 16:21.620
那我们这里面填一个什么

16:21.620 --> 16:22.420
async

16:22.420 --> 16:24.320
因为我想使用这个

16:24.320 --> 16:28.620
async和avit进行promise的一个定义啊

16:28.620 --> 16:29.020
然后呢

16:29.020 --> 16:30.220
我这里面Const

16:30.220 --> 16:31.320
他啊

16:31.320 --> 16:32.820
当然现在我们不知道返回什么呢

16:32.820 --> 16:33.220
对不对

16:33.220 --> 16:34.620
那我直接就给一个data

16:34.620 --> 16:36.820
等于avit这个里面

16:36.820 --> 16:38.020
unicload

16:39.720 --> 16:42.220
unicload点一个什么呢

16:42.320 --> 16:44.920
我们这个call function

16:44.920 --> 16:46.020
然后这个里面

16:46.020 --> 16:48.520
首先第一个还是我们的这个内幕

16:48.520 --> 16:49.220
内幕叫什么

16:49.220 --> 16:52.220
叫get下号线user

16:52.220 --> 16:52.920
这是第一个

16:52.920 --> 16:54.720
我们这次也不需要传直

16:54.720 --> 16:55.120
然后呢

16:55.120 --> 16:56.820
我们直接的把这个值

16:56.820 --> 16:58.620
给它进行一个打印回收

16:58.620 --> 16:59.820
看一下就可以了

16:59.820 --> 17:01.420
那我们这里面打印一个data

17:01.420 --> 17:02.320
如果说成功之后

17:02.320 --> 17:03.720
我们再进行一个渲染

17:03.720 --> 17:04.620
对不对

17:04.620 --> 17:04.920
好的

17:04.920 --> 17:05.920
那这些就做完了

17:05.920 --> 17:06.520
做完之后呢

17:06.520 --> 17:07.520
我们出手话

17:07.520 --> 17:09.320
这里面Const的db

17:09.320 --> 17:12.420
等于一个unicload点data

17:12.420 --> 17:15.320
被子onicle pack的invita

17:15.320 --> 17:16.020
我们看一下

17:16.020 --> 17:19.420
这个里面应该是有一个写错了

17:19.420 --> 17:22.020
这个值这里面

17:22.020 --> 17:23.820
const

17:23.820 --> 17:24.220
sorry

17:24.220 --> 17:26.220
这个是我这一块写错了

17:26.220 --> 17:26.520
好了

17:26.520 --> 17:27.320
那完成之后呢

17:27.320 --> 17:29.220
我们就来试验一下

17:29.220 --> 17:29.920
怎么来做

17:29.920 --> 17:32.720
我们首先这里面刷新一下

17:32.720 --> 17:33.220
刷新一下

17:33.220 --> 17:34.020
你会发现

17:34.020 --> 17:34.620
此时呢

17:34.620 --> 17:36.020
我们这个结果就回来了

17:36.020 --> 17:36.720
对不对

17:36.720 --> 17:37.620
结果回来之后

17:37.620 --> 17:39.220
这里面从水灶的里面

17:39.320 --> 17:40.120
有一个什么

17:40.120 --> 17:41.420
有一个list

17:41.420 --> 17:42.320
那这个list呢

17:42.320 --> 17:44.320
他没有查到相关的内容

17:44.320 --> 17:44.920
对吧

17:44.920 --> 17:46.920
那我们来看一下是为什么

17:46.920 --> 17:49.420
我们直接的去反回我们的

17:49.420 --> 17:51.120
这个云海树里面

17:51.120 --> 17:52.320
来看一下定义

17:52.320 --> 17:55.720
这个是list是一个promise

17:55.720 --> 17:56.220
sorry

17:56.220 --> 17:58.020
这个里面是有一个问题的

17:58.020 --> 17:58.920
什么问题呢

17:58.920 --> 18:01.820
我这个res前面应该加一个什么

18:01.820 --> 18:02.520
avait

18:02.520 --> 18:05.120
因为他现在返回一个promise对象

18:05.120 --> 18:05.520
所以说呢

18:05.520 --> 18:07.620
我给他添加一个avait

18:07.620 --> 18:10.020
那这样我再进行一次上传部署

18:10.020 --> 18:11.520
来看一下结果

18:13.520 --> 18:13.820
好的

18:13.820 --> 18:14.720
上传完成之后

18:14.720 --> 18:15.720
那我刷新一下

18:15.720 --> 18:17.720
看是否初始化能获取到这个值

18:18.520 --> 18:19.020
同样的

18:19.020 --> 18:20.620
还是给我返回一个result

18:20.620 --> 18:22.820
此时这个list的里面就值了

18:22.820 --> 18:24.820
但是这个值比较深

18:24.820 --> 18:25.520
那怎么办呢

18:25.520 --> 18:28.220
其实他是在我们的这个is

18:28.220 --> 18:30.220
这个里面是整体的返回的

18:30.220 --> 18:30.720
你看一下

18:30.720 --> 18:31.620
get a user

18:31.620 --> 18:33.220
他返回了一个什么

18:33.220 --> 18:34.520
返回了一个list

18:34.520 --> 18:35.320
那我们这个里面

18:35.320 --> 18:39.220
其实我们List是代表着所有的这个信息的

18:39.220 --> 18:40.420
那我们直接的

18:40.420 --> 18:42.220
其实就可以拿了一个什么

18:42.220 --> 18:43.920
拿一个他的这个data就可以

18:43.920 --> 18:44.520
对不对

18:44.520 --> 18:47.120
那如果说你要是想把这个返回数据

18:47.120 --> 18:48.820
比较整结的返回怎么办

18:48.820 --> 18:51.020
我们直接在后端做一下处理

18:51.020 --> 18:52.020
那怎么处理呢

18:52.020 --> 18:56.320
我们就可以通过这种res.data这种形式

18:56.320 --> 18:58.020
来给他进行一个返回

18:58.020 --> 19:00.620
来这样res.data

19:00.620 --> 19:01.420
ok

19:01.420 --> 19:03.320
那咱们再来看一下结果

19:03.320 --> 19:03.920
那此时

19:03.920 --> 19:05.020
那你修改完了之后

19:05.020 --> 19:05.720
你这时候呢

19:05.720 --> 19:08.220
你还是得进行一个上传部署

19:08.220 --> 19:09.620
当你上传部署完成之后

19:09.620 --> 19:11.420
你再进行一个获取

19:11.420 --> 19:12.020
获取之后

19:12.020 --> 19:13.520
此时你会发现返回的

19:13.520 --> 19:15.620
是不是就是这个list的结果值了

19:15.620 --> 19:16.120
那也就是说

19:16.120 --> 19:17.420
我拿到这个结果值之后

19:17.420 --> 19:20.520
那我是不是就可以来做一些操作了

19:20.520 --> 19:21.420
对吧

19:21.420 --> 19:22.020
怎么办

19:22.020 --> 19:23.420
我们回到前台

19:23.420 --> 19:25.620
前台到我们的index.real

19:25.620 --> 19:27.220
我们拿到这个data

19:27.220 --> 19:29.220
其实是要想要一个什么

19:29.220 --> 19:31.020
data.list

19:31.020 --> 19:31.420
对吧

19:31.420 --> 19:34.120
也就是说想获取他的这个data

19:34.220 --> 19:35.020
sorry

19:35.020 --> 19:37.820
应该是我们的data.result

19:39.820 --> 19:41.020
data.result

19:41.020 --> 19:42.820
首先你获取到的一个什么

19:42.820 --> 19:44.120
整个的返回结果值

19:44.120 --> 19:46.420
然后这里面有一个list

19:46.420 --> 19:47.120
对吧

19:47.120 --> 19:48.520
那我们再把它写上

19:48.520 --> 19:49.820
data.list

19:49.820 --> 19:50.720
给谁用

19:50.720 --> 19:51.120
其实呢

19:51.120 --> 19:52.820
我们也不是要console他

19:52.820 --> 19:53.320
对吧

19:53.320 --> 19:56.020
我们要data.userlist

19:56.020 --> 19:58.220
等于我们的这个data.result

19:58.220 --> 19:58.820
list

19:58.820 --> 19:59.720
是不是就可以

19:59.720 --> 20:01.520
如果说你此时进行了一个复制

20:01.520 --> 20:02.420
你看这时候

20:02.420 --> 20:04.920
这里面是不是有这个信息

20:04.920 --> 20:06.520
已经给他做一个输出了

20:06.520 --> 20:06.820
对吧

20:06.820 --> 20:08.020
在这个宣言的时候

20:08.020 --> 20:09.020
就不是item了

20:09.020 --> 20:12.220
我们只要item点user name

20:12.220 --> 20:13.120
是不是就可以了

20:13.120 --> 20:15.020
也就是把他这个用户名给宣言上

20:15.020 --> 20:15.620
对吧

20:15.620 --> 20:17.220
然后你宣言上这个用户名之后

20:17.220 --> 20:17.620
当然了

20:17.620 --> 20:17.720
哎呀

20:17.720 --> 20:18.420
这个好丑啊

20:18.420 --> 20:18.920
对吧

20:18.920 --> 20:21.120
我们给他一些简单的样式

20:21.120 --> 20:22.020
上市的list

20:22.020 --> 20:23.920
给他一个flex布局吧

20:23.920 --> 20:25.920
我们这里面点list

20:25.920 --> 20:26.620
然后呢

20:26.620 --> 20:28.720
给他一个data.list

20:28.720 --> 20:30.220
我们flex

20:30.320 --> 20:31.920
然后给他一个

20:31.920 --> 20:34.220
alignitemscenter

20:34.220 --> 20:35.520
java.content

20:36.520 --> 20:38.220
spacebit

20:38.220 --> 20:38.620
ok

20:38.620 --> 20:39.120
那这样呢

20:39.120 --> 20:39.920
我们来看着啊

20:39.920 --> 20:41.620
更加清洗一下

20:41.620 --> 20:42.120
好了

20:42.120 --> 20:42.620
i lan

20:42.620 --> 20:43.120
然后呢

20:43.120 --> 20:44.120
还有一个小名

20:44.120 --> 20:45.320
我们点击删除的时候

20:45.320 --> 20:47.220
就想调用他这个删除操作

20:47.220 --> 20:48.920
那你这事怎么来做

20:48.920 --> 20:49.420
嗯

20:49.420 --> 20:50.320
怎么来做呢

20:50.320 --> 20:50.820
这个里面

20:50.820 --> 20:52.420
我们就得想一下了

20:52.420 --> 20:53.220
你看啊

20:53.220 --> 20:53.620
在这里

20:53.620 --> 20:54.520
我跟同学们说了

20:54.520 --> 20:56.220
如果说你要做删除的时候

20:56.220 --> 20:57.720
你是不是得有一个指定的id

20:57.720 --> 20:58.220
对吧

20:58.220 --> 20:59.520
那你这个指定id在哪

20:59.520 --> 21:00.320
指定id

21:00.320 --> 21:01.920
其实我们在这个里面

21:01.920 --> 21:02.920
是不是获取到

21:02.920 --> 21:04.120
这个用户清洗的时候

21:04.120 --> 21:05.420
就可以获取到

21:05.420 --> 21:06.620
我们在这个

21:06.620 --> 21:07.920
vail里面dv to走

21:07.920 --> 21:09.520
我们可以看一下

21:09.520 --> 21:11.220
我们这里面有一个什么呢

21:11.220 --> 21:12.720
有一个有点list的

21:12.720 --> 21:13.520
有点list的

21:13.520 --> 21:14.320
每个值里面

21:14.320 --> 21:16.520
是不是有一个向向线id值啊

21:16.520 --> 21:17.920
所以说这个向向线id值

21:17.920 --> 21:19.720
我们可以点击删除的时候

21:19.720 --> 21:20.520
然后呢

21:20.520 --> 21:22.720
把它传递给我们的运动数

21:22.720 --> 21:25.020
然后让运动数来实现一个

21:25.020 --> 21:28.220
我们删除用户的这么一个实现啊

21:28.220 --> 21:29.020
那怎么来做

21:29.020 --> 21:29.520
其实呢

21:29.520 --> 21:30.320
我们这个

21:30.320 --> 21:31.120
显采这一块啊

21:31.120 --> 21:32.320
就相对简单了

21:32.320 --> 21:34.520
我们这里面分别给这个删穿扭

21:34.520 --> 21:35.520
绑定一个什么

21:35.520 --> 21:36.720
点击实践啊

21:36.720 --> 21:38.120
it click

21:38.120 --> 21:40.120
这里面写一个dl

21:40.120 --> 21:41.520
然后呢是u字

21:41.520 --> 21:42.520
dliu字的时候

21:42.520 --> 21:44.220
这里面就得设计到传辍的

21:44.220 --> 21:45.920
因为这里面是一个循环体

21:45.920 --> 21:48.320
我要里面每一项的什么

21:48.320 --> 21:49.320
它的id值

21:49.320 --> 21:49.920
那也就是说

21:49.920 --> 21:51.820
item点向线id

21:51.820 --> 21:52.320
此时呢

21:52.320 --> 21:54.020
我dliu字调用的时候

21:54.020 --> 21:55.020
就能拿到

21:55.020 --> 21:56.520
我们每一列里面的

21:56.520 --> 21:57.920
这个指定的id

21:57.920 --> 21:59.620
我们可以来看一下啊

21:59.620 --> 22:00.220
在这个里面

22:00.220 --> 22:03.620
dlu字

22:03.620 --> 22:05.620
我这里面传一个id

22:05.620 --> 22:06.220
然后呢

22:06.220 --> 22:07.520
我进行一个什么

22:07.520 --> 22:08.820
id的打印啊

22:08.820 --> 22:10.720
把这个值来看一下

22:10.720 --> 22:10.920
好的

22:10.920 --> 22:12.020
我在这里面

22:12.020 --> 22:13.620
先是console在这里面

22:13.620 --> 22:14.920
我一点击删除

22:14.920 --> 22:15.220
哎

22:15.220 --> 22:18.720
这里面itemid来筹研啊

22:18.720 --> 22:19.720
item

22:19.720 --> 22:22.220
这里面应该是点下线id啊

22:23.620 --> 22:23.920
好的

22:23.920 --> 22:24.520
那再来一遍啊

22:24.520 --> 22:25.620
我一点击删除

22:25.620 --> 22:26.920
两个都获取到了

22:26.920 --> 22:27.420
对吧

22:27.420 --> 22:28.120
获取到之后

22:28.120 --> 22:29.720
那我这里面又可以进行

22:29.720 --> 22:31.020
原来说的调用了

22:31.020 --> 22:31.920
那原来说调用

22:31.920 --> 22:32.620
这时候呢

22:32.620 --> 22:34.420
我console的res

22:34.420 --> 22:35.520
这是结果值

22:35.520 --> 22:38.420
等于一个avitunicload

22:38.420 --> 22:40.620
我们还是通过这种点

22:40.620 --> 22:42.320
calfunction的形式

22:42.320 --> 22:43.720
来进行一个调用

22:43.720 --> 22:44.120
此时呢

22:44.120 --> 22:47.020
你要先指定我们的这个内幕

22:47.020 --> 22:47.320
对吧

22:47.320 --> 22:48.520
内幕这回叫什么呢

22:48.520 --> 22:51.120
这个我们叫dliu字

22:51.120 --> 22:51.620
也就是说

22:51.620 --> 22:52.820
我再定一个原来说

22:52.820 --> 22:55.220
这原来说是叫删除用户啊

22:55.220 --> 22:56.320
这里面肯定得传直

22:56.320 --> 22:56.820
对吧

22:56.820 --> 22:57.920
转之后就传一个什么

22:57.920 --> 22:58.920
下个线id

22:58.920 --> 23:00.520
把这个id指账给传过去

23:00.520 --> 23:02.820
因为它作为用户的一个微标时

23:02.820 --> 23:04.220
一会你删除的时候

23:04.220 --> 23:06.620
也根据这个来进行删除就ok了

23:06.620 --> 23:07.120
之后呢

23:07.120 --> 23:08.120
我打印一下谁

23:08.120 --> 23:10.020
打印我们一个这个

23:10.020 --> 23:12.220
删除之后的一个结果就ok了

23:13.420 --> 23:14.420
创建完成之后呢

23:14.420 --> 23:18.020
我们把这个云函数来进行一下定义

23:18.020 --> 23:18.920
在这个里面

23:18.920 --> 23:21.520
我先是新建云函数

23:21.520 --> 23:24.920
这里面叫我们的dl下滑线u字

23:24.920 --> 23:25.320
ok

23:25.320 --> 23:27.620
那我这里面就创建一下

23:27.620 --> 23:28.520
创建好了之后

23:28.520 --> 23:29.520
其实他这个结构

23:29.520 --> 23:31.620
跟每一个基本结构都差不多

23:31.620 --> 23:33.120
那我们在这个里面附着一下

23:33.120 --> 23:34.120
因为每一个里面

23:34.120 --> 23:36.320
都有一个数据库的引用

23:36.320 --> 23:38.020
我们直接这个里面就不写了

23:38.020 --> 23:39.920
在这个indice里面

23:39.920 --> 23:42.120
还是引用有点这个库

23:42.120 --> 23:45.320
那这个里面is.collection.get

23:45.320 --> 23:46.820
这个get就不是了

23:46.820 --> 23:48.220
那这个里面应该使用什么

23:48.220 --> 23:49.720
我们删除的时候

23:49.720 --> 23:53.120
应该是获取到他的这个id指

23:53.120 --> 23:55.120
然后进行一个remote操作

23:55.120 --> 23:55.620
对吧

23:55.620 --> 23:57.720
那所以说我们这个里面

23:57.720 --> 23:58.720
得怎么做呢

23:58.720 --> 24:01.320
首先要获取前端传过来的

24:01.320 --> 24:02.320
这个id指认

24:02.320 --> 24:04.120
const的下滑线id

24:04.120 --> 24:06.420
等于一个event

24:06.420 --> 24:08.120
也就是说获取前端

24:08.120 --> 24:09.720
传递的这个数据指认

24:09.720 --> 24:11.220
那获取到之后

24:11.220 --> 24:13.120
这里面就不是概的了

24:13.120 --> 24:16.720
我们通过doc指定的进行一个什么

24:16.720 --> 24:17.720
查找啊

24:17.720 --> 24:18.320
那这个里面

24:18.320 --> 24:19.920
其实doc他接一个什么呢

24:19.920 --> 24:21.120
我们可以看一下

24:21.120 --> 24:21.920
这个doc呢

24:21.920 --> 24:23.320
专门的来进行

24:23.320 --> 24:25.620
我们的这个id指的这个接收

24:25.620 --> 24:28.220
然后通过这个id找到某一项

24:28.220 --> 24:29.420
指定了某一项之后

24:29.420 --> 24:31.920
进行一个remote的这样一个操作

24:31.920 --> 24:34.220
也就是说给他做一个

24:34.220 --> 24:36.220
删除的这样一个操作

24:36.220 --> 24:37.020
那完成之后呢

24:37.020 --> 24:40.220
我们把这个结果给他返回就可以了

24:40.220 --> 24:43.220
is直接ok这样返回给前端

24:43.220 --> 24:43.620
然后呢

24:43.620 --> 24:46.120
我们给他进行一个上传部署

24:46.120 --> 24:47.720
那这样上传部署成功之后

24:47.720 --> 24:50.620
我们就可以来进行一个什么测试了啊

24:50.720 --> 24:52.720
比如说我想删除 island 这一项

24:52.720 --> 24:54.520
那我点击一下删除

24:54.520 --> 24:56.520
看一下他的这个想法结果

24:56.520 --> 24:58.020
我们删除

24:58.020 --> 24:58.820
删除之后

24:58.820 --> 25:00.320
del有点调成功

25:00.320 --> 25:02.320
这里面有一个 apricot

25:02.320 --> 25:04.020
也就是说影响的一个文档

25:04.020 --> 25:05.020
有一个e

25:05.020 --> 25:06.820
那delete删除了一项

25:06.820 --> 25:08.620
此时我们再刷新界面

25:08.620 --> 25:10.220
那你会发现刚才那个 island

25:10.220 --> 25:11.620
是不是就已经被删除了

25:11.620 --> 25:12.120
那这个呢

25:12.120 --> 25:14.020
就是一个删除操作啊

25:14.020 --> 25:14.420
这个呢

25:14.420 --> 25:15.620
其实使用起来

25:15.620 --> 25:17.520
他的这个 api啊跟mongles

25:17.520 --> 25:19.320
几乎是非常相似的

25:19.320 --> 25:20.020
所以说呢

25:20.020 --> 25:22.520
同学们如果说对mongles有了解的话

25:22.520 --> 25:23.320
对这种

25:23.320 --> 25:24.920
我们uniclode

25:24.920 --> 25:27.320
给我们提供的操作数据库的这个

25:27.320 --> 25:28.320
处理方法

25:28.320 --> 25:31.120
应该是相当轻松的使用起来

25:31.120 --> 25:31.320
好的

25:31.320 --> 25:32.020
那刚才啊

25:32.020 --> 25:34.520
咱们说了这个删除操作之后呢

25:34.520 --> 25:36.020
其实我们获取的时候

25:36.020 --> 25:37.520
还有两种形式获取

25:37.520 --> 25:38.820
哪两种形式获取呢

25:38.820 --> 25:42.020
就是我们根据指定的这个 id

25:42.020 --> 25:43.620
来进行一个指的获取

25:43.620 --> 25:44.220
那其实呢

25:44.220 --> 25:45.920
我们刚才删除的时候

25:45.920 --> 25:48.220
是不是通过这种到死形式

25:48.220 --> 25:50.520
通过指定 id来进行获取到他了

25:50.520 --> 25:51.120
对不对

25:51.120 --> 25:52.220
还有一种是什么呢

25:52.220 --> 25:55.020
我们可以通过其他的一些条件

25:55.020 --> 25:57.220
也就是说使用ware这种形式

25:57.220 --> 25:58.920
来进行内容的获取

25:58.920 --> 25:59.820
那你看啊

25:59.820 --> 26:01.020
我们这个里面呢

26:01.020 --> 26:02.720
比如说这个数据库里面

26:02.720 --> 26:03.920
现在是什么呢

26:03.920 --> 26:06.320
有一个我们叫name job的

26:06.320 --> 26:06.820
对不对

26:06.820 --> 26:07.920
因为数据库里面

26:07.920 --> 26:09.320
我们写了一个什么

26:09.320 --> 26:10.820
写了一个name job

26:10.820 --> 26:11.720
我们看一下啊

26:13.020 --> 26:14.820
找到一下到youter里面啊

26:14.820 --> 26:15.820
youter里面呢

26:15.820 --> 26:17.120
我们再来看一下

26:17.120 --> 26:17.820
这里面啊

26:17.820 --> 26:19.720
youter name是小名啊

26:19.720 --> 26:21.920
那这个youter name小名有一个

26:21.920 --> 26:24.720
我们可以就是根据这个年龄啊

26:24.720 --> 26:26.120
或者是用户名啊

26:26.120 --> 26:28.920
我们来进行一个指定的查找啊

26:28.920 --> 26:31.120
那指定查找怎么来做呢

26:31.120 --> 26:32.420
我再添加一条记录吧

26:32.420 --> 26:34.620
刚才给删除删除了一条啊

26:34.620 --> 26:35.520
我这里面写一个

26:35.520 --> 26:36.520
Alan年龄呢

26:36.520 --> 26:39.220
是20我一电机提交表单

26:39.220 --> 26:41.520
那这里面就新增了一个对吧

26:41.520 --> 26:43.520
新增了一个Alan和这个小名

26:43.520 --> 26:44.920
那我现在有个需求

26:44.920 --> 26:46.520
我只要小明显示

26:46.520 --> 26:47.920
Alan不进行显示

26:47.920 --> 26:48.520
那怎么办呢

26:48.520 --> 26:49.220
我这里面啊

26:49.220 --> 26:52.620
就可以通过指定的这个值来进行查找啊

26:52.620 --> 26:53.820
通过ware的形式

26:54.420 --> 26:56.320
还是回到我们这个guide user

26:56.320 --> 26:57.820
guide user里面啊

26:57.820 --> 26:59.020
这里面有一个什么呢

26:59.020 --> 27:00.220
我们找到它

27:00.220 --> 27:01.220
找到它这里面

27:01.220 --> 27:02.520
clashin.guide了啊

27:02.520 --> 27:03.620
在guide之前

27:03.620 --> 27:07.220
我们可以通过这种ware的形式

27:07.220 --> 27:07.720
然后呢

27:07.720 --> 27:08.620
这种ware的形式

27:08.620 --> 27:10.320
我们可以来做一个什么

27:10.320 --> 27:12.620
我们通过这种name

27:12.620 --> 27:14.820
也就是说根据我们的这个

27:14.820 --> 27:16.720
UserName这个条件

27:16.720 --> 27:18.520
来返回相应的数据

27:18.520 --> 27:20.620
那我这里面就是UserName

27:20.620 --> 27:22.020
这里面就写一个什么

27:22.020 --> 27:23.720
小名来咱们看一眼啊

27:23.720 --> 27:24.620
可不可以

27:24.620 --> 27:25.520
非常的简单

27:25.520 --> 27:27.820
我们直接在上传部署一下

27:27.820 --> 27:29.520
当上传部署完成这功之后

27:29.520 --> 27:31.420
那你再发现我们这个里面

27:31.420 --> 27:32.120
返回的值

27:32.120 --> 27:33.820
是不是只有小明这一条值了

27:33.820 --> 27:34.320
对吧

27:34.320 --> 27:34.620
当然了

27:34.620 --> 27:35.820
它也是返回一个数组

27:35.820 --> 27:36.620
只不过是

27:36.620 --> 27:37.520
它过滤了一下

27:37.520 --> 27:39.120
把刚才那个值给干掉了

27:39.120 --> 27:40.120
就是这意思

27:40.120 --> 27:40.520
这个呢

27:40.520 --> 27:41.420
也就是说

27:41.420 --> 27:44.220
我们获取数据的这三种方式

27:44.220 --> 27:44.720
首先呢

27:44.720 --> 27:46.420
就是全部的获取

27:46.420 --> 27:47.820
获取整个集合

27:47.820 --> 27:48.320
还有呢

27:48.320 --> 27:50.420
就是我们这个通过指定ID

27:50.420 --> 27:51.320
来进行

27:51.320 --> 27:52.720
进行一个查找用户

27:52.720 --> 27:53.820
查找用户之后

27:53.820 --> 27:55.520
再通过这种概的形式

27:55.520 --> 27:57.220
来进行一个用户的获取

27:57.220 --> 27:57.520
当然了

27:57.520 --> 27:58.620
你查找到用户之后

27:58.620 --> 27:59.820
刚才我们删除

27:59.820 --> 28:01.420
是不是也做了这个操作

28:01.420 --> 28:01.820
首先呢

28:01.820 --> 28:04.720
我们先通过到算指定ID的形式

28:04.720 --> 28:05.820
来查找到用户

28:05.820 --> 28:06.320
然后呢

28:06.320 --> 28:07.920
再进行一个绿幕操作

28:07.920 --> 28:09.620
就是这种情况啊

28:09.620 --> 28:10.220
下面呢

28:10.220 --> 28:10.720
还有啊

28:10.720 --> 28:12.320
就是我们的这个

28:12.320 --> 28:13.920
使用这种ware的形式

28:13.920 --> 28:16.820
进行我们指定的用户的一个查询

28:16.820 --> 28:18.020
那这个里面的条件呢

28:18.020 --> 28:18.920
你可以添内幕

28:18.920 --> 28:19.220
当然了

28:19.220 --> 28:20.620
你也可以添H

28:20.620 --> 28:21.320
这种形式呢

28:21.320 --> 28:22.320
你自己啊

28:22.320 --> 28:24.520
随意的来进行这个处理啊

28:24.520 --> 28:26.220
这个都是ok的

28:26.220 --> 28:26.920
那接下来呢

28:26.920 --> 28:27.820
咱们再说一下

28:27.820 --> 28:29.720
我们这个数据的更新

28:29.720 --> 28:30.720
也就是说

28:30.720 --> 28:33.320
假如我想修改某一条纸

28:33.320 --> 28:34.220
比如说这里面

28:34.220 --> 28:35.920
可以使用两种形式

28:35.920 --> 28:38.020
来进行数据的这个修改

28:38.020 --> 28:38.520
第一种呢

28:38.520 --> 28:40.520
就是我们使用这种update的形式

28:40.520 --> 28:41.220
还有一种呢

28:41.220 --> 28:43.120
就是通过这种set的形式

28:43.120 --> 28:44.320
来进行修改

28:44.320 --> 28:45.020
那这样啊

28:45.020 --> 28:45.420
这个呢

28:45.420 --> 28:46.720
我们就不用前台了

28:46.720 --> 28:47.620
我们自己啊

28:47.620 --> 28:50.320
来进行一个修改啊

28:50.320 --> 28:51.920
因为前台我们还得写界面

28:51.920 --> 28:52.920
大同小异

28:52.920 --> 28:54.420
也就是一个传指的过程

28:54.420 --> 28:56.420
因为我们已经经历了啊

28:56.420 --> 28:57.020
两个了

28:57.020 --> 28:58.020
所以说在这个里面呢

28:58.020 --> 28:59.720
我们直接操作这个云寒数

28:59.720 --> 29:01.320
来进行一个修改啊

29:01.320 --> 29:03.520
看一下它的这个效果

29:03.520 --> 29:05.920
这里面再新建一个云寒数

29:05.920 --> 29:09.720
叫update有字定义完之后

29:09.720 --> 29:12.520
那我们这里面写则创建啊

29:12.620 --> 29:14.920
创建完这个update的有字之后

29:14.920 --> 29:16.020
在这个里面

29:16.020 --> 29:17.520
const db

29:17.520 --> 29:21.020
等于我们的这个unicload的点

29:21.020 --> 29:22.520
data base

29:22.520 --> 29:23.320
然后呢

29:23.320 --> 29:25.520
接下来是获取集合

29:25.520 --> 29:28.020
collection等于我们的一个

29:28.020 --> 29:30.120
db.collection

29:30.120 --> 29:31.520
ok 这个写错了

29:31.520 --> 29:32.620
collection

29:32.620 --> 29:34.620
变量等于db.collection

29:34.620 --> 29:36.720
这里面接一个我们的这个有字

29:36.720 --> 29:37.120
ok

29:37.120 --> 29:38.220
那拿到有字之后

29:38.220 --> 29:39.020
那此时呢

29:39.020 --> 29:39.820
如果说我要

29:39.820 --> 29:41.320
我要想修改的话

29:41.320 --> 29:41.920
这里面呢

29:41.920 --> 29:44.120
有刚才是咱们说的两种形式

29:44.120 --> 29:45.820
那我们依次来看一下啊

29:45.820 --> 29:46.920
首先第一种形式

29:46.920 --> 29:47.520
那就是什么呢

29:47.520 --> 29:49.020
就是我们的这种

29:49.020 --> 29:52.020
通过我们的update来进行修改

29:52.020 --> 29:53.420
update进行修改

29:53.420 --> 29:54.420
怎么来进修改呢

29:54.420 --> 29:56.220
我首先通过id找到它

29:56.220 --> 29:56.620
然后呢

29:56.620 --> 29:59.620
将它的这个名字给它做一个调整

29:59.620 --> 30:00.620
这个事咋来做

30:00.620 --> 30:02.720
那我直接的collection

30:02.720 --> 30:04.320
我们找到它

30:04.320 --> 30:07.820
那这里面const re s

30:07.820 --> 30:11.020
等于一个avait collection

30:11.020 --> 30:11.620
然后呢

30:11.620 --> 30:15.220
doc这里面找到它之后呢

30:15.220 --> 30:17.920
我们再通过update这种形式

30:17.920 --> 30:19.620
来进行一个修改

30:19.620 --> 30:22.420
比如说我想把它修改内幕

30:22.420 --> 30:23.420
修改一个什么

30:23.420 --> 30:25.420
修改一个user内幕

30:25.420 --> 30:25.920
然后呢

30:25.920 --> 30:28.220
我们测试用户名

30:28.220 --> 30:28.820
ok

30:28.820 --> 30:29.720
那这就完成了

30:29.720 --> 30:30.220
完成之后

30:30.220 --> 30:31.220
但是你这个doc

30:31.220 --> 30:32.520
你得填一个它的id纸

30:32.520 --> 30:33.120
对吧

30:33.120 --> 30:34.320
但我们现在这个id纸

30:34.320 --> 30:35.420
想修改谁呢

30:35.420 --> 30:36.020
我们这里面啊

30:36.020 --> 30:36.820
最快的方式

30:36.820 --> 30:39.320
就是用这种把小名给进行一个修改

30:39.320 --> 30:39.620
对吧

30:39.620 --> 30:41.620
咱们能找到它的这个id纸啊

30:41.620 --> 30:41.920
当然了

30:41.920 --> 30:43.020
你也可以什么

30:43.020 --> 30:46.020
可以在我们的这个后台的这个外平台里面

30:46.020 --> 30:47.020
来进行一个获取

30:47.020 --> 30:48.420
你看在外平台里面

30:48.420 --> 30:50.120
你是不是也可以获取到这个纸

30:50.120 --> 30:50.620
对吧

30:50.620 --> 30:52.620
我们也可以进行一个修改啊

30:53.620 --> 30:53.920
好了

30:53.920 --> 30:55.420
那你知道这个纸之后

30:55.420 --> 30:56.620
不管你是在外平台

30:56.620 --> 30:58.120
是在前台获取到的啊

30:58.120 --> 30:58.520
但是呢

30:58.520 --> 31:01.020
你都要给它添到这个里面

31:01.020 --> 31:01.720
而且呢

31:01.720 --> 31:02.920
这个一定是一个什么

31:02.920 --> 31:04.720
一定是一个字幕串啊

31:04.720 --> 31:06.020
那拿到这个字幕串之后

31:06.020 --> 31:08.220
iis await collection DOC

31:08.220 --> 31:09.320
然后update

31:09.320 --> 31:11.420
我想把它从这个小名

31:11.420 --> 31:12.720
变成测试用名

31:12.720 --> 31:14.120
看一下是否成功

31:14.120 --> 31:14.620
然后呢

31:14.620 --> 31:16.020
如果说ok的话

31:16.020 --> 31:18.620
那我进行一个直的打印就可以了吧

31:18.620 --> 31:20.620
我这里面call的是0

31:20.620 --> 31:21.120
然后呢

31:21.120 --> 31:25.320
把这个msg给这个iis做一个输出

31:25.320 --> 31:26.420
就可以了啊

31:26.420 --> 31:27.420
来我们试一下

31:27.420 --> 31:28.120
试一下怎么办

31:28.120 --> 31:30.920
我们这里面还是上传并运行

31:30.920 --> 31:31.520
对吧

31:31.520 --> 31:33.120
那我们直接来做一下测试

31:34.020 --> 31:36.120
因为我这里面没有从前台获取啊

31:36.120 --> 31:37.520
而是我写死了这个字

31:37.520 --> 31:39.020
当我们正常操作的时候

31:39.020 --> 31:39.420
这只呢

31:39.420 --> 31:41.220
一定是从前台获取到的啊

31:42.720 --> 31:43.020
好的

31:43.020 --> 31:43.820
它这个速度啊

31:43.820 --> 31:45.420
相对的可能是有一些慢

31:45.420 --> 31:45.720
这个呢

31:45.720 --> 31:47.720
我们在做测试的时候

31:47.720 --> 31:48.620
我们要知道一下

31:48.620 --> 31:49.020
而且呢

31:49.020 --> 31:51.220
或者是我们可以进行本地运行啊

31:51.220 --> 31:51.820
本地运行

31:51.820 --> 31:53.520
它也是操作数据破啊

31:53.520 --> 31:54.920
好了这里面有一个什么呢

31:54.920 --> 31:58.020
call的0msg影响的一个文档

31:58.020 --> 31:59.020
是一个1

31:59.020 --> 32:00.820
update修改了一个1

32:00.820 --> 32:01.420
那这里面

32:01.420 --> 32:02.620
咱们来看一下

32:02.620 --> 32:03.920
它修改了一个1

32:03.920 --> 32:04.520
从哪看呢

32:04.520 --> 32:06.420
这时候你就得从控制台看了

32:06.420 --> 32:08.220
我们把小明这一项修改了

32:08.220 --> 32:09.720
咱们来看一眼

32:09.720 --> 32:11.420
你会发现这个里面

32:11.420 --> 32:12.820
是不是变成了一个什么

32:12.820 --> 32:13.820
测试用户名

32:13.820 --> 32:14.320
也就是说

32:14.320 --> 32:15.520
从刚才的这个

32:15.520 --> 32:17.720
有的内幕为小明变成了一个

32:17.720 --> 32:20.120
我们修改之后的这么一个结果值

32:20.120 --> 32:20.420
这个呢

32:20.420 --> 32:22.420
就是我们update的一个操作

32:22.420 --> 32:22.620
好的

32:22.620 --> 32:23.620
那我们接下来呢

32:23.620 --> 32:24.720
再看一下

32:24.720 --> 32:26.620
跟这个update的功能

32:26.620 --> 32:28.120
差不多的一个set

32:28.120 --> 32:29.620
set是做什么用的

32:29.620 --> 32:30.620
我们首先来说啊

32:30.620 --> 32:31.120
update的

32:31.120 --> 32:33.520
刚才我们指定的这个id值是正确的

32:33.520 --> 32:34.320
这个是没问题

32:34.320 --> 32:34.920
对不对

32:34.920 --> 32:36.820
但如果说他这个id值错了呢

32:36.820 --> 32:37.320
这个呢

32:37.320 --> 32:39.920
他就不没办法来实现了

32:39.920 --> 32:42.320
比如说我们来做一个测试

32:42.320 --> 32:43.920
那这个里面呢

32:43.920 --> 32:45.720
这个是真正的id值啊

32:45.720 --> 32:47.020
也就是说匹配的id值

32:47.020 --> 32:48.520
我们给他少写一位啊

32:48.520 --> 32:49.520
少写一位之后

32:49.520 --> 32:51.720
我们这里面有的内幕测试用户名

32:51.720 --> 32:53.520
那我再来做一下测试

32:53.520 --> 32:53.920
此时呢

32:53.920 --> 32:54.520
我们这次啊

32:54.520 --> 32:56.320
用这种本地运行

32:56.320 --> 32:57.820
本地运行它速度比较快

32:57.820 --> 32:58.220
但是呢

32:58.220 --> 33:00.420
它也是在直连我们这个

33:00.520 --> 33:02.420
我们云寒树里面的这个云树

33:02.420 --> 33:04.020
云浮器里面的这数据库啊

33:04.020 --> 33:05.320
这个不用担心

33:05.320 --> 33:08.420
我们本地运行云寒树

33:08.420 --> 33:09.720
我们来试一下

33:09.720 --> 33:10.420
你会发现啊

33:10.420 --> 33:11.220
这个时候呢

33:11.220 --> 33:13.020
由于咱们本地运行啊

33:13.020 --> 33:15.120
这个msg object也看不太清

33:15.120 --> 33:15.620
对吧

33:15.620 --> 33:16.120
那咋办呢

33:16.120 --> 33:17.920
我从这个里面来做啊

33:17.920 --> 33:19.220
刚才是测试用户名

33:19.220 --> 33:20.620
这样我得改一个名字

33:20.620 --> 33:22.220
测试用户名

33:22.220 --> 33:23.520
然后123

33:23.520 --> 33:25.220
给他加一个标识

33:25.220 --> 33:25.720
否则呢

33:25.720 --> 33:27.220
这个咱们看不太清

33:27.220 --> 33:29.020
本地运行云寒树

33:29.020 --> 33:30.920
好的非常速度快啊

33:30.920 --> 33:31.920
那这速度非常快

33:31.920 --> 33:33.620
直接我们在这个里面

33:33.620 --> 33:34.020
你看啊

33:34.020 --> 33:35.820
你会发现测试用户名123

33:35.820 --> 33:37.020
他没有发生任何更改

33:37.020 --> 33:37.720
对不对

33:37.720 --> 33:38.420
那此时呢

33:38.420 --> 33:39.120
这个东西啊

33:39.120 --> 33:40.520
就得说明什么问题呢

33:40.520 --> 33:42.520
就是我们这个啊

33:42.520 --> 33:43.420
update的方法

33:43.420 --> 33:44.120
必须啊

33:44.120 --> 33:46.420
你指定找到这一项

33:46.420 --> 33:48.020
如果找不到这一项呢

33:48.020 --> 33:50.520
他修改是没有任何意义的

33:50.520 --> 33:52.420
那假如说跟他这个差不多的

33:52.420 --> 33:53.320
我们再来一个啊

33:53.320 --> 33:54.120
就是谁呢

33:54.120 --> 33:56.220
就是我们的这个set方法

33:56.220 --> 33:56.720
他呢

33:56.720 --> 33:58.220
就是如果你找不到的话

33:58.220 --> 33:59.220
他会给你啊

33:59.220 --> 34:01.220
重新进行一个什么

34:01.220 --> 34:02.420
添加这一项

34:02.420 --> 34:04.520
也就是说他给你创建一个

34:04.520 --> 34:06.720
创建一个这种

34:06.720 --> 34:07.320
啊

34:07.320 --> 34:08.720
创建一条记录啊

34:08.720 --> 34:10.120
比如说我们这里面

34:10.120 --> 34:10.720
doc

34:10.720 --> 34:11.520
那我这里面

34:11.520 --> 34:12.820
这个值肯定是不对啊

34:12.820 --> 34:14.020
这个咱们知道的

34:14.020 --> 34:14.420
然后呢

34:14.420 --> 34:16.220
我在这里面写一下

34:16.220 --> 34:17.120
点

34:17.120 --> 34:19.520
我们这个里面就是set

34:19.520 --> 34:20.720
同样的我们添什么

34:20.720 --> 34:22.120
user name

34:22.120 --> 34:22.520
然后呢

34:22.520 --> 34:25.020
这里面写一个测试

34:25.020 --> 34:25.520
啊

34:25.520 --> 34:26.420
别写测试了

34:26.420 --> 34:29.520
这个我们直接就写一个set

34:29.520 --> 34:33.220
方法定义的用户名

34:33.220 --> 34:33.920
ok

34:33.920 --> 34:34.420
然后呢

34:34.420 --> 34:36.620
把上面这个给做一个注释啊

34:36.620 --> 34:37.920
为了不赢下咱们

34:37.920 --> 34:38.220
好了

34:38.220 --> 34:39.220
那咱们来试一下

34:39.220 --> 34:41.820
刚才的这个update是不管用的

34:41.820 --> 34:43.620
咱们再来看一下set的时候可以

34:44.620 --> 34:46.820
这里面有一个上传兵型

34:46.820 --> 34:47.820
用慢了啊

34:47.820 --> 34:49.220
咱们最好选择是什么呢

34:49.220 --> 34:51.320
我们直接的这个本地运行就行

34:51.320 --> 34:52.420
因为咱没有必要把这个

34:52.420 --> 34:53.820
原来说做一个上传

34:53.820 --> 34:55.820
因为这个是测试操作

34:55.820 --> 34:56.920
对吧

34:56.920 --> 34:58.220
但如果说你发布的时候

34:58.220 --> 35:01.220
你是一定要有一个上传的操作的

35:01.220 --> 35:02.720
你可以在本地测试的时候

35:02.720 --> 35:06.120
进行我们的这个本地数据库的一个这样

35:06.120 --> 35:08.420
本地运行运行数也是可以的

35:08.420 --> 35:09.020
这里面呢

35:09.020 --> 35:09.620
code0

35:09.620 --> 35:10.320
msg

35:10.320 --> 35:11.020
影响0

35:11.020 --> 35:11.720
update的0

35:11.720 --> 35:12.120
然后呢

35:12.120 --> 35:12.520
这里面

35:12.520 --> 35:15.220
但是给我们多了一个id值

35:15.220 --> 35:16.720
那咱们来看一眼啊

35:16.720 --> 35:17.820
我刷新一下

35:17.820 --> 35:18.220
ok

35:19.420 --> 35:21.120
此时你会发现啊

35:21.120 --> 35:21.520
它呢

35:21.520 --> 35:22.720
虽然没影响这个

35:22.720 --> 35:23.020
对吧

35:23.020 --> 35:25.020
因为它id也查找不正确

35:25.020 --> 35:25.720
但是呢

35:25.720 --> 35:26.620
它从这个

35:26.620 --> 35:28.620
我们刚才这个命令里面

35:28.620 --> 35:30.020
进行了一个什么操作呢

35:30.020 --> 35:32.020
我先给你查了一个记录纸

35:32.020 --> 35:33.220
放在这个里面

35:33.220 --> 35:37.820
这就是我们set以及update的一个区别

35:37.820 --> 35:38.520
update呢

35:38.520 --> 35:41.420
是我必须精准的查找到某一条记录

35:41.420 --> 35:42.720
然后进行修改

35:42.720 --> 35:43.320
那set呢

35:43.320 --> 35:44.320
如果说我查找不到

35:44.320 --> 35:46.320
那直接的我进行一个什么

35:46.320 --> 35:47.520
新增的操作啊

35:48.420 --> 35:48.620
好的

35:48.620 --> 35:49.220
这底下呢

35:49.220 --> 35:51.320
也给同学们再写成了啊

35:51.320 --> 35:51.720
ok

35:51.720 --> 35:52.320
那这个呢

35:52.320 --> 35:54.320
就是我们的啊

35:54.320 --> 35:56.920
数据库里面的增加删除修改

35:56.920 --> 36:00.120
以及我们的这个数据的一个获取啊

36:00.120 --> 36:02.020
整个的这些基本操作

36:02.020 --> 36:03.920
至于里面一些其他高级用法

36:03.920 --> 36:05.520
我们在实现案例的时候

36:05.520 --> 36:08.920
还会进行一个深入的一个讲解

36:08.920 --> 36:09.120
好的

36:09.120 --> 36:09.720
接下来呢

36:09.720 --> 36:12.720
我们看一下云存储通过编程的形式

36:12.720 --> 36:13.820
如何来实现

36:13.820 --> 36:14.220
这个呢

36:14.220 --> 36:15.620
是它的参考文档

36:15.620 --> 36:16.720
我们可以打开链接

36:16.720 --> 36:18.120
来查看一下啊

36:18.120 --> 36:18.420
然后呢

36:18.420 --> 36:20.920
我们也可以在这面打开啊

36:20.920 --> 36:21.620
在这个里面

36:21.620 --> 36:23.120
我从这里面云存储

36:23.120 --> 36:24.020
ok

36:24.020 --> 36:24.420
那这个呢

36:24.420 --> 36:26.420
就是它的一个参考文档

36:26.420 --> 36:28.420
通过unicload upload的fail

36:28.420 --> 36:29.120
操作谁呢

36:29.120 --> 36:31.420
就是操作我们这个数据库里面

36:31.420 --> 36:33.220
这里面有一个云存储

36:33.220 --> 36:36.520
就是可以在这个里面进行一些相关的操作

36:36.520 --> 36:37.720
那这个咋来做啊

36:37.720 --> 36:40.820
这里面我给同学们写了一个代码案例

36:40.820 --> 36:42.020
那我们可以通过呢

36:42.020 --> 36:42.820
选择图片

36:42.820 --> 36:43.220
然后呢

36:43.220 --> 36:45.820
我们上传图片这种形式来试验一下啊

36:45.820 --> 36:47.120
有你点触碎match

36:47.120 --> 36:48.820
是不是进行这个

36:48.820 --> 36:50.720
我们图片的一个上传

36:50.720 --> 36:51.420
对吧

36:51.420 --> 36:52.720
然后图片上传之后

36:52.720 --> 36:54.520
我们这里面就可以

36:54.520 --> 36:57.920
来进行我们unicload upload的fail之后

36:57.920 --> 36:59.320
然后进行相关操作

36:59.320 --> 37:00.820
那我再前端写一下

37:00.820 --> 37:03.020
比如说在这个里面

37:03.020 --> 37:04.720
咱们订一个button

37:04.720 --> 37:05.220
button呢

37:05.220 --> 37:09.020
就是我们的上传图片ok

37:09.020 --> 37:11.920
在这个里面写一个indeclick

37:11.920 --> 37:14.820
等于uploadfail

37:14.820 --> 37:17.020
或者是叫uploadimg都可以啊

37:17.020 --> 37:19.520
我在这里面写一个uploadfail

37:19.620 --> 37:21.320
sync找到这儿

37:21.320 --> 37:22.220
找到这儿之后

37:22.220 --> 37:24.420
我们逗号uploadfail

37:24.420 --> 37:25.320
在这个里面

37:25.320 --> 37:27.720
我们首先要使用什么

37:27.720 --> 37:30.620
使用我们unitr初思image

37:30.620 --> 37:32.520
我们先得选择一张图片

37:32.520 --> 37:36.820
哈unitr初思image

37:36.820 --> 37:38.620
然后选择这个图片

37:38.620 --> 37:39.920
选择这个图片呢

37:39.920 --> 37:44.820
我只获取他拿到图片之后的一个is

37:44.820 --> 37:46.620
首先咱们先看一眼这个is

37:46.620 --> 37:47.620
再来回顾一下

37:47.620 --> 37:48.820
因为有同学呢

37:48.820 --> 37:49.420
对这个啊

37:49.420 --> 37:50.920
可能是上级课的内容啊

37:50.920 --> 37:53.220
有一些不是比较清晰了

37:53.220 --> 37:55.320
那我们这里面选择

37:55.320 --> 37:56.720
比如说选择这张图片

37:56.720 --> 37:58.020
我一点击打开

37:58.020 --> 37:58.720
打开之后

37:58.720 --> 38:01.620
这里面就会有一个template fails

38:01.620 --> 38:02.220
对不对

38:02.220 --> 38:04.720
那我们就可以拿到is

38:04.720 --> 38:06.420
template fails

38:06.420 --> 38:08.820
下面的一个什么path

38:08.820 --> 38:10.720
然后我们直接获取到

38:10.720 --> 38:13.520
他的这个里面的什么地零像

38:13.520 --> 38:14.520
是不是就可以了

38:14.520 --> 38:15.320
那也就是说

38:15.320 --> 38:17.420
我直接的在这个里面打印的时候

38:17.520 --> 38:19.620
其实我还可以打印什么

38:19.620 --> 38:20.620
template fails

38:20.620 --> 38:21.820
path下面的零

38:22.920 --> 38:23.320
这个呢

38:23.320 --> 38:26.720
就是我们上传的内容的一个相关信息呀

38:26.720 --> 38:28.520
也就是说这个图片信息

38:28.520 --> 38:29.820
那我们来看一眼

38:29.820 --> 38:30.220
ok

38:30.220 --> 38:31.320
我上传之后

38:31.320 --> 38:32.420
这是不是就有了

38:32.420 --> 38:33.320
有了他之后

38:33.320 --> 38:35.920
其实这张图片我们是可以访问的

38:35.920 --> 38:37.420
比如说在这里面

38:37.420 --> 38:38.420
重新打开一个地址

38:38.420 --> 38:39.620
我们进一个访问

38:39.620 --> 38:41.120
在本地是没问题的对不对

38:41.120 --> 38:43.020
那我们现在就要上传到远端

38:43.020 --> 38:43.720
上传远端

38:43.720 --> 38:45.520
其实我们前台就可以操作啊

38:45.520 --> 38:46.220
打来操作呢

38:46.220 --> 38:47.220
我拿到他之后

38:47.220 --> 38:47.920
那这时候呢

38:47.920 --> 38:49.420
代表着我ok了

38:49.420 --> 38:51.420
已经可以获取到这个

38:51.420 --> 38:53.220
我们上传的文件信息了

38:53.220 --> 38:54.220
那我就调用

38:54.220 --> 38:56.220
you need glow的点

38:56.220 --> 38:57.720
upload fail

38:57.720 --> 38:58.920
这里面的方法

38:58.920 --> 38:59.520
他里面啊

38:59.520 --> 39:01.920
有两个内容是必须要传的

39:01.920 --> 39:02.620
一个是什么呢

39:02.620 --> 39:05.220
一个就是这个glow的pass

39:05.220 --> 39:05.720
然后呢

39:05.720 --> 39:06.420
还有一个

39:06.420 --> 39:07.420
我先不写啊

39:07.420 --> 39:08.220
还有一个是什么呢

39:08.220 --> 39:10.820
还有一个就是他的fail path

39:12.220 --> 39:13.220
再写一下

39:13.220 --> 39:16.320
里面有一个fail pass

39:16.320 --> 39:18.120
把这个也要写一下

39:18.120 --> 39:19.420
glow的pass

39:19.420 --> 39:20.720
然后呢

39:20.720 --> 39:22.920
这里面添一个值吧

39:22.920 --> 39:24.420
如果说不添值不行啊

39:24.420 --> 39:26.020
我们这个里面下面

39:26.020 --> 39:27.820
我再写一个fail pass

39:27.820 --> 39:28.620
ok

39:28.620 --> 39:31.120
那这个glow的pass和fail pass

39:31.120 --> 39:32.720
分别写什么呢

39:32.720 --> 39:34.120
这个glow的pass

39:34.120 --> 39:37.120
为我们的这个文件名

39:37.120 --> 39:37.720
然后呢

39:37.720 --> 39:38.520
fail pass呢

39:38.520 --> 39:41.420
为我们的这个文件信息

39:41.420 --> 39:42.120
在这个里面

39:42.120 --> 39:43.620
也给同学们很想了

39:43.620 --> 39:44.820
一个是fail pass

39:44.820 --> 39:46.620
一个是glow的pass

39:46.620 --> 39:48.220
这个文件名在哪展示啊

39:48.220 --> 39:49.320
跟同学们说一下

39:49.320 --> 39:49.820
文件名呢

39:49.820 --> 39:51.120
一会我们上传成功之后

39:51.120 --> 39:52.520
就在这个里面展示啊

39:52.520 --> 39:53.320
那我这里面啊

39:53.320 --> 39:54.720
就随便添写一个

39:54.720 --> 39:56.820
比如说这个glow的pass呢

39:56.820 --> 39:58.620
我们直接写一个

39:58.620 --> 40:02.820
test.gopg

40:02.820 --> 40:03.220
ok

40:03.220 --> 40:04.120
随便写一个

40:04.120 --> 40:04.920
fail pass呢

40:04.920 --> 40:06.320
这个你就不能随便写了

40:06.320 --> 40:08.620
因为这个是文件的内容信息

40:08.620 --> 40:10.320
那我直接就把刚才

40:10.320 --> 40:12.320
咱们初次image获取到的这个

40:12.320 --> 40:13.220
给你拿到

40:13.220 --> 40:13.820
拿到之后

40:13.820 --> 40:14.820
它同样的啊

40:14.820 --> 40:16.720
是有这种两种形式

40:16.720 --> 40:18.520
那你可以用这种uploadfail

40:18.520 --> 40:19.820
在这里面写sugsize

40:19.820 --> 40:21.020
这种形式获取

40:21.020 --> 40:21.920
还有一种呢

40:21.920 --> 40:23.220
获取它的这个想象结果

40:23.220 --> 40:25.020
还有一种就是我们通过

40:25.020 --> 40:26.920
这种promise对象的形式获取

40:26.920 --> 40:28.820
那我这里面直接就写这种

40:28.820 --> 40:30.420
sugsize成功之后的

40:30.420 --> 40:31.220
一个什么

40:31.220 --> 40:32.220
响应结果值

40:32.220 --> 40:34.220
我进行一个打印啊

40:34.220 --> 40:34.820
在这里面

40:34.820 --> 40:36.520
看一下它的结果

40:36.520 --> 40:37.120
注意看啊

40:37.120 --> 40:37.620
同学们

40:37.620 --> 40:38.520
我在这个里面

40:38.520 --> 40:39.820
其实是没有通过

40:39.820 --> 40:41.320
我们的云含数的啊

40:41.320 --> 40:41.820
只是呢

40:41.820 --> 40:42.820
我们在前端

40:42.820 --> 40:44.820
进行直接的upload

40:44.820 --> 40:46.520
uploadfail的一个调用

40:46.520 --> 40:47.020
这个呢

40:47.020 --> 40:48.520
我们要明确一下

40:48.520 --> 40:49.120
所以说

40:49.120 --> 40:51.820
我们没有进行云含数的调用

40:51.820 --> 40:52.420
那我们这里面

40:52.420 --> 40:53.820
就不需要云含数的一个

40:53.820 --> 40:54.920
上传操作了

40:54.920 --> 40:55.220
这个呢

40:55.220 --> 40:56.220
我们要清楚

40:56.220 --> 40:56.520
好的

40:56.520 --> 40:57.820
我点击上传图片

40:57.820 --> 40:59.520
这里面点击截屏

40:59.520 --> 41:00.720
好的

41:00.720 --> 41:01.920
ok打开

41:01.920 --> 41:02.520
打开之后

41:02.520 --> 41:03.420
咱们看network

41:03.420 --> 41:04.820
这里面有一个pending

41:04.820 --> 41:05.320
pending呢

41:05.320 --> 41:05.820
代表呢

41:05.820 --> 41:07.020
我们正在进行

41:07.020 --> 41:08.120
图片的上传

41:08.120 --> 41:09.520
可能图片有一些大

41:09.520 --> 41:10.120
所以说呢

41:10.120 --> 41:11.820
它会有一个上传的过程

41:11.820 --> 41:14.020
我们等待它上传完成之后

41:14.020 --> 41:16.120
就能获取到的一个结果值

41:16.120 --> 41:16.720
可以了

41:16.720 --> 41:17.220
可以了

41:17.220 --> 41:18.420
代表着我们这次

41:18.420 --> 41:19.820
是不是上传成功了

41:19.820 --> 41:20.920
我们看一下

41:20.920 --> 41:22.120
so said data true

41:22.120 --> 41:22.820
我们看一眼

41:22.820 --> 41:24.020
这个res

41:24.020 --> 41:25.020
res里面

41:25.020 --> 41:27.320
我们就获得了一个fail id

41:27.320 --> 41:28.020
fail id

41:28.020 --> 41:30.220
代表着我们本次上传的

41:30.220 --> 41:32.020
一个合法门的地址

41:32.020 --> 41:32.820
然后你从这里面

41:32.820 --> 41:33.620
可以获取

41:33.620 --> 41:35.020
你还能从哪看呢

41:35.020 --> 41:36.520
到我们的web控制台

41:36.520 --> 41:38.120
我们进行一个刷新

41:38.120 --> 41:39.220
那刷新之后

41:39.220 --> 41:39.620
这个呢

41:39.620 --> 41:41.320
就是我们刚才上传的

41:41.320 --> 41:42.520
test pass

41:42.520 --> 41:43.920
test.gopg

41:43.920 --> 41:45.120
是不是我们写的

41:45.120 --> 41:46.320
这个closed path

41:46.320 --> 41:46.920
是不是对

41:46.920 --> 41:47.820
是不是他呀

41:47.820 --> 41:49.020
然后这个里面

41:49.020 --> 41:50.720
还会有这个详情

41:50.720 --> 41:51.420
详情呢

41:51.420 --> 41:52.820
我们可以复制它

41:52.820 --> 41:53.620
复制它之后

41:53.620 --> 41:55.320
那我们就可以进行一个什么

41:55.320 --> 41:56.020
访问了

41:56.020 --> 41:57.120
我们直接在这个里面

41:57.120 --> 41:58.120
ok

41:58.120 --> 41:58.620
这个呢

41:58.620 --> 42:01.720
是就是我们刚才上传的这张图片

42:01.720 --> 42:02.220
然后呢

42:02.220 --> 42:03.320
它的一个外网地址

42:03.320 --> 42:05.720
也是它的代表它的一个web id

42:05.720 --> 42:06.820
那这个有什么用

42:06.820 --> 42:07.620
首先第一

42:07.620 --> 42:09.520
就是我们可以通过这个地址

42:09.520 --> 42:10.820
进行图片的访问

42:10.820 --> 42:11.420
还有一个呢

42:11.420 --> 42:12.820
就是我们如果说

42:12.820 --> 42:15.420
要对这张图片进行删除的时候

42:15.420 --> 42:16.520
那你这个时候呢

42:16.520 --> 42:19.120
就要获取到这个文件的

42:19.120 --> 42:20.820
刚才咱们访问的这个地址

42:20.820 --> 42:22.020
来进行删除

42:22.020 --> 42:24.520
但是这个里面跟同学们说一下

42:24.520 --> 42:26.520
我们如果说要做删除操作呢

42:26.520 --> 42:28.020
在这个阿里云里面

42:28.020 --> 42:29.820
不能在客户端进行删除

42:29.820 --> 42:30.220
然后呢

42:30.220 --> 42:32.920
我们只能在云韩书里面进行删除

42:32.920 --> 42:33.420
那这个呢

42:33.420 --> 42:35.120
我们也做一个测试啊

42:35.120 --> 42:37.220
因为我们刚才已经上传了一张图片

42:37.220 --> 42:37.920
那我现在呢

42:37.920 --> 42:39.020
再把这张图片

42:39.020 --> 42:41.520
给进行一个删除操作

42:41.520 --> 42:42.020
此时呢

42:42.020 --> 42:42.720
调用云韩书

42:42.720 --> 42:44.020
那这里面就设计到

42:44.020 --> 42:45.420
要创建云韩书

42:45.420 --> 42:45.920
并且呢

42:45.920 --> 42:47.720
把这个刚才的这个地址啊

42:47.720 --> 42:48.620
给指定好

42:48.620 --> 42:49.320
所以说咱们呢

42:49.320 --> 42:50.520
我们有两种形式

42:50.520 --> 42:51.420
可以在前端

42:51.420 --> 42:51.820
然后呢

42:51.820 --> 42:53.020
我们去调用云韩书

42:53.020 --> 42:53.420
或者呢

42:53.420 --> 42:55.820
我们直接在这个里面来做一个测试

42:55.820 --> 42:56.620
那为了方面呢

42:56.620 --> 42:58.420
我直接在这个云韩书里面啊

42:58.420 --> 43:00.620
来进行一些测试就可以了

43:00.620 --> 43:01.720
新建一个云韩书

43:01.720 --> 43:03.720
那这个云韩书叫第一L

43:03.720 --> 43:04.920
我们这个MG

43:04.920 --> 43:07.720
也就是说删除图片啊

43:07.720 --> 43:08.520
这个云韩书啊

43:08.520 --> 43:10.320
相对的比较简单了

43:10.320 --> 43:11.620
我们也不用

43:11.620 --> 43:13.520
进行数据库的一个调用了

43:13.520 --> 43:15.520
那我们直接在这个里面做什么

43:15.520 --> 43:18.120
我们直接进行给他删除就可以了

43:18.120 --> 43:18.720
也就是说

43:18.720 --> 43:22.620
我们通过UniClo的点DEL

43:22.620 --> 43:25.120
File DeleteFile这种形式

43:25.120 --> 43:27.420
我们这里面写一个File List

43:27.420 --> 43:29.620
那File List的一定是一个数组

43:29.620 --> 43:30.820
这里面传上

43:30.820 --> 43:31.820
我们这个File List的

43:31.820 --> 43:33.920
就把我们刚才获取的这个图片

43:33.920 --> 43:34.920
访问路径

43:34.920 --> 43:36.220
给他传递进去

43:36.220 --> 43:37.120
就OK了

43:37.120 --> 43:37.820
那这时候呢

43:37.820 --> 43:39.420
我再来获取一下

43:39.420 --> 43:40.920
详情到这里面

43:40.920 --> 43:42.320
我给他复制一下

43:42.320 --> 43:42.620
OK

43:42.620 --> 43:44.020
当你复制成功之后

43:44.020 --> 43:44.920
那我直接的

43:44.920 --> 43:47.520
在这个里面把他

43:47.520 --> 43:48.620
你字幕创的形式

43:48.620 --> 43:50.320
给他进行一下添加

43:50.320 --> 43:51.120
那此时呢

43:51.120 --> 43:53.920
他就应该给我一个返回结果

43:53.920 --> 43:55.320
那我们打印一下

43:55.320 --> 43:57.220
IS等于Available

43:57.220 --> 43:59.420
UniClo的DeleteFile

43:59.420 --> 44:01.820
那我这里面打印一下这个IS

44:03.020 --> 44:04.420
好的本地运行

44:04.420 --> 44:05.820
一下这个云韩书就OK了

44:05.820 --> 44:08.020
我们在这个里面找到

44:08.020 --> 44:10.420
我们这里面是DLMG

44:10.420 --> 44:12.120
本地运行云韩书

44:12.120 --> 44:12.820
OK走你

44:14.220 --> 44:14.620
好了

44:14.620 --> 44:15.220
这里面

44:15.220 --> 44:16.720
执行结果是个空

44:16.720 --> 44:18.020
也没有我们返回内容

44:18.020 --> 44:19.020
那但是这个呢

44:19.020 --> 44:20.220
我们为了验证一下

44:20.220 --> 44:20.720
怎么办呢

44:20.720 --> 44:22.720
我们直接可以在这里面来看

44:22.720 --> 44:23.420
刷情

44:23.420 --> 44:25.320
刚才还有的一张图片

44:25.320 --> 44:27.420
是不是这时候就被删除掉了

44:27.420 --> 44:28.020
对吧

44:28.020 --> 44:28.420
那这个呢

44:28.420 --> 44:30.620
就是他的一个删除操作

44:30.620 --> 44:31.620
我们注意一下

44:31.620 --> 44:33.320
使用了阿里云韩书

44:33.320 --> 44:33.820
这个呢

44:33.820 --> 44:35.620
是不能再扣断进删除的

44:35.620 --> 44:37.520
那如果说我们扣断想操作

44:37.520 --> 44:38.320
他怎么办

44:38.320 --> 44:38.620
其实呢

44:38.620 --> 44:39.920
就按我们这种形式

44:39.920 --> 44:40.820
我定一个云韩书

44:40.820 --> 44:42.620
由云韩书来进行删除

44:42.620 --> 44:44.120
然后如果说删除成功之后

44:44.120 --> 44:45.520
他我们给前端

44:45.520 --> 44:47.420
返回一个响应值就OK了

44:47.420 --> 44:47.820
这个呢

44:47.820 --> 44:50.420
就是他的一个删除操作

44:50.420 --> 44:50.720
好的

44:50.720 --> 44:52.320
那我们这几个的内容啊

44:52.320 --> 44:54.120
到这里基本上就结束了

44:54.120 --> 44:54.520
然后呢

44:54.520 --> 44:55.720
我们回顾一下

44:55.720 --> 44:57.220
首先我们进行了

44:57.220 --> 44:58.820
我们这个云数据库的

44:58.820 --> 45:00.820
一个基本的操作之后呢

45:00.820 --> 45:03.020
我们还有一个云存储的

45:03.020 --> 45:04.120
一个删除

45:04.120 --> 45:06.420
以及我们新增图片的

45:06.420 --> 45:08.520
或者是我们上传文件的

45:08.520 --> 45:10.020
这样一个操作

45:10.020 --> 45:10.720
那这些呢

45:10.720 --> 45:12.520
就是我们整个课程的内容

45:12.520 --> 45:12.920
好的

45:12.920 --> 45:14.520
那我们这几个就到这里

