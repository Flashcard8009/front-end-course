WEBVTT

00:00.880 --> 00:05.180
诶 我已经把一杯水准备好了啊 你们可以也准备准备

00:05.180 --> 00:07.480
咱们这一课时间肯定比较长

00:07.480 --> 00:10.680
咱们这一课呢就把一个登录和认证的车里结束了啊

00:10.680 --> 00:12.880
免得在这里边绕来绕去 绕了这么久了

00:12.880 --> 00:18.780
这一课呢我们使用五幼来做一个客户端开发来完整的走一次啊

00:18.780 --> 00:21.580
福气你准备好了然后来完整走一次登录的流程

00:21.580 --> 00:23.880
如果说你没有学习过五幼的话

00:23.880 --> 00:26.980
那么你可以学习到之后再来看这个课啊

00:26.980 --> 00:28.680
也没关系 不影响后边的学习

00:29.480 --> 00:31.280
五幼我也好久没用过了

00:31.280 --> 00:33.080
可能有些API我都忘了啊

00:33.080 --> 00:34.380
没关系 我们到时候再查吧

00:35.680 --> 00:37.380
首先我们在开发客户端之前呢

00:37.380 --> 00:39.280
我给他说一下啊 我准备把五幼放到这

00:40.280 --> 00:42.980
不过呢 你们以后用什么样的工程结构呢

00:42.980 --> 00:45.180
其实无所谓的 其实无所谓的

00:45.180 --> 00:49.280
比方说你们以后呢工程结构可以是这个样子啊

00:49.280 --> 00:50.880
跟目录下面呢有一个server

00:50.880 --> 00:52.380
server呢就放服务器对吧

00:52.380 --> 00:53.280
我现在不是这样做的

00:54.380 --> 00:56.680
然后可能是呢放了一个客户端啊

00:56.680 --> 00:57.580
比方说五幼工程

00:59.580 --> 01:03.280
或者呢是跟目录下面就是放服务器

01:03.280 --> 01:05.480
直接像我这样子啊 直接放服务器

01:05.480 --> 01:07.480
然后呢下边的client目录下面呢

01:07.480 --> 01:09.280
再放那个五幼工程

01:09.280 --> 01:13.080
也可以呢在任何一个任何一个文件夹下面放服务器

01:13.080 --> 01:15.480
然后呢在另一个文件夹下面啊

01:15.480 --> 01:17.180
放那个五幼工程

01:17.180 --> 01:17.980
无所谓的啊

01:17.980 --> 01:19.680
这个东西随便往了怎么去放

01:19.680 --> 01:21.080
工程结构无所谓的

01:21.080 --> 01:22.580
总之你最重要保证

01:22.580 --> 01:24.980
五幼工程构建好了之后呢

01:24.980 --> 01:27.180
你要把它放到这个public目录下面去

01:27.280 --> 01:28.280
其他无所谓的啊

01:28.980 --> 01:32.580
那么咱们因为我不可能再去重新建一个地方

01:32.580 --> 01:34.780
再建一个文件夹去做五幼工程了

01:34.780 --> 01:35.780
因为这样子呢

01:35.780 --> 01:37.280
就会导致这个github上面呢

01:37.280 --> 01:38.780
你们是拿不到元代吧

01:38.780 --> 01:40.080
所以说我还是把放这吧

01:40.080 --> 01:41.580
把放到同一个工程里面

01:41.580 --> 01:41.980
来吧

01:42.980 --> 01:44.280
在做五幼工程之前呢

01:44.280 --> 01:46.180
我们首先对我们的服务器呢

01:46.180 --> 01:47.280
稍微的做一些改动

01:47.280 --> 01:48.280
我想来想去呢

01:48.280 --> 01:49.780
可能就这么几个地方需要改动

01:49.780 --> 01:50.580
一个是nodomo

01:51.380 --> 01:51.880
这个地方呢

01:51.880 --> 01:53.880
我们要忽略掉这个client目录

01:53.880 --> 01:54.580
一个路啊

01:54.580 --> 01:56.480
这里边我们要忽略掉这个client

01:56.480 --> 01:58.280
不然的话到时候五幼工程也改动

01:58.280 --> 01:59.380
导致我们服务器重启

01:59.380 --> 02:00.880
那就没有什么意思了啊

02:00.880 --> 02:01.880
这是第一个

02:01.880 --> 02:02.480
第二个呢

02:02.480 --> 02:04.080
是这个地方呢

02:04.080 --> 02:07.080
有一个就是白名单

02:07.080 --> 02:08.180
就是跨域的白名单

02:08.180 --> 02:09.080
实际上我们这里呢

02:09.080 --> 02:10.280
根本就不设计到跨域啊

02:10.280 --> 02:11.380
跨域已经讲完了

02:11.380 --> 02:13.080
我们可以把这个跨域删除掉

02:13.080 --> 02:13.780
也可以留在那

02:13.780 --> 02:14.080
但是呢

02:14.080 --> 02:15.080
我不使用白名单了

02:15.080 --> 02:17.080
因为五幼工程到时候有个开发服务器

02:17.080 --> 02:17.580
对吧

02:17.580 --> 02:19.280
开发服务器地址又要设计到跨域

02:19.280 --> 02:20.180
这个麻烦的钥匙

02:20.180 --> 02:20.980
干脆就把去了

02:22.180 --> 02:22.980
不要把白名单了

02:22.980 --> 02:23.780
就谁

02:23.780 --> 02:24.480
只要你是个人

02:24.480 --> 02:26.080
我就跪我就允许啊

02:26.080 --> 02:29.640
就谁都允许跨域

02:29.640 --> 02:29.940
啊

02:29.940 --> 02:31.540
这个Oranger

02:31.540 --> 02:32.040
ok

02:32.040 --> 02:33.440
行了啊

02:33.440 --> 02:34.440
然后第三个点呢

02:34.440 --> 02:36.540
就是关于这个Cookie

02:39.840 --> 02:41.440
关于这个人在哪呢

02:41.440 --> 02:44.040
关于这个Cookie在这个

02:44.040 --> 02:47.740
我这个为什么Kiss他没有提示呢

02:47.740 --> 02:48.040
ok

02:48.040 --> 02:49.840
没问题了啊

02:49.840 --> 02:53.240
然后关于这个就是Cookie这里

02:53.240 --> 02:54.040
哎呀我手放到哪

02:54.040 --> 02:54.840
来

02:54.840 --> 02:55.040
哦

02:55.040 --> 02:57.640
在这在WT里边在这

02:57.640 --> 02:58.540
我们之前呢

02:58.540 --> 02:59.840
是登录成功之后呢

02:59.840 --> 03:02.440
还要给他发送一个Cookie

03:02.440 --> 03:02.840
对吧

03:02.840 --> 03:03.240
在这

03:03.240 --> 03:03.840
对吧

03:03.840 --> 03:04.740
还该发送了Cookie

03:04.740 --> 03:06.040
那么用Cookie呢

03:06.040 --> 03:07.440
是比较简单的

03:07.440 --> 03:08.040
在浏览器端

03:08.040 --> 03:08.640
因为Cookie呢

03:08.640 --> 03:10.640
他浏览器会自动管理比方说

03:10.640 --> 03:11.440
想用头来了

03:11.440 --> 03:12.440
我又把Cookie呢

03:12.440 --> 03:14.640
他自动放到一个浏览器的Cookie里边

03:14.640 --> 03:15.040
然后呢

03:15.040 --> 03:16.040
发送请求的时候呢

03:16.040 --> 03:17.040
他会把Cookie呢

03:17.040 --> 03:18.840
自动带过去

03:18.840 --> 03:19.240
所以说呢

03:19.240 --> 03:21.540
这个Cookie的这个东西啊

03:21.540 --> 03:22.640
我不想用了

03:22.640 --> 03:23.440
为什么呢

03:23.540 --> 03:25.240
因为你们以后到公司呢

03:25.240 --> 03:26.940
可能用JWT的模式呢

03:26.940 --> 03:28.240
他就没有给你Cookie

03:28.240 --> 03:31.240
那么这我要用Cookie非常简单啊

03:31.240 --> 03:34.440
会让我们的整个开发

03:34.440 --> 03:35.340
客户当开发

03:35.340 --> 03:36.240
简化不少

03:36.240 --> 03:37.340
但是呢

03:37.340 --> 03:38.640
我们还是不用Cookie的

03:38.640 --> 03:39.640
因为用Cookie的话

03:39.640 --> 03:40.940
万一你们以后公司

03:40.940 --> 03:41.840
没有给你发Cookie

03:41.840 --> 03:43.340
又不知道怎么办了

03:43.340 --> 03:44.840
我这里把Cookie去掉啊

03:44.840 --> 03:45.840
包括我们想

03:45.840 --> 03:47.040
包括我们请求的时候

03:47.040 --> 03:47.740
获取的时候

03:47.740 --> 03:49.240
也不是从Cookie里面获取

03:49.240 --> 03:50.540
这个头肯是从哪里

03:50.540 --> 03:52.140
是从那个头里边

03:52.140 --> 03:55.310
所以说我把这个地方删了

03:55.310 --> 03:56.410
把这个地方

03:56.410 --> 03:58.110
删掉

03:58.110 --> 04:00.720
好 删掉

04:00.720 --> 04:01.020
好

04:01.020 --> 04:03.620
我们把这个地方改了啊

04:03.620 --> 04:05.420
这是这一块

04:05.420 --> 04:05.720
好

04:05.720 --> 04:06.120
然后呢

04:06.120 --> 04:07.420
这个地方改了之后呢

04:07.420 --> 04:08.920
我们只能从请求头的

04:08.920 --> 04:10.020
Authorization里面

04:10.020 --> 04:11.620
去获取这个头肯

04:11.620 --> 04:12.020
然后呢

04:12.020 --> 04:13.520
另一部分呢

04:13.520 --> 04:15.720
我们是要从那个就是

04:15.720 --> 04:18.720
嗯

04:18.720 --> 04:20.020
登录成功之后啊

04:20.020 --> 04:22.620
我通过Authorization给他头肯啊

04:22.620 --> 04:23.720
变成这种模式了

04:23.720 --> 04:24.220
好了

04:24.220 --> 04:24.520
行了

04:24.520 --> 04:25.220
差不多了

04:25.220 --> 04:25.820
我们现在呢

04:25.820 --> 04:27.020
打开控制台

04:27.020 --> 04:28.720
把这个就是

04:28.720 --> 04:30.020
嗯

04:30.020 --> 04:31.220
vue安装好

04:31.220 --> 04:32.820
vue我英拳就安装了的啊

04:32.820 --> 04:33.520
以前

04:33.520 --> 04:33.820
然后呢

04:33.820 --> 04:34.120
现在呢

04:34.120 --> 04:36.120
我们只需要把它那个就是

04:36.120 --> 04:36.920
生成个工程

04:36.920 --> 04:38.420
放到client目录下面就行了

04:38.420 --> 04:43.070
vue create client

04:43.070 --> 04:43.270
啊

04:43.270 --> 04:44.270
这个地方提示里啊

04:44.270 --> 04:45.170
client目录呢

04:45.170 --> 04:46.670
他已经存在了

04:46.670 --> 04:47.270
他问你

04:47.270 --> 04:48.970
是否要那个

04:48.970 --> 04:49.470
嗯

04:49.470 --> 04:50.370
干什么来操作啊

04:50.370 --> 04:52.570
我就把他覆盖掉

04:52.570 --> 04:52.870
好

04:52.870 --> 04:53.370
第二个呢

04:53.370 --> 04:54.370
还有问题

04:54.370 --> 04:54.870
嗯

04:54.870 --> 04:56.670
我们应该使用什么样的预设啊

04:56.670 --> 04:57.170
我这里呢

04:57.170 --> 04:58.870
使用手动吧

04:58.870 --> 05:00.170
背包加上

05:00.170 --> 05:02.070
rotr加上vue x加上

05:02.070 --> 05:02.370
然后呢

05:02.370 --> 05:04.170
这个去掉

05:04.170 --> 05:05.870
下面上了啊

05:05.870 --> 05:07.370
就去

05:07.370 --> 05:09.570
这个地方是问你这个rotr里边

05:09.570 --> 05:11.070
是不是使用history模式

05:11.070 --> 05:12.070
因为他默认的

05:12.070 --> 05:13.170
是那个哈希

05:13.170 --> 05:13.870
对不对啊

05:13.870 --> 05:15.670
那么使用history

05:15.670 --> 05:16.070
好

05:16.070 --> 05:17.370
接下来他就问你

05:17.370 --> 05:19.070
那什么那个背包的配置啊

05:19.070 --> 05:19.470
这东西

05:19.470 --> 05:21.070
他是放到这个pactin接上里边呢

05:21.070 --> 05:22.270
还是放到独立文件里边

05:22.270 --> 05:23.870
我们独立文件吧

05:23.870 --> 05:24.070
啊

05:24.070 --> 05:24.570
然后呢

05:24.570 --> 05:25.670
他又问你

05:25.670 --> 05:27.070
是不是要把这个设置啊

05:27.070 --> 05:28.070
保存起来

05:28.070 --> 05:29.770
未将来的工程服务啊

05:29.770 --> 05:31.570
不用保存了

05:31.570 --> 05:31.670
好

05:31.670 --> 05:33.570
让他让他搭建吧

05:33.570 --> 05:33.670
啊

05:33.670 --> 05:34.570
我们这里呢

05:34.570 --> 05:36.370
称他那个就是下载的时间

05:36.370 --> 05:38.770
让我们把这些官网全部打开啊

05:38.770 --> 05:40.270
像什么vue cd啊

05:40.270 --> 05:42.270
这些官网啊

05:42.270 --> 05:44.770
像什么这个啊

05:44.770 --> 05:47.770
vue rotr啊

05:47.770 --> 05:49.170
像什么那个

05:49.170 --> 05:50.270
还有什么

05:50.270 --> 05:51.170
还有vue x

05:51.170 --> 05:53.270
对吧

05:54.270 --> 05:56.270
还有什么呢

05:56.270 --> 05:57.270
还有一个小时啊

05:57.270 --> 05:58.770
我要用一个小时的

05:58.770 --> 05:59.870
把这个打开

05:59.870 --> 06:00.070
好

06:00.070 --> 06:01.270
行了

06:01.270 --> 06:02.470
我们来看一下啊

06:02.470 --> 06:03.470
购建起来了啊

06:03.470 --> 06:05.370
我们顺便的把一个小时安装上

06:05.370 --> 06:06.070
我们首先呢

06:06.070 --> 06:07.070
进入这个

06:07.070 --> 06:09.270
我们先把服务器运行起来

06:09.270 --> 06:09.470
啊

06:09.470 --> 06:11.070
服务器跑起来

06:11.070 --> 06:11.270
啊

06:11.270 --> 06:12.070
服务器跑起来啊

06:12.070 --> 06:15.070
我们再重新打开个控制台

06:15.070 --> 06:17.070
重新打开一个

06:17.070 --> 06:17.470
然后呢

06:17.470 --> 06:19.770
我们进入这个client程步路啊

06:19.770 --> 06:21.570
vue工程步路

06:21.570 --> 06:21.970
就在这

06:21.970 --> 06:22.970
你看

06:22.970 --> 06:24.270
所以有了有东西了

06:24.270 --> 06:24.970
对吧

06:24.970 --> 06:25.370
好了

06:25.370 --> 06:26.470
vue工程步路过后呢

06:26.470 --> 06:28.370
我们使用那个安装一个吧

06:28.370 --> 06:30.370
安装一个小时

06:30.370 --> 06:30.470
啊

06:30.470 --> 06:31.670
我这里用npm安装

06:31.670 --> 06:32.170
你们那边呢

06:32.170 --> 06:33.370
也可以用一二来安装啊

06:33.370 --> 06:35.170
无所谓的

06:35.170 --> 06:36.270
安装

06:36.270 --> 06:36.670
安装好了

06:36.670 --> 06:36.970
过后呢

06:36.970 --> 06:37.470
我们首先呢

06:37.470 --> 06:38.970
有个vue工程运行出来看一下啊

06:38.970 --> 06:40.770
npm so

06:40.770 --> 06:42.070
嗯

06:42.070 --> 06:43.170
哦

06:43.170 --> 06:45.870
npm run

06:45.870 --> 06:47.070
so

06:47.070 --> 06:47.670
安装起来

06:47.670 --> 06:49.470
运行起来看一下

06:49.470 --> 06:52.070
看一下有没有成功的搭建起来

06:52.170 --> 06:53.270
啊他搭建啊

06:53.270 --> 06:53.770
ok

06:53.770 --> 06:57.140
我们这里再复制一下

06:57.140 --> 06:57.940
复制一下吧

06:59.340 --> 07:00.240
好到这边来

07:01.340 --> 07:01.940
好没问题了

07:01.940 --> 07:02.440
对吧

07:02.440 --> 07:04.540
我们的这个vue工程运输了

07:04.540 --> 07:04.740
好

07:04.740 --> 07:05.840
接着我们先做啥呢

07:05.840 --> 07:07.440
我们先

07:07.440 --> 07:08.540
按照我的习惯的话

07:08.540 --> 07:10.240
我会先开发那个

07:10.240 --> 07:11.140
API接口

07:12.140 --> 07:13.340
所以说我们这里呢

07:13.340 --> 07:14.440
找这个src步路啊

07:14.440 --> 07:15.840
我们给他清建个文件夹

07:15.840 --> 07:17.840
给他叫做service吧

07:17.840 --> 07:18.740
在这里边

07:18.740 --> 07:21.240
给他开发一些API接口

07:21.240 --> 07:22.340
那么这个API接口呢

07:22.340 --> 07:24.240
他肯定要设计到跨域的问题对不对

07:24.240 --> 07:25.740
所以说我要配置一下啊

07:25.740 --> 07:26.840
配置一下代理

07:26.840 --> 07:28.340
因为这个开发开发阶段

07:28.340 --> 07:29.240
我们要配置个代理

07:29.240 --> 07:30.140
防止他跨域

07:30.140 --> 07:30.740
当然我们这里呢

07:30.740 --> 07:32.740
也不跨域也没什么问题啊

07:32.740 --> 07:34.240
我们但是还是还是做一下吧

07:34.240 --> 07:36.640
把这个完整的流程都走一遍

07:36.640 --> 07:37.740
找到这个配置

07:37.740 --> 07:39.440
看一下怎么来配置这个玩意

07:39.440 --> 07:40.340
配置参考

07:42.040 --> 07:44.140
让你配置到vue config.js里面

07:44.140 --> 07:44.440
ok

07:46.440 --> 07:48.140
好久远的事情了

07:48.140 --> 07:48.840
然后呢

07:48.840 --> 07:50.840
这边肯定是export倒数

07:50.840 --> 07:51.440
因为为什么呢

07:51.440 --> 07:53.240
因为它是基于vue pack的配置啊

07:53.240 --> 07:53.740
很多

07:55.240 --> 07:57.040
在这里找到这个pro

07:57.040 --> 07:57.940
dev server

07:57.940 --> 07:58.840
dev server

07:58.840 --> 07:59.940
在这里

07:59.940 --> 08:01.240
我想起来了啊

08:01.240 --> 08:02.140
那么这里边呢

08:02.140 --> 08:02.940
应该就是

08:02.940 --> 08:05.540
当我们以API开头来请求的时候呢

08:05.540 --> 08:07.140
我们应该去请求啥呢

08:07.140 --> 08:09.640
应该去请求那个target

08:10.940 --> 08:16.040
atdp localhost 5008

08:16.040 --> 08:16.740
对吧

08:16.740 --> 08:17.940
把它改成这个地址

08:17.940 --> 08:19.840
我们把代理配置一下

08:20.940 --> 08:22.240
然后到surface里边

08:22.240 --> 08:23.740
surface里面我们新建一个文件

08:23.740 --> 08:26.240
我们去一个前面一个叫做login service

08:26.240 --> 08:26.840
surface

08:27.540 --> 08:28.440
登录的啊

08:28.440 --> 08:29.840
登录的这个就是

08:32.180 --> 08:32.980
登录的功能

08:33.580 --> 08:34.980
好那么这边使用登录功能

08:34.980 --> 08:36.780
是不是肯定要使用到access

08:37.180 --> 08:39.280
如果说你使用cookie的话

08:39.280 --> 08:40.280
无所谓

08:40.280 --> 08:41.680
就这样直接使用就行了

08:41.680 --> 08:43.680
用access就请求就完事了

08:44.080 --> 08:44.980
但是呢

08:44.980 --> 08:46.680
我们现在用的不是cookie的

08:47.880 --> 08:48.680
用的是什么呢

08:48.680 --> 08:49.880
用的是响应头

08:50.280 --> 08:51.280
authorization

08:51.580 --> 08:53.280
那么现在就设计到两个问题

08:53.580 --> 08:54.780
第一个问题是什么呢

08:55.280 --> 08:57.280
我请求的时候啊

08:57.280 --> 08:58.980
发送请求的时候

08:59.980 --> 09:01.580
如果有token

09:03.180 --> 09:04.980
是不是需要附带到

09:05.180 --> 09:07.380
附带到响应头中

09:07.780 --> 09:08.280
对不对

09:09.080 --> 09:09.980
第二个问题呢

09:11.180 --> 09:14.080
就是如果响应的时候

09:14.980 --> 09:16.080
响应的时候

09:18.470 --> 09:20.270
如果有token

09:20.470 --> 09:22.170
就是响应给我请求头

09:22.170 --> 09:23.670
响应头里边有个token

09:23.870 --> 09:25.670
我们是不是要把token

09:26.170 --> 09:26.970
保存

09:27.470 --> 09:29.070
token到什么呢

09:29.170 --> 09:30.270
到本地

09:30.370 --> 09:30.570
对吧

09:30.570 --> 09:32.970
我们可以用cookie保存也可以用那个

09:33.270 --> 09:34.470
可以用cookie保存

09:34.670 --> 09:35.770
手动用cookie嘛

09:35.770 --> 09:37.370
ccess也是可以操作cookie的

09:37.570 --> 09:38.370
也可以用什么呢

09:38.370 --> 09:39.670
也可以用那个就是

09:41.270 --> 09:42.270
in the code storage

09:42.770 --> 09:43.070
对吧

09:43.070 --> 09:43.670
都可以

09:45.170 --> 09:46.270
把他保存到本地

09:46.370 --> 09:47.070
这些事情呢

09:47.070 --> 09:48.070
本来如果说

09:48.070 --> 09:49.470
服务器响应的就是cookie的话

09:49.470 --> 09:50.670
那么浏览器会自动操作

09:50.670 --> 09:50.970
但是呢

09:50.970 --> 09:52.470
服务器现在没有响应cookie的

09:52.470 --> 09:53.670
如果说服务器响应cookie的话

09:53.670 --> 09:54.670
你就没有这些事

09:54.670 --> 09:55.770
你直接用就行了

09:56.070 --> 09:56.370
但是呢

09:56.370 --> 09:57.470
服务器由于

09:57.570 --> 09:59.070
他要响应的不是cookie

09:59.370 --> 10:00.570
是普通的响应头

10:00.570 --> 10:01.770
那么你需要手动操作

10:01.870 --> 10:03.070
我就主要说一下这

10:03.570 --> 10:04.970
然后还有第三个问题

10:05.270 --> 10:07.170
就是响应的时候啊

10:07.670 --> 10:09.270
因为服务器他响应有可能爆错

10:09.270 --> 10:09.670
对吧

10:09.770 --> 10:12.770
如果响应的消息嘛

10:14.750 --> 10:15.850
是403

10:15.850 --> 10:17.250
你看看我们之前的服务器

10:17.250 --> 10:19.050
是不是有一个403的响应头

10:19.550 --> 10:20.750
在这个jwt里边

10:21.550 --> 10:22.650
我记得是有的啊

10:23.550 --> 10:24.650
在哪呢

10:24.650 --> 10:25.750
这个token made aware

10:26.250 --> 10:26.850
认证失败

10:26.850 --> 10:27.850
是不是响应个403

10:28.250 --> 10:28.750
对不对

10:28.850 --> 10:31.050
当他响应一个403的时候

10:31.050 --> 10:31.750
那怎么办呢

10:31.750 --> 10:34.750
表示的是有两种情况会响应403

10:34.750 --> 10:35.850
一个是没有cookie

10:35.850 --> 10:36.350
对吧

10:36.850 --> 10:37.650
没有token

10:38.450 --> 10:39.750
或者是token失效

10:40.850 --> 10:42.550
那么无论是哪一种情况

10:42.550 --> 10:43.850
没有token那就没得说了

10:43.850 --> 10:45.050
如果说token失效的话

10:45.050 --> 10:45.850
我们要干嘛呢

10:45.950 --> 10:47.250
我们要在本地

10:47.350 --> 10:49.350
就本地的token已经没用了

10:49.450 --> 10:51.350
在本地删除token

10:51.650 --> 10:51.950
对不对

10:51.950 --> 10:53.050
是不是要做这么一些事

10:53.250 --> 10:54.750
那么这些事是不是所有请求

10:54.750 --> 10:56.050
都是针对所有请求的

10:56.650 --> 10:57.450
无论你发动请求

10:57.450 --> 10:58.850
你有token就该带过去

10:59.550 --> 11:00.250
另外呢

11:00.250 --> 11:00.950
你想赢的时候

11:00.950 --> 11:02.450
如果有token我就把我存下来

11:03.050 --> 11:04.050
如果说想赢的消息嘛

11:04.050 --> 11:05.350
是403我去删除token

11:05.450 --> 11:06.950
是不是所有的请求都做这个事

11:07.050 --> 11:09.050
那如果说你不去单独处理一下的话

11:09.050 --> 11:10.350
那每个请求都很麻烦

11:10.450 --> 11:11.050
所以说我这里呢

11:11.050 --> 11:12.150
把这个axles啊

11:12.150 --> 11:13.350
把它封装一下啊

11:13.350 --> 11:14.650
封装成一个request

11:17.260 --> 11:17.960
那么这边呢

11:17.960 --> 11:19.260
我就做这么一件事啊

11:19.260 --> 11:20.060
导出

11:20.760 --> 11:21.860
导出一个

11:22.360 --> 11:23.160
函数吧

11:23.360 --> 11:24.460
调用这个函数呢

11:24.460 --> 11:26.660
我给你返回一个封装之后的axles

11:27.460 --> 11:28.160
那怎么玩呢

11:28.160 --> 11:28.860
这个东西

11:29.060 --> 11:29.760
怎么玩呢

11:30.260 --> 11:31.360
我们要做这三件事啊

11:31.360 --> 11:32.660
怎么把这三件事拿过来

11:36.930 --> 11:38.230
我们这里呢

11:38.230 --> 11:39.430
导入这个axles啊

11:40.130 --> 11:41.430
先导入这个axles再说

11:43.990 --> 11:45.590
首先是请求的时候

11:45.890 --> 11:46.890
如果说有token

11:46.890 --> 11:47.790
我要附带的消息头

11:47.790 --> 11:49.290
那么我们这里首先要确定

11:49.290 --> 11:50.090
token在哪

11:50.390 --> 11:51.290
我们token存在哪呢

11:51.290 --> 11:52.790
我们token就存在这个local storage

11:53.790 --> 11:54.790
我们就不用coken了

11:54.790 --> 11:55.790
存在local storage

11:55.790 --> 11:57.390
但是你要存到coken里面也可以

11:57.390 --> 11:58.390
手动存到coken

11:58.490 --> 11:59.390
手动存到coken之后呢

11:59.390 --> 12:00.990
他请求的时候会自动发过去

12:01.390 --> 12:02.990
咱们就存在local storage

12:02.990 --> 12:03.490
里面吧

12:03.590 --> 12:04.190
里面吧

12:04.390 --> 12:04.790
所以说呢

12:04.790 --> 12:05.990
我们这里呢就

12:07.190 --> 12:07.790
来吧

12:07.990 --> 12:09.090
首先我们从local storage

12:09.090 --> 12:10.790
里面去取local storage

12:10.790 --> 12:11.590
get item

12:12.690 --> 12:13.790
取一个给他keyz

12:13.790 --> 12:15.190
keyz的话我们就用token吧

12:15.390 --> 12:16.690
用个token keyz

12:16.990 --> 12:17.490
然后呢

12:17.490 --> 12:19.290
这里token是不是取出来

12:19.690 --> 12:21.590
取出来有没有可能没有

12:22.090 --> 12:24.390
这只有有的时候才附带到请求头

12:24.390 --> 12:24.790
对吧

12:24.790 --> 12:25.990
所以说如果说

12:26.390 --> 12:28.490
token他有的话

12:28.990 --> 12:29.790
我怎么办呢

12:29.890 --> 12:31.090
我就使用那个

12:31.590 --> 12:32.390
access

12:32.790 --> 12:33.490
create

12:33.790 --> 12:35.490
新建一个access实力

12:35.690 --> 12:37.190
给他创给他一些配置

12:37.290 --> 12:39.190
自动的去附带一个响应头

12:39.990 --> 12:41.090
自动附带响应头

12:41.090 --> 12:41.990
响应头的里边

12:42.390 --> 12:44.890
响应头的名称叫authorization

12:45.090 --> 12:45.990
响应头的值呢

12:45.990 --> 12:47.290
就是bearer

12:47.590 --> 12:48.390
然后呢

12:48.490 --> 12:49.990
token放进来

12:49.990 --> 12:50.690
凭借进来

12:51.290 --> 12:52.290
我们用这种模式

12:52.690 --> 12:54.490
这样子是不是得到一个x小时实力了

12:54.590 --> 12:54.990
对不对

12:55.190 --> 12:56.890
我们用这个instance

12:59.160 --> 13:00.860
默认情况下就等于x小时

13:01.260 --> 13:02.960
这个东西就默认就等于x小时

13:03.060 --> 13:04.560
但是如果说你有token的话

13:04.560 --> 13:05.860
那么我有个特殊配置

13:06.060 --> 13:08.360
通过这个create重新创建一个x小时实力

13:08.460 --> 13:10.260
每一次请求把响应头盖带过去

13:10.960 --> 13:11.560
instance

13:13.560 --> 13:13.960
对吧

13:13.960 --> 13:14.960
是不是写成这样子

13:15.460 --> 13:17.060
那么经过这一段代码

13:17.060 --> 13:19.060
是不是无论如何都得到一个instance的

13:19.160 --> 13:20.060
你没有token的话

13:20.060 --> 13:22.060
那我就就是普通的x小时实力

13:22.360 --> 13:23.660
那如果说你有token的话

13:23.660 --> 13:25.660
那么我给你按照我创建的x小时实力

13:25.660 --> 13:26.460
给你重新复制

13:26.460 --> 13:27.460
总之代码到了这

13:27.660 --> 13:28.660
是不是x小时搞定了

13:28.660 --> 13:29.060
这样子呢

13:29.060 --> 13:30.260
第一个问题是不是搞定了

13:30.660 --> 13:31.660
有token就会恢复

13:31.660 --> 13:32.560
恢复回来的响应头

13:32.560 --> 13:33.160
没有token的话

13:33.160 --> 13:33.960
就无所谓

13:34.560 --> 13:34.760
好

13:34.760 --> 13:35.760
是第一个问题

13:36.060 --> 13:37.460
那么第二个第三个呢

13:37.460 --> 13:38.660
我们肯定要加蓝接器了

13:38.660 --> 13:38.960
对吧

13:38.960 --> 13:40.560
x小时里边是有蓝接器的

13:40.560 --> 13:41.660
我们找到这个instance

13:41.660 --> 13:43.360
给它加蓝接器叫inter

13:44.660 --> 13:44.860
对

13:44.860 --> 13:46.860
就这个interceptors

13:47.660 --> 13:48.360
蓝接器

13:48.460 --> 13:48.660
哎呦

13:48.660 --> 13:49.460
这个地方忘了

13:51.590 --> 13:52.790
看一下x小时

13:53.490 --> 13:56.990
interceptors

13:59.860 --> 14:00.360
在这

14:02.560 --> 14:03.660
这里边

14:04.360 --> 14:05.060
response

14:06.160 --> 14:07.060
第二response

14:07.460 --> 14:09.360
就是如果说想用来了的话

14:09.360 --> 14:10.360
我们使用use

14:10.960 --> 14:11.460
use

14:11.660 --> 14:12.660
给它使用一个函数

14:12.660 --> 14:13.660
先处理一下

14:14.260 --> 14:15.560
用个函数先处理一下

14:16.360 --> 14:17.260
这里边有

14:17.260 --> 14:17.760
我看一下

14:18.060 --> 14:19.060
可以写两个函数

14:19.060 --> 14:21.060
第一个函数是正常情况下的处理

14:21.060 --> 14:22.760
第一个函数是有错误的情况下处理

14:22.760 --> 14:23.660
我两个都写

14:23.660 --> 14:24.660
一个是正常情况

14:25.660 --> 14:26.460
这是第一个函数

14:26.660 --> 14:27.860
第一个函数是error

14:27.960 --> 14:28.660
有错误

14:28.760 --> 14:29.160
对吧

14:29.160 --> 14:30.460
正常情况下我给你处理

14:31.060 --> 14:32.260
错误情况下我给你处理

14:32.460 --> 14:34.160
正常情况下了怎么来处理呢

14:34.160 --> 14:35.460
正常情况下我就看一下

14:35.460 --> 14:36.660
如果说有token的话

14:36.660 --> 14:37.960
我就把token保存到本地

14:37.960 --> 14:38.160
好

14:38.160 --> 14:39.160
我这里判断一下

14:40.160 --> 14:41.460
如果说有token

14:42.660 --> 14:43.560
怎么判断呢

14:43.760 --> 14:44.360
resp

14:45.160 --> 14:45.860
haters

14:45.860 --> 14:46.360
对吧

14:46.760 --> 14:47.560
然后

14:47.760 --> 14:49.060
authorization

14:49.360 --> 14:50.660
就是这个东西有值

14:51.160 --> 14:52.060
说明是是不是服务器

14:52.060 --> 14:53.260
给我响应了一个token

14:53.860 --> 14:54.660
那么我这么怎么办

14:54.660 --> 14:55.260
怎么办呢

14:55.260 --> 14:56.660
我就用local storage

14:57.160 --> 14:58.060
setitem

14:58.760 --> 15:00.060
把这个token放进去

15:00.060 --> 15:00.860
放到这个key

15:00.860 --> 15:02.260
token值呢

15:02.260 --> 15:03.060
值就是这个值

15:06.080 --> 15:07.280
就是有token我就要放进去

15:07.280 --> 15:07.680
对吧

15:08.480 --> 15:09.480
这就是第二个

15:12.930 --> 15:13.330
这样

15:14.530 --> 15:16.330
响应的时候如果说有token保存到本地

15:16.330 --> 15:18.330
刚才是发送请求的时候

15:18.530 --> 15:19.530
如果说有token

15:21.930 --> 15:22.930
附带到响应头

15:23.330 --> 15:24.530
附带到请求头

15:27.340 --> 15:28.140
请求头

15:29.140 --> 15:30.540
把逻辑好好理一下

15:30.540 --> 15:31.740
慢点写都没关系

15:31.940 --> 15:32.240
好

15:32.240 --> 15:32.840
这是这一块

15:32.840 --> 15:33.440
对吧

15:34.940 --> 15:35.340
我看一下

15:35.340 --> 15:36.240
我还要返回

15:36.440 --> 15:37.140
返回

15:37.140 --> 15:38.540
就是你要给后续的

15:38.540 --> 15:39.740
后续的处理函数使用

15:39.740 --> 15:39.940
对吧

15:39.940 --> 15:40.740
要把返回

15:41.040 --> 15:42.640
这是这个蓝阶器

15:42.940 --> 15:43.140
好

15:43.140 --> 15:45.140
如果说你响应的是一个错误

15:45.540 --> 15:46.540
响应的是个error

15:46.740 --> 15:48.140
error的格式是啥

15:48.140 --> 15:49.840
我还真不知道error的格式是啥

15:50.340 --> 15:51.740
我这里先把输出吧

15:51.940 --> 15:53.140
先输出这个error

15:53.340 --> 15:55.740
如果说响应的时候是没有权限的话

15:55.740 --> 15:57.040
它是一个什么样的格式

15:58.040 --> 15:59.040
这个error的格式

15:59.040 --> 15:59.640
因为有

16:00.440 --> 16:01.640
我给我说一下

16:03.840 --> 16:05.240
error的response

16:07.040 --> 16:09.040
如果说errorresponse

16:09.640 --> 16:12.040
就是给我响应的对象里边

16:12.240 --> 16:13.040
Status

16:14.040 --> 16:16.040
Status等于什么403

16:16.540 --> 16:17.340
表示什么呢

16:17.340 --> 16:18.640
就这种情况了

16:19.140 --> 16:19.840
响应的时候

16:19.840 --> 16:21.640
如果说响应的消息码是403

16:21.640 --> 16:22.640
就是没有权限

16:22.940 --> 16:24.040
没有权限的时候

16:24.040 --> 16:24.840
我干嘛呢

16:25.340 --> 16:26.340
没有权限的时候

16:26.640 --> 16:27.640
没有权限的时候

16:27.640 --> 16:30.440
我就要在本地删除Pokey

16:30.440 --> 16:31.540
就local storage

16:31.940 --> 16:32.840
remove item

16:32.840 --> 16:33.640
你看这个地方

16:33.640 --> 16:34.640
我们是不是封装过后了

16:34.640 --> 16:36.240
就把本地的token的一些东西

16:36.240 --> 16:37.640
就全部在这里搞定了

16:37.640 --> 16:38.640
其他地方就不用管了

16:39.140 --> 16:41.240
remove item

16:41.240 --> 16:41.940
把移除掉

16:42.640 --> 16:43.840
看这个地方要返回吗

16:44.240 --> 16:44.940
需要返回吗

16:45.640 --> 16:46.440
需要返回这个

16:46.640 --> 16:47.440
需要返回一个

16:47.640 --> 16:48.840
rejected promise

16:50.440 --> 16:51.640
error还从一方进去

16:51.640 --> 16:53.340
交给后续再进一步处理

16:53.740 --> 16:54.140
OK

16:54.140 --> 16:55.040
那么是不是写完了

16:55.840 --> 16:56.040
好

16:56.040 --> 16:56.440
因此

16:56.440 --> 16:57.740
我们后边的登录啊

16:57.740 --> 16:58.340
这些东西

16:58.340 --> 16:59.440
我们就应该使用什么

16:59.440 --> 17:00.440
使用request

17:02.750 --> 17:03.350
request

17:03.650 --> 17:04.350
使用这个

17:04.850 --> 17:05.350
好来吧

17:05.350 --> 17:06.150
我们这里是

17:06.150 --> 17:07.150
导出几个方法吧

17:07.550 --> 17:08.250
第一个方法

17:08.250 --> 17:10.050
我们导出一个登录

17:10.550 --> 17:12.050
给我一个locking id

17:12.150 --> 17:13.750
给我一个locking password的

17:14.050 --> 17:15.150
那么我来完成登录

17:15.150 --> 17:15.950
怎么登录呢

17:15.950 --> 17:16.950
我就使用request

17:16.950 --> 17:17.750
这不是个喊数吗

17:17.750 --> 17:18.750
他返回一个什么

17:18.750 --> 17:20.150
我这好像没返回啊

17:21.850 --> 17:23.750
最后还要把那个

17:23.950 --> 17:25.250
还要把个instance返回

17:25.650 --> 17:26.850
就把个实力返回

17:27.450 --> 17:27.950
好

17:28.150 --> 17:29.050
那么返回到一个

17:29.050 --> 17:29.750
就是实力

17:29.750 --> 17:29.950
对吧

17:29.950 --> 17:30.450
我们这里呢

17:30.450 --> 17:31.450
使用post

17:31.750 --> 17:32.550
去请求

17:33.250 --> 17:34.250
UIL地址呢

17:34.250 --> 17:35.050
请求什么地址呢

17:35.050 --> 17:36.250
请求API

17:36.750 --> 17:37.450
Erdermine

17:37.850 --> 17:38.450
locking

17:38.550 --> 17:38.750
对吧

17:38.750 --> 17:39.550
请求这个地址

17:40.250 --> 17:40.750
数据呢

17:40.750 --> 17:42.150
就该发送locking id

17:42.450 --> 17:43.450
locking password

17:43.450 --> 17:44.350
他该发过去

17:44.850 --> 17:45.550
这个请求

17:45.550 --> 17:46.050
然后呢

17:46.050 --> 17:47.050
await等待他

17:47.150 --> 17:48.650
然后拿到这个响应

17:49.450 --> 17:50.950
然后得到响应题

17:50.950 --> 17:51.450
对不对

17:51.450 --> 17:53.050
返回的是响应题

17:53.450 --> 17:54.250
这是locking

17:54.550 --> 17:54.750
好

17:54.750 --> 17:55.650
咱们来试一下啊

17:56.050 --> 17:57.850
找到随便找个地方试吧

17:58.150 --> 17:59.150
找到Made.js

17:59.150 --> 18:00.150
在这里试一下

18:01.150 --> 18:01.450
好

18:01.450 --> 18:01.850
来吧

18:02.650 --> 18:04.450
我们就在这呢

18:04.650 --> 18:06.450
或者是我们这样吧

18:08.150 --> 18:08.650
就在这

18:08.650 --> 18:09.150
就在这

18:09.850 --> 18:10.250
好

18:10.650 --> 18:11.350
import

18:11.850 --> 18:13.350
导入这个

18:14.250 --> 18:14.850
所有的

18:17.150 --> 18:17.650
locking

18:17.850 --> 18:18.350
so

18:18.750 --> 18:19.250
from

18:20.850 --> 18:21.550
第二鞋杠

18:21.750 --> 18:22.350
service

18:22.350 --> 18:23.250
locking service

18:23.350 --> 18:23.750
好

18:23.750 --> 18:25.250
然后找到这个logging

18:25.850 --> 18:26.450
logging

18:26.950 --> 18:27.350
耶

18:27.450 --> 18:28.350
他为什么没有呢

18:30.150 --> 18:30.850
export

18:30.850 --> 18:31.450
logging

18:32.350 --> 18:33.050
没问题啊

18:34.350 --> 18:35.150
没问题啊

18:36.050 --> 18:37.050
他为什么也有呢

18:37.150 --> 18:38.250
那我们强行写一下吧

18:38.250 --> 18:38.850
他都智能

18:39.150 --> 18:39.750
出来了啊

18:40.350 --> 18:40.850
账号

18:40.850 --> 18:41.350
账号呢

18:41.350 --> 18:42.450
就登入成功吧

18:42.450 --> 18:43.150
abc

18:43.450 --> 18:43.950
密码呢

18:43.950 --> 18:45.050
是123123

18:45.250 --> 18:45.850
z

18:46.750 --> 18:48.050
拿到响应的消息

18:48.150 --> 18:49.250
输出响应消息

18:49.650 --> 18:50.150
傲存

18:51.050 --> 18:51.350
好

18:51.350 --> 18:52.150
咱们来看一下

18:52.850 --> 18:53.350
现在呢

18:53.350 --> 18:54.650
我们到这个

18:55.150 --> 18:56.050
这个单点里边去

18:56.450 --> 18:56.650
哎

18:56.650 --> 18:57.950
要重新打开了是吧

18:58.050 --> 18:59.350
我们这里好像改了一下

18:59.650 --> 19:00.250
重新打开

19:00.650 --> 19:01.750
刚刚改来代理的

19:02.850 --> 19:03.250
run

19:03.450 --> 19:03.850
so

19:05.650 --> 19:06.450
重新打开一次

19:07.250 --> 19:09.050
我们把这个地方检查打开

19:10.550 --> 19:11.250
好刷新

19:12.650 --> 19:12.850
啊

19:12.850 --> 19:13.650
这里报错了啊

19:13.650 --> 19:14.550
他说什么呢

19:15.750 --> 19:16.450
他说啊

19:16.450 --> 19:18.650
他的connet use key

19:18.650 --> 19:19.550
呃这些错误的要做

19:19.550 --> 19:20.250
怎么去的

19:20.850 --> 19:21.350
完成啊

19:21.350 --> 19:22.350
你看他报的错

19:22.550 --> 19:23.150
他说

19:23.450 --> 19:24.850
呃不能在

19:25.150 --> 19:26.150
不能使用

19:26.150 --> 19:26.750
跑辣车

19:28.050 --> 19:28.550
辣车

19:28.650 --> 19:29.950
不能使用关键字

19:29.950 --> 19:30.550
await

19:31.050 --> 19:31.850
在一个

19:32.450 --> 19:33.050
在不在一个

19:33.050 --> 19:33.550
exit

19:33.550 --> 19:35.150
sync方法里边啊

19:35.350 --> 19:36.450
所以说你这里要把方法

19:36.450 --> 19:37.950
方法变成sync

19:39.850 --> 19:40.250
好

19:41.750 --> 19:42.250
他说什么呢

19:42.250 --> 19:43.050
他又报错了啊

19:43.050 --> 19:43.550
他说

19:43.750 --> 19:44.450
api

19:44.450 --> 19:45.150
erdame

19:45.450 --> 19:46.150
login

19:46.350 --> 19:47.450
他说这个呢

19:48.650 --> 19:49.550
不存在啊

19:49.550 --> 19:50.350
他是个404

19:50.350 --> 19:51.050
不存在

19:51.450 --> 19:52.450
为什么会不存在呢

19:52.450 --> 19:53.950
我看我服务器报报错没有

19:53.950 --> 19:55.050
服务器没有报错

19:55.550 --> 19:56.650
他说这个不存在

19:56.650 --> 19:57.650
我们再刷新一下

19:58.750 --> 19:59.850
为什么不存在呢

20:00.650 --> 20:01.150
咱们看一下

20:01.150 --> 20:02.350
我们之前有写的代理

20:03.750 --> 20:04.150
代理呢

20:04.150 --> 20:05.250
我们是请求API

20:05.250 --> 20:06.750
我就把它发送到这个

20:06.750 --> 20:08.250
localhost 5008

20:08.950 --> 20:10.150
5008不对吗

20:10.650 --> 20:11.250
看一下

20:11.650 --> 20:12.150
postman

20:12.150 --> 20:13.750
我们之前是5008端口吗

20:15.830 --> 20:16.930
管理员登录

20:18.430 --> 20:20.530
嗯是5008啊

20:20.730 --> 20:21.430
没问题啊

20:22.030 --> 20:22.630
api

20:22.630 --> 20:23.130
erdame

20:23.130 --> 20:23.630
login

20:25.630 --> 20:27.630
再再再在这边找一找啊

20:28.630 --> 20:31.230
啊login service api

20:31.230 --> 20:32.030
erdame

20:32.330 --> 20:33.030
login

20:33.030 --> 20:34.230
地址也没有问题

20:34.230 --> 20:34.730
但是呢

20:34.730 --> 20:35.530
他告诉我

20:35.730 --> 20:37.530
说这是个404

20:41.940 --> 20:43.040
我们把这个复制一下

20:43.340 --> 20:45.140
到postman里面来请求一下啊

20:45.440 --> 20:47.240
postman里去请求一下post

20:48.440 --> 20:48.940
body

20:50.540 --> 20:51.140
啊

20:51.240 --> 20:51.840
然后

20:52.340 --> 20:52.840
接上

20:52.940 --> 20:54.340
我们把这个地方复制过来

20:58.650 --> 20:58.850
啊

20:58.850 --> 21:00.350
把这个节省格式复制过来

21:00.850 --> 21:01.350
复制

21:03.420 --> 21:04.420
啊发送请求

21:06.970 --> 21:07.670
他说

21:08.970 --> 21:11.670
can not post api

21:11.670 --> 21:12.470
erdame

21:12.470 --> 21:13.170
login

21:13.370 --> 21:15.670
那我随便乱这个乱改一个例子呢

21:16.370 --> 21:17.870
他找不到

21:18.870 --> 21:19.870
404

21:20.470 --> 21:21.170
我想想啊

21:21.170 --> 21:22.570
这里为什么他找不到

21:22.570 --> 21:23.970
我们这边登录的时候

21:23.970 --> 21:25.370
也是post api

21:25.370 --> 21:25.770
erdame

21:25.770 --> 21:26.370
login

21:26.970 --> 21:27.970
但是呢找不到

21:28.170 --> 21:29.470
看上去样子呢

21:29.470 --> 21:30.370
好像是

21:31.370 --> 21:32.570
我这个地方啊

21:32.570 --> 21:34.270
will config的位置好像写错了

21:34.270 --> 21:34.670
对吧

21:34.670 --> 21:36.270
应该写到这个根部落下边

21:36.670 --> 21:36.870
啊

21:36.870 --> 21:38.270
他没有把这个应用进去

21:38.570 --> 21:38.670
啊

21:38.670 --> 21:39.070
所以说呢

21:39.070 --> 21:40.970
他导致了根本一个代理根本没有生效

21:41.070 --> 21:42.470
说现在我们再重新运行啊

21:42.470 --> 21:44.670
代理这个配置改了过后面要重新运行

21:45.270 --> 21:46.270
应该是这个问题啊

21:47.070 --> 21:47.470
啊

21:47.670 --> 21:48.670
他这里又报错了

21:48.670 --> 21:49.470
他说什么呢

21:50.270 --> 21:51.070
嗯

21:51.070 --> 21:53.870
webpack div server invalid options

21:55.370 --> 21:56.070
他说这个

21:56.570 --> 21:59.170
他说我们的这个dev server的配置是有问题的

22:00.470 --> 22:01.870
dev server配置有问题吗

22:02.570 --> 22:03.370
有啥问题

22:05.600 --> 22:06.300
再看一下

22:06.500 --> 22:07.100
看一下

22:07.400 --> 22:08.300
api啊

22:09.300 --> 22:10.200
dev server

22:10.200 --> 22:12.700
他就他其实就是webpack的dev server配置啊

22:13.700 --> 22:14.700
dev server

22:20.230 --> 22:22.930
我看一下dev server的哦明白了明白了明白了

22:23.130 --> 22:24.230
我这里写错了啊

22:24.230 --> 22:26.330
应该是在这应该是这样子proxy

22:27.130 --> 22:28.230
应该是这样子写的

22:30.820 --> 22:31.120
啊

22:31.120 --> 22:31.620
再来

22:33.660 --> 22:34.160
运行

22:35.660 --> 22:36.960
你错误一个个改呗

22:37.560 --> 22:39.660
好ok啊再重新运行出来了

22:39.960 --> 22:42.260
然后呢我们现在到控制台里边再刷新

22:42.860 --> 22:43.460
好ok

22:43.460 --> 22:44.860
那么现在是不是登入成功了

22:45.060 --> 22:46.160
然后登入成功过后呢

22:46.160 --> 22:48.460
我们再看一下我们的这个application里边啊

22:48.460 --> 22:50.260
我们的就是local storage里边有没有

22:50.360 --> 22:51.260
你看是不是有了

22:51.460 --> 22:52.460
是不是有的个token啊

22:52.860 --> 22:53.360
对吧

22:53.460 --> 22:54.260
是不是有token啊

22:54.460 --> 22:55.060
ok

22:55.260 --> 22:56.260
那边问题了对不对

22:56.460 --> 22:57.260
好没问题了啊

22:57.360 --> 22:58.360
这个locking是没问题的

22:58.360 --> 23:00.960
而且他会把token的自动加入到local storage里边

23:01.360 --> 23:02.260
好这这一部分

23:02.660 --> 23:03.660
然后接着来啊

23:04.260 --> 23:05.760
现在我们再回到这个service

23:05.760 --> 23:07.660
因为他不仅仅是有一个locking对吧

23:07.660 --> 23:08.360
还有个什么呢

23:08.360 --> 23:10.160
还有至少还有两个方法

23:10.360 --> 23:11.560
一个方法呢是

23:14.860 --> 23:17.160
一个方法呢是要那个locking out

23:18.060 --> 23:20.360
就就是登出啊助销

23:21.160 --> 23:22.460
助销方法其实很简单

23:22.460 --> 23:24.160
你就把那个token删了就行了

23:24.160 --> 23:24.360
对吧

23:24.360 --> 23:25.560
在local storage里边

23:25.860 --> 23:26.760
把那个token删了

23:27.160 --> 23:28.460
remove item

23:28.760 --> 23:29.960
token把删掉就行了

23:30.260 --> 23:30.360
啊

23:30.360 --> 23:31.860
这这是locking out

23:32.060 --> 23:33.060
没了啊没了

23:33.760 --> 23:35.160
然后呢我们再来

23:36.060 --> 23:36.660
方形

23:37.560 --> 23:38.960
再来一个就是who am I

23:38.960 --> 23:39.160
对吧

23:39.160 --> 23:40.360
我们之前说过的这个接口

23:40.660 --> 23:41.760
就是我以前已经

23:41.760 --> 23:42.860
我现在不用登录

23:42.860 --> 23:44.360
但是我已经登录过了

23:44.560 --> 23:45.560
我要看一下啊

23:45.560 --> 23:47.660
我之前登录的我的个人信息

23:48.560 --> 23:49.660
那么这个时候呢

23:49.660 --> 23:51.460
我们就可以还是去请求啊

23:53.790 --> 23:54.890
好去请求

23:55.290 --> 23:55.690
诶

23:56.390 --> 23:57.790
请求二人命

23:57.790 --> 24:00.990
who am i

24:01.290 --> 24:02.790
然后不用传任何东西

24:03.390 --> 24:04.490
不用传任何东西

24:04.590 --> 24:05.690
然后是get请求

24:05.790 --> 24:06.990
那么他就会告诉我啊

24:06.990 --> 24:07.790
我到底是谁

24:08.590 --> 24:10.490
行了啊这里变成sync

24:11.990 --> 24:12.490
好了

24:12.890 --> 24:14.290
就导致就是这么三个方法

24:14.290 --> 24:14.490
对吧

24:14.490 --> 24:15.590
locking out是很简单

24:15.590 --> 24:16.790
我都不用去测试的

24:16.990 --> 24:17.690
那么who am i

24:17.690 --> 24:18.790
我们去测试一下

24:19.190 --> 24:19.790
啊这边呢

24:19.790 --> 24:21.090
我们把locking助销掉

24:21.590 --> 24:22.790
然后呢locking serve

24:23.590 --> 24:24.890
who am i

24:25.390 --> 24:26.190
去请求一下啊

24:26.190 --> 24:27.090
我看一下我是谁

24:27.090 --> 24:27.990
我之前已经登录过了

24:27.990 --> 24:28.990
我不用再登录了

24:29.190 --> 24:29.690
wis

24:30.090 --> 24:30.990
得到这个结果

24:31.890 --> 24:32.790
看一下控制台

24:32.990 --> 24:33.490
刷新

24:34.090 --> 24:35.290
你看是不是老老了啊

24:35.290 --> 24:36.690
我以前登录的结果是这个

24:37.090 --> 24:37.590
好了

24:37.590 --> 24:38.990
这东西是我们怎么来的

24:38.990 --> 24:40.390
是我们用token去换的

24:40.390 --> 24:40.590
对吧

24:40.590 --> 24:41.790
你看我们请求who am i

24:41.990 --> 24:43.390
是不是给他加上加上了一个

24:43.390 --> 24:44.390
这个就是这个东西

24:44.890 --> 24:45.590
or sorry

24:45.590 --> 24:47.190
request的时候给他加上了

24:47.190 --> 24:47.990
谁加上的

24:48.290 --> 24:48.890
谁加的

24:49.590 --> 24:50.490
再看过来啊

24:50.490 --> 24:51.090
理清楚啊

24:51.090 --> 24:51.690
是谁加的

24:51.690 --> 24:53.890
是我们这个request这个封装的模块

24:53.990 --> 24:55.790
他发现我们有token是不是给他加上了

24:55.990 --> 24:56.490
对不对

24:56.690 --> 24:58.490
那么有没有有没有情况

24:58.490 --> 24:59.290
一种一种情况

24:59.290 --> 25:00.490
就token被改动过了

25:00.490 --> 25:01.390
或者是已经过期了

25:01.390 --> 25:02.190
有没有这种情况呢

25:02.190 --> 25:02.790
当然有

25:02.890 --> 25:03.890
比方说我们在这里呢

25:03.890 --> 25:04.790
手动的把这个token

25:04.790 --> 25:05.790
随便改一个位置啊

25:05.790 --> 25:06.290
随便改一个

25:06.290 --> 25:07.290
肯定是创改过了

25:07.490 --> 25:07.990
那么现在呢

25:07.990 --> 25:08.790
我们再刷新

25:09.190 --> 25:10.390
你看他是不是403了

25:10.390 --> 25:10.890
告诉你

25:11.390 --> 25:12.790
是403 for beaten

25:12.890 --> 25:13.290
然后呢

25:13.290 --> 25:14.890
由于我们这个模块的存在

25:15.090 --> 25:16.490
他只要响应403

25:16.490 --> 25:17.590
我就把个coken移出来

25:17.590 --> 25:18.590
那么我们现在看一下

25:18.590 --> 25:19.490
这个token还有没有

25:19.490 --> 25:20.090
是不是没了

25:20.190 --> 25:21.590
好这些逻辑是不是都完成了

25:21.690 --> 25:22.190
对不对

25:22.290 --> 25:23.290
好那么如果说

25:23.290 --> 25:24.190
你要针对这个

25:24.190 --> 25:25.790
就是说在这里后续处理啊

25:25.790 --> 25:27.090
比方说我们还可以用开启

25:27.090 --> 25:27.590
对不对

25:27.790 --> 25:28.790
哎这个error

25:29.190 --> 25:30.190
我们输出error

25:30.490 --> 25:32.390
当中如果说我们这里得不到who am i

25:32.390 --> 25:33.690
就是那么说明我们的token

25:33.690 --> 25:34.690
肯定是有问题的

25:34.890 --> 25:35.690
啊你看一下

25:35.790 --> 25:36.690
我们用dr吗

25:38.820 --> 25:39.320
啊你看

25:39.320 --> 25:40.420
是不是得到一个error对象

25:40.420 --> 25:40.720
对吧

25:40.720 --> 25:41.920
response在这里边啊

25:41.920 --> 25:42.820
data在这里边

25:43.020 --> 25:44.020
对不对啊

25:44.020 --> 25:45.020
headers在这里边

25:45.120 --> 25:46.120
等等等等啊

25:46.120 --> 25:46.620
ok

25:46.720 --> 25:48.620
那么这个这几个接口什么没问题了

25:49.320 --> 25:51.020
我这里想了一个点啊

25:51.020 --> 25:52.420
我们就顺便把它弄了

25:52.520 --> 25:53.220
就是一会呢

25:53.220 --> 25:53.920
我们要测试

25:53.920 --> 25:55.220
因为我们这个本地啊

25:55.220 --> 25:56.920
他传输速度非常非常快啊

25:56.920 --> 25:58.920
基本上是没有感觉有延迟的

25:58.920 --> 26:00.320
实际上这是一个远程请求

26:00.320 --> 26:01.720
他肯定是有延迟的啊

26:01.820 --> 26:03.220
为了模拟这个延迟呢

26:03.220 --> 26:03.820
我这里呢

26:03.820 --> 26:05.120
简单的写个代码

26:05.520 --> 26:07.020
写一个方形

26:07.720 --> 26:08.420
delay啊

26:08.420 --> 26:10.320
延迟延迟一段时间

26:10.420 --> 26:11.720
这个反而回一个promise

26:12.220 --> 26:13.220
有一个promise

26:13.620 --> 26:14.220
result啊

26:14.220 --> 26:15.720
这个东西我以前好像也经常写

26:15.720 --> 26:16.120
对吧

26:16.520 --> 26:17.320
set timeout

26:17.620 --> 26:19.320
然后说我们这里写个两秒钟

26:19.520 --> 26:20.720
两秒钟后result

26:22.020 --> 26:23.320
写上这么一个函数啊

26:23.320 --> 26:24.220
真用dialeration

26:26.120 --> 26:27.020
为了以后呢

26:27.020 --> 26:29.220
我们模拟他有一个网络延迟啊

26:29.220 --> 26:29.720
登录啊

26:29.720 --> 26:31.520
无论是登录还是注销币没有了

26:31.520 --> 26:33.020
啊注销直接remove了

26:33.420 --> 26:34.220
然后互卖卖

26:34.220 --> 26:35.420
是不是这位网络延迟

26:35.420 --> 26:35.620
ok

26:35.620 --> 26:36.820
我们再模拟这个东西啊

26:36.820 --> 26:38.020
然后我们在位置

26:38.320 --> 26:38.720
定内

26:39.420 --> 26:40.020
两秒钟

26:40.620 --> 26:41.620
啊这边也是啊

26:41.920 --> 26:42.520
a weight

26:42.720 --> 26:43.220
定内

26:44.720 --> 26:45.320
两秒钟

26:46.120 --> 26:46.720
好ok

26:46.720 --> 26:47.820
那么现在我们来看一下啊

26:47.820 --> 26:49.420
应该就有一个延迟出现了啊

26:49.520 --> 26:50.620
两秒钟过后

26:52.980 --> 26:53.280
你啊

26:53.280 --> 26:54.980
我把是不是全部注释掉了

26:55.680 --> 26:56.980
还是我把全部注释掉

26:56.980 --> 26:57.880
我还是在撒等

26:58.380 --> 26:58.780
在

27:01.270 --> 27:01.570
啊

27:01.570 --> 27:02.770
你看两秒钟之后啊

27:02.770 --> 27:03.370
出了问题

27:03.370 --> 27:03.770
对吧

27:03.870 --> 27:04.170
ok

27:04.170 --> 27:04.670
那么现在呢

27:04.670 --> 27:05.370
我们这里呢

27:05.370 --> 27:06.270
基本上就写完了

27:07.070 --> 27:08.270
好我做一个接口

27:08.270 --> 27:08.970
当然接口的话

27:08.970 --> 27:09.570
还有很多啊

27:09.570 --> 27:10.770
比方说学生接口啊

27:10.770 --> 27:12.370
可能班级接口啊

27:12.370 --> 27:13.170
书籍接口的

27:13.170 --> 27:14.970
你们自己去要有兴趣的话

27:14.970 --> 27:15.570
自己去玩啊

27:15.570 --> 27:16.370
我们不用了

27:17.170 --> 27:18.570
把这个接口写完就完事了

27:19.470 --> 27:19.870
好

27:19.870 --> 27:21.970
然后我们这一块接下来怎么开发呢

27:21.970 --> 27:23.370
接下来我在

27:24.370 --> 27:25.170
开发这个吧

27:25.270 --> 27:25.970
开发仓库啊

27:25.970 --> 27:27.670
这是我个人比较喜欢的开发顺序啊

27:27.670 --> 27:29.170
我现在我会先搞定数据

27:29.170 --> 27:30.370
然后呢再去搞定界面

27:30.770 --> 27:32.170
我们来开发仓库啊

27:32.670 --> 27:33.370
仓库的话

27:33.370 --> 27:34.470
我决定分模块吧

27:34.470 --> 27:36.170
因为真实的项目里边

27:36.170 --> 27:37.370
肯定要分很多的就是

27:37.370 --> 27:38.570
vac的模块的

27:38.670 --> 27:39.670
我们分个模块吧

27:40.170 --> 27:41.970
给大家取一个叫login user

27:42.370 --> 27:43.170
叫json

27:43.870 --> 27:45.570
我们这里来导出export

27:45.570 --> 27:46.770
defort导出

27:47.470 --> 27:48.670
name is best

27:49.670 --> 27:50.070
我写

27:51.070 --> 27:52.070
不是直播的

27:52.070 --> 27:52.870
我写错了

27:52.870 --> 27:54.170
也没人提示我

27:54.170 --> 27:54.970
那就这样吧

27:54.970 --> 27:55.770
我说一把

27:56.370 --> 27:57.370
那么这个模块里边

27:57.370 --> 27:59.170
肯定要用到这个still server对不对

28:01.370 --> 28:06.470
still serve from service

28:06.970 --> 28:07.970
login service

28:08.470 --> 28:09.470
叫login server

28:10.770 --> 28:11.270
ok

28:11.770 --> 28:12.470
好那么这里呢

28:12.470 --> 28:13.370
有要有什么呢

28:13.370 --> 28:15.770
multation有这个s吗

28:17.070 --> 28:17.770
看一下吧

28:18.870 --> 28:19.670
vx

28:20.070 --> 28:20.770
multation

28:21.770 --> 28:22.570
有这个s

28:22.570 --> 28:23.370
multations

28:24.570 --> 28:25.270
还有什么呢

28:25.270 --> 28:26.770
还有stats对吧

28:27.070 --> 28:27.970
还有什么呢

28:28.270 --> 28:29.370
还有那个action

28:31.170 --> 28:33.070
action应该也会用同样的

28:33.070 --> 28:34.470
mini actions

28:35.270 --> 28:35.870
shines

28:36.970 --> 28:37.270
ok

28:37.270 --> 28:37.970
那就行了

28:37.970 --> 28:38.970
不把他写完啊

28:39.270 --> 28:40.270
stats里边有什么呢

28:40.270 --> 28:42.070
有一个就是当前登录的用户

28:42.070 --> 28:42.370
对吧

28:42.370 --> 28:43.870
用当前登录的是谁

28:43.970 --> 28:44.470
那么这里呢

28:44.470 --> 28:45.470
我给用个data吧

28:45.570 --> 28:46.470
叫稍微now

28:46.470 --> 28:47.470
一开始没有登录嘛

28:47.470 --> 28:47.870
对不对

28:47.870 --> 28:48.770
一开始没有登录

28:49.170 --> 28:49.770
然后呢

28:49.770 --> 28:50.270
还有一个什么

28:50.270 --> 28:50.870
is loading

28:50.870 --> 28:52.270
是否正在登录中

28:52.770 --> 28:54.270
一开始为force

28:54.470 --> 28:55.070
force

28:55.070 --> 28:56.070
倒是没有登录中

28:56.470 --> 28:56.970
好

28:57.070 --> 28:57.770
然后呢

28:57.770 --> 28:58.570
multation里边呢

28:58.570 --> 29:00.370
就是他有数据哪些改动呢

29:00.470 --> 29:01.970
一个是stats data

29:02.670 --> 29:02.870
对吧

29:02.870 --> 29:03.670
stats给我

29:03.870 --> 29:05.270
啊这个panel的

29:05.270 --> 29:06.470
panel的就是个data

29:06.570 --> 29:07.770
我们这里有stats

29:08.070 --> 29:10.570
data等于panel的

29:11.070 --> 29:11.970
应该是这样写的啊

29:11.970 --> 29:13.270
这个写我还是记得住的

29:13.470 --> 29:13.770
好

29:13.770 --> 29:16.170
stats is loading

29:16.870 --> 29:18.370
是否正在登录中

29:18.370 --> 29:19.270
stats给我

29:19.470 --> 29:20.270
然后呢

29:20.370 --> 29:20.870
panel的

29:20.870 --> 29:22.070
panel的就是is loading啊

29:22.070 --> 29:23.170
true or false

29:23.470 --> 29:24.070
stats

29:25.670 --> 29:26.670
is loading

29:27.270 --> 29:28.370
stats为panel的

29:29.370 --> 29:29.770
行了

29:29.770 --> 29:30.970
马特迅是不是写完了

29:31.570 --> 29:32.070
应该没了

29:32.070 --> 29:32.370
对吧

29:32.370 --> 29:32.970
应该没了

29:33.070 --> 29:33.970
好 actions

29:35.070 --> 29:36.270
副作用操作啊

29:36.270 --> 29:36.970
副作用操作呢

29:36.970 --> 29:37.970
一就三个啊

29:37.970 --> 29:38.770
一个是login

29:39.170 --> 29:39.670
登录

29:40.270 --> 29:41.570
登录是不是一个副作用操作

29:41.570 --> 29:42.870
那么这这里的仓库里边

29:42.870 --> 29:43.570
管理的是什么呢

29:43.570 --> 29:45.170
管理的就是仓库里边的数据啊

29:45.770 --> 29:46.470
登录的时候

29:46.470 --> 29:47.270
你给我什么呢

29:47.270 --> 29:48.270
首先是个context

29:49.570 --> 29:50.070
然后呢

29:50.070 --> 29:50.870
是那个

29:53.070 --> 29:53.870
给我一个panel的

29:53.870 --> 29:55.070
panel给我传个对象吧

29:55.270 --> 29:56.470
我在这里解构出来

29:56.470 --> 29:57.370
解构login id

29:57.370 --> 29:58.170
和login password的

29:58.170 --> 29:58.970
把解构出来

29:59.670 --> 30:01.670
context里边我们也用不到其他东西

30:01.670 --> 30:02.570
我就用commet

30:03.170 --> 30:03.570
行了

30:04.170 --> 30:05.270
我们登录的时候呢

30:05.270 --> 30:06.370
这是一个异步方法啊

30:08.700 --> 30:09.100
首先呢

30:09.100 --> 30:10.000
这个登录的时候呢

30:10.000 --> 30:10.900
我要把这个

30:11.400 --> 30:12.400
一声loading啊

30:12.800 --> 30:13.600
一声loading

30:13.900 --> 30:14.800
设置为

30:15.400 --> 30:16.800
表示正在登录中

30:17.100 --> 30:18.000
我要做这么一件事

30:18.500 --> 30:19.000
然后呢

30:19.000 --> 30:22.000
再去调用这个login service里边的login

30:22.000 --> 30:22.400
方法

30:22.700 --> 30:23.700
就调用这个方法

30:23.800 --> 30:25.200
把login id传进去

30:26.000 --> 30:27.500
把login password传进去

30:27.600 --> 30:28.500
然后等待他

30:28.700 --> 30:29.200
对不对

30:29.400 --> 30:30.500
等待他

30:31.100 --> 30:31.200
好

30:31.200 --> 30:32.200
等待了过后呢

30:32.200 --> 30:34.100
他会给我一个服务器的响应结果

30:34.800 --> 30:35.200
是吧

30:35.200 --> 30:36.800
所以给我一个服务器的响应结果

30:36.900 --> 30:39.200
那么有可能成功有可能失败

30:40.200 --> 30:40.700
是吧

30:40.700 --> 30:42.100
所以有可能成功有可能失败

30:42.400 --> 30:43.300
失败的时候呢

30:43.300 --> 30:44.700
他服务器我们之前怎么做的

30:44.700 --> 30:45.700
是返回一个lau

30:45.800 --> 30:46.300
对不对

30:46.400 --> 30:47.800
就是data返回lau

30:48.000 --> 30:50.300
那么甭管服务器data返回的是lau

30:51.100 --> 30:52.600
还是说data返回的

30:52.700 --> 30:53.500
就是一个

30:53.900 --> 30:54.900
真正的用户啊

30:55.000 --> 30:55.900
我们来看一下吧

30:56.400 --> 30:57.200
Media解构

30:57.400 --> 30:57.800
这个

30:58.100 --> 30:58.600
加上

30:59.700 --> 31:00.500
登录成功

31:00.500 --> 31:01.300
我来看一下

31:03.400 --> 31:04.800
登录成功

31:06.000 --> 31:07.100
这是我们登录成功的情况

31:07.100 --> 31:07.400
对吧

31:07.400 --> 31:08.200
登录失败

31:11.400 --> 31:12.500
服务器给我返回的是什么

31:12.800 --> 31:14.500
返回的是不是data就等于lau

31:14.500 --> 31:15.000
对吧

31:15.100 --> 31:16.300
无论是data等于lau

31:16.300 --> 31:18.300
还是data等于一个有效的登录对象

31:18.500 --> 31:19.200
无所谓的

31:19.300 --> 31:20.300
我们这里要干嘛呢

31:20.300 --> 31:22.000
我们就是把个data保存到哪

31:22.100 --> 31:23.100
保存到这个就是

31:23.200 --> 31:23.900
data里面

31:24.100 --> 31:24.500
对吧

31:24.700 --> 31:24.800
好

31:24.800 --> 31:26.100
所以说我们这里用commit

31:26.900 --> 31:28.600
然后setdata

31:29.300 --> 31:30.900
把这个risk.data传进去

31:31.300 --> 31:31.800
然后呢

31:31.800 --> 31:33.800
我们再把这个esloading设为force

31:35.500 --> 31:35.900
force

31:37.100 --> 31:37.700
写出来了

31:38.700 --> 31:39.200
OK

31:39.400 --> 31:40.200
登录失了完了

31:40.500 --> 31:40.900
然后呢

31:40.900 --> 31:41.400
登出

31:41.700 --> 31:42.300
就注销

31:42.500 --> 31:43.300
locking out

31:46.930 --> 31:47.530
commit

31:49.330 --> 31:50.230
不需要传任何参数

31:52.330 --> 31:53.230
注销的话

31:53.230 --> 31:55.030
我们就直接设置

31:55.130 --> 31:55.730
首先

31:56.030 --> 31:56.530
commit

31:57.330 --> 31:58.130
setdata

31:58.430 --> 31:59.630
把我们的登录用户

31:59.630 --> 32:00.430
是不是设为lau

32:00.530 --> 32:00.730
对吧

32:00.730 --> 32:01.630
不管你是啥

32:01.730 --> 32:02.330
反正注销了

32:02.330 --> 32:04.330
我肯定要把我的数据设为lau

32:04.630 --> 32:05.130
然后呢

32:05.130 --> 32:06.630
再调用locking some

32:07.430 --> 32:08.730
就做一些副作用的操作

32:08.930 --> 32:09.630
locking out

32:10.430 --> 32:10.730
对吧

32:10.830 --> 32:12.230
相当于是把一个本地

32:12.530 --> 32:14.030
lock storage 改清除掉

32:14.030 --> 32:15.030
一个清除lock storage

32:15.030 --> 32:15.830
一个存清除

32:15.830 --> 32:16.730
内存里面

32:16.730 --> 32:17.730
仓库里面对象

32:18.430 --> 32:19.130
登出

32:20.030 --> 32:20.930
还有一个是什么呢

32:20.930 --> 32:22.230
当然这个地方没有用

32:22.230 --> 32:23.630
没有必要用那个sync了

32:24.230 --> 32:24.830
还有一个是什么呢

32:24.830 --> 32:25.830
还有一个是那个

32:26.430 --> 32:27.030
我是谁

32:28.730 --> 32:29.230
who

32:30.030 --> 32:30.530
and

32:30.830 --> 32:31.230
I

32:32.630 --> 32:33.230
我是谁

32:34.130 --> 32:35.930
不需要传任何参数

32:36.030 --> 32:37.230
我这里就直接来了

32:37.930 --> 32:38.930
就是这一部分

32:40.730 --> 32:41.930
首先把设为true

32:42.030 --> 32:44.030
然后呢去调用什么who am I

32:44.230 --> 32:44.730
对不对

32:45.830 --> 32:46.830
不需要传任何参数

32:49.040 --> 32:50.040
不需要传任何参数

32:50.440 --> 32:51.740
然后拿到这个响应结果

32:51.740 --> 32:53.540
那么这个地方是不是有可能会爆错

32:54.540 --> 32:55.940
又不是有可能会爆错

32:55.940 --> 32:56.640
比方403

32:56.640 --> 32:56.940
对吧

32:56.940 --> 32:57.640
这个exus

32:57.640 --> 32:59.040
他的他的这种做法就是

32:59.540 --> 33:01.540
除了两二开头的那种消息嘛

33:01.540 --> 33:02.340
其他都是

33:02.740 --> 33:03.740
其他都是爆错

33:03.740 --> 33:05.240
就是相当于是reject

33:05.640 --> 33:07.040
那么像这种情况怎么办呢

33:07.040 --> 33:07.640
我们就

33:07.740 --> 33:08.540
开启呗

33:09.640 --> 33:11.440
如果说你这个地方

33:11.940 --> 33:12.840
爆错了啊

33:12.840 --> 33:13.940
如果说你没有爆错

33:14.040 --> 33:14.740
没有爆错的话

33:14.740 --> 33:15.240
我就

33:15.840 --> 33:16.540
把他设置到啊

33:16.540 --> 33:17.740
就是我以前登录过了

33:17.740 --> 33:18.740
我这一次补登录了

33:19.540 --> 33:20.140
who am I

33:20.140 --> 33:21.540
现在我以前登录过的

33:21.540 --> 33:22.540
现在补不登录了

33:22.540 --> 33:23.040
对吧

33:23.040 --> 33:23.640
那么现在呢

33:23.640 --> 33:24.440
我要把那个登录

33:24.440 --> 33:26.240
以前登录的就是用户信息

33:26.240 --> 33:27.140
通过投坑去换

33:27.240 --> 33:27.840
换到了过后

33:27.840 --> 33:29.540
我们把用户信息保存到仓库里边

33:29.740 --> 33:30.240
对不对

33:30.440 --> 33:31.840
如果说爆了错

33:32.740 --> 33:34.040
爆了错说明说明啥呢

33:34.140 --> 33:36.240
是不是说明你这个就是登录

33:36.440 --> 33:37.240
就是没这个

33:37.440 --> 33:38.340
投坑已经失效了

33:38.340 --> 33:39.640
或者是你根本就没有投坑

33:39.940 --> 33:40.340
对吧

33:41.640 --> 33:42.540
那么这些data

33:43.340 --> 33:44.740
这是什么呢

33:44.740 --> 33:45.540
设置为大

33:46.040 --> 33:46.540
对不对

33:46.740 --> 33:47.440
设置为大

33:48.440 --> 33:49.340
就完事了啊

33:49.540 --> 33:50.040
然后最后呢

33:50.040 --> 33:51.340
把椅子揉定作为force

33:51.640 --> 33:51.740
好

33:51.740 --> 33:54.140
这就是仓库里边的提供了这么三种方法

33:54.940 --> 33:55.340
对吧

33:56.140 --> 33:57.340
仓库里边是不是写完了

33:58.340 --> 33:58.540
好

33:58.540 --> 33:59.340
那么仓库写完了

33:59.340 --> 34:01.340
我们以后直接在开发中测试吧

34:02.340 --> 34:03.440
仓库写完了过后呢

34:03.440 --> 34:06.240
我们看一下我们的系统一开始的时候

34:06.740 --> 34:08.040
实际上就应该做一件事

34:08.340 --> 34:09.840
做一件什么事了

34:10.840 --> 34:13.940
就是去用投坑去换我的身份

34:14.540 --> 34:15.040
你想啊

34:15.040 --> 34:16.540
你进入一个网站

34:16.740 --> 34:18.540
是不是这个网站首先肯定要判断你

34:18.540 --> 34:19.340
有没有登录过

34:19.440 --> 34:21.740
你当前这个用户的身份信息

34:21.740 --> 34:22.140
对吧

34:22.340 --> 34:23.140
肯定要做这件事

34:23.140 --> 34:24.740
因为这个身份信息到处都要用

34:25.140 --> 34:25.540
因此呢

34:25.540 --> 34:26.740
我们注意开始的时候

34:27.240 --> 34:29.340
我肯定要用这个仓库去dispatch

34:30.140 --> 34:30.740
一个什么呢

34:30.940 --> 34:32.140
就是locking user

34:32.640 --> 34:33.440
下面的什么呢

34:33.440 --> 34:34.540
下面的那个就是

34:36.140 --> 34:36.740
呼

34:37.440 --> 34:37.940
安

34:38.440 --> 34:38.840
爱

34:39.140 --> 34:39.540
对不对

34:39.840 --> 34:41.640
我们肯定要用投坑去在

34:42.440 --> 34:44.140
在网站启动后

34:45.040 --> 34:47.440
就要用啊

34:47.740 --> 34:48.940
应该说这网站

34:49.740 --> 34:50.740
被访问时

34:53.740 --> 34:57.040
需要用投坑去换取

34:57.940 --> 34:59.840
换取用户的身份

34:59.940 --> 35:01.040
甭管换不换得到吗

35:01.240 --> 35:02.840
总之用我要去尝试了换一下

35:03.140 --> 35:04.340
换取这个用户的身份

35:04.840 --> 35:05.140
好

35:05.140 --> 35:05.540
来吧

35:05.640 --> 35:06.340
我们来看一下

35:07.140 --> 35:07.940
刷新

35:08.940 --> 35:09.340
耶

35:09.440 --> 35:11.340
他说unlown action type

35:11.940 --> 35:13.440
locking user who am i

35:13.940 --> 35:14.840
他这个

35:15.740 --> 35:16.340
不存在

35:17.140 --> 35:18.040
为啥不存在啊

35:19.240 --> 35:20.540
我写错了吗

35:21.840 --> 35:22.140
哦

35:22.140 --> 35:23.440
我这个模块没加进来啊

35:23.440 --> 35:24.640
我这个模块没加进来

35:25.140 --> 35:26.340
这里 import

35:28.040 --> 35:30.140
locking user from

35:31.240 --> 35:31.940
locking user

35:34.810 --> 35:35.210
好

35:35.310 --> 35:35.710
再来

35:36.610 --> 35:37.410
他说

35:39.010 --> 35:39.510
又来了啊

35:39.510 --> 35:40.010
他说

35:40.410 --> 35:41.910
这个模块都存在了啊

35:41.910 --> 35:43.410
他说is loading

35:43.810 --> 35:44.710
不存在啊

35:44.710 --> 35:45.210
is loading

35:45.210 --> 35:46.210
估计又写错了

35:47.110 --> 35:48.610
is loading

35:50.010 --> 35:51.210
set is loading

35:51.210 --> 35:51.610
是吧

35:54.210 --> 35:55.210
set is loading

35:55.710 --> 35:56.910
我估计你们看到的

35:57.210 --> 35:58.210
很着急是吧

35:59.210 --> 35:59.510
好

35:59.510 --> 35:59.910
然后呢

35:59.910 --> 36:01.110
我们现在到这个无誘啊

36:01.110 --> 36:02.610
我们在这个无誘里面去看一下

36:03.610 --> 36:04.410
这里有一个

36:04.810 --> 36:07.410
你看我们就不就出发这几个吗

36:07.410 --> 36:08.410
sets is loading

36:08.410 --> 36:09.410
把设为去

36:09.410 --> 36:10.110
然后他后来

36:10.110 --> 36:11.010
他就把设为force

36:11.010 --> 36:12.810
中间他把设为设为一个objects

36:12.810 --> 36:13.110
对吧

36:13.110 --> 36:14.010
设作用户

36:14.010 --> 36:14.410
对不对

36:14.410 --> 36:15.010
我们用token

36:15.010 --> 36:16.510
现在我不需要手动登录了

36:16.510 --> 36:18.210
我用token去换取这个用户

36:18.210 --> 36:19.810
那如果说你没有这个token呢

36:20.910 --> 36:21.910
我要token上了

36:22.610 --> 36:23.510
没有这个token

36:23.910 --> 36:25.310
不要说给他

36:25.710 --> 36:26.410
删除了吧

36:27.010 --> 36:27.310
啊

36:27.310 --> 36:28.710
现在再再来看啊

36:29.710 --> 36:30.410
再刷新

36:32.210 --> 36:33.210
sets is loading

36:33.210 --> 36:33.610
然后呢

36:33.610 --> 36:34.210
sets data

36:34.210 --> 36:34.910
是不是nao

36:34.910 --> 36:35.410
对吧

36:35.410 --> 36:36.610
那么我们这个

36:36.610 --> 36:37.310
仓库里面

36:37.310 --> 36:38.510
那个老鼎有点什么大哦

36:38.910 --> 36:39.410
对不对

36:39.410 --> 36:40.210
就什么回事

36:40.210 --> 36:41.110
啊用token去换

36:41.910 --> 36:42.310
好了

36:42.310 --> 36:44.010
那么这个部分写完了过后了

36:44.010 --> 36:44.710
我们接下来呢

36:44.710 --> 36:47.310
来看一下我们的页面

36:48.410 --> 36:48.810
现在呢

36:48.810 --> 36:49.910
我们的页面呢

36:49.910 --> 36:50.610
首先呢

36:50.610 --> 36:51.610
就是那个

36:52.210 --> 36:52.810
这个app

36:53.110 --> 36:53.910
就这个页面

36:54.010 --> 36:55.110
我这里就随便做了啊

36:55.110 --> 36:57.010
就给大家一个启示就行了

36:57.310 --> 36:57.910
有一个home

36:57.910 --> 36:58.710
一个arbalt

36:58.710 --> 36:59.710
arbalt页面呢

36:59.710 --> 37:00.510
我不要了

37:00.510 --> 37:02.510
现在我们开始来开发这个页面了啊

37:02.810 --> 37:04.110
arbalt的东西我不要了

37:04.110 --> 37:06.010
把改一下改成啥呢

37:06.610 --> 37:07.410
改成这个吧

37:07.910 --> 37:08.810
protect

37:09.910 --> 37:10.510
表示呢

37:10.510 --> 37:12.210
这是一个受保护的页面

37:13.010 --> 37:16.410
这是一个受保护的页面

37:16.410 --> 37:19.510
必须要登录后才能访问

37:19.510 --> 37:21.110
不要说我们来模拟这个场景啊

37:22.010 --> 37:22.210
好

37:22.210 --> 37:23.010
这是这个页面

37:23.810 --> 37:24.910
home这个页面呢

37:24.910 --> 37:25.710
他用到一个什么

37:25.710 --> 37:27.010
用到一个这个玩意儿

37:27.010 --> 37:27.710
这个玩意儿

37:27.710 --> 37:28.810
要这个玩意儿干嘛的

37:28.810 --> 37:29.310
我不要了

37:30.210 --> 37:31.210
嗯不要他了

37:32.310 --> 37:33.110
啊不要他了

37:34.310 --> 37:35.910
啊就就一个图片就行了啊

37:36.110 --> 37:37.510
我再写个写个文字吧

37:38.410 --> 37:40.910
呃这这是首页

37:41.310 --> 37:43.610
所有人都能访问

37:44.210 --> 37:46.210
啊就是能够匿名访问

37:46.910 --> 37:48.110
能匿名访问

37:49.310 --> 37:50.610
然后呢肯定还有一个登录啊

37:50.610 --> 37:52.410
我把这个东西改了是不是要改一下唱

37:52.510 --> 37:53.410
改一下这个rotor

37:53.410 --> 37:54.310
改一下路由啊

37:54.710 --> 37:55.210
home

37:55.410 --> 37:56.210
而报社不存在了

37:56.210 --> 37:56.510
对吧

37:56.510 --> 37:57.110
protect

37:57.910 --> 37:58.310
然后呢

37:58.310 --> 37:59.310
name那么不要了

37:59.310 --> 38:00.110
要上name

38:01.710 --> 38:04.010
好这里是啊这里是动态家在的啊

38:04.010 --> 38:05.510
动态家在的我就把前面那个

38:05.610 --> 38:06.710
前面那个是设置这个

38:06.710 --> 38:09.110
vpeg的帮助名称啊创可名称

38:10.810 --> 38:13.410
好然后其他的没有什么感觉

38:13.410 --> 38:15.110
然后呢我们这个超链接改一下

38:15.210 --> 38:15.810
这是home

38:15.810 --> 38:17.510
这是protect

38:19.420 --> 38:20.320
这是protect

38:21.120 --> 38:22.320
好保存看一下

38:22.620 --> 38:23.120
呀

38:24.020 --> 38:24.520
说说

38:25.420 --> 38:26.220
又来找呗

38:28.020 --> 38:28.520
伤心

38:30.420 --> 38:31.020
嗯

38:31.620 --> 38:32.920
403 for betam

38:34.420 --> 38:35.520
403 for betam

38:36.320 --> 38:37.220
啊这个没问题啊

38:37.220 --> 38:37.620
这个没问题

38:37.620 --> 38:39.520
他本来就本来就是换不到吧

38:39.520 --> 38:39.720
对吧

38:39.720 --> 38:40.620
我没有头肯啊

38:40.620 --> 38:41.620
本来就是换不到的

38:41.620 --> 38:42.420
真正常的啊

38:43.020 --> 38:43.620
他什么呢

38:44.320 --> 38:45.820
他说 about.vue

38:45.820 --> 38:47.220
啊这个地方有写错

38:47.220 --> 38:48.320
这个地方还没改过来

38:49.220 --> 38:50.820
这个地方是protect

38:51.220 --> 38:51.820
vue

38:52.520 --> 38:53.020
ok

38:53.220 --> 38:54.620
这首页能匿名访问啊

38:54.620 --> 38:55.520
然后protect

38:56.120 --> 38:57.320
必须要登录之后才能访问

38:57.320 --> 38:58.020
现在没有登录

38:58.020 --> 38:58.620
他也能访问

38:58.620 --> 38:59.020
对吧

38:59.120 --> 39:00.120
还有一个登录页

39:00.820 --> 39:01.920
我把登录页做了

39:02.320 --> 39:03.420
登录页的话

39:03.420 --> 39:04.920
我在这里呢新建个文件

39:05.120 --> 39:06.320
locking叫vue

39:06.620 --> 39:07.620
新建个文件啊

39:08.320 --> 39:09.520
然后呢

39:10.520 --> 39:10.920
vue

39:12.320 --> 39:14.520
登录页我就简单一点吧

39:16.520 --> 39:17.720
一个是账号

39:22.070 --> 39:22.670
账号

39:23.070 --> 39:24.470
账号了一个闻闷框

39:25.670 --> 39:26.370
vmode

39:26.670 --> 39:28.070
给他按键连接到一个

39:28.770 --> 39:30.370
一个locking id

39:30.370 --> 39:31.170
我们一会儿写

39:31.670 --> 39:32.870
然后呢是密码

39:34.170 --> 39:34.770
密码

39:35.470 --> 39:36.270
input

39:36.870 --> 39:38.070
然后呢vmode

39:38.370 --> 39:40.370
给他连接到login password

39:41.070 --> 39:41.270
好

39:41.270 --> 39:42.870
然后呢下面一个按钮

39:42.970 --> 39:43.470
button

39:44.070 --> 39:44.570
啊

39:44.570 --> 39:45.070
登录

39:46.370 --> 39:47.270
来做这个实践

39:47.370 --> 39:47.870
click

39:48.870 --> 39:50.170
handle click

39:50.370 --> 39:50.770
行了

39:50.870 --> 39:52.570
我们在这边来给他写上数据

39:52.970 --> 39:53.770
数据呢

39:53.770 --> 39:55.770
我们表达数据一个是login id

39:57.070 --> 39:58.170
login id

39:58.470 --> 39:59.270
控制不出来

39:59.470 --> 40:00.570
login password的

40:00.670 --> 40:01.370
控制不出来

40:02.170 --> 40:04.370
然后呢一个message

40:05.070 --> 40:07.870
handle click

40:07.970 --> 40:08.470
登录

40:09.270 --> 40:10.870
啊你想想登录过后要干嘛

40:11.170 --> 40:12.270
不就是触发仓库吗

40:12.270 --> 40:12.470
对吧

40:12.470 --> 40:13.270
触发仓库

40:13.270 --> 40:15.170
store里边的dispatch啊

40:15.270 --> 40:16.870
触发什么的触发那个

40:17.270 --> 40:18.670
login user

40:18.670 --> 40:19.970
下面的login对吧

40:20.070 --> 40:20.570
登录

40:20.570 --> 40:22.130
然后呢他传一个负债

40:22.130 --> 40:22.970
payload过去

40:23.070 --> 40:24.370
payload我们就传一个对象

40:24.470 --> 40:25.670
对象的login id

40:25.970 --> 40:27.870
等于什么呢等于this.login id

40:28.470 --> 40:28.770
啊

40:28.770 --> 40:30.570
然后呢对象的login password

40:30.670 --> 40:32.270
等于this.login password

40:32.970 --> 40:33.470
行了

40:34.470 --> 40:35.370
看一下有没有什么问题

40:35.470 --> 40:36.370
我感觉没什么问题

40:36.570 --> 40:37.270
好我们在

40:37.470 --> 40:38.870
在这里呢给他加上一个啊

40:38.970 --> 40:40.470
加上一个就是路由

40:42.470 --> 40:43.270
加上一个路由

40:43.770 --> 40:45.270
呃这里是登录啊login

40:47.270 --> 40:47.770
login

40:48.570 --> 40:49.870
行了我们来看一下吧

40:50.670 --> 40:51.270
点灯录

40:51.770 --> 40:52.270
点

40:53.970 --> 40:54.970
点我东西呢

40:56.170 --> 40:56.970
呃

40:56.970 --> 40:58.670
login哦没有注册路由对吧

40:58.670 --> 40:59.670
没有注册路由

40:59.970 --> 41:00.970
然后注册一个

41:02.370 --> 41:02.870
login

41:06.380 --> 41:07.480
所以开的即适的啊

41:09.580 --> 41:10.380
好ok

41:10.880 --> 41:12.480
呃我们现在登录一下试一下吧

41:12.480 --> 41:14.180
登录一下试一下abc

41:14.780 --> 41:16.780
呃然后呢密码呢

41:17.080 --> 41:17.680
123

41:17.980 --> 41:20.380
123啊我密码为啥是这样子的

41:20.380 --> 41:21.980
密码应该是用password的对吧

41:22.980 --> 41:25.680
密码应该用这个password

41:27.380 --> 41:27.780
哎

41:28.280 --> 41:29.080
password

41:30.480 --> 41:31.280
啊小心

41:32.680 --> 41:33.280
我考

41:34.280 --> 41:36.680
谷歌榴弹器把个密码给我自动填空间了啊

41:36.680 --> 41:38.980
设置一下叫out to complete

41:39.580 --> 41:41.980
叫什么new password的好像是这个啊

41:45.920 --> 41:46.320
ok

41:47.420 --> 41:47.920
刷新

41:48.920 --> 41:49.420
ok

41:49.920 --> 41:53.620
呃这边呢我们abc啊密码123123

41:54.520 --> 41:55.020
好

41:56.120 --> 41:56.620
登录

41:58.690 --> 41:59.190
登录

41:59.890 --> 42:02.690
好登录完了过后这边没有什么反应是吧

42:02.790 --> 42:04.290
没有什么反应我们看一下网络型球

42:04.490 --> 42:06.990
网络型球那边服务服务器是不给我想用的东西的

42:06.990 --> 42:09.890
对吧我只是我这里没有提示而已啊谁上是有东西的

42:10.290 --> 42:13.190
呃然后呢我们来看一下再观察一下那个就是application

42:13.690 --> 42:15.290
application里边是不是有了token的

42:15.690 --> 42:16.190
对吧

42:16.590 --> 42:17.290
是不是token了

42:17.290 --> 42:20.290
然后我们再刷新页面登录完了过后是不是我们就可以换到

42:20.490 --> 42:21.390
服务器的东西了

42:21.590 --> 42:23.190
对吧他就没有把我这个403错误了

42:23.190 --> 42:24.690
对吧就是我们有身份了

42:24.690 --> 42:25.790
对吧有身份了呢

42:26.290 --> 42:28.590
啊那只是我们这里的没有去

42:28.790 --> 42:31.490
就是没有那个没有想用嘛对不对

42:31.490 --> 42:33.790
没有想用那这个简单我们这里的等

42:33.890 --> 42:34.890
等待他一下吧

42:35.690 --> 42:38.090
啊sync等待他一下

42:38.990 --> 42:39.890
等待他登录完

42:40.290 --> 42:44.090
好如果说你登录的结果啊登录的结果是成功的

42:44.890 --> 42:46.090
啊我怎么来判断成功呢

42:46.090 --> 42:48.290
登登完了过后我去看从仓库里边判断呗

42:48.590 --> 42:50.590
啊如果说那个什么

42:51.090 --> 42:55.390
this storm state login user

42:55.690 --> 42:58.590
啊data又直了是不是登录成功了啊成功

42:59.690 --> 43:00.890
啊表示登录成功了

43:01.890 --> 43:06.590
啊或者说我这在这在这里边啊在这里边该返回吧

43:07.590 --> 43:10.090
登录成功过后啊我该返回吧

43:10.490 --> 43:11.290
return

43:11.690 --> 43:12.590
data

43:12.890 --> 43:15.090
啊我来这里返回那么这边接受一下

43:16.290 --> 43:16.890
接受一下

43:17.290 --> 43:17.690
const

43:18.990 --> 43:19.490
user

43:20.090 --> 43:23.290
接受一下啊如果说登录成功了我就

43:23.590 --> 43:24.690
判断一下这个user啊

43:24.890 --> 43:25.690
如果登录成功

43:27.290 --> 43:28.790
我就alert吧

43:29.590 --> 43:30.290
登录成功

43:31.890 --> 43:34.990
啊我拿着去拿去做一些莫名其妙的事了啊

43:34.990 --> 43:38.090
或者是啊账号密码错误

43:38.390 --> 43:40.490
对不对我们做这么一件事啊试一下

43:40.890 --> 43:41.490
abc

43:41.990 --> 43:43.690
1231223

43:46.440 --> 43:50.140
啊登录成功啊登录成功当然你要爱跳转跳转这些无所谓的

43:51.240 --> 43:53.840
好那么现在呢我们还要做两件还有两件事啊

43:53.840 --> 43:55.040
第一件说的是这个东西

43:55.740 --> 43:56.340
这个玩意

43:56.940 --> 44:00.540
要登录成功过后才能访问没有登录成功我是不能访问的

44:00.840 --> 44:02.940
啊现在肯定是无论如何都能访问

44:03.040 --> 44:04.040
对吧这是第一个问题

44:04.240 --> 44:06.940
第二个问题呢是我们在这个地方的显示的时候呢

44:07.040 --> 44:09.740
如果说他登录成功了过后啊我就不要显示个moggin了

44:09.940 --> 44:10.840
就不要显示他啊

44:11.240 --> 44:13.740
或者是登录成功过后呢我挑转一下吧

44:14.640 --> 44:16.240
this road

44:17.540 --> 44:18.040
rotor

44:18.040 --> 44:19.340
好像是什么 push

44:19.740 --> 44:21.840
跳转到手页嘛啊跳转到手页

44:22.540 --> 44:23.240
再试一下

44:23.840 --> 44:25.540
abc 123 123

44:27.870 --> 44:29.170
ok 跳转到手页了啊

44:29.370 --> 44:31.370
还有就是这个地方就菜单这个位置

44:31.370 --> 44:32.770
如果说他登录成功了的时候呢

44:32.770 --> 44:34.170
就是他有用户的时候

44:34.370 --> 44:35.770
那么我显示他的用户名

44:36.770 --> 44:37.970
他没有用户的时候呢

44:37.970 --> 44:39.370
我们要显示他的什么呢

44:39.570 --> 44:40.470
他的那个就是

44:40.970 --> 44:41.770
显示登录

44:42.170 --> 44:43.170
啊就要做这么一个显示

44:43.170 --> 44:44.770
而且他如果说正在登录的时候呢

44:44.770 --> 44:46.070
我们也真的要显示楼顶

44:46.670 --> 44:47.370
啊楼顶

44:47.770 --> 44:49.370
好那么这里呢我们怎么来弄呢

44:49.370 --> 44:50.270
我们可以在这

44:51.470 --> 44:54.270
到这个就是app里边菜单不在这吗

44:54.270 --> 44:56.370
对吧我们在这里呢写几个判断

44:56.970 --> 44:58.670
啊我们就写用延远数吗

44:59.070 --> 44:59.870
只是没有ref

45:00.570 --> 45:01.570
给他写个vif

45:02.170 --> 45:04.870
如果说我们的仓库里边

45:05.470 --> 45:07.070
啊我这里要把仓库的数据拿出来

45:08.670 --> 45:09.370
script

45:10.370 --> 45:12.570
啊仓库的数据我们computed

45:13.070 --> 45:14.770
就是计算属性

45:15.070 --> 45:17.070
导入了一个vue x里边

45:20.150 --> 45:22.050
vue x里面不是一个map status吗

45:22.050 --> 45:23.050
对吧我们就用它

45:23.850 --> 45:26.450
我们的命名空间是在login user

45:26.750 --> 45:28.550
然后呢我们要取的东西呢是data

45:28.750 --> 45:30.550
啊然后呢还取什么意思楼顶

45:30.950 --> 45:31.850
那就取这两个

45:32.350 --> 45:34.850
啊如果说我们正在正在登录中

45:35.550 --> 45:37.050
或者是正在换取

45:37.350 --> 45:39.850
就正在登录或者是正在换取那个token

45:40.250 --> 45:42.550
换取用户信息那么这里呢我们就该显示login

45:43.150 --> 45:45.050
啊你们其实你们上网的时候也可以看到

45:45.250 --> 45:47.250
网站的右上角呢始终有一个就是

45:47.850 --> 45:48.750
个人的区域对吧

45:48.750 --> 45:50.450
要么就显示登录要么就显示注册

45:50.450 --> 45:52.750
要么就是显示那个你的用户名

45:53.050 --> 45:55.050
啊如果说他现在不能确定有没有登录

45:55.050 --> 45:57.550
那就显示这个正在加载中或者是一个全世界的专

45:59.050 --> 46:00.150
好这是这一块

46:02.580 --> 46:04.180
现在我们再来一个A元数啊

46:04.780 --> 46:07.380
没有什么vf vlcf

46:08.180 --> 46:11.980
如果说你登录的是有用户的

46:12.780 --> 46:14.380
啊如果说你是有用户的

46:14.580 --> 46:17.080
就是你这个data属性的是有的

46:17.580 --> 46:18.980
啊那么这种情况下呢

46:18.980 --> 46:20.180
我们给他写一个template

46:21.280 --> 46:23.180
因为这里边我们要写啊

46:23.280 --> 46:25.280
如果是你有用户的我显示啥呢

46:25.380 --> 46:26.780
我就显示一个A元数

46:26.780 --> 46:28.380
这里显示用户的名称

46:28.880 --> 46:30.880
对不对啊这里显示的是

46:31.280 --> 46:34.680
data.login id

46:34.880 --> 46:35.980
显示用户的名称

46:36.180 --> 46:37.980
然后呢后面再加上一个按钮吧

46:39.180 --> 46:39.680
注销

46:41.180 --> 46:41.580
对不对

46:41.780 --> 46:43.080
所以加上一个按钮注销

46:43.180 --> 46:44.880
然后来给他打上一个啊

46:45.080 --> 46:46.880
就简单写一下就是stone

46:46.880 --> 46:48.480
注销就是stone嘛dispatch

46:50.380 --> 46:53.180
触发的x是不是login user

46:53.480 --> 46:55.480
啊然后呢login out

46:56.280 --> 46:56.980
显示这个

46:57.880 --> 46:59.480
好然后还有这种情况

46:59.580 --> 47:01.280
还有这种情况就是你没有登录了

47:01.280 --> 47:02.480
对吧就是vls

47:03.280 --> 47:04.080
vls

47:04.280 --> 47:05.080
我们就用rotl

47:05.280 --> 47:06.480
就这种情况

47:07.080 --> 47:08.080
就是vls

47:08.680 --> 47:09.680
这种情况是你没有登录

47:09.680 --> 47:10.980
那我就显示一个登录

47:11.080 --> 47:11.880
登录链接

47:12.180 --> 47:13.680
好就是分成上三种情况

47:13.880 --> 47:14.980
好咱们来刷新看一下

47:15.080 --> 47:16.080
一开始不是login

47:16.680 --> 47:18.180
换神符信息换出来了是吧

47:18.680 --> 47:19.480
是不是换出来了

47:19.480 --> 47:21.080
对吧不要那么进入home里看一下

47:21.380 --> 47:22.280
换神符信息

47:23.180 --> 47:24.180
换出来了对吧

47:24.480 --> 47:25.980
那么我们只要点了注销就行了

47:26.980 --> 47:28.780
好如果说再来一次

47:29.080 --> 47:29.980
换神符信息

47:30.180 --> 47:32.180
没换出来是不是变成login

47:32.580 --> 47:34.380
对吧如果说我们这里的abc

47:34.780 --> 47:36.480
123 123登录

47:36.580 --> 47:38.780
换神符信就是拿神符信就是登录

47:38.980 --> 47:40.380
登录完了过后是不是有东西了

47:40.580 --> 47:42.080
是吧把这里就完成了对吧

47:42.380 --> 47:43.480
好这是第一个点啊

47:43.680 --> 47:45.080
第二个点呢是在这个页面

47:45.080 --> 47:46.780
这个这个是一个受保护的页面

47:46.780 --> 47:48.080
必须要登录之后才能访问

47:48.080 --> 47:49.480
像这种页面还是有蛮多的

47:49.680 --> 47:50.580
比方说个人中心

47:51.180 --> 47:52.580
比方说后台的管理也对吧

47:52.880 --> 47:54.280
那么这个地方该怎么来做呢

47:54.280 --> 47:56.580
这个地方我们可以使用那个路由

47:57.080 --> 47:57.780
守卫来做

47:58.280 --> 47:59.480
我们到个路由里边去

48:00.580 --> 48:02.480
你看这个页面不就是这种情况吗

48:03.080 --> 48:03.980
受保护的页面

48:04.280 --> 48:05.980
好那么这个页面我们怎么来处理呢

48:06.380 --> 48:09.080
我们看一下这个路由viewrotor

48:09.180 --> 48:10.580
一个保航守卫

48:11.180 --> 48:11.780
有这个

48:12.880 --> 48:16.980
一个有全局的有路由独享的

48:17.480 --> 48:18.980
before enter我们要的就是这个

48:19.880 --> 48:20.180
好

48:20.880 --> 48:21.980
进就是说说明了

48:21.980 --> 48:23.880
这东西API不用去背啊

48:23.880 --> 48:24.780
我也是记不住

48:25.180 --> 48:26.480
需要的是查一查又完成了

48:26.780 --> 48:28.180
to from next

48:28.780 --> 48:30.580
我看个单筹我激放你明白了啊

48:30.780 --> 48:31.680
这是你要到哪去

48:31.680 --> 48:32.680
这是你从哪来

48:32.680 --> 48:33.980
这是你要不要交给他

48:34.080 --> 48:34.480
对吧

48:34.680 --> 48:36.180
或者是你换一个去的地址

48:36.680 --> 48:38.080
那么我进这个页面的时候

48:38.080 --> 48:39.180
我是不是要判断一下

48:39.780 --> 48:40.480
判断啥呢

48:40.480 --> 48:41.980
是不是判断仓库里边的东西

48:42.480 --> 48:45.980
import store from store

48:45.980 --> 48:46.380
对吧

48:46.380 --> 48:47.380
把仓库拿到

48:47.680 --> 48:49.080
判断仓库里边东西

48:49.380 --> 48:49.880
判断啥呢

48:49.880 --> 48:51.380
store status

48:51.380 --> 48:52.580
他仓库里边状态

48:52.580 --> 48:54.780
怎么login user data

48:55.580 --> 48:56.380
是不是有值

48:58.180 --> 48:59.680
如果说有值的话

49:00.080 --> 49:00.580
我干嘛呢

49:00.580 --> 49:02.680
当然你可以把这个东西单独写成一个函数

49:02.880 --> 49:04.080
如果单独写成函数

49:04.080 --> 49:05.780
如果说很多都有的需要的话

49:05.780 --> 49:07.780
你可以专门放一个模块单独写成函数

49:07.780 --> 49:09.280
需要的话就把函数放在这儿就行了

49:10.280 --> 49:11.880
如果说你已经登录成功了

49:11.880 --> 49:12.180
对吧

49:13.880 --> 49:16.880
有用户登录成功的

49:17.780 --> 49:20.080
成功的用户

49:20.380 --> 49:21.680
就是已经有用户了

49:22.480 --> 49:23.180
有用户

49:24.180 --> 49:25.280
那么这种时候呢

49:25.280 --> 49:26.280
你就给他呗

49:26.780 --> 49:27.380
给他呗

49:27.780 --> 49:29.280
要是你没有用户

49:29.280 --> 49:30.080
没有用户到哪去

49:30.080 --> 49:30.980
到登录也别

49:31.480 --> 49:31.880
对吧

49:31.980 --> 49:33.080
说到登录也

49:33.580 --> 49:34.280
就玩笑了

49:34.480 --> 49:35.880
几个录有守卫

49:36.280 --> 49:36.780
好

49:37.480 --> 49:38.280
接下来我们再看

49:39.480 --> 49:40.680
现在登录成功了

49:40.680 --> 49:41.480
现在去

49:41.780 --> 49:42.080
去不了

49:42.080 --> 49:42.580
对吧

49:42.580 --> 49:43.680
现在登录成功

49:44.180 --> 49:44.680
ok

49:44.880 --> 49:45.580
什么问题

49:46.080 --> 49:47.080
就可以访问了

49:47.480 --> 49:49.480
那么现在我们注销

49:50.380 --> 49:51.480
注销是不是还有一个问题

49:51.880 --> 49:53.180
现在还现在还能看得到

49:53.180 --> 49:53.580
对吧

49:53.580 --> 49:54.380
还能看得到

49:54.380 --> 49:55.380
然后让我们这里呢

49:55.980 --> 49:57.380
一刷新是不是就不能看不到了

49:57.880 --> 49:58.180
对吧

49:58.180 --> 49:59.580
一销新他就跳到登录业去了

49:59.680 --> 50:01.580
现在点他始终到登录业

50:01.580 --> 50:01.980
你看

50:01.980 --> 50:02.980
始终到登录业了

50:03.180 --> 50:03.580
对吧

50:03.780 --> 50:04.380
那么现在呢

50:04.380 --> 50:05.780
我们还有一个小问题就是

50:08.920 --> 50:09.320
好

50:09.520 --> 50:10.620
现在我们去protector

50:10.620 --> 50:12.520
然后点注销是不是还能看得到

50:13.220 --> 50:13.620
对不对

50:13.620 --> 50:14.620
是不是还有这个问题

50:15.120 --> 50:16.420
那么这个问题怎么办的

50:16.720 --> 50:18.220
你点了注销过后啊

50:18.520 --> 50:19.620
很多网站啊

50:19.620 --> 50:20.320
点了注销过后

50:20.320 --> 50:21.620
他都会刷新一次页面

50:21.620 --> 50:23.420
把一个页面完成的刷新

50:23.920 --> 50:24.720
那就这么简单

50:25.020 --> 50:27.020
他把页面完整的刷新刷新一次

50:27.620 --> 50:28.320
还有一种方式呢

50:28.320 --> 50:29.920
你点了注销过后呢

50:29.920 --> 50:31.320
你就可以你可以那个

50:31.620 --> 50:33.620
跳转到强行跳转到首页

50:34.220 --> 50:36.120
或者是强行跳转到登录业

50:36.420 --> 50:38.320
比方说我们在哪里点你的注销

50:38.620 --> 50:40.320
在那个就是仓库里边对吧

50:40.520 --> 50:42.320
仓库里边是不是有个注销功能

50:44.520 --> 50:46.520
或者是我们点注销那里也可以跳转

50:46.520 --> 50:47.520
仓库里边也可以跳转

50:47.520 --> 50:48.820
仓库里边跳转影响很大

50:48.820 --> 50:50.320
算了我们还是在这里吧

50:50.620 --> 50:52.320
这里那么干脆来写个函数吧

50:54.620 --> 50:55.620
message

50:57.820 --> 50:58.620
写个函数

51:01.260 --> 51:02.760
locking out

51:05.830 --> 51:06.430
好行了

51:06.430 --> 51:08.530
我们把这个带这个带马来放下来

51:10.630 --> 51:12.030
locking out

51:14.420 --> 51:14.920
放下来

51:15.720 --> 51:16.920
z加3

51:17.220 --> 51:18.320
然后呢z

51:18.820 --> 51:20.120
rotor push

51:20.620 --> 51:21.420
到登录业去

51:21.720 --> 51:23.420
注销了过后呢一般到到登录业

51:24.020 --> 51:24.420
好来吧

51:24.420 --> 51:25.220
我们再来看啊

51:25.920 --> 51:28.120
abc123123登录成功

51:28.520 --> 51:30.820
然后呢去这个保护的页面

51:30.820 --> 51:31.820
先让我们点注销

51:32.120 --> 51:32.820
注到登录业了

51:32.820 --> 51:34.020
然后现在进不去了

51:34.020 --> 51:34.220
对吧

51:34.220 --> 51:35.220
保护也就进不去了

51:36.420 --> 51:36.620
好

51:36.620 --> 51:37.920
这是关于这个啊

51:39.020 --> 51:40.220
其他的然后接下来

51:40.220 --> 51:42.920
我们要完成整个跟服务器的结合了

51:43.220 --> 51:44.020
那怎么来完成呢

51:44.020 --> 51:44.920
我们开发完了啊

51:44.920 --> 51:46.220
开发阶段已经结束了

51:46.420 --> 51:47.820
那么我们就把这个控制台停了

51:48.820 --> 51:49.720
我们这些测试啊

51:49.720 --> 51:51.020
各种方式都没问题了

51:51.020 --> 51:52.020
我们就把控制台停了

51:52.320 --> 51:52.820
停了过后呢

51:52.820 --> 51:53.720
我们是不是要打包

51:54.020 --> 51:56.120
打包过后是不是他会到那个地省部落下面去

51:56.120 --> 51:57.320
是不是到这个部落下面去

51:57.520 --> 51:57.920
对吧

51:58.720 --> 52:00.020
这个部落是不是我们想要的

52:00.020 --> 52:01.520
不是我们要把他打包到这

52:01.520 --> 52:01.720
对吧

52:01.720 --> 52:02.920
当然你可以把它打包过后

52:02.920 --> 52:04.420
把它复制粘贴过来也可以

52:05.020 --> 52:05.320
不过呢

52:05.320 --> 52:07.520
我们更加希望他能够自己打包过来

52:07.620 --> 52:08.120
那怎么办啊

52:08.120 --> 52:09.220
这里还可以配置一下啊

52:09.220 --> 52:10.620
我肯定是有这样的配置的

52:10.720 --> 52:12.320
我虽然我忘了它是啥了

52:12.920 --> 52:13.820
叫啥了啊

52:13.820 --> 52:14.920
output dl

52:15.320 --> 52:16.320
啊就这个东西

52:16.820 --> 52:17.520
配置这个玩意

52:19.520 --> 52:22.620
配置到上一个

52:24.020 --> 52:25.320
我用还是用pass吧

52:26.720 --> 52:27.920
pass require

52:28.220 --> 52:28.920
pass

52:31.920 --> 52:33.320
pass result

52:34.020 --> 52:35.020
dir name

52:35.020 --> 52:37.120
就这个这个解释所在的目录

52:37.220 --> 52:37.720
然后呢

52:37.720 --> 52:39.820
返回到上一个目录的public

52:40.820 --> 52:41.720
跑到这里去

52:42.020 --> 52:42.520
来吧

52:42.820 --> 52:43.320
现在

52:43.920 --> 52:45.020
用npm

52:46.020 --> 52:46.620
用什么呢

52:46.620 --> 52:47.820
npm run

52:49.120 --> 52:49.620
build

52:53.260 --> 52:53.860
然后你看

52:54.160 --> 52:55.660
现在他打包打包打包哪去了

52:55.660 --> 52:57.160
打包到这个public目录下面去了

52:57.260 --> 52:58.160
他把public给删了

52:58.160 --> 52:58.360
对吧

52:58.360 --> 52:59.760
然后重新给我建立一个目录

52:59.760 --> 53:00.860
说打包到这来了

53:01.860 --> 53:04.160
这里打包是不是我们就直接通过那个服务器

53:04.160 --> 53:05.760
5008那个服务器端口就可以访问了

53:05.760 --> 53:06.460
直接访问了

53:06.660 --> 53:06.960
对吧

53:06.960 --> 53:08.660
那么跟这个文件家还有关系吗

53:08.760 --> 53:09.960
从此以后就没有关系了

53:10.760 --> 53:12.660
他只是要只是负责打包打包

53:12.660 --> 53:13.660
把他打包到这的

53:14.060 --> 53:14.360
对吧

53:14.360 --> 53:15.960
跟他就没有啥关系了

53:16.860 --> 53:17.960
就这么个意思啊

53:18.460 --> 53:18.660
好

53:18.660 --> 53:20.060
然后他打包完成没有

53:20.660 --> 53:21.660
好打包完成了

53:21.760 --> 53:22.260
那么接下来

53:22.260 --> 53:23.960
那么在浏览器里边去访问一下

53:24.860 --> 53:26.460
localhost 5008

53:26.860 --> 53:28.060
你看是不是访问到这了

53:29.460 --> 53:30.460
就是访问到这了

53:30.560 --> 53:32.360
帐号 abc 123 123

53:32.360 --> 53:32.760
动录

53:35.040 --> 53:35.640
protex

53:35.840 --> 53:36.140
是吧

53:36.140 --> 53:36.440
是吧

53:36.440 --> 53:36.940
没问题了

53:37.340 --> 53:38.140
看上去没问题了

53:38.140 --> 53:39.040
实际上还有个问题

53:39.040 --> 53:39.940
还有个小小问题

53:39.940 --> 53:40.640
什么问题的

53:40.740 --> 53:41.840
你这里刷新就没了

53:43.920 --> 53:44.520
为啥呀

53:45.720 --> 53:46.220
为啥呀

53:46.220 --> 53:46.920
好好想一想

53:46.920 --> 53:48.720
以前的感觉很晕这里一块

53:48.720 --> 53:50.420
但是现在的应该好好想得清楚了

53:50.720 --> 53:51.520
现在我们一刷新

53:51.520 --> 53:52.420
是不是像服务器

53:52.420 --> 53:54.120
5008这个服务器发送的请求

53:54.120 --> 53:55.020
请求这个地址

53:55.220 --> 53:56.120
而请求这个地址

53:56.120 --> 53:57.420
有没有这样的静态资源

53:58.020 --> 54:00.420
public目录下面有没有这个protex这个文件

54:00.720 --> 54:02.220
有没有protex这个目录

54:02.220 --> 54:03.020
都没有对吧

54:03.120 --> 54:04.420
所以静态资源是不是找不到

54:04.520 --> 54:06.020
找不到的话是不是404

54:06.420 --> 54:06.720
对不对

54:06.720 --> 54:07.620
就404

54:08.020 --> 54:09.620
那为什么刚才没问题呢

54:09.720 --> 54:11.320
刚才我们是从这个地址开始的

54:11.620 --> 54:12.620
这个地址是怎么能找到

54:12.620 --> 54:12.820
对吧

54:12.820 --> 54:13.820
他默认是因这个事掉

54:13.820 --> 54:14.420
一天没有

54:14.420 --> 54:14.720
对吧

54:14.720 --> 54:15.420
默认是他

54:16.020 --> 54:17.020
这个地址怎么能找到

54:17.120 --> 54:17.920
但是我们点了他

54:17.920 --> 54:19.420
有没有访问服务器

54:19.520 --> 54:20.820
根本就没有访问服务器

54:21.020 --> 54:22.820
他没有去重新请求服务器

54:23.020 --> 54:25.120
没有重新去请求服务器的这个页面

54:25.420 --> 54:26.220
所以说这个时候

54:26.220 --> 54:28.020
他只是在客户端改的这个地址

54:28.420 --> 54:29.020
没了意思吧

54:29.120 --> 54:30.820
所以服务器根本就没有说到这个请求

54:31.320 --> 54:32.420
因此他这里没问题

54:33.320 --> 54:34.220
是这个意思啊

54:34.420 --> 54:35.120
所以说现在呢

54:35.120 --> 54:36.220
我们需要一个东西啊

54:36.220 --> 54:38.620
让对一些静态资源的请求

54:38.620 --> 54:39.620
如果他找不到的话

54:39.620 --> 54:40.120
找不到的话

54:40.120 --> 54:41.320
全部必须要给我

54:41.920 --> 54:43.120
都给我想一个因这个事

54:43.120 --> 54:43.520
一天没有

54:43.520 --> 54:44.120
就是什么意思呢

54:44.120 --> 54:45.420
我就是请求这个地址

54:45.420 --> 54:46.620
他还是要把这个因这个事

54:46.620 --> 54:47.420
也一天没有给我

54:48.220 --> 54:49.520
因为我们是单页应用程序

54:49.520 --> 54:49.720
对吧

54:49.720 --> 54:50.420
就是单页应用程序

54:50.420 --> 54:51.320
跟服务器结合的时候

54:51.320 --> 54:52.320
装成了这个小问题

54:52.320 --> 54:53.720
这个小问题特别好解决

54:53.920 --> 54:55.020
你使用这个东西

54:56.220 --> 54:56.820
要做

54:57.220 --> 54:58.820
就这个啊

54:59.420 --> 55:00.020
就这个玩

55:00.220 --> 55:01.520
把个地址给大家复制一下

55:04.530 --> 55:06.530
叫做API

55:08.030 --> 55:08.830
History

55:09.030 --> 55:11.730
History模式的API for back

55:12.730 --> 55:13.530
for back 什么意思

55:14.030 --> 55:14.830
就是回去

55:14.830 --> 55:15.630
你访问其他地址

55:15.630 --> 55:17.230
还是会回到因这个事里也一天没有

55:17.830 --> 55:18.430
那么这个

55:18.430 --> 55:19.830
这个他已经说得很明确了啊

55:20.130 --> 55:20.930
当你使用

55:20.930 --> 55:22.730
当你在请求是一个get请求

55:23.230 --> 55:24.530
并且请求投

55:24.530 --> 55:25.830
比方你请求页面的时候

55:25.830 --> 55:26.730
请求投他一定是

55:26.730 --> 55:28.530
浏览器始终给你发了

55:28.530 --> 55:29.230
是这个请求投

55:29.230 --> 55:30.030
Tex 也一天没有

55:30.330 --> 55:30.730
对吧

55:30.730 --> 55:32.430
当你希望接受到请求

55:32.730 --> 55:34.330
消息格式是Tex 也一天没有

55:34.330 --> 55:35.830
就希望接受到一个页面

55:36.930 --> 55:37.930
那么这个如果

55:37.930 --> 55:40.130
如果说你不是一个针对文件的请求

55:40.130 --> 55:41.630
就是你没有什么点击S啊

55:41.630 --> 55:42.430
点什么什么

55:42.530 --> 55:44.030
不是一个针对文件的请求

55:45.130 --> 55:45.430
啊

55:45.830 --> 55:47.030
然后这种情况下

55:47.030 --> 55:48.730
他就直接把因那个事的

55:48.730 --> 55:49.630
也一天没有给你

55:50.130 --> 55:50.930
好怎么用呢

55:50.930 --> 55:51.930
你就安装他

55:52.130 --> 55:53.130
那么现在到服务器安装了

55:53.130 --> 55:53.530
对吧

55:53.730 --> 55:54.530
回到服务器

55:55.330 --> 55:56.330
停止服务器啊

55:56.930 --> 55:58.130
np 现在在服务器端啊

55:58.130 --> 55:59.730
服务器端安装这么康

55:59.730 --> 56:01.130
哎这个复制一下吧

56:05.720 --> 56:06.520
安装这个啊

56:06.820 --> 56:07.720
然后怎么用呢

56:07.720 --> 56:08.320
运行起来啊

56:08.520 --> 56:09.020
start

56:09.520 --> 56:10.720
用法非常简单

56:10.720 --> 56:11.720
你直接来

56:12.020 --> 56:12.720
啊你看吗

56:14.640 --> 56:15.440
直接来

56:16.140 --> 56:16.640
这个

56:18.440 --> 56:19.140
history

56:19.140 --> 56:20.440
啊对明白了

56:20.640 --> 56:22.540
好到这个就是肉车里边

56:23.640 --> 56:25.040
np车里边啊

56:25.040 --> 56:25.740
倒入啊

56:27.340 --> 56:28.940
音色静态支援

56:30.440 --> 56:31.640
倒入history

56:31.840 --> 56:34.140
然后呢又是history

56:35.340 --> 56:36.440
怎么用constable

56:39.780 --> 56:40.280
啊

56:40.980 --> 56:41.780
history

56:42.580 --> 56:43.080
virt

56:43.280 --> 56:43.780
app

56:44.980 --> 56:45.580
use

56:46.380 --> 56:47.080
history

56:48.680 --> 56:49.180
ok

56:50.580 --> 56:51.280
我看一下啊

56:52.780 --> 56:53.580
嗯

56:55.480 --> 56:56.480
嗯没问题啊

56:56.480 --> 56:57.380
他的作用就是这样

56:57.380 --> 56:58.180
刚才说的作用

56:58.180 --> 56:59.380
他就把这个请求地址啊

56:59.380 --> 57:00.380
例如随便什么地址

57:00.380 --> 57:01.780
只要满足这个几个要求

57:01.780 --> 57:02.980
ok 他就把它改成

57:03.080 --> 57:04.180
in这个车调一天没有

57:04.580 --> 57:06.180
好我们把这个东西用进去

57:06.580 --> 57:08.080
他用进去之后我们再来看啊

57:10.820 --> 57:11.320
再来看

57:12.520 --> 57:13.820
好现在呢我们刷新

57:14.420 --> 57:15.620
哎这里出问题了

57:17.820 --> 57:18.820
这里出问题了

57:18.820 --> 57:19.620
我看一下啊

57:20.820 --> 57:22.020
哦这是8080

57:22.420 --> 57:24.220
这边好刷新

57:25.320 --> 57:26.620
是不是没问题了对吧

57:27.020 --> 57:28.120
啊到登录页了

57:28.120 --> 57:29.920
你看登录页刷新是不是还是可以

57:30.020 --> 57:31.020
没问题对不对

57:31.020 --> 57:31.620
没问题

57:31.620 --> 57:33.120
他不会影响API请求的啊

57:33.120 --> 57:34.220
为什么不会影响

57:34.220 --> 57:35.820
因为API请求的话

57:35.820 --> 57:37.420
他的请求头他不是这个

57:37.920 --> 57:38.720
他不是这个

57:38.720 --> 57:39.720
这个是我希望

57:39.720 --> 57:42.320
这个请求头表示我希望获取到一个页面

57:42.920 --> 57:43.720
是这么个意思

57:44.820 --> 57:45.620
这里刷新

57:48.750 --> 57:50.150
没问题啊对不对

57:51.050 --> 57:52.050
好这是这一块

57:52.050 --> 57:54.050
整个的过程我给大家讲完了啊

57:54.550 --> 57:56.250
当然了你们以后到公司里边

57:56.250 --> 57:58.350
是不是就一定是这样的过程了不一定

57:58.750 --> 58:00.350
我也不知道你们公司怎么样的过程

58:00.350 --> 58:02.650
但是呢这个东西肯定会对你游说起发的

58:02.950 --> 58:04.150
好其他就没啥了

58:04.350 --> 58:05.250
那么我们到此呢

58:05.250 --> 58:08.150
就整个就把这个认证的东西就全部结束了啊

58:08.450 --> 58:09.750
ok 这是设计课的那种

