WEBVTT

00:00.240 --> 00:02.800
这些客人来说一下二维码

00:04.340 --> 00:07.400
之前有同学在问二维码是怎么回事

00:07.660 --> 00:10.220
实际上我们在绝大部分时候啊

00:10.480 --> 00:12.020
除非你到那个

00:12.280 --> 00:16.120
大厂里边去做开发啊有可能他会自己动态的生存二维码

00:16.620 --> 00:21.480
更多的时候呢我们都是把别人网站的二维码比方说我们的公众号的二维码对吧

00:21.740 --> 00:22.780
他会给你一张图片

00:23.020 --> 00:26.100
你直接下载下来放到网站上就是一张图片而已

00:26.600 --> 00:29.420
对你来说的话没有什么特殊需要操作的

00:29.820 --> 00:34.540
或者是你什么支付二维码对吧支付二维码他也是一张图片嘛

00:35.300 --> 00:42.220
一般你去申请第三方的支付平台他会给你一个收款二维码啊你直接把放上去完事了

00:42.980 --> 00:47.860
但是有的时候呢你可能会自己在网站上去生成一张二维码

00:48.360 --> 00:49.640
有可能会出现这种情况

00:50.160 --> 00:51.680
那么在这种情况下呢

00:51.940 --> 00:53.220
你就需要

00:53.740 --> 00:55.780
知道二维码的一些概念了

00:56.500 --> 01:00.340
比方说什么情况你会生成二维码的比方说你自己就是一个支付网站

01:00.600 --> 01:03.920
你是在银行里边做开吧或者是在支付宝啊

01:04.180 --> 01:11.100
那么在你会自己去生成他需要支付的二维码对吧他服务器需要生成那么你需要知道一些二维码的概念

01:11.860 --> 01:15.180
其实二维码的概念了非常非常简单二维码用来干嘛的呢

01:15.440 --> 01:16.460
看上去很整齐

01:16.720 --> 01:19.540
但是呢二维码实际上就是存在一些数据的

01:20.060 --> 01:22.100
什么数据呢无所谓随便打数据

01:22.360 --> 01:24.660
比方说123456789

01:25.080 --> 01:28.700
或者是一个链接地址说都是一串的就是一个支付串啊

01:28.960 --> 01:31.520
二维码上表现的其实就是一个支付串

01:32.300 --> 01:34.600
那么这个二维码是怎么表现支付串的呢

01:34.860 --> 01:38.180
它是靠这个矩阵点表现的你看这里边是不是有很多的小点对吧

01:38.440 --> 01:43.800
有深色的有浅色的浅色的就是白色嘛深色的就是黑色当然这个颜色是可以是可以换的啊

01:44.060 --> 01:45.100
可以换成别的颜色

01:45.600 --> 01:46.640
那么这个

01:47.140 --> 01:53.280
深色和白色是不是就可以表示一和零对吧他就用一和零这个东西来表示信息啊在一个举行

01:53.480 --> 01:55.280
一个大的举行中去表示个信息

01:55.540 --> 01:59.380
那么这个深色的点和浅色的点呢其实就是矩阵点

02:00.660 --> 02:06.740
啊其实就是矩阵点啊就是一个白色或者黑色的小点深色表示一白色表示零啊就用这种方式来表示出去

02:07.900 --> 02:09.980
好另外一个概念啊叫个位置探测组

02:10.340 --> 02:12.100
这个东西是什么呢就是看这个

02:12.940 --> 02:14.580
左上角右上角就是在

02:15.140 --> 02:19.980
角落里边呢会有三个啊大的框框这个东西就是位置探测组

02:20.360 --> 02:21.760
位置探测组用来干嘛的呢

02:22.020 --> 02:24.600
比方说你这个二维码旋转一下

02:26.120 --> 02:30.360
或者是再旋转一下来个90度180度各种方式来旋转

02:30.620 --> 02:36.360
利用相机去照他的时候是不是他真的能够知道他的正面啊他的正面就是

02:37.120 --> 02:38.680
应该是一个什么样的位置

02:39.180 --> 02:42.760
他就靠这三个点来定位的对吧三个点必须要组成这个样子表示正面

02:43.020 --> 02:46.080
他就是这么个意思啊哪怕你旋转旋转一个90度

02:46.360 --> 02:49.680
啊你旋转过后呢那个三个点的位置是不是变了那么

02:49.880 --> 02:53.720
嗯拍照下来的二维码他图形识别的时候呢他会自动给你纠正

02:54.240 --> 02:58.840
啊他是来定位的所以说二维码如果说无论怎么旋转比方说你去买东西的时候

02:59.100 --> 03:02.180
他个二维码是导致的还是数着的都无所谓的他就靠这三个

03:02.440 --> 03:05.240
位置探测组来搞定的啊他在定位方向的

03:06.280 --> 03:07.460
好下一个呢是version

03:07.800 --> 03:13.180
version呢啊这个地方不好翻译了翻译成这个版本呢也不是特别特别好这个version

03:13.440 --> 03:16.260
他其实就是一到四十的一个数字

03:17.100 --> 03:21.340
啊他这个数字越大呢表示整个二维码的矩正就越大

03:21.600 --> 03:26.240
啊比方说一呢最小一是呢21乘21就是横向有21个矩正点

03:26.500 --> 03:29.820
中向有21个矩正点他不是相处点啊他是矩正点

03:30.080 --> 03:32.380
面类是吧那个一个矩正有多大他随便

03:33.660 --> 03:38.020
那么是40那是最大的啊177乘177那就很大了啊

03:38.280 --> 03:44.420
我们平时呢一般来说你们在网上看到的二维码呢都是一到五之间的啊都是比较小

03:44.420 --> 03:46.940
都是比较小的啊都是version

03:47.700 --> 03:49.500
好下一个呢是mode

03:50.520 --> 03:51.540
啊这个mode呢

03:52.060 --> 03:59.980
指的是制服编码方式啊就是我们的二维码里边是不是承载信息段他有可能承载数字有可能承载那个

04:00.260 --> 04:02.700
字母有可能承载别的什么玩意不要汉字

04:03.460 --> 04:07.420
那么这个里边承载的信息量呢他是非常非常有限的

04:07.660 --> 04:12.780
所以说他不能使用简单的ask编码ask编码会浪费很多位置的

04:13.260 --> 04:21.460
比方说我的二维码上只需要承载一些数字那么如果说利用ask编码他一个就是一个数字呢就是要占一个字节对吧一个字节是八位

04:21.980 --> 04:26.380
对不对啊一个数字实际上一个数字只有0到9对吧只有那么一点点

04:26.820 --> 04:31.100
所以说呢他就会浪费很多空间啊因为二维码表现的数据量呢他特别特别有限

04:31.580 --> 04:36.540
因此呢他要进行特殊的这么编码方式实际上在我们的标准里面的二维码呢他有

04:37.580 --> 04:41.140
一般来说有这么适当的本就适当编码方式啊一个是numeric

04:41.660 --> 04:46.580
就是纸编码数字啊纸编码数字一个是呢alpha numeric

04:46.860 --> 04:55.820
它是可以编码数字可以编码字母啊大写字母啊Kangie啊Kangie是可以编码日文啊和中文的文字

04:56.540 --> 05:01.220
bitebite呢是可以编码就是啊这个东西就有点像ask嘛了啊就有点像ask嘛了

05:01.500 --> 05:05.740
那就是一个一个字符了一个字节当这个字母编码方式你

05:06.700 --> 05:12.220
如果说选择的越高啊你选择的bite那么可想而知他能够存在的数据是不是就越小

05:12.620 --> 05:19.500
对不对啊你如果说你选择这个东西的话那存在的数据就越大但是他只能是数字啊这东西要看情况实际而定

05:19.940 --> 05:25.100
一些第三方库呢他会自动帮你确定用什么样的编码啊一般的不用你管啊我们了解一下就行了

05:25.740 --> 05:30.420
然后那是纠错等级你会有没有发现啊有时候有的时候呢你去菜市场买菜的时候啊可能

05:31.300 --> 05:37.980
你们还是学生对吧没有怎么去买国菜他上买菜的时候他个二维码张星些的啊也很模糊但是你仍然可以找得出来

05:38.380 --> 05:42.220
为什么呢还有纠错的就是二维码里边实际上我们一般来说啊

05:43.500 --> 05:49.500
存在不会写太多的数据在里边一般就是一个链接啊一般来说都是个链接或者是一段特殊的文本

05:50.020 --> 05:56.660
总之呢会就是一些非常特殊的一些东西啊存在在里边那么像这这个情况下呢

05:57.660 --> 06:03.460
有些地方就空着了没东西那么他就可以给他给他加一些纠错等级啊加一些纠错的制服在里边

06:03.780 --> 06:14.020
就是哪怕有个区域被损坏了被刮花了你仍然可以少了出来啊因为另外一些区域呢仍然有荣誉的数据啊多余的数据给他提供来弥补他的损失

06:14.500 --> 06:19.100
那就是纠错等级当然了这个l表示no啊低的纠错等级那么

06:19.500 --> 06:27.420
M那表示中等q那表示quality啊表示质量的h那表示high high啊纠错等级越高呢

06:28.300 --> 06:37.140
你就越容易被识别越越损坏啊损坏的多啊也无所谓那么我仍然可以识别他你看现在在中国的很多的二维码中间是不是一个logo

06:37.740 --> 06:40.580
对不对其实logo他是损坏了二维码的知道吧

06:41.100 --> 06:48.700
他是把二维码中间的东西是损坏了但是为什么还是能识别呢就是因为有就是纠错等级存在啊哪怕中间没没了我也可以识别出来

06:49.260 --> 06:56.060
啊这就是纠错等级啊当然纠错等级越高的话那么是不是荣誉信息就越多荣誉信息越多的话你能够表示的

06:56.380 --> 06:59.820
你能够表达的正常的制服量就越少啊这是这么一个关系

07:00.420 --> 07:05.780
啊这是二维码的一些基本概念啊其实二维码的东西还是蛮多的啊非常非常多里面啊有各种各样的标准

07:06.300 --> 07:13.580
啊我们不去详细研究了啊我们了解一下就行了我们主要是看一下怎么来去生存二维码啊生存二维码呢我们可以使用一个第三方库啊

07:14.060 --> 07:19.940
不过这地方的三方库呢也有很多了啊我这里给他选了一个啊叫qr code啊这块可以

07:20.460 --> 07:26.820
这库呢是跨平台的他可以支持漏的在漏的里面生存二维码就在服务器生存也可以支持在客户端生存

07:27.420 --> 07:34.500
那么里面到时候到底在客户端生存呢看还是在服务器生存呢看具体情况吧啊其实呢我觉得这个区别也不知道

07:34.980 --> 07:41.100
这个东西呢没有什么特别需要的话我们就就在客户端生存也无所谓啊就是这个这个库啊

07:41.820 --> 07:56.900
但是呢这个这个库呢他有个问题啊就是在客户端你要在客户端使用那个库的话你需要自己打包啊他没有给你生成一个打包结果啊你需要用微卖啊自己自行进行打包啊如果说你要在客户端生存的话你也可以去使用另外一个库啊另外一个库呢也用的比较多是这个

07:57.620 --> 08:09.330
好你就叫做联系里说吧啊不扯CDN啊不扯CDN啊但是这上面呢有一个叫做那个qr code

08:10.010 --> 08:23.730
qr code啊就这个介绍啊这个呢也可以直接在客户端用啊我们一会再演示客户端嘛我们那个服务器上用一下其实这个库呢也可以在客户端用不过你要自己进行打包当你用了正在用那个微派可的话呢就直接用他就行了就行了啊

08:24.210 --> 08:28.610
看一下吧他这里边还可以提供了一个命令行这个首先安装安装一下

08:29.730 --> 08:31.330
npm i qr code

08:33.410 --> 08:44.970
他都给提供了一个命令行啊命令行呢我们也没什么用啊我们看一下这个他也可以在浏览器里边用他告诉你要自行打包啊你要通过微派过来的不二十里啊自行打包打包完了过后呢你可以通过啊

08:45.890 --> 08:54.650
这个qr code里边得到这个2 canvas还有一个方法把他生成到一个cameras里边去啊也可以这样做啊那那你也可以把他

08:55.330 --> 09:02.850
生成到那个就是那node.js里边你可以把他生成到一个data url就生成一个就是我们知道图片里边是一个data url对吧

09:03.290 --> 09:10.330
哎我们可以把生成一个data url啊啊也可以了把它保存为一张图片啊都可以他的用法有很多啊有很多

09:10.690 --> 09:16.490
那么基本的用法就是呃基本上就是你要生成的数据你要把什么数据放到二维码里边

09:17.530 --> 09:18.650
然后呢一个回调函数

09:19.690 --> 09:20.610
啊一个回调函数

09:21.770 --> 09:29.370
这个回调函数呢就是错误消息啊和整个那个呃这个url是什么呢就url就生成的data url

09:29.810 --> 09:36.330
生成的data url就这么个意思啊那么中间还可以写一些配置啊我们主要是看一下这个配置其实配置的话

09:36.810 --> 09:44.610
他还是比较智能啊他能够基本上能够识别你的各种情况他自行给你处理的一般来说呢也不用特别在意去写

09:44.890 --> 09:50.330
如果说你要配置的话你看他有很多配置比方说错误级别啊纠错级别你看啊

09:51.410 --> 09:59.490
arrow corrects level对吧纠错级别默认的默认是m啊默认是中等级别啊你可以自行更改根据情况

09:59.970 --> 10:04.250
还有什么呢还有这个mod对吧我之前解释过的几种编码方式啊mod

10:06.810 --> 10:17.690
集中编码方式对吧也可以指定的啊那么上面呢有一个图啊告诉你不同的编码方式不同的纠错级别他能够存在的制服数量

10:17.890 --> 10:26.610
比方说你是namoraker编码方式那么你是l的纠错级别l的纠错级别纠错级别很低那么你存在的数据量就很大你可以存在

10:27.050 --> 10:36.290
存放7000多个那个就是啊数字到这个二维码里边啊就这么个意思啊就这么个意思啊那么还可以设置什么呢还可以设置他的vercing

10:36.810 --> 10:43.050
一到事实之间是吧这些东西他一般都会给你自动处理啊根据你的情况自动处理一般都不用去管

10:43.730 --> 10:47.730
好了那么这里呢我们来看一下他怎么来把他保存文件

10:48.690 --> 10:55.010
下面有一些api啊你看server端你看浏览器端他可以他可以生成到canvas可以生成一个data url

10:55.450 --> 11:00.850
啊可以图计员变成一个字幕串啊server那么里边呢他可以生成到canvas啊也可以生成到那个

11:01.250 --> 11:08.010
data url也可以到字幕串也可以到文件也可以到文件流对吧都可以不要那么到文件吗我们来看一下生成一个二维码文件

11:09.570 --> 11:16.130
啊我们来看一下直接用吧我们这里的到index里边吧这是之前的啊删掉

11:18.010 --> 11:19.610
这东西就删掉了啊是之前的

11:21.490 --> 11:26.690
这东西之前的把删掉好比方说我们把这个注射掉啊然后那么导入这个二维码

11:27.450 --> 11:29.690
啊qr啊qrcode

11:31.010 --> 11:36.090
这块啊qrcode导入它然后呢这里边我们使用比方生成到文件啊

11:37.410 --> 11:38.850
to file

11:39.770 --> 11:47.250
第一个参数是什么呢他提示了啊第一个参数呢写一个文件的路径我们比方说存到当然这里最好写决定路径啊我这里简单一点

11:47.650 --> 11:51.730
比方存到一个就是code.png啊存到这个图片里边

11:52.450 --> 11:56.530
然后呢我们存放的文本呢比方说 abc 123啊

11:57.570 --> 12:01.570
啊然后呢第三个呢就是回调函数了回调函数你如果说有错误的话也

12:02.050 --> 12:04.050
报出错误对吧比方说 error 啊

12:04.850 --> 12:07.170
如果说有错误的话我们判断一下

12:08.530 --> 12:11.650
啊 error 如果说有值那么表示表示有错误

12:12.370 --> 12:13.650
有错误的话我们输出错误

12:14.210 --> 12:18.290
ok 你就写完了那特别特别简单就写完了好这样让我来运行一下

12:19.250 --> 12:20.290
npm start

12:23.320 --> 12:25.880
啊你看这个code 是不是生成出来了对吧

12:26.760 --> 12:30.440
那么这个level 应该是1啊这个很小对不对啊我们来扫一下

12:33.080 --> 12:34.200
我手续打不开啊

12:38.710 --> 12:46.000
扫一下啊你如果说你用微信扫一下啊或者用浏览器扫一下你会看到这个abc 123

12:46.000 --> 12:50.400
这个文本就不是出来了对吧啊如果说你要写个链接地址的话也可以比方说

12:50.960 --> 12:54.320
呃咱们的杜义呃腾讯科兰

12:55.200 --> 12:57.200
我们把这个复制一下然后呢我们

12:57.920 --> 13:01.040
保存的数据是这个数据啊再来一次再重新生成一次

13:01.520 --> 13:04.000
你看变成这个额维码了啊再去扫一下

13:07.510 --> 13:14.230
啊你看他就直接跳到这个就是啊这个地址了对吧啊就这么简单啊非常非常简单通过这个code就可以搞定了

13:14.310 --> 13:17.510
那么这是在服务器去生成啊服务器去生成

13:17.830 --> 13:21.910
这是生成到图片对吧那么除了生成到图片之外呢还可以生成到哪呢

13:21.910 --> 13:27.830
还可以生成到data url啊图data url啊比方说我们这里呢data url呢他这样也没用法

13:27.910 --> 13:29.990
我们把我们要生成的信息一杆写进去

13:31.110 --> 13:35.350
呃然后呢第二个参数呢就是生成的 url啊回掉函数里边

13:36.470 --> 13:41.110
l啊我们就输出 url啊我们看一下保存那么这个时候呢

13:41.670 --> 13:44.230
你看到这儿是不是生成一个data url了对吧

13:44.630 --> 13:52.390
这个玩意儿是不是生成出来了那么到时候呢你只需要把这个东西发给客户端对吧客户端把这个放在哪儿我们把我们把他复制一下吧

13:52.870 --> 13:54.070
好呗啊

13:54.870 --> 13:59.270
把他放到那个in这个室里边哎放到这个emg里边

14:00.790 --> 14:01.830
好保存我们

14:02.550 --> 14:08.230
open with your server是二万八就出来了对吧当然你要写个接口啊你要写个接口这种不简单啊非常简单

14:08.310 --> 14:12.550
你写个接口然后通过这个接口呢给你返回这么一个数据那么这个数据拿到过后呢

14:12.710 --> 14:15.270
你给emg src属性复制这个

14:15.990 --> 14:19.750
复制这个数据就完事了啊这是一个bass64编码的一个图片格式

14:20.390 --> 14:23.990
对吧就完事了啊就完事了啊这是关于这一块

14:24.790 --> 14:29.910
然后呢我们再演示一下这客户端生成吧我们刚才是在服务器生成对吧我们来客户端生成一下

14:31.590 --> 14:37.190
好客户端生成呢我们这里呢要打包啊我这个不想打包了我真不想打包了

14:37.270 --> 14:43.910
哪个去标准那个wifi我只用这个吧只用这个啊客户端我就用这个当然那个东西也可以用的啊也可以用的

14:44.470 --> 14:49.670
我就用这个玩意啊这个玩意呢他用法是不太一样的我们开玩意是比方说给他个id

14:51.590 --> 14:56.080
啊cbs吧随便给一个啊

14:56.800 --> 15:00.400
以后这个gs过后呢我在这里看他有观望没

15:01.360 --> 15:02.560
应该有个观望呢

15:04.000 --> 15:08.640
没观望吗没观望在哪里啊在这儿啊我说到哪里去看那个文档呢

15:09.840 --> 15:12.800
啊好观望啊他这个是专门为客户端提供的啊

15:13.120 --> 15:18.560
然后我们看一下怎么来用啊他的用法呢其实也非常简单啊就是六一个qr code

15:19.120 --> 15:20.320
就是六一个就完成了

15:22.080 --> 15:27.360
要这里呢这个可以改的就颜色可以改的其实刚才那个服务器端就这个玩意他也可以改颜色的

15:27.520 --> 15:34.480
你看一下他的obsync啊obsync里面我们找一找啊他前面是有说的有一个obsync配置

15:36.000 --> 15:36.560
obsync

15:37.520 --> 15:39.840
qr options

15:40.640 --> 15:43.440
varsing啊看一下他里边有

15:44.400 --> 15:53.120
啊整个图片整个图片的宽度啊color对吧他也可以配置的啊深色是什么颜色啊那个浅色是什么颜色啊他都有配置的

15:54.080 --> 15:57.680
没了意思吧啊那么这边呢我们来看一下这边这边呢

15:58.400 --> 16:04.080
看下一个代码一看其实就明白了这是你要编码的文本对吧你要编码的文本我们随便给一个吧

16:04.480 --> 16:05.520
比方说我给这个

16:08.960 --> 16:16.160
然后呢这是图片生成的宽度啊就是cameras的宽度高度啊然后呢这是深色啊深色的话我们就用

16:17.360 --> 16:18.560
比方说深色我们用

16:19.280 --> 16:19.760
蓝色

16:20.240 --> 16:20.560
咋样

16:21.440 --> 16:25.600
蓝色啊浅色的我们就用白色吗啊浅色用白色

16:26.400 --> 16:34.080
啊然后呢他的level啊level就是啊高对吧就是高啊那么这个我记得这个库他是可以设置中间那个logo的

16:34.800 --> 16:36.240
我记得这个库是可以的啊

16:36.960 --> 16:38.720
我有一点忘了

16:40.560 --> 16:43.440
我记得这个库哎这就是可以他不是主页吗

16:45.200 --> 16:51.440
这库能不能设置中间那个logo啊我一会试一下吧我一会试一下啊咱们保存一下

16:52.560 --> 16:57.200
啊我们这里呢啊这个这个cameras要给他啊要给他这个cameras cbs

16:59.200 --> 17:05.440
给他一个cameras啊咱们打开这个浏览器啊就直接用这个level什么打开就不用我们的服务器打开了啊

17:06.240 --> 17:07.440
好这里没有出来是吧

17:08.160 --> 17:08.960
他没有出来

17:12.240 --> 17:12.880
这怎么回事

17:13.840 --> 17:14.880
我找看一下啊

17:16.000 --> 17:16.560
cameras

17:20.880 --> 17:21.360
啊

17:23.120 --> 17:24.640
他这里边有个display now

17:27.330 --> 17:34.930
哦这个里边我这个地方我们不能写cameras啊要写这个啊要写这个啊放了一个div里边去啊div

17:35.570 --> 17:39.170
code放了一个div里边去他会在div里边自动生成cameras

17:39.730 --> 17:43.330
啊自动生成cameras啊就完事了对吧是不是就出来了

17:44.290 --> 17:45.170
啊这就出来了

17:45.170 --> 17:52.770
明儿的意思吧啊那么这这就是那个啊他把这个啊他实际上是有给你生成了一个cameras啊我们去看一下他的原理基本就清楚了啊

17:53.010 --> 17:57.970
他给你生成一个cameras他给你生成一个amg啊amg呢就是一个通过一个data

17:58.290 --> 18:02.370
datauio对吧那么就生成了这个图片了啊咱们可以稍一稍看行不行

18:03.330 --> 18:07.430
稍一稍

18:10.580 --> 18:16.740
好没问题的啊没问题的那么他中间是没有logo的哎我看一下我记得这个库好像是可以支持中间的logo的

18:17.140 --> 18:23.140
我们随便给他中间给他设置个src好像是试一下吧不行的话那么说明他个logo呢就

18:23.700 --> 18:30.180
啊就不不支持那个中间logo中间logo的话你可以用一个另外用一个图片给他盖上去对吧啊这个是

18:30.740 --> 18:32.740
比方说那个water吧啊logo

18:33.620 --> 18:34.420
这些pg

18:36.180 --> 18:40.100
看一下啊好像不支持啊这qr

18:40.660 --> 18:45.940
qr code介绍好像不支持中间logo那也不行啊那么如果说要中间支持中间logo的话

18:46.100 --> 18:51.700
你可以再用刚才那个code啊在服务器生成我们之前不是学过一个code吗叫gimp对吧你把那个logo盖上去就行了

18:51.780 --> 18:53.540
因为他这个东西有纠错级别的

18:53.940 --> 18:58.580
啊他有纠错级别的所以说无所谓的啊比方说嘛我给大家看一下吧他到底能不能纠错

18:59.540 --> 19:01.620
我就比方说不要放稍微放大一点

19:03.840 --> 19:05.840
我把中间这一部分的

19:07.200 --> 19:11.040
就这一部分的比方说我们这 logo放这然后呢给他塗掉

19:11.760 --> 19:13.600
要塗掉

19:16.050 --> 19:17.410
怎么样填充呢

19:18.130 --> 19:19.890
怎么样填充给他塗掉呢

19:20.770 --> 19:21.650
或者这样子吧

19:29.380 --> 19:31.300
我给他塗掉啊塗掉

19:32.020 --> 19:32.500
好

19:33.140 --> 19:34.100
现在我们少一下

19:34.820 --> 19:39.060
我还现在遮的遮的有点多啊遮住的有点多我们看一下少一少行不行

19:39.940 --> 19:40.900
我手机

19:44.150 --> 19:44.710
少一少

19:47.110 --> 19:50.710
啊现在不行了他遮住的有点多我们把这个拖远一点

19:51.030 --> 19:52.630
现在呢现在又可以少了

19:52.790 --> 19:53.190
下面

19:53.430 --> 19:53.830
啊

19:54.230 --> 19:57.910
那么现在你看遮住了这么多地方是不是也可以少因为他有纠错的啊他有纠错的

19:58.310 --> 20:01.750
好这就是关于这个二维码非常非常简单啊其他都没啥了

20:01.990 --> 20:06.790
到时候呢你要到底要在刻不算生存还是服务器生存随便啊随便我觉得刻不算生存也无所谓

20:07.190 --> 20:09.510
好那么这是关于这个二维码啊就讲到这

