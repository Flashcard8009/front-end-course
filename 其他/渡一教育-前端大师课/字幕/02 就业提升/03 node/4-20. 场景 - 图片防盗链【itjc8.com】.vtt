WEBVTT

00:00.000 --> 00:03.000
讲一讲这个图片防盗链

00:04.000 --> 00:07.000
咱们讲这么多场景的是希望大家呢

00:07.000 --> 00:11.000
能够通过这些场景呢去深入的去理解这个ATB协议啊

00:11.000 --> 00:14.000
很多时候呢一些很灵活的场景呢

00:14.000 --> 00:18.000
都需要从ATB协议去入手去考虑这个问题

00:18.000 --> 00:21.000
而不是要去使劲硬背这些场景啊

00:21.000 --> 00:24.000
千万不要使劲硬背 咱们学程序是非常灵活的

00:25.000 --> 00:28.000
首先要搞懂啊 什么叫图片防盗链

00:28.000 --> 00:30.000
就是说呢我们的网站上呢

00:31.000 --> 00:33.000
我们的网站上呢有一些图片对吧

00:33.000 --> 00:35.000
我们之前呢放到这儿了啊

00:35.000 --> 00:37.000
这个Image里边一个Water啊

00:37.000 --> 00:40.000
这个这是用户上团的图片啊图片嘛对不对

00:40.000 --> 00:42.000
那么这些图片呢是我们网站的资源

00:42.000 --> 00:45.000
我希望呢这些图片只能我们网站自己用

00:45.000 --> 00:47.000
我不希望别人用

00:47.000 --> 00:49.000
等一下啊我把空击进化系关系

00:49.000 --> 00:52.820
就是说这些图片呢我只希望自己用

00:52.820 --> 00:53.820
不希望别人用

00:53.820 --> 00:55.820
比方说啊咱们这个页面中呢

00:55.820 --> 00:57.820
我把这东西乱七八糟了啊

01:00.200 --> 01:01.200
呃

01:01.200 --> 01:06.150
哪一个哪一个页面比方说一个图片

01:06.150 --> 01:09.150
呃去访问什么呢访问那个Image

01:09.150 --> 01:11.150
就访问Image下面的Water吧

01:11.150 --> 01:13.150
Water.jpg去访问这个图片

01:13.150 --> 01:15.150
接下来呢我们来访问一下

01:15.150 --> 01:18.150
哎我们这里呢到中端里边去

01:18.150 --> 01:22.940
npm start

01:22.940 --> 01:25.940
好运行出来了啊接下来我们到浏览器里边

01:25.940 --> 01:28.940
localhost5008不就访问出来了吗对吧

01:28.940 --> 01:30.940
这个图片因为这是我们网站自己的图片

01:30.940 --> 01:32.940
所以说我们网站自己能用

01:32.940 --> 01:34.940
但是呢别的网站呢他可能呢

01:34.940 --> 01:36.940
他可能会倒用我们的图片

01:36.940 --> 01:39.940
怎么来倒用呢他可以这样子有两种倒用方式啊

01:39.940 --> 01:41.940
第一种倒用方式呢是点击右键

01:41.940 --> 01:43.940
我直接把这个图片存下来

01:43.940 --> 01:45.940
这个玩意你是防不住的

01:45.940 --> 01:48.940
这个玩意你是防不住的也很难防的啊

01:48.940 --> 01:49.940
呃

01:49.940 --> 01:51.940
因为他他存图片的时候

01:51.940 --> 01:53.940
实际上就是一个请求啊

01:53.940 --> 01:55.940
就是个请求过来一个普通的请求

01:55.940 --> 01:57.940
这个东西你防不住的也不好防

01:57.940 --> 01:59.940
那么如果说遇到这种情况的话

01:59.940 --> 02:01.940
我们一般会加一些图片水印对吧

02:01.940 --> 02:03.940
我们上几个学过的加一些图片水印呢

02:03.940 --> 02:05.940
来防止这个就是版权啊

02:05.940 --> 02:07.940
就是在保护我们的版权啊

02:07.940 --> 02:08.940
尽管他可以用吧他可以用的话

02:08.940 --> 02:10.940
我们上面有个logo啊也是

02:10.940 --> 02:12.940
也是帮我们自己打广告啊是这么个意思

02:12.940 --> 02:15.940
但是呢有些呢网站的还比较恶劣

02:15.940 --> 02:16.940
呃

02:16.940 --> 02:18.940
他连下图片都不想下

02:18.940 --> 02:19.940
因为为什么呢

02:19.940 --> 02:22.940
因为他如果说把图片存到自己的服务器上

02:22.940 --> 02:24.940
比方说我们是一个网网站

02:24.940 --> 02:25.940
对吧我们有自己的图片

02:25.940 --> 02:28.940
然后决立我们写一下吧

02:28.940 --> 02:29.940
我们是网站

02:29.940 --> 02:32.940
A然后呢有自己的一些图片资源

02:32.940 --> 02:33.940
然后呢一个网站B呢

02:33.940 --> 02:35.940
他把我们的图片下载下来

02:35.940 --> 02:36.940
然后呢把这个图片呢

02:36.940 --> 02:37.940
放到他服务器上

02:37.940 --> 02:39.940
这个东西呢其实还好

02:39.940 --> 02:41.940
因为我们图片毕竟是加了水印的

02:41.940 --> 02:42.940
尽管呢他可以去掉水印

02:42.940 --> 02:44.940
这个东西拦不住的

02:44.940 --> 02:45.940
去掉水印他也没办法

02:45.940 --> 02:47.940
至少他还有点麻烦吧

02:47.940 --> 02:48.940
需要一些成本

02:48.940 --> 02:49.940
呃

02:49.940 --> 02:51.940
那么有一种情况是很恶心的

02:51.940 --> 02:53.940
就是他连下载图片都不下载

02:53.940 --> 02:55.940
他直接通过网站B一个图片链

02:55.940 --> 02:56.940
直接练我们的图片

02:56.940 --> 02:58.940
为什么说这个东西很恶心呢

02:58.940 --> 03:00.940
因为他用我们服务器的带宽

03:00.940 --> 03:01.940
对吧

03:01.940 --> 03:02.940
因为他从我们服务器读图片

03:02.940 --> 03:04.940
所以用我们的带宽

03:04.940 --> 03:06.940
然后呢给他自己的网站

03:06.940 --> 03:08.940
呃变成他自己网站的资源

03:08.940 --> 03:10.940
比方说吧我举个例子

03:10.940 --> 03:12.940
咱们呢这里呢新建个文件夹吧

03:12.940 --> 03:13.940
这是另外一个网站啊

03:13.940 --> 03:15.940
Test什么随便取个名字

03:15.940 --> 03:16.940
Test

03:16.940 --> 03:18.940
托到VS code里边去

03:20.940 --> 03:21.940
就这个啊

03:21.940 --> 03:22.940
这是另外一个网站

03:22.940 --> 03:23.940
然后呢我们新建一个啊

03:23.940 --> 03:25.940
比方说印这个是点ATML

03:25.940 --> 03:27.940
然后他里边呢

03:27.940 --> 03:28.940
一个Image元素

03:28.940 --> 03:30.940
他只切这样子来

03:30.940 --> 03:32.940
他连下都不像下

03:32.940 --> 03:34.940
localhost008

03:34.940 --> 03:36.940
他直接练我们网站的图片

03:36.940 --> 03:39.940
然后呢是ImageWater.jpg

03:39.940 --> 03:40.940
保存啊

03:40.940 --> 03:41.940
这里我们看一下吧

03:41.940 --> 03:42.940
用这个手打开

03:42.940 --> 03:45.630
你看

03:45.630 --> 03:46.630
所以还是练过来了

03:46.630 --> 03:47.630
对吧他自己网站

03:47.630 --> 03:48.630
没有浪费任何资源

03:48.630 --> 03:50.630
然后全部用了我们网站资源

03:50.630 --> 03:52.630
给他给别人网站做加以了

03:52.630 --> 03:53.630
这个是很恶心的

03:53.630 --> 03:54.630
当然就看你防不防了

03:54.630 --> 03:56.630
有些网站他就不防无所谓的

03:56.630 --> 03:57.630
我加了水印的

03:57.630 --> 03:59.630
然后呢你实际上给我们打广告

03:59.630 --> 04:00.630
也无所谓

04:00.630 --> 04:01.630
看你怎么休想

04:01.630 --> 04:02.630
如果说你要防这个点的话

04:02.630 --> 04:03.630
是可以防的

04:03.630 --> 04:05.630
啊防这种情况是可以防的

04:05.630 --> 04:06.630
为什么呢

04:06.630 --> 04:07.630
你要去了解ATV协议

04:07.630 --> 04:08.630
你看一下啊

04:08.630 --> 04:09.630
他为什么说可以防呢

04:09.630 --> 04:11.630
我们看一下他的网络链接

04:11.630 --> 04:13.630
他有什么样的特点

04:13.630 --> 04:14.630
浏览器呢

04:14.630 --> 04:15.630
实际上考虑到这个问题啊

04:15.630 --> 04:16.630
所以说他给你

04:16.630 --> 04:18.630
他实际上告诉了服务器

04:18.630 --> 04:19.630
到底是什么一个情况

04:19.630 --> 04:21.630
你看我们去读取图片的时候呢

04:21.630 --> 04:23.630
他这个请求里边呢

04:23.630 --> 04:24.630
他有一个host

04:24.630 --> 04:26.630
host表示什么意思

04:26.630 --> 04:28.630
这个图片我请求的服务器

04:28.630 --> 04:30.630
请求的是localhost 5008

04:30.630 --> 04:32.630
这个图片的服务器

04:32.630 --> 04:33.630
请求的是这个服务器

04:33.630 --> 04:35.630
然后呢他会带一个这个东西

04:35.630 --> 04:36.630
referrer

04:36.630 --> 04:37.630
这是什么玩意呢

04:37.630 --> 04:39.630
就是说我这个请求啊

04:39.630 --> 04:40.630
包括链接GS也好

04:40.630 --> 04:42.630
链接CSS也好

04:42.630 --> 04:43.630
他都有同样的情况

04:43.630 --> 04:45.630
就是说我这个请求呢

04:45.630 --> 04:47.630
是这个网页发出的

04:47.630 --> 04:49.630
是这个网页给我们发出的请求

04:49.630 --> 04:51.630
是不是就有机会了

04:51.630 --> 04:52.630
他请求我们的服务器

04:52.630 --> 04:53.630
但是他带了一个这个东西

04:53.630 --> 04:55.630
浏览器会这种带过来

04:55.630 --> 04:56.630
这个时候呢

04:56.630 --> 04:57.630
我们在服务器上面

04:57.630 --> 04:58.630
是不是可以判断

04:58.630 --> 05:00.630
如果说你的host

05:00.630 --> 05:02.630
跟你的referrer不一样的话

05:02.630 --> 05:03.630
你是不是你这个referrer

05:03.630 --> 05:04.630
链接的是别的网站

05:04.630 --> 05:05.630
不是你自己的网站的东西

05:05.630 --> 05:06.630
对吧

05:06.630 --> 05:07.630
那么这个时候呢

05:07.630 --> 05:08.630
我服务器呢

05:08.630 --> 05:09.630
就可以拒绝给你

05:09.630 --> 05:10.630
或者是给你另外一张图片

05:10.630 --> 05:11.630
或者是拒绝给你

05:11.630 --> 05:13.630
就这么个意思

05:13.630 --> 05:14.630
所以说呢

05:14.630 --> 05:15.630
我们这里呢

05:15.630 --> 05:16.630
就可以来操作了

05:16.630 --> 05:18.630
我们来防止这种情况

05:18.630 --> 05:19.630
以外的意思吧

05:19.630 --> 05:21.630
我们把这到肉词里边去

05:21.630 --> 05:22.630
比方说我们这里

05:22.630 --> 05:23.630
不是静态资源吗

05:23.630 --> 05:24.630
对吧

05:24.630 --> 05:25.630
在资源里边

05:25.630 --> 05:27.630
来单独处理一下

05:27.630 --> 05:28.630
这个问题

05:28.630 --> 05:30.630
我们在这里写一个

05:30.630 --> 05:31.630
中间键

05:31.630 --> 05:32.630
自己写一个吧

05:32.630 --> 05:33.630
我们就会在这里

05:33.630 --> 05:35.630
建立一个中间键

05:35.630 --> 05:38.630
防盗链咋写呢

05:38.630 --> 05:40.630
咋写

05:40.630 --> 05:42.630
image protect

05:42.630 --> 05:44.630
made

05:44.630 --> 05:45.630
那么我们导出一个

05:45.630 --> 05:48.630
marge export

05:48.630 --> 05:51.630
race next

05:51.630 --> 05:52.630
好

05:52.630 --> 05:53.630
那么这边呢

05:53.630 --> 05:55.630
就用require

05:55.630 --> 05:57.630
image protect

05:57.630 --> 05:58.630
我们保护图片吧

05:58.630 --> 05:59.630
当然保护GS

05:59.630 --> 06:01.630
保护CSS是一样的道理

06:01.630 --> 06:02.630
那么比方说

06:02.630 --> 06:03.630
就保护图片

06:03.630 --> 06:04.630
我怎么判断呢

06:04.630 --> 06:05.630
其实很简单

06:05.630 --> 06:07.630
我就判断一下

06:07.630 --> 06:09.630
你那个rake 里边的

06:09.630 --> 06:10.630
就是host

06:10.630 --> 06:11.630
把host 拿到

06:11.630 --> 06:12.630
那么我们就得到

06:12.630 --> 06:14.630
rake.headers

06:14.630 --> 06:16.630
然后得到他们host

06:16.630 --> 06:18.630
得到你访问的主机

06:18.630 --> 06:19.630
就是我们嘛

06:19.630 --> 06:20.630
我们这个网站

06:20.630 --> 06:22.630
就是我们这个网站的主机名

06:22.630 --> 06:24.630
我们得到host

06:24.630 --> 06:25.630
这是我们

06:25.630 --> 06:26.630
它去访问的

06:26.630 --> 06:27.630
这是获取

06:27.630 --> 06:29.630
访问的

06:29.630 --> 06:31.630
就是当前

06:31.630 --> 06:33.630
本网站的主机名

06:33.630 --> 06:35.630
包括端口号

06:35.630 --> 06:37.630
包括端口号

06:37.630 --> 06:38.630
包括端口号

06:38.630 --> 06:39.630
这是第一个

06:39.630 --> 06:41.630
然后再获取它的什么refer

06:41.630 --> 06:42.630
我们首先看一下

06:42.630 --> 06:43.630
有没有refer

06:43.630 --> 06:44.630
没有的话

06:44.630 --> 06:45.630
我就得到一个空置无串

06:45.630 --> 06:46.630
或者是一个loud

06:46.630 --> 06:47.630
都行

06:47.630 --> 06:48.630
那么我们这里

06:48.630 --> 06:50.630
得到一个refer

06:51.630 --> 06:52.630
refer

06:53.630 --> 06:54.630
reke.headers

06:54.630 --> 06:55.630
对吧

06:55.630 --> 06:57.630
我们通过这个refer

06:57.630 --> 06:58.630
得到

06:58.630 --> 06:59.630
那么有没有可能是

06:59.630 --> 07:01.630
有没有可能是没有的

07:01.630 --> 07:02.630
对不对

07:02.630 --> 07:03.630
我们看一下

07:03.630 --> 07:04.630
如果它有的情况了

07:04.630 --> 07:06.630
如果说它有的情况下

07:06.630 --> 07:07.630
有的情况下

07:07.630 --> 07:08.630
我们这里是一个网页地址

07:08.630 --> 07:09.630
对不对

07:09.630 --> 07:10.630
我们要把它主机名单取出来

07:10.630 --> 07:11.630
对不对

07:11.630 --> 07:12.630
好

07:12.630 --> 07:13.630
那么咱们把主机名单取出来

07:13.630 --> 07:14.630
可以用什么来取呢

07:14.630 --> 07:15.630
我们可以用之前

07:15.630 --> 07:16.630
学过的那个

07:16.630 --> 07:17.630
URL

07:17.630 --> 07:18.630
对不对

07:18.630 --> 07:20.630
灵活运用以前学过的

07:20.630 --> 07:22.630
灵活运用以前学过的知识

07:22.630 --> 07:24.630
我们可以用URL POST

07:24.630 --> 07:26.630
把这个refer

07:26.630 --> 07:27.630
解析一下

07:27.630 --> 07:28.630
解析成一个对象

07:28.630 --> 07:29.630
对象里面我们取它的什么呢

07:29.630 --> 07:31.630
取它的host

07:31.630 --> 07:32.630
我们来看一下吧

07:32.630 --> 07:35.630
我们还是给它重新复制吧

07:35.630 --> 07:37.630
好 接下来我们来输出

07:37.630 --> 07:39.630
hostrefer

07:39.630 --> 07:40.630
好

07:40.630 --> 07:41.630
我们这里调到那个是

07:41.630 --> 07:42.630
我们往后处理

07:42.630 --> 07:43.630
我们这里的指示先

07:43.630 --> 07:44.630
单独处理一下

07:44.630 --> 07:45.630
然后我们往后

07:45.630 --> 07:46.630
往后移交

07:46.630 --> 07:48.630
我们来打印出来看一下

07:48.630 --> 07:50.630
好 接下来我们来这边

07:50.630 --> 07:51.630
清空一下

07:51.630 --> 07:52.630
然后我们先看

07:52.630 --> 07:54.630
我们自己的网站刷新

07:54.630 --> 07:56.630
自己的网站里边那里看到

07:56.630 --> 07:58.630
这个host

07:59.630 --> 08:01.630
这个reheader

08:01.630 --> 08:03.630
host没有了

08:05.630 --> 08:07.630
自己的网站

08:07.630 --> 08:09.630
刷新 再来

08:09.630 --> 08:11.630
自己的网站是

08:11.630 --> 08:13.630
localhost

08:13.630 --> 08:14.630
undefend

08:14.630 --> 08:15.630
因为我这里有两个琴琴

08:15.630 --> 08:16.630
一个是琴琴网页

08:16.630 --> 08:17.630
一个是琴琴图片

08:17.630 --> 08:18.630
琴琴网页的时候

08:18.630 --> 08:20.630
他们是没有refer

08:20.630 --> 08:21.630
然后琴琴图片的时候

08:21.630 --> 08:22.630
是不是一个refer

08:22.630 --> 08:24.630
refer就是我们自己的网站

08:24.630 --> 08:25.630
所以说这个东西

08:25.630 --> 08:26.630
我们是不是可以允许

08:26.630 --> 08:27.630
自己自家人

08:27.630 --> 08:28.630
对不对

08:28.630 --> 08:29.630
可以允许

08:29.630 --> 08:30.630
琴琴的网站和你图片的

08:30.630 --> 08:32.630
图片的所在的网页

08:32.630 --> 08:33.630
它那个

08:33.630 --> 08:34.630
主机名都是一样的

08:34.630 --> 08:35.630
所以说这两个一样的话

08:35.630 --> 08:36.630
我们可以允许

08:36.630 --> 08:37.630
然后看一下这边

08:37.630 --> 08:38.630
别的网站搞我们

08:38.630 --> 08:40.630
然后刷新

08:40.630 --> 08:42.630
你看别的网站就不一样了

08:42.630 --> 08:43.630
别的网站我们得到了

08:43.630 --> 08:45.630
结果是host

08:45.630 --> 08:46.630
因为我们别的网站

08:46.630 --> 08:47.630
网页不是我们的

08:47.630 --> 08:48.630
但是它这个图片是我们的

08:48.630 --> 08:49.630
那么它的refer

08:49.630 --> 08:50.630
是不是变成这个了

08:50.630 --> 08:52.630
是不是说明是别的网站的

08:52.630 --> 08:53.630
也说这两个不一样

08:53.630 --> 08:55.630
或者是refer or undefend

08:55.630 --> 08:57.630
或者是两个不一样

08:57.630 --> 08:58.630
就是两个不一样的时候

08:58.630 --> 09:00.630
我们是不是就应该

09:00.630 --> 09:01.630
不允许

09:01.630 --> 09:02.630
对不对

09:02.630 --> 09:03.630
或者是

09:03.630 --> 09:05.630
它不等于 undefend

09:05.630 --> 09:06.630
而且两个不一样

09:06.630 --> 09:07.630
所以说我们这里

09:07.630 --> 09:08.630
可以经过一个判断

09:08.630 --> 09:09.630
就是判断一下

09:09.630 --> 09:12.630
如果说有refer

09:12.630 --> 09:13.630
它有这个东西

09:13.630 --> 09:15.630
并且两个不一样

09:16.630 --> 09:17.630
两个不一样

09:17.630 --> 09:18.630
那么这种情况下

09:18.630 --> 09:20.630
我们是不是不允许

09:20.630 --> 09:21.630
对不对

09:23.630 --> 09:24.630
不行

09:24.630 --> 09:25.630
这里不行

09:25.630 --> 09:26.630
对不对

09:26.630 --> 09:27.630
我们来看一下刷新

09:28.630 --> 09:29.630
你看是不是不允许

09:29.630 --> 09:30.630
那么这边呢

09:30.630 --> 09:31.630
刷新

09:31.630 --> 09:32.630
是不是没问题

09:32.630 --> 09:33.630
对吧

09:33.630 --> 09:34.630
那么就这种情况

09:34.630 --> 09:35.630
那么不允许的时候

09:35.630 --> 09:36.630
我们要干嘛

09:36.630 --> 09:37.630
那你随便干嘛

09:37.630 --> 09:38.630
随便干嘛

09:38.630 --> 09:39.630
比方说我就给它

09:39.630 --> 09:41.630
整搞一个404

09:41.630 --> 09:43.630
Status 404

09:43.630 --> 09:44.630
我去告诉你不存在

09:44.630 --> 09:45.630
别人用

09:45.630 --> 09:46.630
我就不存在

09:46.630 --> 09:47.630
我们来看一下吧

09:47.630 --> 09:49.630
然后end就完事了

09:50.630 --> 09:51.630
保存

09:51.630 --> 09:52.630
过来我们再return

09:52.630 --> 09:54.630
不要往后移交了

09:54.630 --> 09:55.630
咱们来看一下

09:56.630 --> 09:57.630
这边我们图片没问

09:57.630 --> 09:58.630
任何问题

09:58.630 --> 09:59.630
然后这边别人的网站

09:59.630 --> 10:00.630
所以访问不了了

10:00.630 --> 10:01.630
对不对

10:01.630 --> 10:02.630
当然CSS

10:02.630 --> 10:03.630
这些东西

10:03.630 --> 10:04.630
是不是可以用

10:04.630 --> 10:06.630
一样的方式

10:06.630 --> 10:07.630
来进行处理

10:07.630 --> 10:08.630
对不对

10:08.630 --> 10:09.630
我们这里是处理图片

10:09.630 --> 10:10.630
当然图片的话

10:10.630 --> 10:11.630
进一步验证一下

10:11.630 --> 10:14.630
你请求的到底是不是一个图片

10:14.630 --> 10:15.630
我们只处理图片

10:15.630 --> 10:16.630
如果说别的的话

10:16.630 --> 10:17.630
我就不管了

10:17.630 --> 10:18.630
所以说这里

10:18.630 --> 10:19.630
我们只处理图片

10:19.630 --> 10:22.630
只处理图片

10:22.630 --> 10:23.630
然后我们怎么来判断

10:23.630 --> 10:25.630
判断你请求的是个图片

10:25.630 --> 10:26.630
我们是不是判断

10:26.630 --> 10:27.630
Rick Price

10:27.630 --> 10:28.630
对不对

10:28.630 --> 10:29.630
判断这个东西

10:29.630 --> 10:30.630
你请求的地址里面

10:30.630 --> 10:31.630
是不是一个图片

10:31.630 --> 10:32.630
我们通过这个什么PASS

10:32.630 --> 10:34.630
这种灵活处理

10:34.630 --> 10:36.630
require PASS

10:36.630 --> 10:38.630
我们通过PASS里面的

10:38.630 --> 10:41.630
就是得到它的后维名

10:41.630 --> 10:42.630
EXTNN

10:42.630 --> 10:43.630
得到它的后维名

10:43.630 --> 10:47.390
看它是不是一个图片的后维名

10:47.390 --> 10:49.390
那么我们这里得到它的

10:49.390 --> 10:50.390
EXTNN

10:50.390 --> 10:51.390
EXTNN

10:51.390 --> 10:52.390
后维名

10:52.390 --> 10:54.390
然后我们判断的后维名

10:54.390 --> 10:55.390
是不是在一个数组当中

10:55.390 --> 10:57.390
我们判断一下一个数组

10:57.390 --> 11:00.390
比方说.jpg

11:00.390 --> 11:02.390
.jpeg

11:02.390 --> 11:04.390
或者是.png

11:04.390 --> 11:05.390
反正东西总之

11:05.390 --> 11:06.390
是一些图片的后维

11:06.390 --> 11:07.390
gf

11:07.390 --> 11:08.390
如果说

11:08.390 --> 11:09.390
里面包含了

11:09.390 --> 11:11.390
包含了EXTNN

11:11.390 --> 11:12.390
或者换句话说

11:12.390 --> 11:13.390
如果说这个里面

11:13.390 --> 11:14.390
不包含EXTNN

11:14.390 --> 11:15.390
不包含的话

11:15.390 --> 11:16.390
你去请求的不是图片

11:16.390 --> 11:17.390
不是图片的话

11:17.390 --> 11:18.390
我允许你倒炼

11:18.390 --> 11:19.390
就看你具体的情况

11:19.390 --> 11:20.390
然后你如果说

11:20.390 --> 11:21.390
你JSC

11:21.390 --> 11:22.390
CSS

11:22.390 --> 11:23.390
我不防

11:23.390 --> 11:25.390
我就看图片就行了

11:25.390 --> 11:26.390
因为图片确实比较

11:26.390 --> 11:27.390
展弹宽

11:27.390 --> 11:28.390
如果说

11:28.390 --> 11:29.390
你不是一个图片的话

11:29.390 --> 11:30.390
OK

11:30.390 --> 11:31.390
那我就允许你

11:31.390 --> 11:32.390
我就允许你

11:32.390 --> 11:33.390
后面移交就行了

11:33.390 --> 11:34.390
return

11:34.390 --> 11:35.390
那么如果说

11:35.390 --> 11:36.390
你是图片的话

11:36.390 --> 11:37.390
我再来去做这个事情

11:37.390 --> 11:38.390
就这么个意思

11:38.390 --> 11:40.390
那么这是这一块

11:40.390 --> 11:41.390
那么我们这里是

11:41.390 --> 11:42.390
给它的是一个

11:42.390 --> 11:43.390
响应的是一个404

11:43.390 --> 11:44.390
对不对

11:44.390 --> 11:45.390
那么还有可以别的方式

11:45.390 --> 11:46.390
就是有这网站的

11:46.390 --> 11:47.390
它给的一个默认图片

11:47.390 --> 11:49.390
默认图片就是一个网站

11:49.390 --> 11:50.390
logo

11:50.390 --> 11:51.390
我啥都不给你的

11:51.390 --> 11:52.390
比方说我们这里

11:52.390 --> 11:53.390
随便下一张图片吧

11:53.390 --> 11:55.390
比方说我骂它一句

11:55.390 --> 12:03.820
就这个

12:03.820 --> 12:07.580
出唇一下

12:07.580 --> 12:08.580
到桌面

12:08.580 --> 12:16.630
logo

12:16.630 --> 12:18.630
我们就来一个logo

12:18.630 --> 12:19.630
logo

12:19.630 --> 12:23.030
GPG

12:23.030 --> 12:24.030
OK

12:24.030 --> 12:26.030
那么我们跳过来

12:26.030 --> 12:28.030
拿到这个MG图片来

12:28.030 --> 12:29.030
logo

12:29.030 --> 12:30.030
好

12:30.030 --> 12:31.030
那么我如果说

12:31.030 --> 12:32.030
你访问的是

12:32.030 --> 12:33.030
悼念的是图片的话

12:33.030 --> 12:34.030
我管理访问的是什么图片

12:34.030 --> 12:35.030
我全部给你这个

12:35.030 --> 12:36.030
那这个东西怎么办

12:36.030 --> 12:37.030
这东西其实很简单

12:37.030 --> 12:39.030
你只需要把这个东西改一下

12:39.030 --> 12:42.030
把这个请瑞可的UIL地址改一下

12:42.030 --> 12:43.030
改成什么

12:43.030 --> 12:45.030
改成这个MG下面的

12:45.030 --> 12:47.030
logo的GPG

12:47.030 --> 12:48.030
改一下这个UIL地址

12:48.030 --> 12:49.030
因为你这样的

12:49.030 --> 12:50.030
一改的话

12:50.030 --> 12:51.030
我们就不要

12:51.030 --> 12:52.030
结束了

12:52.030 --> 12:54.030
然后我们继续往后移交

12:54.030 --> 12:55.030
你看这改了过后

12:55.030 --> 12:56.030
继续往后移交

12:56.030 --> 12:57.030
是不是把这个地址就改了

12:57.030 --> 12:58.030
地址改了过后

12:58.030 --> 12:59.030
后边移交

12:59.030 --> 13:00.030
就是硬撕到静态资源的时候

13:00.030 --> 13:01.030
它就给它这个东西了

13:01.030 --> 13:02.030
因为你把地址改了

13:02.030 --> 13:03.030
不要意思吧

13:03.030 --> 13:05.030
后边的中间链在处理的时候

13:05.030 --> 13:07.030
就会按照新的地址来处理

13:07.030 --> 13:08.030
那么按照新的地址

13:08.030 --> 13:09.030
是不是把这个东西给它了

13:09.030 --> 13:10.030
对不对

13:10.030 --> 13:11.030
我就把一个UIL地址改了

13:11.030 --> 13:12.030
那么这个东西

13:12.030 --> 13:14.030
这个技术其实很简单

13:14.030 --> 13:17.030
叫做UIL ReadWrite

13:17.030 --> 13:19.030
重写UIL

13:19.030 --> 13:20.030
对吧

13:20.030 --> 13:22.030
我们在服务器内部不是从定向

13:22.030 --> 13:24.030
我没有给客户端响应

13:24.030 --> 13:25.030
我只是在内部服务器内部

13:25.030 --> 13:27.030
给它把UIL地址改了

13:27.030 --> 13:28.030
改了过后了

13:28.030 --> 13:29.030
后续的处理

13:29.030 --> 13:31.030
就按照新的UIL地址处理

13:31.030 --> 13:32.030
有这么个意思

13:32.030 --> 13:33.030
那么这里我们再看一下

13:33.030 --> 13:34.030
这里

13:34.030 --> 13:35.030
你看自己的网站

13:35.030 --> 13:36.030
是没有任何问题的

13:36.030 --> 13:37.030
两只可爱的小狗

13:37.030 --> 13:38.030
然后其他的网站

13:38.030 --> 13:39.030
就变成这个样子了

13:39.030 --> 13:41.030
访问什么图片都是这个东西

13:41.030 --> 13:43.030
这就是一个防盗�的

13:43.030 --> 13:44.030
这么一个技术

13:44.030 --> 13:45.030
其实也是利用的

13:45.030 --> 13:47.030
浏览器这么一个特点

13:47.030 --> 13:48.030
它会加一个Riverer

13:48.030 --> 13:50.030
通过Riverer的服务器

13:50.030 --> 13:51.030
可以判断

13:51.030 --> 13:52.030
它到底是哪一个网站

13:52.030 --> 13:54.030
哪一个页面来连接的资源

13:54.030 --> 13:55.030
就这么个意思

13:55.030 --> 13:57.030
这是关于这一块防盗链

