WEBVTT

00:00.240 --> 00:04.840
上节课了 咱们讲了魔力数据对吧

00:05.240 --> 00:08.440
那么我们目前的那个数据库里边啊

00:08.840 --> 00:10.840
这几张表已经有数据了啊

00:10.840 --> 00:11.640
这个这个表呢

00:11.640 --> 00:13.040
我们随便加了一些数据啊

00:13.040 --> 00:14.140
不可是呢也加了

00:15.440 --> 00:16.840
classes加了一些数据

00:16.840 --> 00:19.240
然后students加了很多魔力数据

00:19.440 --> 00:21.040
然后现在就剩下一张表了啊

00:21.040 --> 00:22.640
不可是我加这张表的目的呢

00:22.640 --> 00:24.040
就再讲一个知识点

00:24.240 --> 00:25.440
就是这个表的数据呢

00:25.440 --> 00:27.640
我们可能要从别的网站来

00:27.940 --> 00:30.040
我们要把别的网站里面的数据呢

00:30.040 --> 00:32.340
给它导入到这个表里边去

00:32.540 --> 00:33.340
那么这个地方呢

00:33.340 --> 00:35.340
就要学习数据抓取

00:35.540 --> 00:36.940
为什么要讲这个知识点呢

00:36.940 --> 00:39.540
是因为你们以后呢

00:39.540 --> 00:41.340
做了一些小的系统啊

00:41.840 --> 00:45.240
因为我以前的刚开刚刚毕业的时候呢

00:45.240 --> 00:46.340
接到一些私活

00:46.740 --> 00:49.040
其其中有一些小的网站啊

00:49.040 --> 00:50.840
他们没有什么数据

00:51.040 --> 00:54.940
比方说一些给什么的什么建材啊

00:55.640 --> 00:57.140
什么行情啊

00:57.840 --> 00:59.040
什么一书籍啊

00:59.040 --> 01:00.440
之类的一些小网站

01:00.540 --> 01:01.540
他们没有什么数据

01:01.540 --> 01:02.340
他们总想呢

01:02.340 --> 01:04.340
在别的网站里面把数据抓过来

01:04.540 --> 01:05.240
所以说呢

01:05.240 --> 01:08.140
他可能会用到一些数据抓取的技术啊

01:08.240 --> 01:08.940
这个数据抓起呢

01:08.940 --> 01:10.340
其实比较简单的

01:11.140 --> 01:12.540
你们如果说在公司里边呢

01:12.540 --> 01:14.140
可能不太会用这种东西

01:14.140 --> 01:14.840
但是呢

01:15.240 --> 01:16.840
如果说一些私活的话

01:17.140 --> 01:18.340
自己赚一些坏块的话

01:18.340 --> 01:20.040
可能会用到这样的技术啊

01:20.740 --> 01:21.940
比方说咱们这些课呢

01:21.940 --> 01:24.340
就去那个斗办图

01:24.340 --> 01:26.340
读书中去抓取一些数据信息

01:26.340 --> 01:27.940
把它放到我们的数据库里边

01:28.240 --> 01:30.040
咱们来看一下个斗办读书吧

01:30.540 --> 01:31.440
就这个网页啊

01:31.440 --> 01:33.540
在这个网页里边去给他把这些数据啊

01:33.540 --> 01:34.940
给他就第一页嘛

01:34.940 --> 01:37.840
就这个一把这些数据全部给他抓取过来

01:37.840 --> 01:39.140
然后放到我们的数据库

01:39.540 --> 01:40.040
好然后呢

01:40.040 --> 01:41.040
我们来对照一下

01:41.040 --> 01:43.540
首先我们要对照一下这个信息全部权

01:43.540 --> 01:44.940
就是我们这个网页的信息呢

01:44.940 --> 01:46.040
我们数据库里边

01:46.140 --> 01:47.140
就是想要的信息

01:47.140 --> 01:49.040
这个网网页里边有没有

01:49.240 --> 01:50.540
好咱们来一个个对照啊

01:50.540 --> 01:52.040
首先是数据的名称

01:52.340 --> 01:53.240
我把这个打开吧

01:53.440 --> 01:54.040
收集表

01:56.640 --> 01:57.940
数据的名称呢有

01:57.940 --> 01:58.240
对吧

01:58.240 --> 01:59.440
这个就是数据的名称

01:59.740 --> 02:00.140
然后呢

02:00.140 --> 02:01.640
数据的图片地址

02:01.640 --> 02:03.240
数据的图片地址不就是个图片吗

02:03.240 --> 02:03.740
对不对

02:04.340 --> 02:04.840
然后呢

02:04.840 --> 02:06.440
数据的那个

02:07.140 --> 02:08.140
那个这个是啊

02:08.140 --> 02:10.440
这个是发布日期啊

02:10.440 --> 02:12.340
数据的发布日期是

02:13.140 --> 02:13.740
在这里啊

02:13.740 --> 02:14.140
在这里

02:14.140 --> 02:15.840
其实我们点进去的话

02:16.640 --> 02:17.640
点进去的话

02:17.640 --> 02:19.540
也可以看到这个发布日期啊

02:20.840 --> 02:21.540
点进去啊

02:21.540 --> 02:22.540
你看这个坐着

02:22.540 --> 02:22.840
对吧

02:22.840 --> 02:23.940
是可以看到的

02:23.940 --> 02:25.640
为什么我不在这里

02:26.140 --> 02:26.840
不是坐着啊

02:27.140 --> 02:27.940
发布日期

02:28.340 --> 02:29.340
是在

02:30.240 --> 02:31.640
是在这出版年

02:33.240 --> 02:33.740
那么这里呢

02:33.740 --> 02:34.640
就涉及到一个问题啊

02:34.640 --> 02:36.640
就是说我这个数据啊

02:36.640 --> 02:37.440
他的日期啊

02:37.440 --> 02:38.340
他没有

02:38.340 --> 02:40.240
他不是一个完整的日期格式

02:40.240 --> 02:40.740
看到没

02:41.240 --> 02:42.940
他是只有一个年月啊

02:42.940 --> 02:44.040
有可能有些数据呢

02:44.040 --> 02:45.040
他只有一个年份

02:45.040 --> 02:46.140
他没有月份啊

02:46.540 --> 02:47.040
所以说呢

02:47.040 --> 02:48.040
这个数据固里边

02:48.040 --> 02:49.340
我把它作为一个

02:50.240 --> 02:50.840
对对对啊

02:50.840 --> 02:52.540
这里我幸好用的是Varsia啊

02:52.540 --> 02:53.640
不是Detail啊

02:53.640 --> 02:54.640
如果说用这个

02:54.740 --> 02:56.340
这个地方如果说用Detail的话

02:56.340 --> 02:57.640
那么可能会出一些问题啊

02:57.640 --> 02:59.440
因为他不是一个有效的日期格式

02:59.440 --> 03:00.640
这个要大家注意一下

03:00.940 --> 03:01.640
然后呢

03:01.640 --> 03:03.440
书籍的作者名字呢

03:03.440 --> 03:04.440
是在这啊

03:04.440 --> 03:05.240
原来说那个

03:05.240 --> 03:06.340
我不用点进去啊

03:06.340 --> 03:07.440
我就在这里外边呢

03:07.440 --> 03:09.140
外边实际上是不好抓的

03:09.140 --> 03:10.040
为什么不好抓呢

03:10.040 --> 03:11.740
我们来右键检查一下啊

03:11.740 --> 03:12.640
就这个网页呢

03:12.640 --> 03:13.340
我们把他到

03:13.340 --> 03:14.140
到时候把他读

03:14.140 --> 03:15.540
把他的元代码读出来啊

03:15.540 --> 03:16.440
抓入网页是什么

03:16.440 --> 03:17.840
就是把他元代码拿到

03:17.940 --> 03:18.640
拿到元代码

03:18.640 --> 03:20.640
从元代码里边去分析啊

03:20.640 --> 03:22.140
分析我们想要的数据

03:22.140 --> 03:22.940
那么这个地方呢

03:22.940 --> 03:24.540
我们到时候不是很好弄啊

03:24.640 --> 03:25.340
这个地方

03:25.340 --> 03:26.340
因为我不知道

03:26.340 --> 03:27.540
哪在哪里分割

03:27.540 --> 03:29.140
我不知道这个地方是出版社

03:29.140 --> 03:30.840
这个地方是作者

03:30.840 --> 03:32.540
这个地方是连份啊

03:32.540 --> 03:34.440
就是不是那么的清楚

03:34.440 --> 03:34.940
所以说呢

03:34.940 --> 03:35.640
我们最好呢

03:35.640 --> 03:36.740
是希望作者呢

03:36.740 --> 03:38.340
就单独在一个标签里边

03:38.340 --> 03:38.740
然后呢

03:38.740 --> 03:39.340
出版社呢

03:39.340 --> 03:40.740
单独在一个标签里边

03:40.740 --> 03:41.340
然后呢

03:41.340 --> 03:42.540
那个出版连约呢

03:42.540 --> 03:43.740
也在一个标签里边

03:43.740 --> 03:44.540
这样子好抓一点

03:44.540 --> 03:45.340
所以说我们到时候呢

03:45.340 --> 03:47.140
到书籍详情里边去抓

03:47.340 --> 03:47.540
啊

03:47.540 --> 03:48.640
这是我们的网页

03:48.640 --> 03:49.240
我们发现了

03:49.240 --> 03:50.640
数据是比较齐全的啊

03:50.640 --> 03:51.240
这三个数

03:51.240 --> 03:52.140
这后面三个数据呢

03:52.140 --> 03:54.040
就是我们那个Secretize啊

03:54.140 --> 03:55.440
Secretize自动给我们加的

03:55.440 --> 03:55.540
啊

03:55.540 --> 03:56.240
我们不用去管它

03:56.240 --> 03:57.440
它是自行管理

03:58.440 --> 03:58.840
ok

03:58.840 --> 03:59.740
那么这里呢

03:59.740 --> 04:00.440
哎

04:00.440 --> 04:01.240
保存一下啊

04:01.740 --> 04:01.940
啊

04:01.940 --> 04:03.440
我们现在发现数据是够的

04:03.440 --> 04:03.640
对吧

04:03.640 --> 04:05.240
那么现在我们要选行了

04:05.240 --> 04:07.440
就是我们要用什么样的技术去抓

04:07.740 --> 04:08.140
这里呢

04:08.140 --> 04:09.140
我们可以用到

04:09.140 --> 04:10.540
有两个第三方库啊

04:10.540 --> 04:12.140
一个叫做Axios

04:12.340 --> 04:14.140
如果说你学了5u之后呢

04:14.140 --> 04:15.540
再来看这个loader.js呢

04:15.540 --> 04:17.340
你肯定用过这个Axios

04:17.940 --> 04:18.040
啊

04:18.040 --> 04:20.640
如果说你自己还没有学过5u呢

04:20.640 --> 04:21.540
我给你说一下啊

04:21.540 --> 04:22.640
这个Axios的库呢

04:22.640 --> 04:23.440
特别简单

04:23.540 --> 04:25.140
它就是用来发送一个请求

04:25.840 --> 04:28.640
啊发送一个http请求

04:29.240 --> 04:29.740
啊

04:29.940 --> 04:32.140
然后到某一个服务器啊

04:32.340 --> 04:34.340
得到服务器的响应结果

04:36.320 --> 04:38.020
响应结果啊

04:38.020 --> 04:39.620
就这么简单发送一个请求

04:39.620 --> 04:41.120
然后得到服务器的响应结果

04:41.420 --> 04:42.220
那么这个库呢

04:42.220 --> 04:43.620
是呃钱

04:43.620 --> 04:44.920
就是客户端

04:45.520 --> 04:48.420
和服务器通用的啊

04:48.420 --> 04:49.120
都可以用这个库

04:49.120 --> 04:50.720
就是你在浏览器这边呢

04:50.720 --> 04:51.720
也可以用这个库

04:52.020 --> 04:54.020
那他就发送的是阿迦克斯请求了

04:54.020 --> 04:54.520
对吧

04:54.520 --> 04:55.720
呃在服务器呢

04:55.720 --> 04:57.320
他就是一个普通的http请求

04:57.320 --> 04:57.720
当然呢

04:57.720 --> 04:59.520
你完全也可以不用这个库

05:00.020 --> 05:02.120
我们用之前第一张学过的

05:02.620 --> 05:03.220
http

05:03.220 --> 05:05.120
http那个模块

05:05.420 --> 05:05.920
对不对

05:05.920 --> 05:07.920
那次模块也可以发送一个请求啊

05:07.920 --> 05:08.520
都可以

05:09.120 --> 05:09.720
但是这个库呢

05:09.720 --> 05:10.920
确实要方便一些啊

05:11.120 --> 05:11.820
另外一个库呢

05:11.820 --> 05:12.620
叫做chearo

05:13.120 --> 05:14.420
就是说我们通过这个库呢

05:14.420 --> 05:15.920
拿到了服务器的响应结果

05:15.920 --> 05:16.920
什么响应结果呢

05:17.920 --> 05:19.320
就这个网页的元代码

05:19.420 --> 05:20.820
那么我们要从元代码力

05:20.820 --> 05:22.920
不要去提取我们想要的信息

05:23.020 --> 05:24.620
那么就可以使用这个库啊

05:24.620 --> 05:25.220
chearo

05:25.220 --> 05:26.220
他是一个什么库呢

05:26.220 --> 05:27.720
他是一个Jquery的

05:28.520 --> 05:29.920
啊核心库

05:31.930 --> 05:32.930
就是他跟那个

05:33.430 --> 05:35.230
就是他跟那个dome无关

05:39.370 --> 05:41.970
与dome无关

05:42.370 --> 05:43.970
他不是说网页上的

05:43.970 --> 05:44.770
atmail

05:44.770 --> 05:46.070
那个dome element

05:46.170 --> 05:47.570
他不是那个东西啊

05:47.570 --> 05:49.270
他就是一个从一个制服串

05:49.270 --> 05:50.370
里边去分析

05:50.570 --> 05:52.570
我们这个制服串这个atmail

05:52.970 --> 05:54.970
片段里边有哪些元素

05:54.970 --> 05:56.070
可以跟我们选择啊

05:56.070 --> 05:57.170
我们以后用就知道了

05:57.670 --> 05:58.570
好就是这两个库啊

05:58.570 --> 05:59.270
我们用这两个库

05:59.270 --> 06:00.070
就已经可以搞定

06:00.070 --> 06:01.570
我们想要做的事情了

06:02.070 --> 06:02.570
好来吧

06:02.570 --> 06:04.670
我们到我们的系统里边

06:05.470 --> 06:06.570
嗯到系统里边呢

06:06.570 --> 06:07.670
我们把这两个啊

06:07.670 --> 06:09.370
这两个这个去去掉了啊

06:09.770 --> 06:10.470
这就去掉了

06:10.470 --> 06:10.970
不要了啊

06:10.970 --> 06:11.770
我们摸可数据呢

06:11.770 --> 06:12.470
已经结束了啊

06:12.470 --> 06:13.270
已经不需要那个

06:13.270 --> 06:14.770
就是模拟数据了

06:14.870 --> 06:15.370
我们现在呢

06:15.370 --> 06:16.770
需要去抓取数据

06:16.970 --> 06:18.470
啊我们这里新建个文件夹

06:18.770 --> 06:20.670
我们给他取个名字叫做spider吧

06:20.670 --> 06:22.270
我们做一个蜘蛛啊

06:22.470 --> 06:23.170
网络爬虫

06:23.170 --> 06:24.770
我们去抓取我们的数据

06:24.870 --> 06:26.570
右键我们新建一个文件啊

06:27.170 --> 06:28.570
呃这个文件呢

06:28.570 --> 06:30.770
我们给他写一个叫英德格斯吧

06:31.670 --> 06:32.670
就一个英德格斯

06:33.270 --> 06:34.570
或者叫做fetch

06:34.970 --> 06:35.570
box

06:36.070 --> 06:36.770
叫建式

06:36.970 --> 06:37.470
这个模后呢

06:37.470 --> 06:37.970
我们干嘛呢

06:37.970 --> 06:38.770
这个模后就是

06:38.870 --> 06:39.570
抓取

06:40.770 --> 06:42.670
豆瓣读书中的

06:43.370 --> 06:44.870
啊书籍信息

06:45.470 --> 06:46.570
好那么我们这里呢

06:46.570 --> 06:48.870
肯定要去访问豆瓣的相应的网页

06:48.870 --> 06:49.970
就是我们刚才看到的这个网页

06:49.970 --> 06:50.770
就是这个网页

06:50.970 --> 06:51.770
那么这边呢

06:51.770 --> 06:53.470
我们肯定要安装那个xsq

06:53.670 --> 06:55.170
顺便我们把这个qrl这个谷呢

06:55.170 --> 06:56.270
也干安装了啊

06:56.470 --> 06:57.970
我们把这个中桩打开

06:59.880 --> 07:01.280
好我们这里用npm

07:02.080 --> 07:03.580
安装这个xs

07:03.780 --> 07:05.080
然后呢安装qrl

07:09.110 --> 07:10.110
好安装完了啊

07:10.510 --> 07:12.210
好我们这里到这边来

07:12.510 --> 07:13.610
首先我们测试一下

07:13.610 --> 07:16.410
我们去发送一个请求到这个这个地址

07:16.410 --> 07:18.910
我们看一下能不能得到他的原代码信息

07:19.110 --> 07:20.210
啊咱们来试一下

07:20.510 --> 07:21.710
我们这里呢写一个函数

07:21.710 --> 07:22.710
当然是一个异步函数

07:22.710 --> 07:23.810
因为要发动请求吗

07:24.010 --> 07:24.910
一个异步函数

07:24.910 --> 07:27.810
然后呢我们这里呢写上一个什么名字呢

07:28.110 --> 07:28.810
嗯

07:29.810 --> 07:31.510
fade就是get

07:32.710 --> 07:33.310
book

07:33.810 --> 07:34.510
atmail

07:34.910 --> 07:36.310
啊bug atmail

07:36.710 --> 07:37.410
打个注释啊

07:37.410 --> 07:38.410
这个是什么意思

07:38.610 --> 07:40.010
这个呢是获取

07:43.210 --> 07:44.510
这是获取

07:44.710 --> 07:46.510
豆瓣读书

07:46.710 --> 07:47.210
呃

07:47.710 --> 07:50.710
读书网页的原代码

07:51.010 --> 07:52.210
啊他是来做这个时候的

07:52.210 --> 07:53.810
获取豆瓣读书网页的原代码

07:53.810 --> 07:55.010
那么这个地方怎么来做呢

07:55.010 --> 07:56.110
我们就完全可以利用

07:56.110 --> 07:58.010
我们刚才使用的那个库叫actress

07:58.610 --> 07:59.910
导入进来require

08:01.310 --> 08:02.310
呃actress

08:02.710 --> 08:03.610
啊导入进来啊

08:03.910 --> 08:05.010
好导入进来之后呢

08:05.010 --> 08:07.410
我们这里呢actress啊就去用一个

08:07.810 --> 08:09.410
啊这里啊他使用

08:09.410 --> 08:10.910
他建议你使用那个就是

08:10.910 --> 08:12.810
im就是es6的方式导入

08:12.810 --> 08:13.810
但是我们这里呢

08:13.810 --> 08:14.910
使用的是node.js啊

08:14.910 --> 08:15.910
所以说node.js

08:15.910 --> 08:16.410
你知道啊

08:16.410 --> 08:17.710
他里边有个default啊

08:17.710 --> 08:19.410
你学到这个webpack应该知道啊

08:19.610 --> 08:21.810
嗯这个里边是一个default的啊

08:21.910 --> 08:22.810
相当于是

08:22.810 --> 08:25.410
因为他是用es6那种模式写的啊

08:25.510 --> 08:26.710
呃当然呢他也知

08:26.710 --> 08:29.710
他也是用那个也用了那个node.js那种方式

08:29.710 --> 08:32.610
就是呃common.js的那种方式来导出

08:32.610 --> 08:34.610
那么为了保证兼容呢

08:34.610 --> 08:37.710
他是把那个用common.js那种方式来导出的

08:37.710 --> 08:39.210
东西呢放到default里边了

08:39.210 --> 08:40.110
所以说我们这里呢

08:40.710 --> 08:41.810
用一个default啊

08:42.210 --> 08:43.910
好这里呢我们actress

08:43.910 --> 08:45.210
我们后边用一个get

08:45.910 --> 08:47.310
发出一个get请求

08:47.510 --> 08:48.310
请求什么地址呢

08:48.310 --> 08:50.410
就有点类似阿迦克斯拉对不对

08:50.510 --> 08:51.710
请求的地址呢是什么地址呢

08:51.710 --> 08:52.410
就这个地址

08:52.510 --> 08:53.410
给他复制一下

08:53.810 --> 08:54.410
到这边来

08:54.510 --> 08:55.210
张天过来

08:55.410 --> 08:56.310
请求这个地址

08:56.610 --> 08:57.510
他就完了对吧

08:57.510 --> 08:58.810
后边是一些请求的配置

08:58.810 --> 09:00.010
我们也没有什么好配置的

09:00.010 --> 09:01.210
我们就一个而为之

09:01.210 --> 09:02.010
等待他

09:02.010 --> 09:03.010
等待他完成

09:03.010 --> 09:04.010
等待他完成过后呢

09:04.010 --> 09:05.210
我们可以拿到这个结果

09:05.410 --> 09:05.810
啊

09:07.010 --> 09:08.210
好我们这里输出一下啊

09:08.210 --> 09:09.010
输出race

09:10.410 --> 09:12.110
好接下来我们调用一下这个方法啊

09:12.110 --> 09:15.110
get box 80 mil

09:15.710 --> 09:16.110
来吧

09:16.110 --> 09:17.710
我们在index里边去引用一下

09:17.710 --> 09:18.510
require

09:19.310 --> 09:20.010
呃

09:20.610 --> 09:21.310
spider

09:22.210 --> 09:23.010
fetch box

09:23.910 --> 09:25.110
好保存保存

09:25.110 --> 09:26.610
接下来我们来运行一下

09:27.010 --> 09:28.310
no index

09:30.310 --> 09:30.910
你看一下

09:32.210 --> 09:33.010
是不是拿到了

09:33.210 --> 09:34.510
拿到了所有东西了啊

09:34.510 --> 09:35.310
他这个制服算了

09:35.310 --> 09:36.210
因为有换行啊

09:36.210 --> 09:37.910
他这个打印出来用一个奖

09:38.010 --> 09:39.010
他用了用了

09:39.010 --> 09:40.010
呃不是

09:40.010 --> 09:41.210
还不是制服说要换行

09:41.310 --> 09:43.310
所以他这个对象里边有很多的信息

09:43.310 --> 09:44.110
包括什么

09:44.110 --> 09:45.510
响应的头部啊

09:45.510 --> 09:47.410
还有响应的消息码呀

09:47.410 --> 09:48.010
这些东西对吧

09:48.010 --> 09:48.910
都有啊

09:48.910 --> 09:50.110
就是服务器的响应结果

09:50.110 --> 09:50.910
他服务器的

09:50.910 --> 09:52.510
响应的消息体在哪呢

09:52.510 --> 09:53.510
在这个data里边

09:53.510 --> 09:53.810
所以说呢

09:53.810 --> 09:55.510
我们只需要去打印这个data就行了

09:56.710 --> 09:57.410
好保存

09:58.410 --> 09:58.910
运行

10:02.260 --> 10:03.060
啊你看呀

10:03.560 --> 10:05.160
是不是拿到了整个制服串了

10:05.160 --> 10:05.660
对不对

10:05.660 --> 10:06.360
这个制服串呢

10:06.360 --> 10:07.860
就是服务器的响应结果

10:07.860 --> 10:10.560
那么我们要的书籍的信息就全部在里边

10:10.960 --> 10:12.660
你看书籍的信息就全部在里边

10:12.960 --> 10:13.860
啊什么虚构类啊

10:13.860 --> 10:15.060
这东西全部在里边了

10:15.260 --> 10:15.760
那行了

10:15.760 --> 10:17.860
我们把这个atm返回就行了

10:17.860 --> 10:18.360
就行了

10:18.360 --> 10:18.760
对吧

10:18.760 --> 10:19.260
atm

10:19.760 --> 10:20.560
返回这个race

10:20.660 --> 10:21.260
调data

10:21.560 --> 10:22.160
那么这样子呢

10:22.160 --> 10:22.760
调用这个函数

10:22.760 --> 10:23.460
是不是拿到了

10:23.460 --> 10:24.860
这个整个atm信息了

10:25.360 --> 10:25.860
好

10:25.860 --> 10:27.560
那么现在拿到atm信息过后呢

10:27.560 --> 10:30.560
我们要从那个信息中分析出我们想要的数据

10:30.560 --> 10:31.360
那么怎么办呢

10:31.360 --> 10:33.860
我们就是需要使用这个chiril这个库

10:34.860 --> 10:35.360
chiril

10:35.760 --> 10:36.460
导入进来

10:37.760 --> 10:38.260
chiril

10:38.560 --> 10:39.360
我们刚才安装好了

10:39.360 --> 10:40.560
接下来我们再写一个方法

10:41.660 --> 10:42.360
a think

10:42.760 --> 10:43.360
function

10:43.660 --> 10:45.460
嗯给他一个名字

10:45.460 --> 10:46.360
嗯

10:47.760 --> 10:50.060
get book list

10:50.360 --> 10:52.660
得到一个书籍的列表啊

10:52.660 --> 10:53.860
也就是这个方法返回什么呢

10:53.860 --> 10:55.260
返回一个书籍的数据

10:55.660 --> 10:58.160
就是根据一个atm

10:58.560 --> 10:59.460
根据那个

10:59.760 --> 11:02.160
就是从那个逗办读书中

11:02.560 --> 11:07.060
得到一个完整的网页

11:07.660 --> 11:08.160
并

11:09.460 --> 11:10.960
从网页中

11:12.060 --> 11:15.060
网页中分析出

11:16.160 --> 11:18.160
书籍的基本信息

11:18.460 --> 11:21.860
然后得到一个书籍的数据

11:21.860 --> 11:23.560
就把它变成对象数据了

11:24.160 --> 11:25.160
那么这个地方怎么办呢

11:25.160 --> 11:26.960
我们首先肯定要去调用这个函数

11:26.960 --> 11:28.760
来得到一个逗办的网页的atmail

11:28.760 --> 11:29.160
对吧

11:29.360 --> 11:29.960
这里得到

11:30.660 --> 11:31.160
atmail

11:32.560 --> 11:32.760
好

11:32.760 --> 11:33.360
导进来啊

11:33.360 --> 11:34.460
这里要位置啊

11:34.460 --> 11:35.160
等待一下

11:35.760 --> 11:35.960
好

11:35.960 --> 11:37.260
导入这个atmail之后呢

11:37.260 --> 11:38.960
我们要从这个atmail里面去分析

11:39.060 --> 11:39.860
分析出什么呢

11:39.860 --> 11:41.460
我们的书籍书籍信息

11:41.660 --> 11:42.760
那么怎么来分析呢

11:42.760 --> 11:44.060
如果说我们用政策表达式的话

11:44.060 --> 11:45.160
就非常非常麻烦

11:45.160 --> 11:45.660
可不可以呢

11:45.660 --> 11:46.360
当然可以啊

11:46.360 --> 11:47.560
只不过很麻烦

11:47.660 --> 11:49.560
我们就完全可以利用这个库啊

11:49.560 --> 11:50.660
叫chiril这个库

11:50.660 --> 11:51.060
这个库呢

11:51.060 --> 11:52.360
其实非常非常简单

11:52.760 --> 11:53.460
怎么简单法呢

11:53.460 --> 11:54.260
你看一下这个库啊

11:54.260 --> 11:55.760
我这里其实都有文档的啊

11:55.760 --> 11:57.460
给他念叼到他的官方网站的

11:57.460 --> 11:58.560
你可以去自己看一下

11:58.860 --> 12:00.060
我们通过这个chiril

12:00.160 --> 12:01.560
他里面一个函数要load

12:01.960 --> 12:03.360
你给他传递个atmail

12:03.760 --> 12:05.260
给他传递个atmail进去

12:05.460 --> 12:06.860
然后他会返回一个什么呢

12:06.960 --> 12:08.460
就返回类似于一个

12:08.460 --> 12:09.760
接chiril的那个

12:10.760 --> 12:11.760
函数啊

12:11.860 --> 12:13.360
那个权娶函数多了

12:13.660 --> 12:14.660
他就返回了这个

12:15.360 --> 12:16.060
那么这个东西

12:16.060 --> 12:17.760
你就可以利用他的选择器啊

12:17.760 --> 12:18.760
对他进行操作了

12:18.760 --> 12:20.460
比方说你可以用这个选择器啊

12:20.460 --> 12:21.360
选中body

12:21.460 --> 12:22.560
选中什么选中于某一个

12:22.560 --> 12:23.560
选中所有的Ul

12:23.560 --> 12:23.960
对吧

12:23.960 --> 12:25.060
这里边就写选择器了

12:25.060 --> 12:26.160
就非常非常的方便

12:26.360 --> 12:28.060
那么我们这里要选中什么呢

12:28.060 --> 12:28.960
我们来看一下啊

12:29.060 --> 12:31.760
我们要选中的是每一本书

12:31.760 --> 12:32.660
我们看一下每一本书

12:32.660 --> 12:33.660
他有什么样的特点

12:34.160 --> 12:34.760
每一本书呢

12:34.760 --> 12:36.460
我们可以看到他是一个li元素

12:36.460 --> 12:36.960
对不对

12:36.960 --> 12:37.660
但是网页上呢

12:37.660 --> 12:39.760
我们知道肯定有很多很多的li

12:39.760 --> 12:40.660
他肯定不是

12:40.760 --> 12:41.560
只有这么

12:42.360 --> 12:43.160
这么书记

12:43.160 --> 12:44.060
只有书记的li

12:44.060 --> 12:45.460
肯定其他地方还有li

12:45.560 --> 12:47.360
那么如果说我只选中li的话

12:47.360 --> 12:48.860
然后选中的范围太广了

12:48.860 --> 12:49.260
对吧

12:49.260 --> 12:51.160
那么来继续找一下特点

12:51.260 --> 12:52.360
他每一本书我发现

12:52.360 --> 12:53.360
这个这个书呢

12:53.360 --> 12:55.360
他是在这个Ul元素里边

12:55.460 --> 12:56.260
叫做什么

12:57.260 --> 12:59.460
covercalc

13:00.260 --> 13:02.460
叫做什么article

13:03.360 --> 13:06.160
我们看一下认为在这个div下面的li

13:06.260 --> 13:07.660
看一下是不是这个逻辑啊

13:07.760 --> 13:09.360
div下面的li

13:09.560 --> 13:11.160
这个article下面的li

13:11.260 --> 13:11.560
然后呢

13:11.560 --> 13:12.760
我们看一下右边的书记

13:12.760 --> 13:14.160
我们这里要找一下特征

13:14.760 --> 13:16.560
通过特征去提出提取

13:17.260 --> 13:17.960
这个div呢

13:17.960 --> 13:19.160
是在oside里边

13:19.160 --> 13:20.660
我们来把折叠一下

13:21.660 --> 13:22.860
一个是article

13:22.860 --> 13:24.060
一个是oside

13:24.860 --> 13:26.860
然后我们来找一找特征啊

13:26.860 --> 13:28.260
这个必须要把特征找出来

13:28.860 --> 13:30.860
我们要在这边

13:30.860 --> 13:32.260
这边有一个grid

13:32.260 --> 13:34.660
他是用个网格布局grid1212

13:35.260 --> 13:35.860
然后呢

13:35.860 --> 13:36.660
这一个content

13:36.660 --> 13:37.060
那行

13:37.060 --> 13:40.860
那我们试着在id为content的下面的grid

13:40.860 --> 13:43.060
1212下面的找到所有的li

13:43.060 --> 13:45.260
看一下是不是能够找到我们的想要的书记

13:45.460 --> 13:46.660
我们这里找到啊

13:46.660 --> 13:47.460
通过dolar

13:47.460 --> 13:49.260
找到这个id为content

13:49.260 --> 13:50.460
下面的什么呢

13:50.460 --> 13:52.660
下面的grid1212

13:54.620 --> 13:57.420
这个grid1212

13:58.620 --> 14:00.420
然后呢

14:00.420 --> 14:03.020
找到这个下面的所有的li

14:04.020 --> 14:04.320
好

14:04.320 --> 14:05.620
我们这里得到

14:06.020 --> 14:07.420
constlis

14:08.220 --> 14:10.420
我们来输出一下这个lis.nance

14:10.420 --> 14:11.220
后面的用法呢

14:11.220 --> 14:12.220
跟接块一样的啊

14:12.220 --> 14:15.620
所以说没有什么好复杂的nance

14:16.620 --> 14:17.020
好

14:17.020 --> 14:17.420
来吧

14:17.420 --> 14:18.420
我们来输出一下

14:18.820 --> 14:20.420
交为这个函数booklist

14:22.020 --> 14:23.220
booklist

14:24.720 --> 14:25.120
好

14:25.120 --> 14:25.820
试一下啊

14:25.820 --> 14:27.220
咱们在中桩里边

14:28.420 --> 14:29.020
运行

14:30.960 --> 14:32.060
得到结果是什么呢

14:32.860 --> 14:33.860
我们得到了

14:33.860 --> 14:35.060
这没保存啊

14:35.060 --> 14:36.460
没保存重新运行是

14:38.920 --> 14:39.820
40啊

14:39.820 --> 14:41.320
40本书记

14:41.320 --> 14:42.220
我们来数一数啊

14:42.220 --> 14:43.620
是不是40本书记

14:44.020 --> 14:49.020
12345678

14:49.420 --> 14:52.020
91011

14:52.020 --> 14:55.020
12131415

14:55.020 --> 14:58.420
1617181920

14:58.420 --> 14:59.320
一边是20

14:59.320 --> 15:00.320
两边就是40

15:00.320 --> 15:00.720
对吧

15:00.720 --> 15:02.920
顺便说我们找的范围是正确的

15:02.920 --> 15:04.420
那么就找到的这些li

15:04.420 --> 15:05.220
对不对

15:05.220 --> 15:05.920
那么接下来呢

15:05.920 --> 15:07.020
我们要做的就是

15:07.920 --> 15:09.020
把每找到

15:09.020 --> 15:10.520
把每一个li

15:10.520 --> 15:11.920
拿到每一个li

15:11.920 --> 15:14.320
然后从li里边去分析什么呢

15:14.320 --> 15:16.320
分析他的就是书籍封面呀

15:16.320 --> 15:18.020
书籍那个名称呀

15:18.020 --> 15:19.920
还有什么出版日期啊

15:19.920 --> 15:21.220
还有什么作者啊

15:21.220 --> 15:22.620
这些东西都把分析出来

15:22.620 --> 15:24.020
那么分析这个东西的时候呢

15:24.020 --> 15:27.520
实际上我们完全可以到详细业里边去分析

15:27.520 --> 15:29.820
因为详细业里面数据是不是更全啊

15:29.820 --> 15:30.220
而且呢

15:30.220 --> 15:31.520
他的详细的格式呢

15:31.520 --> 15:32.320
要比这个好一点

15:32.320 --> 15:34.320
因为这个东西就是放到一个标签里边的

15:34.320 --> 15:35.820
我们到时候就不好不好取

15:35.820 --> 15:36.620
明白的意思吧

15:36.620 --> 15:38.820
所以我们到详情业里边去把分析出来

15:38.820 --> 15:39.220
因此呢

15:39.220 --> 15:40.720
我这里要做的事情

15:40.720 --> 15:41.720
其实很简单

15:41.720 --> 15:44.320
我就把这个书籍每一本书籍的

15:44.320 --> 15:45.820
详情业拿到

15:46.420 --> 15:47.120
明白的意思吧

15:47.120 --> 15:49.620
我们把每一本书籍的详情业拿到

15:50.220 --> 15:50.420
好

15:50.420 --> 15:51.620
咱们看一下啊

15:51.620 --> 15:52.620
咱们网页上呢

15:52.620 --> 15:53.420
是这样子

15:54.120 --> 15:56.320
我们看到这个LIN里边啊

15:56.320 --> 15:57.220
每一个LIN里边

15:57.220 --> 15:58.520
他是有一个A元数的

15:58.520 --> 16:00.020
就是封面的A元数

16:00.020 --> 16:01.220
这个封面的A元数呢

16:01.220 --> 16:03.020
还有直接链接到哪呢

16:03.020 --> 16:04.320
链接到他的详情业

16:04.320 --> 16:04.920
看到没

16:04.920 --> 16:06.820
你看点封面是不是到详情业了

16:07.620 --> 16:07.920
对吧

16:07.920 --> 16:09.320
你看是不是到详情业了

16:09.320 --> 16:11.220
所以他就会链接到详情业

16:11.220 --> 16:11.720
因此呢

16:11.720 --> 16:14.420
我只需要去得到所有的A元数

16:14.420 --> 16:17.020
然后把这个每一个所有的A元数的什么

16:17.020 --> 16:18.720
这个这个东西取出来

16:18.720 --> 16:19.120
对不对

16:19.120 --> 16:20.520
我们是不是会搞定了

16:20.920 --> 16:21.120
好

16:21.120 --> 16:21.620
来吧

16:22.220 --> 16:23.320
咱们来试一下啊

16:23.920 --> 16:25.020
咱们到这边来

16:25.020 --> 16:26.320
我们重新给这个方法了

16:26.320 --> 16:27.220
改一个名字啊

16:27.220 --> 16:28.020
得到一个

16:28.020 --> 16:29.220
不是书籍输出了啊

16:29.220 --> 16:30.520
得到书籍的

16:31.520 --> 16:32.920
详情业

16:33.220 --> 16:34.120
链接

16:34.920 --> 16:35.520
输出

16:36.520 --> 16:38.020
说方法名字改一下

16:38.220 --> 16:39.620
get the book links

16:40.720 --> 16:41.420
然后这边呢

16:41.420 --> 16:42.920
我们就不得到不是li了

16:42.920 --> 16:45.020
得到了是li下面的A元数

16:45.020 --> 16:46.020
带一个内样式

16:46.020 --> 16:46.820
什么内样式呢

16:46.820 --> 16:47.820
cover

16:47.820 --> 16:49.120
这么一个内样式

16:49.120 --> 16:50.220
然后得到了是什么呢

16:51.120 --> 16:52.420
A元数啊

16:52.420 --> 16:53.420
就是 anchor

16:55.120 --> 16:55.820
animate

16:57.220 --> 16:58.820
得到了所有的A元数

16:58.820 --> 16:59.020
好

16:59.020 --> 16:59.620
咱们来输出一下

16:59.620 --> 17:00.420
A元数的长度

17:00.420 --> 17:01.320
应该也是

17:01.320 --> 17:02.520
也是40个啊

17:02.520 --> 17:04.020
应该是也是一样的

17:04.020 --> 17:04.920
咱们试一下吧

17:05.820 --> 17:06.020
好

17:06.020 --> 17:08.020
这边我们到这运行一下

17:09.520 --> 17:09.720
好

17:09.720 --> 17:10.620
还是40个

17:10.620 --> 17:10.920
对吧

17:10.920 --> 17:11.920
是没问题的

17:11.920 --> 17:12.020
好

17:12.020 --> 17:12.620
那么现在呢

17:12.620 --> 17:13.920
我们要做的就是

17:13.920 --> 17:15.020
把这个A元数呢

17:15.020 --> 17:16.020
使用map

17:17.020 --> 17:19.240
对吧

17:19.240 --> 17:20.440
我们知道那个接query里面

17:20.440 --> 17:20.940
也有map

17:20.940 --> 17:21.240
对不对

17:21.240 --> 17:21.740
它个map

17:21.740 --> 17:22.640
跟我们输出的map

17:22.640 --> 17:23.340
有点不一样啊

17:23.340 --> 17:24.140
它第一个参数呢

17:24.140 --> 17:25.240
是下标啊

17:25.240 --> 17:25.840
第二个参数呢

17:25.840 --> 17:27.240
是元数啊

17:27.240 --> 17:28.040
这个元数呢

17:28.040 --> 17:29.240
它也是被那个

17:29.240 --> 17:30.240
相当于是被接query

17:30.240 --> 17:31.240
封装过一次的啊

17:31.240 --> 17:32.240
这个其实实际上叫

17:32.240 --> 17:32.640
chiril

17:32.640 --> 17:33.440
封装过一次的

17:33.440 --> 17:34.440
所以说我们可以通过

17:34.440 --> 17:35.640
这个什么atr

17:35.640 --> 17:37.040
转i去butz

17:37.040 --> 17:39.740
它这个APN有点不一样啊

17:39.740 --> 17:40.940
接query里面是atr

17:40.940 --> 17:41.140
对吧

17:41.140 --> 17:42.440
它是i去butz

17:42.440 --> 17:43.140
那么得到什么呢

17:43.140 --> 17:44.640
等到rave

17:44.640 --> 17:45.840
得到这么一个属性啊

17:45.840 --> 17:46.340
真的呢

17:46.340 --> 17:47.540
我们把接受一下啊

17:47.540 --> 17:48.740
接受一下

17:48.740 --> 17:50.140
好输出一下rave

17:51.340 --> 17:52.340
保存

17:52.340 --> 17:52.940
运行

17:54.340 --> 17:54.740
你看是吧

17:54.740 --> 17:56.340
把所有的链接地址拿到了

17:56.340 --> 17:56.740
对吧

17:56.740 --> 17:57.940
一共40个链接地址

17:57.940 --> 17:59.340
就全部拿到了

17:59.340 --> 17:59.440
好

17:59.440 --> 18:00.440
拿到之后呢

18:00.440 --> 18:01.940
我们现在还要做的

18:01.940 --> 18:02.640
就是把它反

18:02.640 --> 18:04.040
我们最重要返回一个数组嘛

18:04.040 --> 18:04.440
对不对

18:04.440 --> 18:06.240
所以说我们把这个rave返回

18:06.240 --> 18:06.340
好

18:06.340 --> 18:07.040
返回过后呢

18:07.040 --> 18:09.240
得到是一个chiril的对象

18:09.240 --> 18:10.840
得到是一个chiril对象

18:10.840 --> 18:11.640
这个玩意就是一个

18:11.640 --> 18:12.440
相当于是接query

18:12.440 --> 18:13.640
因为我们知道接query对象

18:13.640 --> 18:15.040
其实就是一个

18:15.140 --> 18:15.940
伪数组对不对

18:15.940 --> 18:17.940
它这里得到的还是一个伪数组对象

18:17.940 --> 18:18.840
那么怎么办呢

18:18.840 --> 18:19.440
我们这里呢

18:19.440 --> 18:21.840
可以用一个变蓝接受一下

18:22.840 --> 18:24.040
也不用接受了啊

18:24.040 --> 18:25.740
这个东西得到的就是一个chiril对象

18:25.740 --> 18:26.140
因此呢

18:26.140 --> 18:27.340
我们可以这里的

18:27.340 --> 18:29.040
因为在query里面不是一个gator方法吗

18:29.040 --> 18:29.540
对不对

18:29.540 --> 18:30.540
得到数组的某一项

18:30.540 --> 18:31.940
如果说你不传参数的话

18:31.940 --> 18:34.240
它得到的就是一个真实的数组

18:34.240 --> 18:35.840
得到的就是个真实的数组

18:35.840 --> 18:36.040
好

18:36.040 --> 18:37.540
咱们来看一下吧

18:37.540 --> 18:38.840
这里我们得到linkz

18:40.240 --> 18:41.340
得到一个真实的数组

18:41.340 --> 18:42.540
我们把个linkz返回

18:43.940 --> 18:44.040
好

18:44.040 --> 18:44.540
试一下

18:44.640 --> 18:45.940
我们下面调用这个方法

18:45.940 --> 18:47.340
z得到这个linkz

18:49.740 --> 18:50.740
输出一下这个linkz

18:51.440 --> 18:51.840
看一下

18:51.840 --> 18:53.740
现在是能不能把这个数组拿到了

18:55.240 --> 18:55.640
运行

18:56.840 --> 18:58.140
你看是不是拿到这个数组了

18:58.140 --> 18:58.640
这个数组呢

18:58.640 --> 18:59.640
每一项是个字幕串

18:59.640 --> 19:00.940
就是一个链接地址

19:00.940 --> 19:01.140
好

19:01.140 --> 19:02.440
我们这个方法是不是写完了

19:02.440 --> 19:03.740
拿到所有数据的

19:03.740 --> 19:06.940
输集的详情页的链接数据

19:07.740 --> 19:07.940
好

19:07.940 --> 19:09.440
有了这个方法之后呢

19:09.440 --> 19:11.440
我们就可以对每一本书记

19:11.440 --> 19:13.540
是不是进入详情页去分析

19:13.640 --> 19:14.740
分析它的信息

19:14.740 --> 19:15.640
那么比方说吧

19:15.640 --> 19:17.140
我们这里又写个方法

19:17.140 --> 19:18.340
又写个函数

19:18.340 --> 19:20.940
get book info

19:20.940 --> 19:22.740
或者叫book detail

19:22.740 --> 19:24.840
得到一本书的详情页

19:24.840 --> 19:25.840
你给我一个什么呢

19:25.840 --> 19:29.040
给我一个详情页的detail URL

19:29.040 --> 19:31.240
得到一个详情页的地址

19:31.240 --> 19:32.640
我们这里呢

19:32.640 --> 19:35.240
这是得到

19:35.240 --> 19:39.540
就是根据输集详情页的地址

19:39.640 --> 19:45.140
得到该书籍的详细信息

19:45.140 --> 19:45.340
对吧

19:45.340 --> 19:46.640
我们要做这么一件事

19:46.640 --> 19:46.840
好

19:46.840 --> 19:47.340
来吧

19:47.340 --> 19:47.740
这个呢

19:47.740 --> 19:48.840
给我一个UIL地址

19:48.840 --> 19:51.840
那么下面我们可以调用试一下啊

19:51.840 --> 19:52.540
调用试一下

19:54.440 --> 19:54.840
这边呢

19:54.840 --> 19:56.040
我就把个地址复制一下

19:56.040 --> 19:57.440
随便复制个地址

19:57.440 --> 19:58.040
再放进去

20:00.340 --> 20:01.440
然后让它去搞定

20:01.440 --> 20:02.840
看这个函数能不能搞定

20:02.840 --> 20:03.040
好

20:03.040 --> 20:03.640
那么这个函数呢

20:03.640 --> 20:04.240
其实就做什么呢

20:04.240 --> 20:05.840
是不是又发生一个阿迦克斯请求

20:05.840 --> 20:06.840
而不是阿迦克斯请求啊

20:06.840 --> 20:09.140
现在就叫普通的ttp请求

20:09.140 --> 20:11.040
就说 await 啊

20:11.040 --> 20:13.440
用什么actuals get

20:13.440 --> 20:15.540
把这个detail URL是不是传进去

20:15.540 --> 20:16.240
传进去过后呢

20:16.240 --> 20:17.540
我们这里得到啊

20:17.540 --> 20:18.140
const

20:18.140 --> 20:18.840
这里得到呢

20:18.840 --> 20:19.640
是那个

20:22.240 --> 20:23.540
得到它的响应结果

20:23.540 --> 20:24.540
拿到响应结果了什么

20:24.540 --> 20:25.740
data

20:25.740 --> 20:26.140
对不对

20:26.140 --> 20:28.640
这个是不是atm内容

20:28.640 --> 20:30.240
拿到这个atm内容之后呢

20:30.240 --> 20:32.940
我是不是又可以用那个qreal去

20:32.940 --> 20:34.140
load一下

20:34.140 --> 20:34.640
qreal

20:36.440 --> 20:36.940
load

20:36.940 --> 20:37.940
把这个atm内容呢

20:37.940 --> 20:38.640
夹杂出来

20:39.740 --> 20:41.640
现在我们要去分析翔亲爷了啊

20:41.640 --> 20:43.540
那么这里的得到一个界块位

20:43.540 --> 20:44.840
相当于是个界块对象

20:46.140 --> 20:46.640
好来吧

20:46.640 --> 20:48.140
我们来分析一下翔亲爷

20:50.980 --> 20:51.980
好翔亲爷里边

20:51.980 --> 20:52.980
我们要得到哪些东西呢

20:52.980 --> 20:53.980
首先一个来啊

20:53.980 --> 20:54.980
首先是

20:54.980 --> 20:56.680
书籍的标题

20:56.680 --> 20:58.680
书籍的标题它是放到哪呢

20:58.680 --> 21:00.980
放到一个叫做

21:00.980 --> 21:01.580
我看一下啊

21:01.580 --> 21:02.980
我们要找一下特征

21:02.980 --> 21:04.980
放到一个wiper里边

21:04.980 --> 21:06.180
有一个he元数

21:06.180 --> 21:07.180
我看一下整个网页里边

21:07.180 --> 21:08.480
是不是只有一个he元数

21:08.480 --> 21:11.380
这个东西要根据具体的网站来分析啊

21:11.380 --> 21:12.180
找到he

21:12.180 --> 21:13.080
我们搜索一下啊

21:17.930 --> 21:20.130
he元数是不是只有一个

21:20.130 --> 21:21.330
后边是选择器了

21:21.330 --> 21:22.930
he元数我们这样子搜索

21:23.630 --> 21:24.130
he

21:25.130 --> 21:25.930
是不是只有一个

21:25.930 --> 21:26.930
好那就简单了

21:26.930 --> 21:29.830
我们只需要去得到he里边的内容就行了

21:29.830 --> 21:31.230
好那这个很简单

21:31.230 --> 21:31.730
来吧

21:31.730 --> 21:33.330
我们去通过这个刀呢

21:33.330 --> 21:35.530
得到什么he元数

21:35.530 --> 21:37.730
它的什么内容text

21:37.730 --> 21:38.130
对不对

21:38.130 --> 21:39.930
它的内文本

21:39.930 --> 21:41.030
普通文本

21:42.030 --> 21:42.930
那么这个是不得到

21:42.930 --> 21:44.530
书籍的标题了

21:44.530 --> 21:44.930
对不对

21:44.930 --> 21:46.030
书籍的标题

21:46.030 --> 21:47.630
就书籍的名称嘛

21:47.630 --> 21:48.530
我们输出一下

21:48.530 --> 21:50.930
书籍的名称看能不能输出

21:50.930 --> 21:52.130
保存

21:52.130 --> 21:52.530
这边

21:53.930 --> 21:54.330
运行

21:55.730 --> 21:57.630
你看是拿到书籍名称了

21:57.630 --> 21:59.030
那书籍名称过后拿到过后呢

21:59.030 --> 22:00.130
他有一些

22:00.130 --> 22:01.430
所谓的空白制服

22:01.430 --> 22:01.830
对不对

22:01.830 --> 22:02.730
那么我们是不是可以用

22:02.730 --> 22:04.730
去把去掉

22:04.730 --> 22:05.630
所谓空白制服

22:06.730 --> 22:07.030
再来

22:08.830 --> 22:09.630
你看

22:09.630 --> 22:11.930
是不是就一个书籍的名称就拿到了

22:11.930 --> 22:13.430
好书籍的名称是不是搞定了

22:13.430 --> 22:14.930
搞定了书籍名称之后

22:14.930 --> 22:17.030
有时候说这个会不会导致跨域问题

22:17.030 --> 22:18.030
我再说一遍

22:18.030 --> 22:19.030
这个到了服务团

22:19.030 --> 22:21.530
跟跨域就没有任何关系了

22:21.530 --> 22:23.930
跨域是那个浏览期段搞出来的

22:23.930 --> 22:24.930
对不对

22:24.930 --> 22:25.030
好

22:25.030 --> 22:27.430
然后现在我们接下来啊

22:27.430 --> 22:29.730
接下来是书籍的封面地址

22:29.730 --> 22:30.330
封面地址呢

22:30.330 --> 22:31.330
是一张图片

22:31.330 --> 22:33.730
图片我们要读它的什么src属性

22:33.730 --> 22:34.130
对不对

22:34.130 --> 22:35.130
是不是要读这个

22:35.130 --> 22:36.430
那么我们图片在哪

22:36.430 --> 22:37.430
然后看一下啊

22:37.430 --> 22:39.030
这个东西要找特征

22:39.130 --> 22:41.230
一定要找去去找他的特征

22:41.230 --> 22:42.030
他在哪呢

22:42.030 --> 22:45.030
他在一个main pick里边啊

22:45.030 --> 22:47.530
在这里边id为main pick

22:47.530 --> 22:48.230
然后呢

22:48.230 --> 22:50.830
里边有一个a元数nbg啊

22:50.830 --> 22:51.230
然后呢

22:51.230 --> 22:52.530
里边一个image好

22:52.530 --> 22:52.930
来吧

22:52.930 --> 22:54.630
我们再试一下

22:54.630 --> 22:56.130
找到他的图片啊

22:56.130 --> 22:57.430
就是image url

22:58.630 --> 22:59.430
在哪呢

22:59.430 --> 23:02.330
在这个id为main pick

23:03.430 --> 23:04.230
main pick

23:05.330 --> 23:06.130
然后呢

23:06.130 --> 23:08.130
有个内样是nbg

23:08.130 --> 23:10.330
然后在选中他下边的image元数

23:10.330 --> 23:13.030
然后找到他怎么attr啊

23:13.030 --> 23:14.130
他这个这个对象啊

23:14.130 --> 23:15.330
这个对象跟那个

23:15.330 --> 23:17.030
跟刚才那个对象还有点不一样

23:17.030 --> 23:17.930
有点不一样

23:17.930 --> 23:18.630
具体怎么回事

23:18.630 --> 23:19.630
我image去深究他

23:19.630 --> 23:20.730
总之可以用就行了

23:20.730 --> 23:21.430
那么这个时候呢

23:21.430 --> 23:22.830
我们可以使用attr

23:22.830 --> 23:25.430
来获取他的那个src属性

23:26.530 --> 23:27.330
对吧

23:27.330 --> 23:27.530
好

23:27.530 --> 23:29.430
那么我们拿到这个image url

23:29.430 --> 23:30.530
我们再输出

23:30.530 --> 23:32.230
image url

23:32.230 --> 23:34.630
看一下image url能不能输出

23:34.630 --> 23:35.330
来 运行

23:36.330 --> 23:37.130
好

23:37.130 --> 23:38.630
image url要输出了

23:38.630 --> 23:40.030
是不是个图片地址

23:40.030 --> 23:41.430
我们复制一下啊

23:41.430 --> 23:42.730
到浏览器里边打开

23:42.730 --> 23:44.330
看一下能不能防蚊

23:44.330 --> 23:45.330
是不是可以防蚊

23:45.330 --> 23:45.730
对吧

23:45.730 --> 23:47.130
图片地址也拿到了

23:47.130 --> 23:48.130
然后还有什么信息呢

23:48.130 --> 23:51.030
还有一个作者和一个出版年

23:51.030 --> 23:51.630
作者呢

23:51.630 --> 23:53.030
我们看一下在在哪

23:53.030 --> 23:53.530
选中

23:53.530 --> 23:53.730
哎

23:53.730 --> 23:54.930
还是个这个爬起数据

23:54.930 --> 23:57.930
他的基本原理还是蛮简单的啊

23:57.930 --> 23:58.530
在哪呢

23:58.530 --> 23:59.430
在那个

24:00.730 --> 24:02.130
哎在这个

24:02.130 --> 24:03.330
这个是

24:03.330 --> 24:06.130
他在一个info这个

24:06.130 --> 24:07.730
it为info里边

24:07.730 --> 24:09.130
有一个

24:11.030 --> 24:12.130
有一个

24:12.130 --> 24:13.130
我看这里边

24:13.830 --> 24:17.530
info里边有一个spanpio

24:17.530 --> 24:19.330
呃pio还很多

24:19.330 --> 24:21.430
我们要精确地找到他的作者

24:21.430 --> 24:22.430
看怎么去找

24:23.130 --> 24:25.430
他也没有特殊的那样式

24:25.430 --> 24:27.030
那么找到这个it为info

24:27.030 --> 24:28.030
it肯定是唯一的

24:28.030 --> 24:29.230
那么这个div呢

24:29.230 --> 24:30.130
这个div

24:30.130 --> 24:32.430
这个div肯定是能够拿到的

24:33.230 --> 24:35.030
那只能按到顺序来了呀

24:35.430 --> 24:36.630
那这个没办法呀

24:36.630 --> 24:38.030
只能按到顺序来了

24:38.830 --> 24:40.330
啊这个顺序我就怕

24:40.330 --> 24:41.030
我就怕什么呢

24:41.030 --> 24:42.430
怕一会别的数据呢

24:42.430 --> 24:43.830
可能少了一个信息

24:43.830 --> 24:45.330
啊少了一个信息

24:45.330 --> 24:47.230
我就不是那么好拿到了

24:48.030 --> 24:48.930
怎么办呢

24:49.530 --> 24:50.530
我们怎么办呢

24:51.330 --> 24:52.530
我们这样子吧

24:53.630 --> 24:57.130
我们去找到这些这个div

24:57.130 --> 25:00.730
下边的所有的span元数

25:01.430 --> 25:04.730
找到所有class为pl的十半元数

25:05.330 --> 25:06.030
懂我意思吧

25:06.030 --> 25:09.530
我找到这个class为pl的十半元数

25:09.530 --> 25:11.230
然后看一下他的内容

25:11.230 --> 25:13.030
有没有保罕作者两个字

25:13.930 --> 25:14.630
我们这样子

25:15.730 --> 25:16.430
这个地方呢

25:16.430 --> 25:17.230
我们找作者啊

25:17.230 --> 25:20.130
我们用那个找到他下边的info

25:20.830 --> 25:23.630
下边的所有的十半元数

25:23.630 --> 25:24.430
内样式

25:25.330 --> 25:27.030
为pl的十半元数

25:27.430 --> 25:29.030
啊这里是不是找到一大堆啊

25:29.030 --> 25:30.130
一大堆十半元数

25:30.830 --> 25:32.130
好找到十半元数的过后呢

25:32.130 --> 25:35.030
我们要去找他里边哪个十半元数

25:35.030 --> 25:38.130
里边他的内容是包含作者的

25:38.130 --> 25:39.230
啊我们要做这么一件事

25:39.830 --> 25:40.330
好来吧

25:40.930 --> 25:42.430
看这这里怎么来做啊

25:42.430 --> 25:43.130
spans

25:44.130 --> 25:47.930
嗯我们filter吧用filter啊

25:47.930 --> 25:48.630
这边呢

25:50.870 --> 25:52.570
他有没有函数的啊

25:52.570 --> 25:54.070
这可以给函数啊

25:54.070 --> 25:55.270
第一个是下标

25:55.270 --> 25:56.670
第二个是l一样的

25:58.670 --> 26:00.070
然后呢我这边呢

26:00.070 --> 26:01.870
去看一下那个l

26:02.570 --> 26:04.670
他的内文本啊text

26:06.270 --> 26:07.470
我们把包装一下吧

26:08.970 --> 26:10.170
呃包装一下

26:10.170 --> 26:11.770
就有点类似于把普通元素

26:11.770 --> 26:13.170
把普通元素写成什么了

26:13.170 --> 26:15.470
写成那个就是啊那个

26:16.170 --> 26:17.970
啊写成那个就是

26:18.270 --> 26:19.270
界宽位元素

26:19.970 --> 26:20.870
呃包装一下

26:20.870 --> 26:23.470
然后呢看一下他的文本啊

26:23.470 --> 26:24.670
看一下他的文本

26:25.270 --> 26:26.670
是不是一个

26:27.370 --> 26:29.470
有没有包含includes

26:29.870 --> 26:31.670
有没有包含作者两个字

26:32.570 --> 26:33.870
啊如果说包含的话

26:33.870 --> 26:35.170
那么我就认为是去

26:35.170 --> 26:36.070
我就把他塞片出来

26:36.070 --> 26:37.170
其他的我就不要了

26:37.770 --> 26:38.470
没了意思吧

26:38.570 --> 26:39.470
其他的我就不要了

26:39.970 --> 26:40.570
好来吧

26:40.670 --> 26:42.270
我们这里呢得到一个什么

26:42.570 --> 26:43.470
all sir

26:45.170 --> 26:45.770
span

26:47.670 --> 26:48.870
好我们把这个十变呢

26:48.870 --> 26:50.870
打打印一下他的内容啊

26:50.870 --> 26:51.570
all sir

26:51.970 --> 26:52.570
span

26:52.970 --> 26:54.770
打印一下他的atmail内容

26:56.780 --> 26:57.480
我们看一下

26:57.880 --> 26:58.480
行不行

26:59.480 --> 27:01.080
这个东西只能一点点试

27:02.180 --> 27:03.080
哎出来了对吧

27:03.080 --> 27:04.380
是不是有两个文本对不对

27:04.580 --> 27:06.080
只不过呢这两个文本呢

27:06.080 --> 27:07.080
啊这个做

27:07.080 --> 27:08.580
啊这这这这这这就是作者啊

27:08.580 --> 27:09.380
这就是作者

27:09.380 --> 27:10.280
只不过这两个文本呢

27:10.280 --> 27:11.780
是被atmail编码的对不对

27:12.080 --> 27:13.480
那么我们现在要对他

27:13.480 --> 27:15.680
就是对他进行实体节码啊

27:15.680 --> 27:17.280
他是进行了实体编码的

27:17.280 --> 27:19.280
我们要对他进行实体节码

27:19.780 --> 27:21.980
对他进行实体节码也没什么意义啊

27:21.980 --> 27:23.880
我也不需要对他进行实体变节码

27:24.080 --> 27:27.380
我们要做的是找他的下一个a元素

27:27.380 --> 27:27.880
对不对

27:27.880 --> 27:29.280
他后边的a元素

27:29.680 --> 27:31.880
好那么我们这里呢可以使用

27:32.280 --> 27:34.480
这个author span

27:34.780 --> 27:35.880
然后呢next

27:36.580 --> 27:36.980
对不对

27:37.180 --> 27:38.780
找他的下一个什么呢

27:38.880 --> 27:40.680
下一个a元素

27:41.080 --> 27:41.880
我们要找这个

27:41.980 --> 27:43.580
然后找到a元素的什么内容

27:44.180 --> 27:45.280
这是我们要找的东西

27:45.780 --> 27:47.280
啊这是作者的名字

27:48.280 --> 27:49.480
author对吧

27:49.980 --> 27:52.180
总之我们要根据实际的情况了

27:52.180 --> 27:53.480
一点点去找啊

27:53.480 --> 27:54.180
这是作者

27:54.880 --> 27:55.680
我来试一下吧

27:57.180 --> 27:59.780
嗯哎呦我这个鼠标有点卡呀

28:02.560 --> 28:03.360
把他复制一下

28:04.460 --> 28:05.460
有出空本吧

28:06.260 --> 28:07.860
好这里呢我们打开

28:08.760 --> 28:09.360
再运行

28:10.860 --> 28:12.360
好作者出来了对不对

28:12.660 --> 28:13.560
好作者搞定了

28:14.260 --> 28:15.560
好接下来呢又来啊

28:15.560 --> 28:17.660
这个是还有一个出版年

28:17.960 --> 28:18.860
呃出版年

28:18.860 --> 28:20.960
那么我们就看一下有没有出版的

28:21.660 --> 28:24.160
呃呃出版社出版年

28:24.160 --> 28:26.160
那我们就找一下有没有出版年吗

28:26.160 --> 28:27.260
啊有没有出版年

28:27.660 --> 28:29.560
那么同样的找找的方式对不对

28:29.560 --> 28:31.360
同样的找的方式我们把这个复制一下

28:32.360 --> 28:34.560
一个是出版啊

28:34.560 --> 28:36.360
就是publish

28:36.960 --> 28:37.760
publish

28:38.060 --> 28:38.660
四遍

28:39.360 --> 28:42.160
这个filter啊找到什么出版年

28:43.660 --> 28:45.260
呃这边呢

28:45.760 --> 28:46.560
找到什么

28:46.960 --> 28:49.460
就是publish date

28:50.660 --> 28:51.760
啊到他后边了

28:51.760 --> 28:53.260
有没有有没有A元素啊

28:53.660 --> 28:54.960
不是A元素对吧

28:55.260 --> 28:56.560
他不是A元素

28:56.560 --> 28:58.260
那就找到他后边了什么了

28:58.460 --> 28:59.660
哎呦他这个地方

29:00.460 --> 29:01.560
他这后统做法呀

29:01.560 --> 29:03.160
他这个结构啊这个东西

29:04.660 --> 29:06.060
呃我想一想啊

29:06.060 --> 29:07.660
他这个地方该怎么找呢

29:08.560 --> 29:10.960
找他的下一个文本节点

29:11.260 --> 29:13.360
对吧朋友找他的下一个文本节点

29:13.560 --> 29:14.560
我回忆一下啊

29:14.760 --> 29:17.360
杰克尔里边怎么去寻找文本节点

29:17.360 --> 29:18.960
找他下一个文本节点

29:20.060 --> 29:22.260
呃我看上去查了一下杰克尔的文档啊

29:22.260 --> 29:24.260
好像是杰克尔也是不能去

29:24.460 --> 29:26.460
找这个直接找了一个文本节点的

29:26.960 --> 29:27.760
那我们这样子

29:27.960 --> 29:29.760
很简单啊我们这要换个诗路啊

29:30.160 --> 29:31.760
找到这个Span元素过后呢

29:31.760 --> 29:33.660
他是一个不是一个结块位对象嘛

29:33.660 --> 29:35.260
啊因为我们就简单说结块位啊

29:35.260 --> 29:36.660
其实上是七位对象

29:36.860 --> 29:38.560
他不是个结块位对象吗

29:38.660 --> 29:40.260
我们把他这个结块位对象呢

29:40.260 --> 29:43.660
变成一个就是普通的元素对吧

29:43.760 --> 29:45.160
我们把他变成一个普通的元素

29:45.160 --> 29:48.360
publish变呃给他找到这个0

29:48.360 --> 29:50.060
对吧把他变成普通的元素

29:50.160 --> 29:52.660
然后呢我们就可以利用那个next sapling

29:53.160 --> 29:55.260
是吧找到下一个兄弟节点

29:55.760 --> 29:57.660
对不对他是韩素吗啊对

29:58.060 --> 29:59.760
找到下一个兄弟节点

30:00.160 --> 30:02.660
好咱们来得到啊得到下一个兄弟节点

30:03.460 --> 30:06.160
呃然后这里是publish

30:08.960 --> 30:09.860
publish

30:11.060 --> 30:11.560
dead

30:11.960 --> 30:13.460
下一个兄弟节点呢

30:13.460 --> 30:16.560
我取他的什么no的text

30:18.260 --> 30:18.960
text

30:18.960 --> 30:22.590
哎他这个接口

30:25.390 --> 30:27.290
publish

30:27.890 --> 30:28.490
dead

30:30.780 --> 30:31.980
他有什么样的接口呢

30:33.480 --> 30:35.480
哦他不是方法啊他不是方法

30:35.580 --> 30:37.480
直接来load the value

30:37.480 --> 30:39.380
哎应该是这个啊

30:39.380 --> 30:40.480
咱们来输出一下

30:41.180 --> 30:43.180
因为我们知道这个etm元素里面呢

30:43.180 --> 30:45.980
他就是每一个都是load的节点对吧

30:45.980 --> 30:47.380
文闷节点也是load的节点

30:47.580 --> 30:48.480
咱们来试一下吧

30:48.680 --> 30:49.680
试一下就知道了

30:51.180 --> 30:52.180
不行的话再说

30:53.580 --> 30:54.080
印象

30:55.480 --> 30:56.480
哎出来了啊

30:56.880 --> 30:58.080
守卫空格去一下

30:58.580 --> 31:00.580
去掉一下守卫空格去

31:05.250 --> 31:05.950
好你看

31:06.050 --> 31:07.550
一本输的所有信息看

31:07.550 --> 31:09.350
输的名字输的封面输的作者

31:09.350 --> 31:10.850
输的书版日期是不是输完了

31:10.850 --> 31:12.350
那我们数据库的数据是不是够了

31:12.350 --> 31:13.750
名字封面

31:13.950 --> 31:15.750
书版日期作者是不是都出来了

31:15.950 --> 31:18.350
行那咱们把它包装成一个对象返回

31:19.050 --> 31:20.650
return包装成一个对象

31:21.250 --> 31:21.750
name

31:22.350 --> 31:23.650
mage url

31:23.850 --> 31:25.150
我看一下名字对不对啊

31:25.150 --> 31:26.750
注意名字publish dead

31:26.950 --> 31:27.750
publish

31:28.650 --> 31:29.150
dead

31:30.850 --> 31:32.150
呃还有 awesome

31:33.450 --> 31:33.850
好了

31:34.150 --> 31:35.150
把它返回一个对象

31:35.450 --> 31:36.850
就完事了对不对啊

31:36.850 --> 31:37.950
那么这个函数就做完了

31:38.750 --> 31:41.650
这样就根据一个书籍的详情业地址

31:41.650 --> 31:42.850
得到一个书籍的对象

31:43.250 --> 31:44.750
那么我们现在要做的是什么呢

31:44.750 --> 31:45.650
就是组合了

31:45.750 --> 31:46.950
对不对就是一个组合

31:46.950 --> 31:47.450
来吧

31:47.750 --> 31:48.450
写个函数

31:49.250 --> 31:49.950
fetch

31:50.550 --> 31:50.950
哦

31:52.350 --> 31:53.450
这个函数干嘛呢

31:53.550 --> 31:56.150
就是来获取所有的书籍信息

31:56.250 --> 31:59.050
获取所有的书籍信息

31:59.150 --> 31:59.650
来吧

31:59.850 --> 32:01.250
我们这里呢首先呢

32:01.550 --> 32:03.750
去雕用之前我们写好的一个函数

32:03.750 --> 32:06.750
叫做得到每一本书的详情业地址

32:07.250 --> 32:07.650
对不对

32:08.450 --> 32:09.450
得到这么一个函数啊

32:09.450 --> 32:11.250
得到每一本书的详情业地址

32:11.950 --> 32:13.550
那么我们这里是不是得到一个nix

32:14.050 --> 32:16.150
所有的详情业地址啊拿到了

32:16.750 --> 32:20.550
得到书籍的详情业地址

32:21.250 --> 32:21.850
拿到了

32:22.250 --> 32:23.050
然后接下来呢

32:23.050 --> 32:24.850
我们把这个详情业地址呢

32:24.850 --> 32:26.350
每一个详情业地址呢

32:26.350 --> 32:27.050
我们去

32:27.650 --> 32:28.850
拿到每一个详情业地址

32:28.850 --> 32:30.650
然后去发送这么一个东西对不对

32:30.650 --> 32:31.450
所以说我们这里呢

32:31.450 --> 32:32.150
怎么来做呢

32:32.250 --> 32:32.850
nix

32:32.950 --> 32:33.850
我们用一个map

32:34.550 --> 32:36.250
把每一个链接拿到

32:36.550 --> 32:37.550
link拿到

32:37.750 --> 32:39.650
然后呢去雕用这个函数

32:41.550 --> 32:42.850
去发送一个链接

32:43.050 --> 32:44.950
发送就是把详情业给他

32:44.950 --> 32:45.750
详情的链接给他

32:45.750 --> 32:47.850
你去帮我去获取书籍信息

32:47.950 --> 32:49.850
那么这个玩意儿返回的是别的promise

32:50.550 --> 32:50.850
对不对

32:50.850 --> 32:52.150
返回的是别的promise

32:52.450 --> 32:54.250
那么这里是不是得到很多的promise

32:55.150 --> 32:55.550
对吧

32:55.850 --> 32:56.850
得到很多的promise

32:56.850 --> 32:57.350
因为

32:57.950 --> 32:59.150
我不能说第一个

32:59.150 --> 33:01.650
我不要说我们这里有40个�接啊

33:01.750 --> 33:02.950
表示我们这里有40个链接

33:02.950 --> 33:03.550
40个链接

33:03.550 --> 33:04.950
你不能说第一个链接发送完了

33:04.950 --> 33:06.050
我再去发送第二个链接

33:06.050 --> 33:06.850
没有必要

33:06.950 --> 33:08.150
然后一起去发送

33:08.350 --> 33:09.150
发送链接

33:09.750 --> 33:11.550
然后呢得到了他最终的结果

33:11.550 --> 33:13.750
是不是一下就得到40个promise

33:13.850 --> 33:16.750
我要等这个40个promise全部完成之后

33:16.750 --> 33:17.950
是不是得到一个书组了

33:17.950 --> 33:19.750
得到的就是一个书籍的

33:20.750 --> 33:21.150
书组

33:21.150 --> 33:22.250
因为这个promise完成过后

33:22.250 --> 33:24.150
一个promise完成过后就是个书籍对象嘛

33:24.250 --> 33:25.350
很多个promise完成过后

33:25.350 --> 33:26.250
就是书籍对象的书组

33:26.250 --> 33:28.050
我们就可以利用 promise all

33:29.250 --> 33:30.150
promise all

33:31.150 --> 33:33.550
然后呢得到的是

33:33.550 --> 33:34.950
把这个promise传进去

33:35.150 --> 33:36.150
那么当这个

33:36.150 --> 33:37.750
当这个promise完成之后

33:37.750 --> 33:40.550
是不是就拿到了一个书籍的书组啊

33:40.850 --> 33:41.650
直接发挥

33:42.150 --> 33:42.350
好

33:42.350 --> 33:43.650
这Face all就写完了

33:43.950 --> 33:44.150
好

33:44.150 --> 33:45.150
咱们再试一下啊

33:45.450 --> 33:46.150
Face all

33:46.150 --> 33:47.050
然后呢Zen

33:47.550 --> 33:48.150
box

33:49.450 --> 33:50.450
输出box

33:51.750 --> 33:52.250
好

33:52.450 --> 33:52.950
印象

33:56.870 --> 33:57.970
肯定要等一会啊

33:57.970 --> 33:59.470
因为这个链接很多

33:59.670 --> 34:00.170
好

34:00.170 --> 34:00.670
完了

34:00.670 --> 34:01.370
你看啊

34:01.770 --> 34:03.770
所有的书籍全部拿到了

34:04.770 --> 34:05.170
你看

34:05.570 --> 34:07.270
试试本书是不是全部拿到了

34:07.870 --> 34:08.270
对吧

34:08.270 --> 34:09.770
那么这就完成那个书籍刷去

34:09.870 --> 34:10.470
当拿到过后呢

34:10.470 --> 34:12.670
我们现在要做的事情是把他放到

34:12.770 --> 34:14.170
哪的放到数据库里面啊

34:14.170 --> 34:14.570
当然

34:14.970 --> 34:15.670
这件事情呢

34:15.670 --> 34:17.370
还是大家稳定来啊

34:17.370 --> 34:18.670
平时用的时候呢

34:19.770 --> 34:20.770
不要太快了

34:20.770 --> 34:22.970
不要不要运行的太平凡了

34:23.270 --> 34:24.970
因为这个很多网站呢

34:24.970 --> 34:26.370
他有一个就是

34:26.970 --> 34:29.570
防止攻击的这么一个机制

34:29.870 --> 34:31.870
就是说如果说同一个ip地址

34:31.870 --> 34:35.070
他在短时间内发送了太多的请求给他的话

34:35.070 --> 34:36.370
他可能认为你在攻击

34:36.370 --> 34:37.770
他肯定不是人在操作

34:37.770 --> 34:39.070
肯定是程序在操作

34:39.170 --> 34:41.070
所以他可能直接把这个ip给你封了

34:41.570 --> 34:42.770
可能封一段时间

34:43.070 --> 34:43.870
对大家

34:44.870 --> 34:46.470
有可能会出现这种情况啊

34:47.570 --> 34:48.270
好来吧

34:48.270 --> 34:49.470
那咱们这里呢

34:49.870 --> 34:51.270
拿到了所有书籍过后

34:51.270 --> 34:53.270
我们现在无非就是要把它加到数据库里面

34:53.270 --> 34:53.670
对吧

34:53.770 --> 34:54.170
好

34:54.170 --> 34:55.170
我们又写个函数

34:56.070 --> 34:56.770
方可信

34:56.970 --> 34:57.470
save

34:58.370 --> 34:59.270
database

35:01.660 --> 35:02.460
save to

35:03.360 --> 35:03.860
db

35:04.360 --> 35:05.360
保存到数据库

35:06.660 --> 35:08.160
那么这个函数是作用是

35:09.960 --> 35:11.660
根据得到

35:12.160 --> 35:13.060
书籍

35:13.860 --> 35:14.560
信息

35:14.960 --> 35:15.660
然后

35:15.960 --> 35:17.860
保存到数据库

35:18.560 --> 35:19.060
来吧

35:19.060 --> 35:19.960
我们来写一下

35:21.060 --> 35:22.260
这边要用数据库了

35:22.260 --> 35:23.260
所以说我们这里呢

35:23.260 --> 35:24.660
要把数据库导入进来

35:24.660 --> 35:27.960
导入那个之前我们写过了那个就是sacrifice

35:29.160 --> 35:30.660
导入那个我们那个模型

35:30.960 --> 35:31.860
box模型

35:33.360 --> 35:33.960
require

35:36.370 --> 35:37.070
在哪呢

35:37.370 --> 35:38.270
返回上级目录

35:38.670 --> 35:39.370
models

35:40.370 --> 35:41.170
models

35:42.170 --> 35:42.670
book

35:43.070 --> 35:44.070
导入这个模型

35:44.870 --> 35:46.670
然后呢跟我们之前学过的一样

35:48.670 --> 35:49.270
到这边来

35:50.770 --> 35:51.270
我们

35:51.570 --> 35:51.970
哎不呀

35:51.970 --> 35:53.370
这这里这里就上了啊

35:56.400 --> 35:56.800
上掉

35:57.900 --> 35:58.800
然后这边来

35:59.400 --> 36:00.100
我们首先呢

36:00.100 --> 36:01.900
导入得到所有的数据信息

36:02.100 --> 36:02.700
box

36:03.700 --> 36:04.900
通过await

36:05.500 --> 36:06.300
get

36:06.600 --> 36:07.200
book

36:08.900 --> 36:09.900
在上面

36:10.200 --> 36:11.200
fetch all

36:11.500 --> 36:12.500
fetch all

36:13.100 --> 36:14.500
得到所有的数据信息

36:14.800 --> 36:16.400
然后呢我们使用那个book

36:16.500 --> 36:17.400
这个模型

36:19.000 --> 36:20.100
这应该用book

36:24.520 --> 36:25.020
book

36:25.820 --> 36:28.720
然后这边使用bug create

36:28.820 --> 36:31.020
就是一下子创建多个数据

36:31.620 --> 36:32.920
把这个book传进去

36:33.120 --> 36:34.120
是不是完成了

36:34.220 --> 36:35.520
对不对就完成了啊

36:35.620 --> 36:37.020
我们最终await一下吧

36:37.220 --> 36:38.320
啊然后呢输出

36:38.620 --> 36:40.120
啊保存

36:40.720 --> 36:41.720
就是抓取

36:42.520 --> 36:46.520
输击并保存到了数据库

36:48.320 --> 36:49.920
好我们这里调用这个sale

36:50.420 --> 36:51.220
2db

36:52.220 --> 36:53.120
保存啊

36:53.320 --> 36:54.320
这样我们运行一下

36:56.230 --> 36:56.730
运行

36:57.330 --> 36:57.830
等吧

36:59.630 --> 37:01.930
好他说抓起数据并保存到了数据库

37:01.930 --> 37:03.030
ok 那么就完成了

37:03.130 --> 37:04.730
接下来我们来看一下我们的数据库啊

37:05.730 --> 37:08.530
呃在这个bug时表右键刷新

37:09.330 --> 37:10.330
你看是不是有了

37:10.630 --> 37:12.130
我们的数据名称

37:12.630 --> 37:14.330
数据的链接地址啊

37:14.430 --> 37:17.130
出版日期然后呢作者是不是都有了

37:17.430 --> 37:17.930
对不对

37:18.330 --> 37:20.930
好那么我们这样子就实现了一个数据的刷取

37:21.730 --> 37:23.330
好了这是咱们这里可能那种啊

37:23.330 --> 37:24.630
给他简单的介绍一下

37:24.630 --> 37:26.030
有的时候呢你做一些

37:26.430 --> 37:27.930
接些诗博项目的时候呢

37:27.930 --> 37:29.230
可能会用得到啊

37:29.630 --> 37:31.430
也非常简单没有什么复杂的

37:31.530 --> 37:32.930
ok 这就到这里了啊

