WEBVTT

00:00.370 --> 00:05.370
这些课呢说一下这个傅文闷框 也是应一个同学的要求

00:05.370 --> 00:09.370
这个傅文闷框呢其实跟服务局没有多好关系

00:09.370 --> 00:11.370
真的没有多好关系 这个玩意儿

00:11.370 --> 00:16.370
有可能吧 也可能之前呢 同学们呢没有怎么去接触过

00:16.370 --> 00:19.370
我这里就说一下 当你如果说接触过了 知道怎么回事了

00:19.370 --> 00:21.370
就不用听这些课了 这些课很简单的

00:21.370 --> 00:24.370
傅文闷框是怎么玩意儿呢 就是这个玩意儿

00:24.370 --> 00:27.370
就是有的时候呢 你发布一个评论 发布一篇文章

00:27.370 --> 00:33.370
它个文章是有带格式的 有什么标题 有标题

00:33.370 --> 00:38.370
一级标题 当然还可以写markdown对吧

00:38.370 --> 00:40.370
这个傅文闷框好像是不能写markdown

00:40.370 --> 00:43.370
markdown的话你可以去下载 你可以去写

00:43.370 --> 00:46.370
如果说你要支持markdown的话 我说一下

00:46.370 --> 00:49.370
如果说你要支持markdown语法的话 你可以去下载

00:49.370 --> 00:51.370
那个叫什麼玩意儿来着

00:51.370 --> 00:55.370
叫做MD editor 好像是这个玩意儿

00:57.370 --> 01:00.370
就是这个玩意儿 这个玩意儿 也是个傅文闷框

01:00.370 --> 01:03.370
你可以去下载 用一下 道理都差不多

01:03.370 --> 01:07.370
然后呢 因为如果说普通大中的话

01:07.370 --> 01:10.370
它可能 你刚刚用markdown稳当的傅文闷框的话

01:10.370 --> 01:12.370
它可能不太会用

01:12.370 --> 01:14.370
如果说你要用markdown稳当的傅文闷框的话

01:14.370 --> 01:18.370
一般是你的网站是供给那些开发者使用的

01:18.370 --> 01:20.370
因为开发者的话比较会用

01:20.370 --> 01:22.370
普通民众的话不太会用这玩意儿

01:22.370 --> 01:25.370
然后呢 还有什么 随便写一个吧

01:25.370 --> 01:29.370
还有什么 这是引用

01:29.370 --> 01:33.370
还有什么 这是列表 有序列表

01:33.370 --> 01:35.370
就这么个意思 这就是傅文闷框

01:35.370 --> 01:36.370
这是带格式的 对吧

01:36.370 --> 01:38.370
它不是一个ticks area 对吧

01:38.370 --> 01:39.370
ticks area是不带格式的

01:39.370 --> 01:41.370
这个玩意儿是带格式的

01:41.370 --> 01:44.370
带格式的东西是不是可以保存到服务器过后

01:44.370 --> 01:47.370
服务器是不是反回到过后

01:47.370 --> 01:48.370
就是一个带格式的

01:48.370 --> 01:49.370
其实带格式的是啥呀

01:49.370 --> 01:53.370
带格式的实时本质上就是一个atm元素

01:53.370 --> 01:54.370
一个一个的atm元素

01:54.370 --> 01:56.370
你看一下吧 右键检查

01:56.370 --> 02:00.370
你看不就是 你看这个b元素

02:00.370 --> 02:02.370
你看p元素有加出的嘛

02:02.370 --> 02:04.370
h1 h2

02:04.370 --> 02:05.370
然后block code 对吧

02:05.370 --> 02:08.370
这是p元素 这是ol 对不对

02:08.370 --> 02:10.370
它其实就是一个个元素 没啥

02:10.370 --> 02:11.370
那么这些元素呢

02:11.370 --> 02:13.370
为什么我会在这里可以编辑呢

02:13.370 --> 02:15.370
因为傅文闷框的本质

02:15.370 --> 02:16.370
我们看一下 傅文框的本质

02:16.370 --> 02:18.370
是一个可以被编辑的div

02:18.370 --> 02:20.370
啥意思呢 我给大家看一下

02:20.370 --> 02:22.370
在这里呢 我们比方说

02:22.370 --> 02:24.370
把之前那些乱七八糟的删掉

02:24.370 --> 02:31.870
这个地方呢 我们就用一个

02:31.870 --> 02:33.870
添加一个书籍嘛

02:33.870 --> 02:35.870
添加一本书籍

02:35.870 --> 02:37.870
然后下边就用一个div

02:37.870 --> 02:43.870
div呢 给它一个样式

02:43.870 --> 02:44.870
比方说给它一个样式

02:44.870 --> 02:46.870
就是我们看一下傅文框的原理

02:46.870 --> 02:51.590
atm

02:51.590 --> 02:53.590
atm

02:53.590 --> 02:54.590
然后给它一个样式

02:54.590 --> 02:57.590
宽度呢 给它定一个80%

02:57.590 --> 03:01.590
然后呢 高度呢 给它定一个400个像素

03:01.590 --> 03:03.590
给它一个border

03:03.590 --> 03:07.590
一个像素solid ccc

03:07.590 --> 03:08.590
随便吧

03:08.590 --> 03:10.590
差不多了

03:10.590 --> 03:11.590
保存一下啊

03:11.590 --> 03:13.590
然后呢 把服务器运行起来

03:13.590 --> 03:15.590
start 运行一下

03:15.590 --> 03:17.590
然后这边我们访问的

03:17.590 --> 03:18.590
各号是5G

03:18.590 --> 03:19.590
天一天来说

03:19.590 --> 03:21.590
这个玩意儿 现在没发编辑对吧

03:21.590 --> 03:22.590
我们把改稍微改一下

03:22.590 --> 03:24.590
然后局中

03:24.590 --> 03:26.590
margin 0 out

03:26.590 --> 03:28.590
局中

03:28.590 --> 03:30.590
现在没发编辑

03:30.590 --> 03:32.590
其实要编辑的话 非常简单

03:32.590 --> 03:34.590
你在这里呢 只要写上一个editor

03:34.590 --> 03:36.590
就是content editable

03:36.590 --> 03:38.590
把它写上就行了

03:38.590 --> 03:40.590
表示呢 这个元素是可以被编辑的

03:40.590 --> 03:42.590
保存

03:42.590 --> 03:43.590
刷新

03:43.590 --> 03:44.590
你看这里边不就可以编辑了吗

03:44.590 --> 03:46.590
对不对 就可以编辑了

03:46.590 --> 03:48.590
比方说这里边还可以写元素

03:48.590 --> 03:52.160
还可以写元素的

03:52.160 --> 03:54.160
不行 这样子写元素的话

03:54.160 --> 03:56.160
这样子写元素的话不行了

03:56.160 --> 03:58.160
因为这样子写元素的话

03:58.160 --> 04:00.160
它就把它进行 变码了

04:00.160 --> 04:01.160
实际变码了

04:01.160 --> 04:03.160
当然你可以通过介石来控制

04:03.160 --> 04:05.160
比方说你安拉猛一个按键

04:05.160 --> 04:06.160
比方说你看这边

04:06.160 --> 04:08.160
安拉猛一个按键

04:08.160 --> 04:09.160
狂选一下

04:09.160 --> 04:10.160
安拉猛一个按键

04:10.160 --> 04:12.160
其实就是往DIV里面

04:12.160 --> 04:14.160
相应的位置加一个元素

04:14.160 --> 04:16.160
元素进去 就这么个意思

04:16.160 --> 04:17.160
一按了一下回车

04:17.160 --> 04:18.160
它就给你增加一个p元素

04:18.160 --> 04:19.160
就这么个意思

04:19.160 --> 04:20.160
但目前呢

04:20.160 --> 04:21.160
因为我没有去写这些介石

04:21.160 --> 04:23.160
所以说它就是普通的文本

04:23.160 --> 04:24.160
其他这里用的是DIV

04:24.160 --> 04:26.160
一个回车用的是DIV

04:26.160 --> 04:27.160
原来的意思吧

04:27.160 --> 04:28.160
它就是这么个意思

04:28.160 --> 04:30.160
这就是复文门框

04:30.160 --> 04:33.160
当然你要配合介石的控制

04:33.160 --> 04:35.160
那么我们一般来说

04:35.160 --> 04:36.160
复文门框不会自己去写

04:36.160 --> 04:38.160
一般会用一些第三方的插件

04:38.160 --> 04:39.160
我也不知道你们用的

04:39.160 --> 04:40.160
平时喜欢用啥

04:40.160 --> 04:42.160
也不知道你们将来公司

04:42.160 --> 04:44.160
里面用的复文门框是啥

04:44.160 --> 04:45.160
我也不知道

04:45.160 --> 04:46.160
我就随便找了一个

04:46.160 --> 04:47.160
叫王Editor

04:47.160 --> 04:50.160
咱们一个开发者做的

04:50.160 --> 04:52.160
其实做的还挺不错的

04:52.160 --> 04:53.160
而且他支持Wheel

04:53.160 --> 04:54.160
支持Ragged

04:54.160 --> 04:55.160
还做的挺不错的

04:55.160 --> 04:56.160
我还比较喜欢

04:56.160 --> 04:57.160
就这么一个复文门框

04:57.160 --> 04:58.160
当然用法

04:58.160 --> 04:59.160
无论是什么复文门框

04:59.160 --> 05:00.160
用法的大致差不多

05:00.160 --> 05:02.160
就是复文门框的本质

05:02.160 --> 05:03.160
然后编辑之后

05:03.160 --> 05:04.160
得到的结构是一个啥呢

05:04.160 --> 05:06.160
得到的结构就是一个atm

05:06.160 --> 05:07.160
就是一个atm

05:07.160 --> 05:09.160
你看它得到的结构呢

05:09.160 --> 05:10.160
这里

05:10.160 --> 05:11.160
我看一下这里

05:11.160 --> 05:13.160
哪里可以显示结构

05:13.160 --> 05:15.160
好像这里没有什么显示

05:15.160 --> 05:17.160
这里好像没有什么显示

05:17.160 --> 05:18.160
总之它得到的结构

05:18.160 --> 05:19.160
就是一个atm

05:19.160 --> 05:20.160
那么你把这个atm

05:20.160 --> 05:22.160
保存到发送到服务器

05:22.160 --> 05:23.160
通过RGX师也好

05:23.160 --> 05:24.160
通过表单提交也好

05:24.160 --> 05:25.160
发送到服务器

05:25.160 --> 05:26.160
服务器是不是可以保存

05:26.160 --> 05:27.160
这个atm

05:27.160 --> 05:28.160
咱们再学一个完整的例子

05:28.160 --> 05:30.160
比方说我们在服务器里边

05:30.160 --> 05:32.160
我们把数据库稍微改一下

05:32.160 --> 05:34.160
数据库我找到这个书籍表

05:34.160 --> 05:35.160
书籍表呢

05:35.160 --> 05:36.160
给它增加一个属性

05:36.160 --> 05:39.160
叫做书籍的描述

05:39.160 --> 05:40.160
你们买书的时候

05:40.160 --> 05:41.160
就是一个书籍描述

05:41.160 --> 05:42.160
对不对

05:42.160 --> 05:43.160
像商品详情

05:43.160 --> 05:44.160
对不对

05:44.160 --> 05:45.160
那么这个东西

05:45.160 --> 05:46.160
我给它增加一个

05:46.160 --> 05:48.160
书籍里边

05:49.160 --> 05:51.160
增加一个字段

05:52.160 --> 05:53.160
叫descript

05:53.160 --> 05:55.160
描述

05:55.160 --> 05:57.160
这个东西

05:57.160 --> 05:59.160
加起来

05:59.160 --> 06:00.160
这个地方我们就用text

06:00.160 --> 06:02.160
text保存的东西要多一点

06:02.160 --> 06:03.160
因为用实均的话

06:03.160 --> 06:05.160
好像就是255个长度

06:05.160 --> 06:06.160
在数据库里边

06:06.160 --> 06:08.160
text有1000多个长度

06:08.160 --> 06:09.160
所以要保存多一点

06:09.160 --> 06:10.160
如果说这个东西不够用的话

06:10.160 --> 06:12.160
你可以用longtext

06:13.160 --> 06:14.160
text

06:14.160 --> 06:15.160
用这个

06:16.160 --> 06:17.160
这里边传上

06:17.160 --> 06:18.160
诶

06:18.160 --> 06:19.160
这里边传上一个

06:19.160 --> 06:20.160
传上一个叫做la

06:22.160 --> 06:23.160
la

06:23.160 --> 06:24.160
就可以了

06:24.160 --> 06:25.160
保存

06:25.160 --> 06:26.160
保存看一下

06:26.160 --> 06:27.160
同步

06:27.160 --> 06:28.160
同步完了过后

06:28.160 --> 06:30.160
我们到数据库里边去看一下

06:30.160 --> 06:31.160
右键

06:31.160 --> 06:32.160
设计表

06:33.160 --> 06:34.160
你看 是不是

06:34.160 --> 06:35.160
多个descript

06:35.160 --> 06:36.160
longtext

06:36.160 --> 06:37.160
那么这里就可以保存

06:37.160 --> 06:38.160
很多很多的数据

06:38.160 --> 06:39.160
这个保存是啥

06:39.160 --> 06:41.160
保存的就是一个atmail

06:41.160 --> 06:43.160
atmail文档保存在这里

06:43.160 --> 06:44.160
刻不断传过来的

06:44.160 --> 06:45.160
可以保存一个

06:45.160 --> 06:47.160
就是完整的atmail文档

06:47.160 --> 06:48.160
那么这里呢

06:48.160 --> 06:49.160
设计好了过后

06:49.160 --> 06:50.160
我写一下接口吧

06:50.160 --> 06:52.160
这个接口我好像之前没写

06:52.160 --> 06:53.160
稍微写一下吧

06:53.160 --> 06:54.160
这个东西

06:54.160 --> 06:56.160
难得去做什么验证了

06:56.160 --> 06:58.160
这个东西加进来

06:58.160 --> 07:00.160
然后到这个APN里边

07:00.160 --> 07:02.160
去把这个什么

07:02.160 --> 07:04.160
student这个复制一下

07:04.160 --> 07:06.160
然后到这个book里边

07:06.160 --> 07:07.160
暂停过来

07:07.160 --> 07:08.160
稍微改一下

07:08.160 --> 07:09.160
rotr不变了

07:09.160 --> 07:10.160
这个玩意是什么

07:10.160 --> 07:12.160
box service

07:13.160 --> 07:15.160
box service

07:15.160 --> 07:17.160
好 其他的不变

07:17.160 --> 07:19.160
分页得到

07:19.160 --> 07:22.160
分页得到这个就是

07:22.160 --> 07:23.160
book

07:23.160 --> 07:25.160
这是get books

07:25.160 --> 07:29.920
是这个吗

07:29.920 --> 07:32.920
yamlkeywords

07:32.920 --> 07:34.920
这是还需要个keywords

07:34.920 --> 07:36.920
keywords都不要了

07:36.920 --> 07:38.920
这两个东西都不要了

07:38.920 --> 07:39.920
keywords都不要了

07:39.920 --> 07:41.920
这是得到书籍

07:41.920 --> 07:42.920
按分页来得到书籍

07:42.920 --> 07:44.920
然后这边是

07:44.920 --> 07:46.920
根据id

07:46.920 --> 07:48.920
来得到一本书籍

07:48.920 --> 07:49.920
book

07:49.920 --> 07:51.920
sul

07:51.920 --> 07:53.920
这是根据id得到书籍

07:53.920 --> 07:55.920
get book by id

07:55.920 --> 07:58.920
然后这边是

07:58.920 --> 08:00.920
添加一个书籍

08:00.920 --> 08:01.920
book

08:01.920 --> 08:02.920
sul

08:02.920 --> 08:03.920
adbook

08:03.920 --> 08:05.920
添加一个书籍

08:05.920 --> 08:06.920
就这几个就行了

08:06.920 --> 08:07.920
什么三处

08:07.920 --> 08:08.920
修改我都拿着弄了

08:08.920 --> 08:10.920
就这几个就行了

08:10.920 --> 08:13.920
就是把书籍的接口做好

08:13.920 --> 08:14.920
做好了过后呢

08:14.920 --> 08:15.920
我们这个页面比方说

08:15.920 --> 08:16.920
这个页面是添加书籍

08:16.920 --> 08:17.920
添加书籍

08:17.920 --> 08:18.920
添加书籍怎么做呢

08:18.920 --> 08:19.920
我们可以这样子来

08:19.920 --> 08:20.920
比方说我们这里呢

08:20.920 --> 08:22.920
写上一个

08:22.920 --> 08:23.920
一个div

08:23.920 --> 08:24.920
一个div呢

08:24.920 --> 08:26.920
我们给他一个就是

08:26.920 --> 08:27.920
看一下啊

08:27.920 --> 08:29.920
咱们书籍里边有哪些信息呢

08:29.920 --> 08:31.920
书籍的名称

08:31.920 --> 08:32.920
一个div

08:32.920 --> 08:33.920
书籍的名称

08:33.920 --> 08:36.920
我们用P元书吧

08:36.920 --> 08:39.920
书籍

08:39.920 --> 08:40.920
名称

08:40.920 --> 08:42.920
然后来个input水源书

08:42.920 --> 08:44.920
书籍名称

08:45.920 --> 08:47.920
好就这样子啊

08:47.920 --> 08:48.920
这是书籍名称

08:48.920 --> 08:49.920
然后呢

08:49.920 --> 08:51.920
再来一个书籍的

08:51.920 --> 08:53.920
这是书籍封面啊

08:53.920 --> 08:54.920
封面我哪能写

08:54.920 --> 08:55.920
哪能弄啊

08:55.920 --> 08:56.920
坐着啊

08:56.920 --> 08:57.920
都哪能弄了

08:57.920 --> 08:58.920
都哪能弄了

08:58.920 --> 08:59.920
我就加了一个description

08:59.920 --> 09:01.920
书籍

09:02.920 --> 09:06.740
这用div

09:06.740 --> 09:07.740
好

09:07.740 --> 09:09.740
书籍描述

09:09.740 --> 09:10.740
书籍描述

09:10.740 --> 09:11.740
好那么这下面呢

09:11.740 --> 09:12.740
我就要使用复文门框了啊

09:12.740 --> 09:14.740
这个下面就是复文门框

09:14.740 --> 09:16.740
复文本框

09:16.740 --> 09:17.740
然后在这下面呢

09:17.740 --> 09:19.740
就是个按钮提交

09:19.740 --> 09:21.740
提交

09:21.740 --> 09:23.740
就这么个意思啊

09:23.740 --> 09:25.740
然后既然我们写一段script

09:25.740 --> 09:27.740
然后点击提交的时候

09:27.740 --> 09:28.740
是不是要把书籍描述得到

09:28.740 --> 09:29.740
书籍名称得到

09:29.740 --> 09:30.740
对吧

09:30.740 --> 09:32.740
好那么我们来点击提交

09:32.740 --> 09:34.740
document

09:34.740 --> 09:36.740
currysmitter

09:36.740 --> 09:38.740
我这里尽量简单一点

09:38.740 --> 09:39.740
onclick

09:39.740 --> 09:40.740
点击的时候

09:40.740 --> 09:41.740
我干嘛呢

09:41.740 --> 09:42.740
就调用一个方法

09:42.740 --> 09:43.740
添加一本书籍

09:43.740 --> 09:45.740
adboke

09:45.740 --> 09:46.740
添加一本书籍

09:46.740 --> 09:47.740
我们把它做成一个异部函数

09:47.740 --> 09:48.740
因为我们肯定要用

09:48.740 --> 09:50.740
阿迦克斯请求服务器

09:50.740 --> 09:52.740
那么我们这里就直接写上adboke

09:52.740 --> 09:54.740
好 ok

09:54.740 --> 09:55.740
那么这个adboke里边

09:55.740 --> 09:56.740
是不是要得到的书籍名称

09:56.740 --> 09:57.740
对吧

09:57.740 --> 09:58.740
书籍名称

09:58.740 --> 10:00.740
书籍名称等于什么呢

10:00.740 --> 10:01.740
等于

10:01.740 --> 10:03.740
把这个东西

10:03.740 --> 10:04.740
写个函数

10:04.740 --> 10:05.740
写个辅助函数

10:05.740 --> 10:07.740
是那个

10:11.950 --> 10:13.950
return document

10:13.950 --> 10:15.950
currysmitter

10:15.950 --> 10:19.520
smitter

10:19.520 --> 10:21.520
这样子写下简变一点

10:23.520 --> 10:25.520
好那么这边呢就是

10:25.520 --> 10:26.520
id为什么呢

10:26.520 --> 10:27.520
id为name的

10:27.520 --> 10:28.520
对吧

10:28.520 --> 10:29.520
得到的value

10:29.520 --> 10:30.520
是不是得到书籍名称

10:30.520 --> 10:31.520
对吧书籍名称

10:31.520 --> 10:32.520
好那么书籍秒数呢

10:32.520 --> 10:33.520
我要使用负能框

10:33.520 --> 10:34.520
负能框怎么弄呢

10:34.520 --> 10:36.520
我们先看一下目前的情况

10:36.520 --> 10:37.520
看一下吧

10:37.520 --> 10:38.520
目前就这样子

10:38.520 --> 10:39.520
这能看到吗

10:39.520 --> 10:40.520
这个没什么问题对吧

10:40.520 --> 10:41.520
我们检查一下

10:42.520 --> 10:43.520
控制台

10:44.520 --> 10:45.520
提交

10:45.520 --> 10:46.520
就是得到书籍名称了吗

10:46.520 --> 10:47.520
对吧还有一个书籍秒数

10:47.520 --> 10:48.520
书籍秒数的话

10:48.520 --> 10:49.520
我们去使用

10:49.520 --> 10:50.520
这个负能框

10:50.520 --> 10:51.520
那怎么使用呢

10:51.520 --> 10:52.520
我们去看一下文档

10:52.520 --> 10:53.520
先把下载下来吧

10:53.520 --> 10:54.520
这个文档呢

10:54.520 --> 10:55.520
它是这样子

10:55.520 --> 10:56.520
它你可以有很多用法

10:56.520 --> 10:57.520
比方说我们就是

10:57.520 --> 10:58.520
普通的介事用法

10:58.520 --> 10:59.520
还有什么呢

10:59.520 --> 11:00.520
还有关于这个

11:00.520 --> 11:01.520
vou的用法

11:01.520 --> 11:02.520
return

11:02.520 --> 11:03.520
关于安格拉的用法

11:03.520 --> 11:04.520
关于mc

11:04.520 --> 11:06.830
他支持mc

11:06.830 --> 11:07.830
检

11:15.140 --> 11:16.140
他没有

11:16.140 --> 11:17.140
他不只是检

11:18.140 --> 11:19.140
他不支持

11:19.140 --> 11:20.140
他不支持的话

11:20.140 --> 11:21.140
如果说有了用mc的话

11:21.140 --> 11:23.140
你得单独去用一下其他的

11:23.140 --> 11:24.140
那么我们这里

11:24.140 --> 11:25.140
就直接先下载下来

11:25.140 --> 11:26.140
再说我们就用传统的方式

11:26.140 --> 11:27.140
因为我现在

11:27.140 --> 11:28.140
也不能确定你学过

11:28.140 --> 11:29.140
学没学过vou和ret

11:29.140 --> 11:30.140
如果说你学过的话

11:30.140 --> 11:31.140
没关系

11:31.140 --> 11:32.140
用法都差不多

11:32.140 --> 11:33.140
你去看一下用于vou

11:33.140 --> 11:34.140
用于ret

11:34.140 --> 11:35.140
ret

11:35.140 --> 11:36.140
你看一下文档

11:36.140 --> 11:37.140
文档是中文的

11:37.140 --> 11:38.140
国内开发的做的

11:38.140 --> 11:39.140
也很简单

11:39.140 --> 11:40.140
我们再先下载下来

11:40.140 --> 11:42.140
点击这个就3.11吧

11:42.140 --> 11:44.140
出了30个版本了

11:44.140 --> 11:45.140
以前我用的时候

11:45.140 --> 11:46.140
还是20个版本

11:46.140 --> 11:47.140
下载吧

11:49.140 --> 11:50.140
下载一下

11:51.140 --> 11:52.140
下载到桌面吧

11:53.140 --> 11:54.140
好让他下载

11:54.140 --> 11:55.140
一个也不大

11:55.140 --> 11:56.140
100多kb

11:56.140 --> 11:57.140
我又不说

11:57.140 --> 11:58.140
他没有显示大小

11:58.140 --> 11:59.140
无所谓吧

11:59.140 --> 12:00.140
让他下载

12:00.140 --> 12:01.140
然后我们看一下文档

12:03.140 --> 12:04.140
开始使用

12:04.140 --> 12:06.140
然后创建一个编辑器

12:06.140 --> 12:07.140
还有什么呢

12:07.140 --> 12:08.140
下载最新版过后

12:08.140 --> 12:10.140
找到这个王editor

12:10.140 --> 12:11.140
点击S

12:11.140 --> 12:12.140
或者是王令的

12:12.140 --> 12:13.140
一个是压错过的

12:13.140 --> 12:14.140
一个是没压错过的

12:14.140 --> 12:15.140
或者是使用cdn

12:15.140 --> 12:16.140
我干脆使用cdn得了

12:16.140 --> 12:17.140
我干脆使用cdn得了

12:17.140 --> 12:19.140
我难得去弄这个玩意了

12:19.140 --> 12:20.140
我们直接引用

12:23.140 --> 12:24.140
直接来这个

12:24.140 --> 12:25.140
加一个src

12:25.140 --> 12:26.140
cdn直接来引用

12:27.140 --> 12:28.140
我看一下

12:28.140 --> 12:30.140
能不能把这个时间是不是好的

12:32.140 --> 12:33.140
OK 那读出来了

12:33.140 --> 12:34.140
读出来就没问题了

12:35.140 --> 12:36.140
然后接下来

12:36.140 --> 12:37.140
干什么呢

12:37.140 --> 12:38.140
干什么呢

12:38.140 --> 12:39.140
他说

12:40.140 --> 12:42.140
他就污染了一个全局辨量

12:42.140 --> 12:43.140
叫做王editor

12:43.140 --> 12:44.140
我们来看一下

12:44.140 --> 12:45.140
没有的话肯定是不一样的

12:45.140 --> 12:46.140
用法有些区别

12:46.140 --> 12:47.140
你看一下文档就行了

12:48.140 --> 12:49.140
OK 那得到了

12:49.140 --> 12:50.140
那么现在

12:50.140 --> 12:52.140
我们只需要去调用这个函数

12:52.140 --> 12:53.140
调用这个函数

12:53.140 --> 12:54.140
这是个构造函数

12:54.140 --> 12:55.140
然后

12:55.140 --> 12:57.140
你要把哪一个区域

12:57.140 --> 12:58.140
当成复文文框

12:58.140 --> 13:00.140
然后调用一下cdn就完了

13:00.140 --> 13:01.140
非常简单

13:02.140 --> 13:03.140
好久没用过了

13:03.140 --> 13:04.140
边看文档边玩

13:04.140 --> 13:05.140
这些东西都非常简单的

13:06.140 --> 13:07.140
当然如果说你之前

13:07.140 --> 13:08.140
已经弄复文文框了

13:08.140 --> 13:10.140
那就没什么好说的了

13:10.140 --> 13:11.140
我们直接来

13:12.140 --> 13:14.140
然后呢

13:14.140 --> 13:15.140
这里得到的

13:15.140 --> 13:16.140
就这个地方

13:16.140 --> 13:17.140
给他个id

13:17.140 --> 13:18.140
editor

13:19.140 --> 13:21.140
那就这个editor

13:21.140 --> 13:22.140
id

13:22.140 --> 13:23.140
这是个css选择器

13:23.140 --> 13:24.140
对吧

13:24.140 --> 13:25.140
css选择器

13:25.140 --> 13:26.140
OK 那么像那种方式

13:26.140 --> 13:27.140
总之你给他

13:27.140 --> 13:28.140
一个css选择器

13:28.140 --> 13:29.140
或者是给他一个元素都行

13:29.140 --> 13:30.140
然后调用这个crazy

13:30.140 --> 13:31.140
完了 没了

13:32.140 --> 13:33.140
你看

13:33.140 --> 13:34.140
刷新

13:34.140 --> 13:36.840
你看不就复文文框

13:36.840 --> 13:37.840
不就出来了吗

13:37.840 --> 13:38.840
对不对

13:38.840 --> 13:39.840
非常

13:39.840 --> 13:40.840
非常的简单

13:40.840 --> 13:41.840
非常简单

13:41.840 --> 13:42.840
就已经出来了

13:43.840 --> 13:44.840
你看

13:44.840 --> 13:45.840
对吧

13:45.840 --> 13:46.840
就已经出来了

13:46.840 --> 13:47.840
好 那么这个复文文框

13:47.840 --> 13:48.840
后边怎么来用呢

13:48.840 --> 13:50.840
一个关键点就在于

13:50.840 --> 13:51.840
我点击提交的时候

13:51.840 --> 13:52.840
是不是要得到他的atmail

13:52.840 --> 13:53.840
对不对

13:53.840 --> 13:54.840
是不是要得到他的atmail

13:54.840 --> 13:55.840
因为我要发动到

13:55.840 --> 13:56.840
服务器的是atmail

13:56.840 --> 13:57.840
所以我必须要得到

13:57.840 --> 13:58.840
他的atmail

13:58.840 --> 13:59.840
那怎么来得到呢

13:59.840 --> 14:00.840
我看一下

14:00.840 --> 14:02.840
这个使用

14:03.840 --> 14:04.840
当然他这里边

14:04.840 --> 14:05.840
还有很多配置

14:05.840 --> 14:06.840
配置可以配置什么了

14:06.840 --> 14:07.840
配置那些

14:07.840 --> 14:09.840
就是上边的菜单

14:09.840 --> 14:10.840
可以配置上面的菜单

14:12.840 --> 14:13.840
比方说

14:13.840 --> 14:14.840
我们先来看

14:14.840 --> 14:15.840
获取内容

14:15.840 --> 14:16.840
获取内容

14:16.840 --> 14:17.840
还有设置内容

14:17.840 --> 14:18.840
设置内容

14:18.840 --> 14:19.840
看一下吧

14:19.840 --> 14:20.840
看一下就行了

14:20.840 --> 14:21.840
如果说你这个div里边

14:21.840 --> 14:22.840
本身有东西了

14:22.840 --> 14:23.840
已经有东西了

14:23.840 --> 14:24.840
那么他就会

14:24.840 --> 14:25.840
自动给你设置内容

14:25.840 --> 14:27.840
也可以用ts来设置内容

14:27.840 --> 14:28.840
比方说tsd

14:28.840 --> 14:29.840
atmail

14:29.840 --> 14:30.840
通过这个函数

14:30.840 --> 14:31.840
看一下通过的接口

14:31.840 --> 14:32.840
给他设置一些内容

14:32.840 --> 14:33.840
跟默正设置一些内容

14:33.840 --> 14:34.840
比方说我们给他设置一下吧

14:35.840 --> 14:36.840
给他设置一下

14:39.840 --> 14:40.840
这个复制一下

14:41.840 --> 14:42.840
这些用法的

14:42.840 --> 14:43.840
都非常非常简单

14:44.840 --> 14:46.840
往里边设置一些atmail内容

14:46.840 --> 14:48.840
比方说我们给他设置一个

14:48.840 --> 14:49.840
比方说在修改的

14:49.840 --> 14:50.840
修改一篇文章的时候

14:50.840 --> 14:51.840
是不是特别管用

14:51.840 --> 14:53.840
修改一本书记的时候

14:53.840 --> 14:55.840
要把书记目前的描述

14:55.840 --> 14:56.840
会显示进来

14:56.840 --> 14:57.840
就可以用这个解释

14:57.840 --> 14:58.840
把服务器返回的结果

14:58.840 --> 14:59.840
是不是放到这儿

14:59.840 --> 15:00.840
对不对

15:00.840 --> 15:01.840
那么这边

15:01.840 --> 15:02.840
我们就是

15:02.840 --> 15:04.840
这是默认的内容

15:04.840 --> 15:05.840
好 保存

15:05.840 --> 15:06.840
你看一下吧

15:07.840 --> 15:08.840
刷新

15:08.840 --> 15:09.840
不就显示出来了吗

15:09.840 --> 15:10.840
对不对

15:10.840 --> 15:11.840
很简单

15:11.840 --> 15:12.840
我们现在主要是要

15:12.840 --> 15:13.840
获取内容

15:13.840 --> 15:14.840
获取内容的话

15:14.840 --> 15:16.840
我们这里可以用

15:16.840 --> 15:17.840
这个txtatmail

15:17.840 --> 15:18.840
就通过这个方式

15:18.840 --> 15:20.840
来获取atmail内容

15:20.840 --> 15:22.840
你要获取他的文本内容的话

15:22.840 --> 15:23.840
纯文本内容的话

15:23.840 --> 15:24.840
就用text

15:24.840 --> 15:25.840
咱们来试一下吧

15:25.840 --> 15:26.840
试一下去啥都明白

15:26.840 --> 15:27.840
啥都明白了

15:27.840 --> 15:29.840
好 咱们来试一下

15:30.840 --> 15:31.840
然后这边

15:31.840 --> 15:32.840
我们再得到

15:33.840 --> 15:34.840
得到这个描述

15:35.840 --> 15:36.840
sqp

15:36.840 --> 15:37.840
描述是什么呢

15:37.840 --> 15:38.840
描述是

15:39.840 --> 15:40.840
不是

15:40.840 --> 15:41.840
描述是editor

15:42.840 --> 15:43.840
txtatmail

15:43.840 --> 15:44.840
对吧

15:44.840 --> 15:45.840
这是他的描述

15:45.840 --> 15:46.840
好 咱们把两个都输出

15:46.840 --> 15:47.840
Yes this

15:47.840 --> 15:48.840
Name is this

15:50.840 --> 15:51.840
保存

15:51.840 --> 15:52.840
接下来我们在这边看一下

15:53.840 --> 15:54.840
刷新

15:54.840 --> 15:55.840
然后我们在这边

15:55.840 --> 15:56.840
加一个标题

15:57.840 --> 15:58.840
加一个标题

15:59.840 --> 16:00.840
然后这边

16:00.840 --> 16:01.840
换一下文字

16:02.840 --> 16:03.840
送体

16:03.840 --> 16:04.840
送体没有感觉

16:04.840 --> 16:05.840
送体是中文的

16:06.840 --> 16:07.840
他能换吗

16:08.840 --> 16:10.840
这些换了没啥用

16:11.840 --> 16:12.840
换了没啥用

16:12.840 --> 16:13.840
然后加个下网线

16:13.840 --> 16:14.840
然后加一个

16:14.840 --> 16:15.840
再加个中程线

16:16.840 --> 16:18.840
然后文字颜色

16:19.840 --> 16:20.840
换成一个颜色

16:22.840 --> 16:23.840
换成这个颜色

16:24.840 --> 16:25.840
然后下边

16:25.840 --> 16:26.840
再来一个

16:27.840 --> 16:28.840
页表

16:28.840 --> 16:29.840
有趣页表

16:30.840 --> 16:32.840
这两个就不要了

16:35.600 --> 16:36.600
然后我们点击提交

16:36.600 --> 16:37.600
你看一下

16:38.600 --> 16:39.600
得到了就是Name

16:39.600 --> 16:41.600
我们Name跑哪去了

16:42.600 --> 16:43.600
我没刷新

16:43.600 --> 16:44.600
我的天

16:44.600 --> 16:45.600
把它复制一下

16:46.600 --> 16:49.740
翻译过来

16:49.740 --> 16:51.740
这个地方我们把颜色改一个

16:52.740 --> 16:54.740
这个地方随便写一个提交

16:54.740 --> 16:55.740
你看这是Name的属性

16:55.740 --> 16:56.740
这是Name的结果

16:56.740 --> 16:57.740
这是录的ATM内容

16:57.740 --> 16:58.740
对吧

16:58.740 --> 16:59.740
你看是不是获取到了

16:59.740 --> 17:00.740
对吧

17:00.740 --> 17:01.740
而且他有些样式

17:01.740 --> 17:02.740
对不对

17:02.740 --> 17:03.740
Span里面有个样式

17:04.740 --> 17:05.740
看

17:05.740 --> 17:06.740
好 那么这个东西

17:06.740 --> 17:07.740
我们是可以发动到服务器的

17:07.740 --> 17:08.740
这是ATM

17:08.740 --> 17:09.740
或者是ATM内容

17:09.740 --> 17:10.740
好 发动到服务器的时候

17:10.740 --> 17:11.740
我们怎么发送的

17:11.740 --> 17:12.740
不就用飞鞋API吗

17:12.740 --> 17:13.740
飞鞋

17:14.740 --> 17:16.740
发送的地址是API Book

17:16.740 --> 17:17.740
是吧

17:17.740 --> 17:18.740
我们看一下

17:18.740 --> 17:20.740
API Book

17:20.740 --> 17:22.740
然后Post的请求

17:22.740 --> 17:23.740
Post

17:24.740 --> 17:25.740
Post的请求

17:25.740 --> 17:26.740
就行了

17:26.740 --> 17:27.740
好 咱们发送一个

17:27.740 --> 17:29.740
找到Message的

17:29.740 --> 17:30.740
Post

17:32.740 --> 17:34.740
然后我们这里的就是

17:34.740 --> 17:35.740
Headers刚刚看一下

17:36.740 --> 17:38.740
content type

17:39.740 --> 17:41.740
为Application

17:43.740 --> 17:44.740
结设

17:45.740 --> 17:46.740
然后再来

17:46.740 --> 17:47.740
它的body

17:48.740 --> 17:49.740
消息体

17:49.740 --> 17:50.740
消息体我们用

17:50.740 --> 17:51.740
结设

17:52.740 --> 17:53.740
Stringify

17:53.740 --> 17:54.740
Post

17:55.740 --> 17:56.740
是这样吧

17:57.740 --> 17:58.740
不是 Stringify

17:58.740 --> 17:59.740
把一个对象

17:59.740 --> 18:00.740
变成了一个

18:00.740 --> 18:01.740
一个结设制作创

18:01.740 --> 18:02.740
对象就是

18:02.740 --> 18:03.740
我们这里勾件一个对象

18:03.740 --> 18:04.740
对象就是Name属性

18:04.740 --> 18:05.740
加上Description属性

18:06.740 --> 18:07.740
就完了

18:07.740 --> 18:08.740
就Fage

18:08.740 --> 18:09.740
Away

18:09.740 --> 18:10.740
就添加 对吧

18:10.740 --> 18:11.740
添加

18:11.740 --> 18:12.740
添加那个

18:12.740 --> 18:13.740
输集

18:18.310 --> 18:19.310
这里我们用个Z

18:20.310 --> 18:21.310
解析一下

18:21.310 --> 18:22.310
服务器的响应结果

18:22.310 --> 18:23.310
我们把服务器的

18:23.310 --> 18:24.310
响应结果输出

18:26.310 --> 18:27.310
好 保存

18:27.310 --> 18:28.310
我来看一下

18:28.310 --> 18:29.310
试一下

18:29.310 --> 18:30.310
添加一本输集

18:30.310 --> 18:31.310
这个还是复制一下

18:31.310 --> 18:34.580
输集

18:34.580 --> 18:35.580
来添加一个

18:35.580 --> 18:36.580
走力

18:38.580 --> 18:39.580
叫什么呢

18:39.580 --> 18:40.580
Book

18:40.580 --> 18:41.580
Publish dates come be now

18:43.580 --> 18:44.580
日期

18:44.580 --> 18:45.580
日期还不能少

18:46.580 --> 18:47.580
日期我给它写上吧

18:47.580 --> 18:48.580
我给它写上

18:48.580 --> 18:51.580
Publish dates

18:51.580 --> 18:52.580
Publish dates的话

18:52.580 --> 18:53.580
我们就用一个

18:54.580 --> 18:55.580
desk novel

18:55.580 --> 18:56.580
就给它直接写一个

18:56.580 --> 18:57.580
desk novel

18:57.580 --> 19:00.340
再来

19:00.340 --> 19:03.810
走力

19:03.810 --> 19:04.810
下面

19:04.810 --> 19:05.810
走一个

19:05.810 --> 19:06.810
点击销

19:06.810 --> 19:07.810
看到吗

19:07.810 --> 19:08.810
Awesome

19:10.810 --> 19:11.810
这个作者

19:11.810 --> 19:12.810
作者就是我

19:13.810 --> 19:14.810
我就直接写死了

19:14.810 --> 19:16.810
难得去写文本了

19:16.810 --> 19:17.810
我难得弄了

19:18.810 --> 19:21.310
提交

19:21.310 --> 19:22.310
OK 是不完成了

19:22.310 --> 19:23.310
添加一本输集是不完成了

19:23.310 --> 19:24.310
desk不行

19:24.310 --> 19:25.310
是不是有了

19:25.310 --> 19:26.310
然后我们把这个东西加进来

19:26.310 --> 19:28.310
好 再来一次提交

19:29.310 --> 19:30.310
输集

19:30.310 --> 19:31.310
一本输

19:31.310 --> 19:34.010
点提交

19:34.010 --> 19:35.010
你看

19:35.010 --> 19:36.010
输集库里面有了

19:36.010 --> 19:37.010
对不对

19:37.010 --> 19:38.010
输集库里面都有了

19:38.010 --> 19:39.010
好 咱们看一下输集库吧

19:39.010 --> 19:40.010
它就添加到输集库了

19:41.010 --> 19:42.010
输集

19:42.010 --> 19:43.010
点击右键刷新

19:44.010 --> 19:45.010
往下面拿

19:45.010 --> 19:46.010
你看 是不是加进来了

19:47.010 --> 19:48.010
没有封面

19:48.010 --> 19:49.010
没有封面

19:49.010 --> 19:50.010
你看这个

19:50.010 --> 19:52.010
描述 是不是一些ATM雷容

19:52.010 --> 19:53.010
存到

19:53.010 --> 19:55.010
数据库里面去了

19:55.010 --> 19:57.010
好 那么这里是不是就添加进去了

19:57.010 --> 19:59.010
好 那么现在如果

19:59.010 --> 20:00.010
我现在就讲一个问题

20:00.010 --> 20:02.010
就是关于图片上传这么办

20:03.010 --> 20:04.010
就是这个图片

20:04.010 --> 20:05.010
这个图片

20:05.010 --> 20:06.010
你看它是给你

20:06.010 --> 20:07.010
让你去插入一个图片链接

20:07.010 --> 20:08.010
但是很多时候

20:08.010 --> 20:10.010
我们要方便用户使用的话

20:10.010 --> 20:12.010
我们往往会给它一个上传

20:12.010 --> 20:13.010
图片的接口

20:13.010 --> 20:14.010
就是它在这里

20:14.010 --> 20:16.010
可以直接上传本地图片

20:16.010 --> 20:18.010
那这个玩意怎么做呢

20:18.010 --> 20:19.010
我们首先看文档

20:19.010 --> 20:20.010
不同的复文闷框

20:20.010 --> 20:21.010
它的处理方式不一样

20:21.010 --> 20:23.010
但它原力都差不多

20:23.010 --> 20:25.010
原力就是你给它一个接口

20:25.010 --> 20:26.010
它把根据这个接口

20:26.010 --> 20:28.010
把图片上传到服务器

20:28.010 --> 20:30.010
服务器那边要返回一个图片的UIL路徑

20:30.010 --> 20:31.010
它生成一个1米几元数

20:31.010 --> 20:33.010
把UIL路徑放在这

20:33.010 --> 20:34.010
来看一下原理

20:34.010 --> 20:36.010
就说无论是

20:36.010 --> 20:38.010
无论是哪一种复文闷框

20:38.010 --> 20:39.010
它的原力基本上相同

20:39.010 --> 20:41.010
就是复文闷框是不是本地

20:42.010 --> 20:43.010
它里面有一个复文闷框

20:43.010 --> 20:45.010
复文闷框

20:45.010 --> 20:47.010
那么用户点击

20:47.010 --> 20:51.010
用户点击上传图片

20:51.010 --> 20:53.010
选择图片

20:53.010 --> 20:55.010
选择好了过后

20:55.010 --> 20:59.010
复文闷框将图片信息

20:59.010 --> 21:00.010
发送到哪呢

21:00.010 --> 21:02.010
发送到服务器

21:02.010 --> 21:04.010
那么你需要配置接口

21:04.010 --> 21:05.010
配置接口

21:05.010 --> 21:07.010
就是我们上传到哪个服务器接口

21:07.010 --> 21:08.010
我们之前是不是写过图片上传的接口

21:08.010 --> 21:09.010
对吧

21:09.010 --> 21:10.010
我们到时候就用这个接口

21:10.010 --> 21:12.010
然后服务器

21:12.010 --> 21:16.010
会返回一个图片的UIL路徑

21:16.010 --> 21:17.010
还记得吗

21:17.010 --> 21:18.010
当时我们保存了图片过后

21:18.010 --> 21:19.010
是不是服务器生成一个UIL路徑

21:19.010 --> 21:20.010
响应一个客户端

21:20.010 --> 21:21.010
对不对

21:21.010 --> 21:22.010
会返回一个图片路徑

21:22.010 --> 21:24.010
然后复文闷框

21:24.010 --> 21:28.010
生成一个AMG元数

21:28.010 --> 21:31.010
使用UIL路徑

21:31.010 --> 21:33.010
使用UIL路徑

21:34.010 --> 21:41.010
插入到复文闷框内部

21:41.010 --> 21:42.010
就完事了

21:42.010 --> 21:43.010
最终提交的时候

21:43.010 --> 21:44.010
有没有提交图片

21:44.010 --> 21:46.010
对我们点这里的提交的时候

21:46.010 --> 21:47.010
有没有提交图片

21:47.010 --> 21:48.010
没有

21:48.010 --> 21:49.010
我们点这里的提交的时候

21:49.010 --> 21:51.010
提交的是一个1米级元数

21:51.010 --> 21:52.010
对吧

21:52.010 --> 21:53.010
是这么个意思

21:53.010 --> 21:54.010
无论什么复文闷框

21:54.010 --> 21:55.010
基本上都是这样的流程

21:55.010 --> 21:56.010
所以你只要知道流程过后

21:56.010 --> 21:58.010
你查文档来做就行了

21:58.010 --> 22:00.010
他这里有个上传图片

22:00.010 --> 22:01.010
对吧

22:01.010 --> 22:02.010
他还不能显示隐藏

22:02.010 --> 22:03.010
在默认情况下

22:03.010 --> 22:05.010
编辑器不会显示上传图片的态度

22:05.010 --> 22:07.010
因为你还没有配置上传图片的信息

22:07.010 --> 22:09.010
肯定要配置

22:09.010 --> 22:11.010
他都不知道接口怎么上传

22:11.010 --> 22:12.010
好来吧

22:12.010 --> 22:13.010
他怎么来配置呢

22:13.010 --> 22:14.010
他说

22:14.010 --> 22:15.010
下面有两个配置

22:15.010 --> 22:16.010
始终其中一个

22:16.010 --> 22:18.010
即可显示上传图片的态度

22:18.010 --> 22:19.010
但两者不要同时使用

22:19.010 --> 22:21.010
一个是使用bass64编

22:21.010 --> 22:22.010
那么这种方式

22:22.010 --> 22:23.010
他就不

22:23.010 --> 22:24.010
这种方式是什么方式呢

22:24.010 --> 22:25.010
这种方式是这样子

22:25.010 --> 22:27.010
就是另外一种模式的

22:27.010 --> 22:28.010
第二

22:28.010 --> 22:29.010
我们看一下这种方式

22:29.010 --> 22:30.010
这种方式

22:30.010 --> 22:31.010
看明字基本上就知道

22:31.010 --> 22:32.010
他什么回事了

22:32.010 --> 22:33.010
选择图片用户

22:33.010 --> 22:35.010
然后他不会上传到服务器

22:35.010 --> 22:37.010
他是会在客户端

22:37.010 --> 22:39.010
就在浏览器端

22:39.010 --> 22:40.010
生成什么呢

22:40.010 --> 22:43.010
生成图片的bass64格式

22:43.010 --> 22:44.010
是吧

22:44.010 --> 22:46.010
图片那种编码成bass64

22:46.010 --> 22:48.010
对不对

22:48.010 --> 22:50.010
因为我们知道bass64

22:50.010 --> 22:51.010
就是在编码的个儿竞制的

22:51.010 --> 22:53.010
编码成bass64格式

22:53.010 --> 22:54.010
然后呢

22:54.010 --> 22:55.010
没有什么服务器的

22:55.010 --> 22:56.010
就没有什么服务器的

22:56.010 --> 22:57.010
然后呢

22:57.010 --> 22:58.010
生成一个一米级元素

22:58.010 --> 22:59.010
使用bass64

22:59.010 --> 23:01.010
作为路径

23:01.010 --> 23:04.010
bass64作为图片路径

23:04.010 --> 23:05.010
插入到服务器文化内部

23:05.010 --> 23:06.010
这是使用这种方式

23:06.010 --> 23:07.010
这种方式呢

23:07.010 --> 23:09.010
服务器他就不会保存图片

23:09.010 --> 23:10.010
他会在

23:10.010 --> 23:12.010
是他把图片的内容

23:12.010 --> 23:13.010
帮到ATM里边去了

23:13.010 --> 23:14.010
这是这种方式

23:14.010 --> 23:16.010
看这种方式很简单

23:16.010 --> 23:17.010
这种方式非常简单

23:18.010 --> 23:19.010
复制一下

23:19.010 --> 23:20.010
来吧

23:20.010 --> 23:21.010
我们直接来用一下

23:22.010 --> 23:23.010
你可以把这些

23:23.010 --> 23:24.010
那些玩意写到

23:24.010 --> 23:25.010
写到函数里边去

23:26.010 --> 23:27.010
保存

23:27.010 --> 23:28.010
这种方式

23:28.010 --> 23:29.010
只需要配置一下就完事了

23:29.010 --> 23:31.010
因为他逻辑已经通了

23:31.010 --> 23:32.010
好

23:32.010 --> 23:33.010
刷新

23:33.010 --> 23:34.010
你看吧

23:34.010 --> 23:36.010
我们这里的点击这个图片

23:36.010 --> 23:37.010
诶

23:37.010 --> 23:39.010
他为什么不出来

23:39.010 --> 23:41.010
为他不出来

23:41.010 --> 23:42.010
你不说

23:42.010 --> 23:43.010
你不说要出来吗

23:45.010 --> 23:46.010
哦

23:46.010 --> 23:47.010
明白了

23:47.010 --> 23:48.010
应该是在crate之前

23:48.010 --> 23:49.010
对吧

23:49.010 --> 23:51.010
应该是在crate之前进一配置

23:51.010 --> 23:53.010
我在crate之后了

23:53.010 --> 23:54.010
好 刷新

23:55.010 --> 23:56.010
好

23:56.010 --> 23:57.010
你看

23:57.010 --> 23:58.010
对吧

23:58.010 --> 23:59.010
来一张图片吧

24:00.010 --> 24:01.010
来一张

24:04.340 --> 24:05.340
来一张图片

24:06.340 --> 24:07.340
这啥

24:07.340 --> 24:08.340
我怎么把收成的收成起来

24:09.340 --> 24:10.340
来一张

24:10.340 --> 24:11.340
下载

24:11.340 --> 24:12.340
诶

24:12.340 --> 24:16.100
我下载图片了

24:16.100 --> 24:17.100
下载

24:17.100 --> 24:18.100
诶

24:19.100 --> 24:20.100
我下载图片了

24:21.100 --> 24:22.100
哦

24:22.100 --> 24:23.100
这这这这这

24:23.100 --> 24:24.100
他这种保存图片了

24:24.100 --> 24:25.100
行了

24:25.100 --> 24:27.100
那我咱们这里就点击

24:27.100 --> 24:28.100
点击

24:28.100 --> 24:29.100
来上传一张图片

24:29.100 --> 24:30.100
来吧

24:30.100 --> 24:31.100
啊

24:31.100 --> 24:32.100
你看说显示出来了

24:32.100 --> 24:33.100
咱们来看一下这个emg元素

24:34.100 --> 24:35.100
你看

24:35.100 --> 24:36.100
emg元素里边说Base64

24:36.100 --> 24:37.100
对吧

24:37.100 --> 24:38.100
Base64编码

24:38.100 --> 24:39.100
对吧

24:39.100 --> 24:40.100
他就不会上传到服务器了

24:40.100 --> 24:41.100
这是这种模式

24:41.100 --> 24:42.100
当然这种模式呢

24:42.100 --> 24:44.100
他就是在提交的时候

24:44.100 --> 24:46.100
把这个Base64编码直接放

24:46.100 --> 24:47.100
都扔到服务器

24:47.100 --> 24:48.100
服务器在不管那么多

24:48.100 --> 24:49.100
他直接把这个元素

24:49.100 --> 24:50.100
加上这个emg元素

24:50.100 --> 24:52.100
所有东西全部保存到

24:52.100 --> 24:53.100
数据库里边去了

24:53.100 --> 24:54.100
这是这种模式

24:54.100 --> 24:55.100
这种模式呢

24:55.100 --> 24:56.100
小图片那些东西

24:56.100 --> 24:57.100
到海好

24:57.100 --> 24:58.100
这种大图片就不差

24:58.100 --> 24:59.100
不是很好

24:59.100 --> 25:00.100
数据量太大了

25:00.100 --> 25:01.100
所以说我们还是使用

25:01.100 --> 25:02.100
传统的方式

25:02.100 --> 25:03.100
这种方式就已经做完了

25:03.100 --> 25:04.100
跟之前的

25:04.100 --> 25:05.100
其他什么都不用动

25:05.100 --> 25:06.100
你看吧

25:06.100 --> 25:08.670
我们在提交

25:08.670 --> 25:09.670
提交

25:09.670 --> 25:10.670
对吧

25:11.670 --> 25:13.670
request entity to reality

25:13.670 --> 25:14.670
啊

25:14.670 --> 25:16.670
我们这个请求的东西

25:16.670 --> 25:17.670
请求的这个

25:17.670 --> 25:18.670
请求的实际太大了

25:18.670 --> 25:19.670
请求的实际太大了

25:19.670 --> 25:21.670
这个这样子确实不好

25:22.670 --> 25:23.670
因为这个信息量太大了

25:23.670 --> 25:25.670
所以说我们还是用那种

25:25.670 --> 25:27.670
还是用那个就是

25:27.670 --> 25:29.670
传统的方式

25:29.670 --> 25:30.670
先上传

25:30.670 --> 25:31.670
那么上传的时候

25:31.670 --> 25:32.670
是不是要配置接口

25:32.670 --> 25:33.670
你看他这里是不是要配置接口

25:33.670 --> 25:35.670
上传图片到服务器

25:35.670 --> 25:37.670
他的服务器接口的路径是啥

25:37.670 --> 25:38.670
你要配置一下

25:38.670 --> 25:39.670
那我们配置一下这个

25:39.670 --> 25:41.980
好

25:41.980 --> 25:42.980
配置的路径是啥

25:42.980 --> 25:43.980
让我们要看一下

25:43.980 --> 25:44.980
之前服务器

25:44.980 --> 25:45.980
我们这边上传图片的接口

25:45.980 --> 25:46.980
是啥

25:46.980 --> 25:47.980
上传图片的接口是

25:47.980 --> 25:48.980
app upload对吧

25:48.980 --> 25:49.980
好来吧

25:49.980 --> 25:51.980
那么我们的路径

25:51.980 --> 25:52.980
就是app upload

25:52.980 --> 25:53.980
好保存

25:53.980 --> 25:54.980
我们来看一下吧

25:55.980 --> 25:56.980
现在还行不行

25:56.980 --> 25:57.980
咱们刷新

25:58.980 --> 25:59.980
来我们这里呢

25:59.980 --> 26:00.980
来一张图片

26:00.980 --> 26:01.980
上传

26:02.980 --> 26:03.980
上传一张图片

26:03.980 --> 26:04.980
上传图片失败

26:04.980 --> 26:05.980
没关系

26:05.980 --> 26:06.980
我们来看一下网络请求

26:06.980 --> 26:07.980
就知道了

26:07.980 --> 26:08.980
你看这里app upload对吧

26:08.980 --> 26:09.980
他上传图片的时候

26:09.980 --> 26:11.980
request他发送的是啥

26:11.980 --> 26:13.980
request他发送的是

26:13.980 --> 26:14.980
multiform

26:15.980 --> 26:16.980
就是这个东西

26:17.980 --> 26:18.980
view source

26:18.980 --> 26:19.980
咱们看一下

26:19.980 --> 26:20.980
他给的name是啥

26:20.980 --> 26:21.980
name是这个玩意

26:21.980 --> 26:22.980
对不对

26:22.980 --> 26:23.980
而我们当时

26:23.980 --> 26:25.980
上传图片的接口还记得吗

26:25.980 --> 26:26.980
当时我们的name是啥

26:26.980 --> 26:28.980
我们希望他给我

26:28.980 --> 26:29.980
给我的name是啥

26:29.980 --> 26:31.980
当时我们希望给的name是image

26:31.980 --> 26:32.980
对吧

26:32.980 --> 26:33.980
img

26:33.980 --> 26:34.980
但是这里呢

26:34.980 --> 26:35.980
这个差践他给的name是这个东西

26:35.980 --> 26:36.980
因为他并不知道

26:36.980 --> 26:37.980
我们服务器要什么name

26:37.980 --> 26:38.980
他就用文件名作为name

26:38.980 --> 26:40.980
但显然不是我们想要的

26:40.980 --> 26:41.980
那怎么办呢

26:41.980 --> 26:42.980
那这个时候呢

26:42.980 --> 26:44.980
你看服务器跟我返回

26:44.980 --> 26:46.980
aspected field对吧

26:46.980 --> 26:47.980
那么根据这个来调

26:47.980 --> 26:48.980
那么说明

26:48.980 --> 26:49.980
肯定要配置一下

26:49.980 --> 26:50.980
他的就是那个name属性

26:50.980 --> 26:52.980
那怎么来配置呢

26:52.980 --> 26:55.550
看一下吧

26:55.550 --> 26:56.550
肯定是可以配置的

26:56.550 --> 26:57.550
这毫无疑问的

26:59.550 --> 27:00.550
嗯

27:00.550 --> 27:03.990
自定义上传参数

27:04.990 --> 27:05.990
看一下啊

27:05.990 --> 27:06.990
在哪里可以配置

27:06.990 --> 27:08.990
自定义file name

27:08.990 --> 27:15.700
open name

27:15.700 --> 27:17.700
那么这个地方就是

27:17.700 --> 27:18.700
这个地方就是

27:18.700 --> 27:19.700
那定一个file name

27:21.700 --> 27:22.700
这些东西都可以

27:22.700 --> 27:24.700
查稳当来解决的

27:25.700 --> 27:26.700
好

27:26.700 --> 27:27.700
这边呢

27:27.700 --> 27:28.700
我们设置一个啊

27:28.700 --> 27:29.700
自定upload file name

27:29.700 --> 27:31.700
那么把它定为image

27:31.700 --> 27:32.700
好

27:32.700 --> 27:33.700
我们再来

27:33.700 --> 27:34.700
好

27:34.700 --> 27:35.700
这边我们刷新

27:35.700 --> 27:36.700
然后再来上传图面

27:36.700 --> 27:37.700
上传

27:37.700 --> 27:40.080
好

27:40.080 --> 27:41.080
那么再看一下

27:41.080 --> 27:42.080
上传图面失败

27:42.080 --> 27:43.080
肯定还有还有问题

27:43.080 --> 27:44.080
我们来看一下这边

27:44.080 --> 27:45.080
这个

27:45.080 --> 27:46.080
这个东西对不对的

27:46.080 --> 27:47.080
现在变成image了

27:47.080 --> 27:48.080
对吧

27:48.080 --> 27:49.080
那么这个东西是没问题的

27:49.080 --> 27:50.080
对吧

27:50.080 --> 27:51.080
然后我们看一下

27:51.080 --> 27:52.080
服务器的响应结果

27:52.080 --> 27:53.080
服务器的响应结果

27:53.080 --> 27:54.080
给我们是不是已经给我们了

27:54.080 --> 27:55.080
服务器是不是已经保存下来了

27:55.080 --> 27:56.080
我们为了确认这一点

27:56.080 --> 27:57.080
看一下服务器是不是

27:57.080 --> 27:58.080
真的保存下来了

27:58.080 --> 27:59.080
upload里边

27:59.080 --> 28:00.080
你看不是这个玩意吗

28:00.080 --> 28:01.080
是不是真的保存下来了

28:01.080 --> 28:02.080
啊

28:02.080 --> 28:03.080
还有一个是

28:03.080 --> 28:04.080
我们之前做个水印

28:04.080 --> 28:05.080
然后呢

28:05.080 --> 28:06.080
一个是没有加水印的

28:06.080 --> 28:07.080
原图

28:07.080 --> 28:08.080
总之他给我们

28:08.080 --> 28:09.080
保存下来了

28:09.080 --> 28:10.080
但是呢

28:10.080 --> 28:11.080
这个消息格式呢

28:11.080 --> 28:12.080
服务器

28:12.080 --> 28:13.080
科普端不认识

28:13.080 --> 28:14.080
因为我们刚才说了

28:14.080 --> 28:15.080
这边呢

28:15.080 --> 28:16.080
服务闷框

28:16.080 --> 28:17.080
服务器会返回

28:17.080 --> 28:18.080
一个图片的url路径

28:18.080 --> 28:19.080
服务闷框呢

28:19.080 --> 28:20.080
会要生存一个

28:20.080 --> 28:21.080
一密集元素

28:21.080 --> 28:22.080
使用这个路径

28:22.080 --> 28:23.080
但是他不知道

28:23.080 --> 28:24.080
服务器的消息格式是什么

28:24.080 --> 28:25.080
因此他无法知道

28:25.080 --> 28:26.080
这个服务器

28:26.080 --> 28:27.080
我在哪里去

28:27.080 --> 28:28.080
去取这个路径

28:28.080 --> 28:29.080
对吧

28:29.080 --> 28:30.080
那么这边呢

28:30.080 --> 28:31.080
他告诉你

28:31.080 --> 28:32.080
服务器的

28:32.080 --> 28:33.080
就一个

28:33.080 --> 28:34.080
约定啊

28:34.080 --> 28:36.080
就是服务器

28:36.080 --> 28:37.080
啊

28:37.080 --> 28:40.080
接口返回了数据格式

28:40.080 --> 28:41.080
接口他

28:41.080 --> 28:42.080
应该返回这个数据格式

28:42.080 --> 28:43.080
arrow number

28:43.080 --> 28:44.080
就是错误消息

28:44.080 --> 28:45.080
错误

28:45.080 --> 28:47.080
错误码为0

28:47.080 --> 28:48.080
然后呢

28:48.080 --> 28:49.080
data

28:49.080 --> 28:50.080
就是图片路径

28:50.080 --> 28:51.080
就是比方说

28:51.080 --> 28:52.080
上传多档图片

28:52.080 --> 28:53.080
图片路径

28:53.080 --> 28:54.080
放在一个数组里边

28:54.080 --> 28:55.080
是这么个意思

28:55.080 --> 28:56.080
我看这个玩意儿

28:56.080 --> 28:57.080
能配置吗

28:57.080 --> 28:59.080
我看一下这个玩意儿

28:59.080 --> 29:01.080
他能不能配置

29:02.080 --> 29:03.080
before

29:03.080 --> 29:07.780
图片上传成功的毁掉

29:07.780 --> 29:10.780
插入成功之后触发

29:10.780 --> 29:12.780
图片上传之前触发

29:12.780 --> 29:15.780
图片上传失败触发

29:15.780 --> 29:16.780
确实

29:16.780 --> 29:18.780
图片上传超时

29:18.780 --> 29:19.780
哦 这里

29:19.780 --> 29:20.780
他说

29:20.780 --> 29:21.780
如果服务器返回的

29:21.780 --> 29:22.780
不是这个格式

29:22.780 --> 29:23.780
那么可以使用这个配置

29:23.780 --> 29:24.780
那就行了

29:24.780 --> 29:25.780
他肯定可以配置

29:25.780 --> 29:26.780
对吧

29:26.780 --> 29:27.780
我就不信你这个东西

29:27.780 --> 29:28.780
不能配置

29:28.780 --> 29:30.780
那这边来

29:30.780 --> 29:31.780
就是啊

29:31.780 --> 29:32.780
他常常说

29:32.780 --> 29:33.780
像这些API

29:33.780 --> 29:34.780
查的文章说就行了

29:34.780 --> 29:35.780
这些东西

29:35.780 --> 29:36.780
你千万不要去配

29:36.780 --> 29:37.780
我也配不住

29:37.780 --> 29:38.780
这个玩意儿

29:38.780 --> 29:39.780
我直接复制一下

29:43.780 --> 29:44.780
来吧

29:44.780 --> 29:45.780
他告诉你什么

29:45.780 --> 29:46.780
图片上传并返回

29:46.780 --> 29:47.780
结果自定义

29:47.780 --> 29:48.780
插入图片的视线

29:48.780 --> 29:49.780
而不是编辑器

29:49.780 --> 29:51.780
自动插入图片

29:51.780 --> 29:52.780
insert image

29:52.780 --> 29:53.780
是插入图片的函数

29:53.780 --> 29:54.780
而就是你到时候

29:54.780 --> 29:55.780
生成图片过后

29:55.780 --> 29:56.780
你掉入这个函数

29:56.780 --> 29:57.780
把图片插入进去

29:57.780 --> 29:58.780
就完事了

29:58.780 --> 29:59.780
editor

29:59.780 --> 30:00.780
是编辑器对象

30:00.780 --> 30:01.780
你要用就用

30:01.780 --> 30:02.780
不用拉到

30:02.780 --> 30:03.780
results是浮气返回的结果

30:03.780 --> 30:04.780
这是浮气返回的结果

30:04.780 --> 30:06.780
我们知道浮气返回的结果里边

30:06.780 --> 30:07.780
一个什么data

30:07.780 --> 30:08.780
对吧

30:08.780 --> 30:09.780
是不是个data

30:09.780 --> 30:11.780
把这个的结果输出

30:11.780 --> 30:15.980
我们来输出一下

30:15.980 --> 30:19.620
输出results

30:19.620 --> 30:20.620
保存

30:20.620 --> 30:21.620
放心

30:21.620 --> 30:22.620
来吧

30:22.620 --> 30:26.080
再上传一个

30:26.080 --> 30:27.080
这边

30:27.080 --> 30:28.080
我们看通知彩

30:28.080 --> 30:29.080
data

30:29.080 --> 30:31.080
我们得到了results.data

30:31.080 --> 30:32.080
是不是图片的uio

30:32.080 --> 30:33.080
对不对

30:33.080 --> 30:35.080
那么他让你把这个uio

30:35.080 --> 30:36.080
放到这个函数里边去

30:39.610 --> 30:40.610
好了

30:40.610 --> 30:41.610
就写完了

30:41.610 --> 30:42.610
其实就一句话

30:42.610 --> 30:44.610
就这么一句话

30:44.610 --> 30:46.610
就这么一句话

30:46.610 --> 30:48.610
这个玩意都用不到了

30:48.610 --> 30:49.610
保存

30:49.610 --> 30:50.610
咱们来看一下吧

30:50.610 --> 30:51.610
稍息

30:51.610 --> 30:53.610
然后再来上传图片

30:53.610 --> 30:54.610
上传

30:54.610 --> 30:57.300
你看

30:57.300 --> 30:58.300
是不是就显示出来了

30:58.300 --> 30:59.300
点击右键

30:59.300 --> 31:00.300
检查

31:00.300 --> 31:01.300
你看图片的uio地址

31:01.300 --> 31:02.300
不就这个地址吗

31:02.300 --> 31:03.300
上传到浮气过后

31:03.300 --> 31:04.300
显示出来了

31:04.300 --> 31:05.300
我们添加一本书籍

31:05.300 --> 31:06.300
点击提交

31:06.300 --> 31:08.300
提交

31:08.300 --> 31:10.300
提交成功了

31:10.300 --> 31:11.300
然后让我们看一下

31:11.300 --> 31:12.300
这边

31:12.300 --> 31:13.300
这边

31:13.300 --> 31:14.300
刷新

31:14.300 --> 31:16.940
你看

31:16.940 --> 31:18.940
这边是不是得到一个img元素

31:18.940 --> 31:20.940
保存到数据铺里边去了

31:20.940 --> 31:21.940
就完事了

31:21.940 --> 31:22.940
就完事了

31:22.940 --> 31:24.940
这就是这一块

31:24.940 --> 31:25.940
那一通知说

31:25.940 --> 31:26.940
我这里要这儿

31:26.940 --> 31:27.940
把他显示出来看一下

31:27.940 --> 31:28.940
想怎么看一下

31:28.940 --> 31:29.940
那我就看一下吧

31:29.940 --> 31:30.940
比方说

31:30.940 --> 31:32.940
这边的书籍名称

31:32.940 --> 31:33.940
书籍名称也有点怪

31:33.940 --> 31:34.940
比方说

31:34.940 --> 31:35.940
load.js

31:35.940 --> 31:37.940
权威斯兰

31:37.940 --> 31:42.140
我们随便来一个

31:42.140 --> 31:44.140
给他设置一下颜色

31:44.140 --> 31:45.140
这啥

31:45.140 --> 31:47.140
背景色

31:47.140 --> 31:50.140
就这样吧

31:50.140 --> 31:52.140
然后让我们点提交

31:52.140 --> 31:53.140
成功了

31:53.140 --> 31:54.140
对不对

31:54.140 --> 31:55.140
然后我们再写个页面

31:55.140 --> 31:57.140
再写个页面

31:57.140 --> 31:58.140
再写个页面

31:58.140 --> 32:00.140
来得到这个书籍

32:00.140 --> 32:01.140
就是刚才的上传

32:01.140 --> 32:02.140
刚才的书籍的页面

32:02.140 --> 32:03.140
当然这个

32:03.140 --> 32:04.140
我就随便写一个了

32:04.140 --> 32:06.140
detail

32:06.140 --> 32:10.780
这边我大写了

32:10.780 --> 32:12.780
div

32:14.780 --> 32:16.780
detail

32:16.780 --> 32:20.540
script

32:20.540 --> 32:21.540
然后这边

32:21.540 --> 32:24.540
我们使用一个废棋

32:24.540 --> 32:25.540
去请求

32:25.540 --> 32:26.540
book

32:26.540 --> 32:27.540
给他的id

32:27.540 --> 32:29.540
id是啥呀

32:29.540 --> 32:30.540
刚才的id是啥

32:30.540 --> 32:31.540
我甚至就随便测试一下

32:31.540 --> 32:32.540
这严格来说

32:32.540 --> 32:33.540
不能这样子写

32:33.540 --> 32:34.540
不能把id写实

32:34.540 --> 32:35.540
应该根据地址

32:35.540 --> 32:36.540
来参数来得到的

32:36.540 --> 32:37.540
我拿来弄了

32:37.540 --> 32:38.540
试试看

32:38.540 --> 32:39.540
诶不是

32:39.540 --> 32:40.540
我点击右键刷新

32:40.540 --> 32:41.540
刚才上面

32:41.540 --> 32:42.540
试试试

32:42.540 --> 32:43.540
试试试

32:43.540 --> 32:44.540
试试试

32:44.540 --> 32:45.540
试试试

32:45.540 --> 32:46.540
试试试

32:46.540 --> 32:47.540
试试试

32:47.540 --> 32:48.540
试试试

32:48.540 --> 32:49.540
接试

32:49.540 --> 32:52.740
试试试

32:52.740 --> 32:53.740
然后试试

32:53.740 --> 32:54.740
试试

32:54.740 --> 32:55.740
试试

32:55.740 --> 32:59.020
试试

32:59.020 --> 33:00.020
保存

33:00.020 --> 33:01.020
咱们来进detail

33:01.020 --> 33:02.020
看一下

33:02.020 --> 33:04.020
detail

33:04.020 --> 33:05.020
试试

33:05.020 --> 33:06.020
试试

33:06.020 --> 33:07.020
试试

33:07.020 --> 33:10.100
试试

33:10.100 --> 33:11.100
试试

33:11.100 --> 33:12.100
试试

33:12.100 --> 33:13.100
试试

33:13.100 --> 33:14.100
不就拿到了吗

33:14.100 --> 33:15.100
对不对

33:15.100 --> 33:16.100
所以就拿到了

33:16.100 --> 33:17.100
拿到过后

33:17.100 --> 33:18.100
对不对

33:18.100 --> 33:19.100
眩然出来

33:19.100 --> 33:20.100
还不好说吗

33:20.100 --> 33:21.100
我们这里写个函数

33:21.100 --> 33:22.100
Render

33:22.100 --> 33:23.100
眩然

33:23.100 --> 33:24.100
你给我一个수ji

33:24.100 --> 33:25.100
不可以

33:25.100 --> 33:26.100
那我把它眩然出来

33:26.100 --> 33:27.100
我这里的

33:27.100 --> 33:28.100
无非就调一个函数

33:28.100 --> 33:29.100
Render

33:29.100 --> 33:30.100
然后

33:31.100 --> 33:32.100
Risk

33:32.100 --> 33:33.100
给它

33:33.100 --> 33:34.100
好 那这边怎么眩然呢

33:34.100 --> 33:35.100
我就直接拿一个

33:35.100 --> 33:36.100
就是Dopument

33:37.100 --> 33:38.100
getElement by

33:38.100 --> 33:39.100
et

33:39.100 --> 33:41.100
detail

33:41.100 --> 33:43.100
他们要用View

33:43.100 --> 33:44.100
对 himself

33:44.100 --> 33:46.600
能弄的意思就一样

33:46.600 --> 33:47.600
DIV

33:48.400 --> 33:51.100
DIV in the 80秒

33:52.850 --> 33:54.010
等于啥呢

33:54.650 --> 33:56.870
等于我们一个来吧

33:57.210 --> 33:58.710
H1元素

33:58.710 --> 34:01.710
H1元素里面显示书记的名称

34:02.610 --> 34:04.410
Book.NET

34:04.710 --> 34:06.610
然后下边有个DIV元素

34:06.610 --> 34:09.010
这个DIV元素显示书记的简介

34:09.810 --> 34:12.510
简介的话我是不是把服务器响应给我的

34:12.510 --> 34:14.810
你看这服务器响应给我的这个description

34:15.010 --> 34:16.110
对吧 放进去

34:19.210 --> 34:21.610
Book.app

34:22.010 --> 34:22.610
放进去

34:23.010 --> 34:23.710
保存

34:24.210 --> 34:24.610
相信

34:25.210 --> 34:26.010
危险说完了

34:26.410 --> 34:26.810
对吧

34:27.510 --> 34:28.610
好 这就是傅文闷框

34:28.610 --> 34:29.510
以及他的使用

34:29.510 --> 34:30.810
就这么简单 原理很简单

34:31.410 --> 34:33.910
好 这是关于这一部分的做法

