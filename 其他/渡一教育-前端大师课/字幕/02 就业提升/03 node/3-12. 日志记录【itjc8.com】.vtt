WEBVTT

00:00.430 --> 00:04.750
所以说这个日子记录 说了之后呢 本章就结束了

00:04.750 --> 00:10.350
啊 终于把这个 其实本章讲的那个数据库啊 其实并不多啊 跟数据库相关的并不多

00:10.350 --> 00:16.110
呃 主要是一线端起拔到第三方库 我也不清楚大家知不知道啊 所以说就直接给大家讲了

00:16.110 --> 00:21.070
把日子记录讲一下啊 因为后边我们在下一章学习的时候呢 还会用到

00:21.070 --> 00:25.870
这个日子记录是这么回事啊 就是有的时候呢 我们会把这个李执行的车口语剧啊

00:26.030 --> 00:30.830
把它记录下来 可能不是的 出车控制台 因为有的时候呢 出了问题 我们要去查一下

00:30.830 --> 00:36.110
它之前执行的哪些车口语剧啊 是哪些车口语剧出了问题 或者是以后呢 我们再做那个

00:36.670 --> 00:41.230
搭了一个服务器之后 拿了一个请求呢 我想把他什么时候请求的 那么

00:42.110 --> 00:48.910
呃 这些数据呢 也把它记录下来 像这些东西呢 都属于日子记录啊 但是日子记录呢 你可以完全可以自己手动剧写

00:49.630 --> 00:55.310
不过呢 这种东西有点麻烦 对吧 所以说你 我们一般呢 使用一个第三方库 叫log4 gs

00:56.030 --> 01:01.150
这个库呢 我给大家说一下啊 就是每一个语言呢 他都有一个相关的日子记录库

01:01.950 --> 01:06.190
比方说加瓦里边 他有一个log4g 就是log4加瓦

01:06.750 --> 01:15.470
还有什么dolet啊 就是c sharp里边呢 有一个log4 net 什么c语言呢 有个log4c 对吧 每个语言他都有一个日子记录的库啊

01:15.630 --> 01:19.870
咱们ges 人漏的漏的ges里边呢 一个log4ges啊 这是他的官方文档

01:20.830 --> 01:28.510
嗯 注意啊 他只是针对逗的的 他不是针对浏览器的啊 跟浏览器没有什么关系 因为我们浏览器呢 也不需要做什么日子记录

01:28.750 --> 01:36.670
对吧 浏览器做日子记录给谁开呢 给拥护看吧 对吧 一记录在拥护那一边呢 所以我们一般是在服务器啊 记录这个日子

01:37.550 --> 01:40.750
嗯 在记录日子的时候呢 有几个概念啊 大家需要理解

01:42.030 --> 01:49.390
嗯 一个呢 是日子级别 什么叫日子级别呢 就是比方说啊 什么调试日子啊 一个日子他显示的是一个信息

01:49.630 --> 01:56.350
有个日子呢 显示的是一个调试信息啊 有的日子呢 显示的是一个错误信息 对吧 像这些呢 就是属于日子级别

01:56.990 --> 01:59.950
那么这个日子级别呢 我这里有个示意图啊 给大家看一下

02:01.230 --> 02:09.550
啊 在log4ges里边呢 日子级别呢 分为这么一些啊 很多是吧 其实呢 平时呢 我们也用不到那么多啊 他只是告诉你呢 他支持这么一些级别

02:10.030 --> 02:12.190
首先是这个级别啊 这个级别是个特殊级别 就是

02:12.830 --> 02:17.710
最低的级别啊 就表示说 高于这个级别的日子呢 我得要把它记录下来

02:18.110 --> 02:23.630
啊 就这么个意思 那么意思呢 后来是确实跟踪啊 debug 调试啊 info 信息啊

02:24.430 --> 02:31.310
我警告 error 就是错误啊 photo 呢 就是灾难啊 mark 呢 就是一个就是

02:32.190 --> 02:38.510
这个叫做记录点啊 off 呢 就表示这是最高级别啊 这个这个级别以上就没有级别了

02:38.510 --> 02:45.550
所以说 如果说你把日子级别调为这个级别的话 那么后续的记录了 他都不会显示出来了啊 他都无法记录了

02:46.030 --> 02:49.390
好 咱们这是日子级别啊 先了解一下 我们一会再详细来说

02:50.350 --> 02:58.670
然后呢 是日子分类 这个分类呢 是自行分类的 比方说像什么捨口日子啊 请求日子啊 还有什么自定义日子啊 随便啊 就是他可以自行分类

02:59.070 --> 03:05.550
这些都可以配置的啊 日子出口 就是什么意思呢 就是我定义好级别 定义好分类之后呢 我应该把日子写到哪

03:06.030 --> 03:07.710
写到文件里边 还是输入到控制台

03:08.270 --> 03:15.230
或者是你把发送到邮件啊 发送邮件 我们之后专门会哪一个课程啊 有一个客人叫做就是第三方接口啊

03:15.790 --> 03:21.710
就是类似就是讲的是第三方接口 就是什么发送短信啊 发送邮件啊 已经呢 什么微信啊

03:22.270 --> 03:27.390
那个登录啊 什么qq登录啊 这些东西啊 怎么往影转账啊 这种玩意啊 我们把呢

03:28.350 --> 03:30.910
封为第三方接口啊 我们到时候哪个课程来讲

03:31.630 --> 03:36.830
嗯 然后呢 或者是日子输出的时候呢 他格式是什么啊 这些都属于apprenture

03:37.230 --> 03:40.270
对吧 这个都是log4j里边log4js里边的概念

03:40.750 --> 03:44.350
好 咱们一个个说吧 首先呢 这个log4js呢 你需要安装

03:44.590 --> 03:45.630
啊 你需要安装一下

03:47.390 --> 03:52.270
嗯 npm i 这里呢 安装一下这个log4js

03:54.430 --> 04:00.590
好 安装好了啊 安装好了之后呢 我们怎么来用呢 我们来随便用一下 看一下吧 我们把这个东西就全部删掉了

04:02.190 --> 04:04.990
哎 首先导入啊log4js require

04:06.670 --> 04:14.510
啊 导入进来 导入进来之后呢 非常简单啊 他这个里边呢 提供了一个方法叫getloger啊 就是得到一个日字基础对象

04:15.230 --> 04:15.470
啊

04:15.950 --> 04:21.230
嗯 那么这边呢 这里边要传一个参数 这个参数是一个字不算 表示的啊 你日子的内形

04:21.790 --> 04:29.630
啊 就是日子的分类 就是就是这个东西啊 你是哪一种日子 你记录的是社会日子还是什么请求日子对吧 这分类都是自定义的啊

04:29.870 --> 04:35.150
当然如果说你不写分类的话 他默认就是default啊 default这个分类啊 默认日子

04:35.790 --> 04:39.870
好 那么咱们先不写吧啊 先不写 不写呢 我们得到一个什么log

04:40.830 --> 04:43.150
就是专门 这个东西就相当于是一支笔

04:43.710 --> 04:48.670
用来专门来记录日字啊 就得到这么一个对象 那么你通过他就能记录日子

04:48.910 --> 04:55.870
还有通过他的时候呢 我们首先啊 这里边有很多方法 什么debug呀 还有什么info啊 就对应的是什么日子级别

04:56.430 --> 05:02.190
啊日子等等级 那么这里呢 我们就随便写吧 就根据你的需要 随便写 比方说我们打印出一个

05:02.750 --> 05:06.750
呃 info嘛 打印出一个info 一个信息 呃 比方说

05:07.470 --> 05:15.310
呃 随便吧 abc啊 咱们来看一下啊 看一下控制台 他默认是打印到控制台的啊 看一下控制台里边有没有打印出来

05:16.750 --> 05:24.350
你想说啥都没打印 为什么呢 因为他默认他调的级别呢 他是默认设置的级别呢 是off

05:25.070 --> 05:32.750
就表示 设置的级别什么意思 就表示 只有高于等于这个级别的 大于等于这个级别的 他才会把日子输出

05:33.230 --> 05:38.350
那么 目前呢 我们使用的是off这个级别 因此呢 info这个级别的东西 是不是不会输出

05:38.990 --> 05:41.470
那怎么办呢 你可以把它调成哦啊 比方说

05:42.590 --> 05:47.630
咱们可以这样子设置level调成啊哦 这样子呢 我们来看一下啊

05:48.670 --> 05:55.470
冰箱 你还是不是输出了 对吧 而且他会自动更改这个日子的颜色啊 输出的颜色 你看前面是一个时间

05:55.790 --> 05:58.830
这个日子发生的时间是什么 是这个时间 这个日子的这个

05:59.790 --> 06:03.470
级别是什么的info啊 那么这个日子的类别是什么的default

06:04.510 --> 06:11.070
内容就是abc 所以很简单 对吧 那如果说这个等级呢 你调成比方说 调成error

06:12.670 --> 06:20.270
调成error 那么也就是说 只有error以上的级别 我才会 以上或者是error级别 才会输出 那么现在呢 我们来看一下

06:20.830 --> 06:23.150
是不是不会输出 但是如果说你把它写成error

06:23.870 --> 06:25.390
好 再运行

06:26.430 --> 06:34.830
是不是可以输出 对吧 还告诉你这是一个错误级别啊 分类呢是default啊 就这么一个日子啊 这是默认的情况啊 当然这种情况呢

06:35.470 --> 06:41.310
呃 少见一点 我们自己是弄去写这个日子 更多的时候呢 我们需要去配置一些东西

06:41.630 --> 06:44.830
配置什么东西呢 就是配置有哪些分类 比如说我们的系统里边

06:45.230 --> 06:50.750
有那个什么社会日子啊 请求日子啊 还有什么那种日子啊 对它进行一个分类 每一个分类呢

06:51.230 --> 06:55.870
不同的分类呢 我们可能希望把它写到不同的出口里边去 我们可能需要做一些配置

06:56.190 --> 07:00.430
那么这里怎么配置呢 其实非常非常简单啊 配置的方式呢 就是在这里

07:01.310 --> 07:04.990
使用一个log4ts 这里边有config

07:06.110 --> 07:11.470
进一配置 这里边写一个配置对象 那么怎么来配置呢 其实很简单啊 一个是配置apendors

07:12.110 --> 07:17.310
配置这个东西啊 一个呢 是配置那个categories 就是配置分类

07:17.950 --> 07:18.990
好 咱们一个个看吧

07:19.710 --> 07:27.310
首先呢 我们比方说 我们有两个日子呢 我们有两个出口 我们想要做这么一件事啊 给大家说一下

07:28.270 --> 07:34.030
假设我们要做这件事 我们的系统里边呢 有两种日子 一种日子呢 是那个

07:34.590 --> 07:41.870
呃 舌口日子 比方说吧 我们有一个舌口日子 呃 然后呢 我打算呢 把这个日子呢 这是一个分类啊

07:43.070 --> 07:46.270
分类1 就是分类名字

07:46.990 --> 07:47.390
名称

07:48.670 --> 07:56.510
我们把它取名为舌口吧 这个名字都是随便取的啊 分类名称是舌口 好 那么这个东西怎么写的 你就可以在categories里边写上一个舌口

07:56.830 --> 08:00.750
就表示我多了一个分类啊 分类 那么这个分类的相关配置 我们写到这

08:01.230 --> 08:05.630
明白了意思吧 好 然后呢 呃 这个分类呢 它有一个出口

08:06.830 --> 08:10.110
啊 出口 就是我们要写到哪呢 呃 写入到文件

08:10.990 --> 08:12.110
写入到文件

08:12.670 --> 08:18.430
那么这个东西我们怎么来配置呢 我们就可以这样配置 呃 它的出口 我们在这里 出口在这里配置啊

08:19.150 --> 08:24.510
出口的话 我们也给他写一个舌口啊 出口的名字 给他命名名为一个舌口啊 出口名字

08:25.470 --> 08:26.350
出口名称

08:28.270 --> 08:28.750
也是

08:29.790 --> 08:30.270
呃

08:30.990 --> 08:36.990
舌口啊 我们写个舌口 这是出口名称舌口 那么这两个虽然名字一样 但是他们没有对应关系啊

08:37.070 --> 08:42.030
所以说你要把它对应起来 就是我们的类别名称啊 就这个类别 我们要使用

08:42.670 --> 08:48.750
出口舌口啊 这个这个出口的名字可以可以写多个啊 就是可以写别可以写别的名字

08:49.310 --> 08:52.830
他为什么要这样做呢 为什么不是一个分类 就是一个出口呢 他是这样子啊

08:53.150 --> 08:56.990
因为他有可能会让多个分类就用同一个出口

08:58.110 --> 09:02.350
原来的意思吧 他可以让多个分类用同一个出口 所以说呢 他就把两个分开来配置的

09:02.670 --> 09:06.750
那么我们这里呢 就是一个分类有一个出口 那么我们就配置这个分类

09:07.070 --> 09:12.270
他要使用这个出口舌口 那么怎么来配置呢 分类里边我们可以给他设置一个就是

09:13.150 --> 09:13.790
upenders

09:14.510 --> 09:16.670
啊 他也可以有多个出口 就是他可以有

09:17.230 --> 09:21.230
可以有多个分类使用一个出口 也可以有一个分类使用多个出口啊

09:21.550 --> 09:25.470
都可以啊 就是可以把分布 可以把他写的时候 写到多个文件里边同时

09:25.790 --> 09:30.350
然后我们一般就一个对吧 upenders我们只该写一个出口 一个出口就是舌口

09:30.750 --> 09:33.230
那么这句话什么意思啊 这句话就是啊

09:34.430 --> 09:35.070
该分类

09:35.390 --> 09:41.230
使用出口舌口的配置啊 写入日字

09:41.470 --> 09:47.870
出口是什么意思 出口就是写入日字的 对吧 写入日字的配置 那么这里呢 我们配置一个啊

09:48.110 --> 09:51.710
配置一个舌口 就是定义一个

09:52.990 --> 09:54.270
舌口

09:54.510 --> 09:55.550
日字出口

09:56.830 --> 10:01.950
那么这个出口呢 他默认反正所有的出口啊 默认都是写到控制台 那么这个时候呢 我肯定不希望写到控制台了

10:02.190 --> 10:04.510
那怎么办呢 我们再说一个Type属性

10:05.070 --> 10:08.350
这个Type属性 我们写入到哪呢 写入到文件 那怎么来写呢

10:08.750 --> 10:12.670
我们可以给他设置一个啊 文件呢 我们可以用这个

10:12.910 --> 10:15.470
看看官方文道啊 这个叫做appenders

10:16.270 --> 10:18.910
你看他支持的出口有很多啊 包括发送邮件

10:19.150 --> 10:22.590
我们这里呢 写入的 他都是一步写入到文件的啊

10:22.830 --> 10:29.550
一步写入的 如果说你要同步写入到文件的话用sync 但是这个东西我建议不要这样做啊 一般我们是用一步的写入

10:29.790 --> 10:34.830
他支持两种方式来写入文件啊 useStateFile useFile 咱们先看一下File

10:35.230 --> 10:40.510
先看一下file 他们的用法都差不多 好 那么这个file呢 你看一下他这里边给你说的很详细了

10:42.110 --> 10:48.670
他告诉你呢 这个file呢 要配置一个file name 就是写入到哪个文件啊 比方说吧 我们给他写入到一个

10:50.030 --> 10:54.990
file name 给他写入到这个文件夹啊 我们可以用决定路径嘛

10:56.350 --> 11:03.070
pass require pass 当然他可以支持相对路径啊 只不过我们一般相对路径呢 他跟那个

11:04.030 --> 11:05.470
跟我们的那个的就是

11:06.590 --> 11:12.750
空置台的目录有关系 所以说我们一般不这样做 还是要使用决定路径 好 我们这里呢file name就用pass

11:13.230 --> 11:14.830
绿色后 把它写入到这个

11:15.790 --> 11:17.070
当前目录下面的

11:19.310 --> 11:20.270
logs 文件夹

11:21.150 --> 11:24.350
啊 这个logs 文件夹 下面的射口文件夹

11:25.070 --> 11:28.350
啊 我们写到写到这个文件夹里边 这是我们他的file name

11:29.310 --> 11:34.510
原来的意思吧啊 这是啊 那么这个就配置好了 对吧 配置好了之后呢 我们

11:35.310 --> 11:41.870
再来看一下啊 就是说我们这个地方呢 还有一个啊 这个类别的类别配置的时候呢 还有一个东西

11:42.350 --> 11:45.390
分类一配置的时候 还有一个东西 就是

11:46.510 --> 11:47.150
类别

11:48.430 --> 11:49.150
类别的

11:49.630 --> 11:50.110
级别

11:50.830 --> 11:55.150
啊 就是我们刚才相当于是loger.level 对吧 相当于配置这个 直接配置好

11:55.630 --> 12:00.350
啊 那么怎么 这里怎么配置呢 就在cataclysm里边 这个类别里边 我们给他配置一下level

12:01.150 --> 12:02.270
级别呢 我们就是

12:03.070 --> 12:06.030
啊 所有的日字级别 我都要把它记录下来

12:06.750 --> 12:10.510
好 我们来读一下啊 这个配置什么意思 我有一个分类 叫射口

12:10.830 --> 12:15.390
这个分类呢 我们的级别呢 是支持所有的 就是所有的级别呢 我都要记录

12:15.870 --> 12:21.470
那么记录到哪呢 我们使用的是出口的是这个名字的出口 我们把记录到一个文件里边

12:21.710 --> 12:24.510
这个文件在哪呢 在这个目录下面啊logs

12:25.230 --> 12:27.950
射口啊 对 后面还要跟个文件名

12:28.750 --> 12:31.630
文件名 我们一般就可以用这个log

12:32.670 --> 12:33.950
log.log

12:34.670 --> 12:38.110
好 我们就写好了 对吧 表示正在记录的日字

12:38.750 --> 12:41.790
好 咱们写好了 写好了之后呢 他这里呢 还有一个

12:42.430 --> 12:45.230
说明啊 前面一个说明 这个是很多程序容易忽略的

12:45.550 --> 12:50.670
他就是说呢 应该让让你啊 在这个程序 因为这个程序不知道什么时候会崩溃

12:51.390 --> 12:56.030
如果说程序崩溃了过后呢 这个日子还没有记录完 就会出现一些小的问题

12:56.270 --> 13:02.190
他建议你呢 无论如何在程序快要退出的时候 一定要调用一次log4.js下档

13:02.750 --> 13:04.030
这什么意思呢 这就是

13:04.830 --> 13:09.630
这个这个函数的作用就是让他把还没有记录完的日子 把他记录完 把它处理完

13:10.430 --> 13:12.190
那么我们这里呢 就可以用这种方式

13:14.110 --> 13:17.870
process 我们之前学过了 对吧 有个有个事件叫做xs

13:18.590 --> 13:24.030
当他退 当程序退出的时候 我们干嘛呢 我们调用这个log4.js

13:25.150 --> 13:25.550
下档

13:26.830 --> 13:31.950
就是当我们程序退出的时候 不管是什么样的方式来退出 退出的时候 我们把这个就是

13:33.070 --> 13:40.590
log4.js调用一下下档 那么他会根据当时的情况 有没有记录完 一般来说 正常退出的话 他已经记录完了啊 如果说没有正常退出的话

13:40.830 --> 13:43.070
那么他会把没有记录完的日子 把记录完

13:43.550 --> 13:46.590
好 我们设置好了 这些过后 我们怎么来用呢 我们来看一下啊

13:47.230 --> 13:52.590
那么这里呢 我们得到这个loger的时候呢 就要给他分类了 我们分类的是什么呢 分类的是射口

13:53.550 --> 13:58.510
啊 是一个射口分类 好 咱们给他就不用设置这个东西了啊 后面就直接记录一下

13:59.070 --> 14:01.710
记录就行了 比较说咱们记录一个info

14:03.310 --> 14:04.910
好 保存 咱们来记录一下

14:06.590 --> 14:10.030
印象 诶 这里爆错了啊 看一下什么错误

14:11.390 --> 14:12.750
啊 什么意思呢

14:13.710 --> 14:19.420
他 他这个呃 配置有问题 有什么问题

14:21.420 --> 14:25.100
er 翻名 users 这都没问题啊

14:26.700 --> 14:31.100
define 哦 他说必须要配置一个默认分类 哈哈哈

14:31.580 --> 14:35.020
他必须要配置一个默认分类 我这个地方没有默认分类 对吧

14:35.340 --> 14:41.420
那么让你必须要配置一个默认分类 那行吧 我就给他配置一个默认分类吧 我同时给他配置一个默认出口

14:41.980 --> 14:47.900
啊 默认出口的话 我就给他配置一个啊 还是file吗 还是file 那么file name呢

14:50.220 --> 14:56.860
给他写到这个啊 default 里边啊 一个默认分类啊 一个login log log 对吧

14:56.860 --> 14:59.260
然后呢 分类的这边 我也配置一个default

15:00.460 --> 15:01.180
er penders

15:02.700 --> 15:05.500
啊 这一配置呢 其实只需要一次就行了啊 default

15:06.140 --> 15:08.220
好 然后呢 type a demo

15:08.780 --> 15:14.380
哦 他其实那个应该算是个警告啊 刚才其实已经写入成功了

15:14.860 --> 15:19.020
啊 你看没 已经写入成功了啊 这个地方他把这个折叠起来的啊 这是vscode的

15:19.500 --> 15:22.060
这个功能 哎 怎么样他他不要折叠呢

15:23.100 --> 15:25.660
哎 我之前配置过了是怎么样的他不不折叠

15:26.940 --> 15:27.260
呃

15:28.140 --> 15:34.220
好像是在文件这个首选项里面啊 我下来看一下吧 我拿着拿着弄的啊 就是在logs

15:34.540 --> 15:39.580
射口里面啊 他出现了这么一个日子文件 你看日子文件里面没有写入内容是吧

15:40.460 --> 15:44.380
没有写入这种啊 刚才应该是这个配置没配置好 好 咱们重新来一次啊

15:46.540 --> 15:47.100
好 运行

15:48.220 --> 15:52.140
好 现在我们看一下 是不是记录一下 对吧 是不是记录下来了 对不对

15:52.860 --> 15:53.020
啊

15:53.660 --> 15:58.620
default里面啊 摸着里面啊 他都出了这个文件 那么他刚才我们一次记录到射口里面了

15:58.620 --> 16:03.820
对吧 所以在射口这个文件下面有这么一个日子记录 你看什么时间

16:04.380 --> 16:11.420
呃 然后呢 这个是我们的日子的级别 然后我们日子的分类 这里是日子的消息

16:12.140 --> 16:13.420
对不对 说记录下来了

16:14.380 --> 16:19.980
好 那么这里呢 还有一些小的问题我还没还解决啊 比方说我们要设置这个日子的记录格式

16:20.300 --> 16:25.020
我不希望他时间用这种方式来显示 那这个怎么办呢 你可以去设置一下出口这里

16:25.580 --> 16:31.100
啊 比方说 射口这个出口呢 我们可以设置一下啊 呃 射口的出口呢 我们设置一下layout

16:31.980 --> 16:37.340
就它的格式啊 那么这里的一个内容啊 type 你可以看一下这个文档

16:38.140 --> 16:40.700
他在这里啊layout layout怎么配置

16:41.980 --> 16:45.900
他告诉你呢layout呢 他支持这么一些

16:47.260 --> 16:51.100
呃 这么一些东西啊 什么当密啊 当面应该就是那个

16:52.220 --> 16:56.700
呃 当面我们用不到 这个都用不到 我们看一下那个partner啊 partner

16:57.100 --> 17:01.100
这个东西呢 是怎么呢 他就是一个自定义的啊 自定义的格式

17:04.080 --> 17:08.480
设置成partner 表示自定义的格式 然后呢 后面你要配置一个partner

17:09.200 --> 17:15.840
啊 相当于是个嗯 格式嘛 那么这里边partner怎么配置呢 他告诉你 下面有很多种写法啊 就这里

17:16.320 --> 17:19.440
你写个字乌串 这个字乌串里边有一些站位符 比方说这个

17:20.160 --> 17:20.880
呃 钢

17:21.840 --> 17:29.200
地啊 钢地 就是百分号地 百分号地是什么意思呢 就表示日期啊 日字的日期 那么我们可以给他写上这么一个

17:29.840 --> 17:38.160
日期的格式呢 你可以用个大火号啊 后边告诉你怎么来写日期格式 比方说他这里一个例子啊 连月日小时分钟秒 那么我们可以用

17:38.560 --> 17:41.120
连月日

17:42.160 --> 17:49.040
小时分钟秒啊 这是日期啊 站位符啊 后边呢 比方说还有一个什么呢

17:49.840 --> 17:54.800
还有一个日字的日字的级别啊 日的级别百分号p

17:55.520 --> 18:00.640
然后呢 还有一个什么日字的分类百分号c啊 后边呢 我们比方用个冒号来分割吧

18:01.200 --> 18:08.160
啊 后边就是我们的日子内容 我们用个百分号m啊 m表示日的内容 好 最后呢 我们要换行 换行的话就是百分号

18:09.200 --> 18:12.640
换行 好 这里呢 我们设置了内奥词之后啊 咱们来看一下

18:13.600 --> 18:18.560
再来运行 我们看一下这个捨口日字啊 你看是不是变成我们自己的格式了

18:19.120 --> 18:22.880
对吧 当然你可以用个中货啊 把这些相关的东西扩起来

18:23.600 --> 18:27.360
总之你写什么 它就按照什么样的格式来显示啊 这东西我们把扩起来

18:28.880 --> 18:33.920
好 我们这个可以把分类写到最前面吧 把分类写到最前面

18:35.840 --> 18:42.080
后边就不要分类了 好 那么我们写好了啊 咱们再来看一下运行

18:43.040 --> 18:48.240
你看是日字里边 是不是啊 按照我们的方式 是不是搞定了啊 这里多个空格

18:50.160 --> 18:54.000
对吧 好 这就是我们的日字记录啊 非常非常的简单

18:54.800 --> 19:02.480
那么这里呢 还有一个问题啊 就是我们日字的记录的东西会越来越多 对吧 这个文件讲我说一下啊 这个文件讲我们一般会在计刺里面把排除在外

19:03.360 --> 19:06.000
我给一个了啊 把这个logs

19:06.960 --> 19:10.400
把这个所有东西啊 所有东西排除在外

19:13.900 --> 19:21.100
好 然后呢 我们这里呢 还有一个问题啊 就是我们的日字内容呢 会越记录越多 导致我们的文件会越来越大

19:21.340 --> 19:25.500
对吧 那么到时候呢 这个文件几百兆或者是几个G了啊 这个非常夸张了

19:25.820 --> 19:28.780
所以说呢 我们一般呢 会对这个文件呢 做一个分割

19:29.100 --> 19:35.820
就是说 你的文件呢 不能太大 那这个东西怎么来处理呢 非常简单啊 你去配置一下这个东西 叫做max log size

19:36.140 --> 19:43.980
这个配置是什么呢 配置字结束啊 文件的最大字结束 什么要字结束 一个字节等于八位

19:45.020 --> 19:46.700
1024个字节等于一kb

19:47.900 --> 19:48.860
1024等于

19:49.500 --> 19:55.100
一兆啊1024kb等于一兆 所以说这里怎么配置呢 比如说我一个kb吧 一个kb

19:55.420 --> 20:01.660
一个文件 这个比较小啊 一般是100个kb啊 或者是200个kb啊 一个文件就差不多了

20:02.460 --> 20:09.580
我们这里呢 就配 我要大家看得清楚啊 我就配置一个kb 一个kb呢 就是1024啊1024个字节就是一个kb

20:10.380 --> 20:16.460
好 我们配置这个东西 配置这个东西过后呢 如果说他超过了这个大小 他不停的往文件里面写那种嘛

20:16.780 --> 20:22.380
好 他超过了这个大小过后呢 他会自动把之前的文件给你备份出去 备份到这个文件夹

20:22.940 --> 20:23.420
然后呢

20:24.140 --> 20:27.420
他又继续往这个新把这个文件清空 然后继续往这个里面写

20:27.820 --> 20:33.820
不然然后写不下了 他又给你备份 对吧 他是这么一个意思 好 咱们怎么来掩饰这个效果呢 我们可以用这种方式

20:35.340 --> 20:37.180
呃 这边呢 我们是用个set interval

20:38.220 --> 20:44.380
啊 比方说100毫秒啊 10毫秒写入一个啊10毫秒有点多了啊100毫秒 每来都一下子出来很多文件

20:44.940 --> 20:49.260
好100毫秒写入一个啊 然后呢 我们这里每一次写入log

20:49.980 --> 20:51.820
就要写个啊one circle

20:52.860 --> 20:55.980
啊 一个 circle 语句运行了 咱们来试一下啊

20:57.260 --> 20:58.060
运行

21:01.060 --> 21:06.540
log 哦 这里啊 我们用dbug吧 啊 运行

21:07.900 --> 21:11.100
你看啊 他到了一个kb 是不是给你备份了一个

21:11.420 --> 21:15.260
到了一个kb 是不是给你备份了一个 看没 咱们这里停止

21:15.980 --> 21:22.700
好 你看 是不是给你备份了一个 对吧 不过呢 这种备份文件的名字呢 我们是不太希望看到的 这个名字太噁心了

21:23.260 --> 21:28.620
太噁心了啊 不太希望看到的啊 刚才有人说 为什么这个文件里面有颜色 这是vscode啊

21:28.860 --> 21:33.660
这是一个存位面文件 这是一个vscode他支持的 vscode他本身就支持这个

21:34.140 --> 21:37.020
后续名为log的文件 他能知道log的结构格式

21:37.420 --> 21:40.940
那么这个文件他就支持不了 对吧 他显示不出来这个文件格式

21:41.260 --> 21:46.620
所以我们不太希望呢 他用这种方式来秘密 那怎么办呢 我们希望呢 是他用这种方式

21:47.580 --> 21:56.460
就是按照日期来进行备份文件 比如说今天是2020年4月16号 那么你给文件后续呢 加上一个20204月16号

21:56.780 --> 22:00.380
那这个东西怎么办呢 你非常简单 你只需要把这个type改成data file

22:01.740 --> 22:08.220
啊 就是日期文件 其他的完全一样 就是在写这个日期的 就是在日期啊 就是备份的时候啊

22:08.620 --> 22:10.780
那么他会把它加上这个日期

22:11.900 --> 22:12.940
好 咱们来试一下啊

22:13.900 --> 22:14.540
运行

22:15.100 --> 22:24.110
好 你看呗 后面加了个日期了 对吧 日期啊 同一个日就同一天的1234

22:24.510 --> 22:25.310
明儿的意思吧

22:26.510 --> 22:27.310
这是这个

22:28.510 --> 22:29.870
好 这是关于这个啊

22:30.510 --> 22:36.350
然后呢 还有一些配置啊 比方说你希望了这个文件的后续呢 不要改成日期的后续

22:36.670 --> 22:40.750
应该用保持这个文件log这个后续 那么你可以使用这个

22:40.910 --> 22:48.190
这个叫做叫做什么keep file extension 表示的是保留文件后续

22:49.150 --> 22:50.190
你看一下 现在的格式

22:52.850 --> 22:53.330
删除

22:54.210 --> 22:54.930
好 再运行

22:57.300 --> 23:00.580
看一下 你看是不是这种格式的 对吧 这种格式是不是比你好看一点

23:01.220 --> 23:01.540
对不对

23:02.100 --> 23:08.900
好 这是关于这个啊 然后这个文件会越来越纪度越多 那么有可能呢会达到几千个文件

23:09.140 --> 23:14.020
那么有过早的文件啊 就是已经很古老的文件呢 我们可能不太需要了

23:14.100 --> 23:17.460
就是我们可能只需要保留一部分文件 日子太多了 我也可能也

23:18.100 --> 23:21.620
以前很早的日子呢 我们也不太需要了 那么我们可以设置这个

23:21.940 --> 23:24.340
叫做mac 叫做什么玩意儿 我看一下

23:26.500 --> 23:28.180
appendus里面

23:29.620 --> 23:31.140
在那个file

23:32.900 --> 23:33.220
嗯

23:34.420 --> 23:35.460
oh that's to keep

23:36.980 --> 23:39.780
好 这个东西是什么呢 他保留几天内的日子

23:40.500 --> 23:44.020
保留几天内的日子 比方他默认是零 零的话就不限制

23:44.340 --> 23:46.900
然后比方说我给他写一啊 咱们来看一下

23:49.940 --> 23:50.500
啊 运行

23:52.880 --> 23:56.880
啊 你看 是不是只有一个对吧 他只保留这么这么一个

23:57.440 --> 24:00.560
明儿的意思吧啊 就这个意思啊 否则的话就不限制

24:02.000 --> 24:03.200
啊 这是that's to keep

24:04.560 --> 24:09.200
好 那么这个东西呢 我们就把它设为零吧啊 设为零啊或者不设置它

24:09.440 --> 24:11.120
这就是日子 非常简单对吧

24:11.840 --> 24:15.200
好 那么这个东西呢 我们把它设置好了过后啊 把这些删掉

24:18.290 --> 24:22.770
好 设置好了过后了 我们一般来说呢 会把这个配置啊 专门来写到一个文件里面

24:23.010 --> 24:25.490
啊 专门写到一个模块里面 叫做log4j

24:26.370 --> 24:27.890
log config

24:29.970 --> 24:31.090
log config

24:33.010 --> 24:39.170
啊 或者叫做log吧啊 就叫做log的解释 我们把这个刚才的代码呢 就是个代码

24:40.930 --> 24:41.890
就这一段代码

24:43.410 --> 24:43.810
ok

24:44.610 --> 24:45.890
这一段 这一段

24:47.170 --> 24:47.970
好 放过来

24:48.690 --> 24:50.770
把这个配置啊 这东西全部放过来

24:51.330 --> 24:54.850
放过来之后呢 我们这里得到啊 我们不是用两个类别吗 对不对

24:55.090 --> 25:00.210
我们得到两个log啊 我们在这里写 我们一般会用这种方式来写啊 一个是sircolog

25:01.490 --> 25:03.410
啊 得到啊 通过这个log4j

25:04.290 --> 25:06.210
getlog 然后得到sirco

25:08.050 --> 25:08.690
得到sirco

25:10.720 --> 25:12.000
这写的是啥呀

25:14.910 --> 25:15.390
ok

25:15.550 --> 25:18.510
然后呢 还有一个就是默正日子对吧 defaultlog

25:18.990 --> 25:21.630
啊 defaultlog呢 我们一般 我们可以把它放到控制台吗

25:21.870 --> 25:25.550
我们不用把它放到 不用把它放到这个文件里面 把它放到控制台

25:25.710 --> 25:27.470
放到控制台 我看一下就是默正的啊

25:28.110 --> 25:29.150
appentus

25:30.670 --> 25:33.230
默正的控制台啊这个

25:34.190 --> 25:35.070
standard out

25:35.550 --> 25:39.870
啊 就是控制台输出啊 标准的控制台输出 那么这个东西就不要了

25:40.830 --> 25:42.190
啊 这是default

25:43.230 --> 25:46.750
啊 那么default这个日子log4js getlog

25:47.310 --> 25:50.430
default 就是不要的 不要就是default嘛

25:50.670 --> 25:53.790
我们目前呢 有两种日子对吧 两个分类 一个是sircolog

25:53.790 --> 25:54.750
一个是defaultlog

25:54.750 --> 25:57.870
好 那么我们这里面把它导出啊 使用export

25:58.990 --> 26:00.830
第二sircolog

26:01.550 --> 26:02.750
啊 等于sircolog

26:03.310 --> 26:05.230
把导出 然后呢 export

26:05.950 --> 26:07.230
啊 defaultlog

26:10.220 --> 26:12.060
就log吧log

26:12.620 --> 26:13.660
defaultlog

26:15.100 --> 26:18.620
啊 把它导出 那么后边呢 我们用的时候呢 就非常方便了啊

26:18.780 --> 26:23.580
在用的时候呢 我们在这边 比方说 我们要用这个日子啊 要用sirco日子 那么我们就导入

26:24.380 --> 26:25.420
sircolog

26:26.620 --> 26:27.580
用一个结构吧

26:28.140 --> 26:28.780
require

26:29.900 --> 26:30.620
loger

26:31.580 --> 26:34.780
我们导入这个sircologloger 那么是不是直接记录就完成了

26:35.100 --> 26:36.780
对不对 是不是直接记录就完成了

26:37.340 --> 26:39.340
啊 咱们来看一下吧 是一样的效果

26:40.220 --> 26:41.260
运行

26:45.250 --> 26:47.970
好 然后呢 你看一下 是不是一样的效果 对吧

26:48.850 --> 26:50.210
好 就写完了 对吧

26:50.450 --> 26:54.370
呃 然后呢 如果说我们要用defaultlog呢 就直接导入log

26:56.210 --> 26:57.090
好 咱们来看一下

26:59.180 --> 27:00.460
这边 再来

27:01.260 --> 27:03.820
好 你看defaultlog 是不是这样子 对不对

27:04.380 --> 27:04.700
好

27:05.340 --> 27:09.900
好 这是这个日子记录 那么我们现在要把它跟那个我们的数据库呢 连接在一起

27:10.220 --> 27:14.620
因为我们数据库里边 我们还记得吗 在模型里边 我们配置的是这个地方 对吧log

27:15.100 --> 27:19.100
那么这个玩意呢 我们就可以配置 我们用我们这个logforge来进行日子记录

27:19.660 --> 27:22.700
好 怎么玩呢 这个东西 我们在这里呢 他可以写个函数

27:23.580 --> 27:26.140
参数什么message 就是你要记就是你的消息

27:26.620 --> 27:31.020
我怎么办 我就把这个消息记录下来啊 导入require

27:34.350 --> 27:37.550
导入这个loger 里边导到这个sircologer

27:38.270 --> 27:39.790
好 把记录下来

27:40.110 --> 27:44.510
然后这边呢 我们message呢 就使用sircologer

27:45.070 --> 27:48.990
点什么呢 就dbg吧 把记录下来 就完了 就这么简单

27:49.470 --> 27:50.910
就这么简单 完了 没了

27:52.430 --> 27:57.710
好 那么这样子写了之后 我们再看一下吧 因这个事里边 我们之前用个什么inlet对吧

27:58.030 --> 28:02.990
他要去同步 同步数据库 设置关系等等等等啊 然后呢 我们再来导入一个stue

28:03.550 --> 28:06.190
学生stue serve require

28:06.830 --> 28:09.870
然后service is still service

28:10.750 --> 28:12.270
找到stue serve 比方

28:13.390 --> 28:16.910
查询学生吧 查询学生 我就拿着写这个几家结果了

28:17.310 --> 28:20.030
好 接下来我们来看一下 我们还是写上吧 z

28:20.910 --> 28:21.470
r

28:22.270 --> 28:22.910
输出r

28:23.550 --> 28:23.950
保存

28:24.510 --> 28:25.710
好 接下来我们来看一下啊

28:27.150 --> 28:32.510
我们这里输出了学生了对吧 而且他会把日子记录下来 就是我们运行了什么涉口语句你看

28:33.950 --> 28:35.230
哎呦 把三角

28:38.500 --> 28:39.060
重新来啊

28:40.900 --> 28:41.220
运行

28:42.180 --> 28:47.060
好 这也出来了啊 为什么这么多呢 为什么这么多呢 因为他运行了很多的涉口语句啊

28:47.380 --> 28:51.060
这一次运行了很多涉口语句 特别是刚才同步的时候有这么多表 对不对

28:51.300 --> 28:55.460
是不要运行很多的涉口语句 而且涉口语句内容比较多 所以很快就大打一个字节了

28:55.460 --> 28:58.180
因此了 这个字节数呢 我一般不会去设置这么少

28:58.580 --> 29:02.980
一般字节数呢 当然大家测试的时候可以设少这些啊 看他怎么去生成文件的

29:03.300 --> 29:10.260
我这里的一般是多少个字节呢 一般是一个照吧啊 一照1024乘1024啊 一般一照

29:10.900 --> 29:11.620
一照差不多

29:12.340 --> 29:13.300
好 删除掉

29:15.140 --> 29:17.140
好 接下来咱们看啊运行

29:18.660 --> 29:22.180
好 你看 这么我们把所有东西记录下来了 对不对

29:22.740 --> 29:26.500
哎 这里我们在vscode里面怎么来看 怎么让他自动换行呢

29:27.540 --> 29:27.940
查看

29:29.620 --> 29:31.060
自动切换自动换行

29:32.100 --> 29:32.580
啊 厉害

29:33.300 --> 29:37.220
但他实际上没有换行啊 实际上没有换行 是在编辑器里面 然后看的更加

29:37.780 --> 29:40.420
简单一点 那你看我们他运行的涉口语句啊

29:42.260 --> 29:46.420
这个在哪里 你看 是不是运行的涉口语句 对吧

29:47.220 --> 29:49.620
好 这是这种做法

29:50.020 --> 29:50.580
日字

29:51.300 --> 29:54.740
其他的没啥了 那么咱们本章的东西呢 就到此结束了

29:55.220 --> 29:58.980
跟数据库相关的啊 我就尽量用比较简单的方式来讲

29:59.460 --> 30:05.060
而且呢 其实东西还是蛮多的 然后在对后 因为毕竟是一个后端课程嘛

30:05.060 --> 30:08.260
所以他水很深 我们对于前端来讲呢

30:08.980 --> 30:14.660
在数据库这一块啊 以及在业务逻辑层的操作呢 相关操作这一块呢

30:14.660 --> 30:18.340
差不多就是什么这些东西了啊 再复杂的话也不会让你再做了

30:18.820 --> 30:22.740
好吧 这是关于这么一张啊 那么咱们这个课呢 还剩下最后的章节

30:23.220 --> 30:24.500
就什么呢 就是那个

30:25.700 --> 30:26.340
express

30:27.300 --> 30:29.460
做什么呢 做那个服务器监听的

30:30.020 --> 30:34.660
就是收货收 接收用户请求来处理用户请求的 我们之前呢学过那个

30:34.660 --> 30:40.980
addp这个模块 我们可以用loaded.js里边的addp模块呢 来完成对用户请求的处理

30:40.980 --> 30:44.180
不过这种方式呢 太low了 太没有效率了

30:45.140 --> 30:49.220
到时候会遇到很多问题 因此呢 他有一个专门的一个cool.express

30:49.860 --> 30:51.700
啊 然后呢 来解决

30:52.260 --> 30:56.180
处理用户请求的这些麻烦声啊 咱们下一张慢慢来学习

30:56.580 --> 30:57.460
那种还是比较多的

30:57.780 --> 30:59.540
OK 那么咱们这一张就到此结束了啊

