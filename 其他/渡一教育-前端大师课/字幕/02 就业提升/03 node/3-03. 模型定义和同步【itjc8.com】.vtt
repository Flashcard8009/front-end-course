WEBVTT

00:01.840 --> 00:07.220
好 然后这节课就咱们一开始一步一步来学习secret nice这个OM工具

00:07.480 --> 00:10.800
然后呢在学习的过程中呢我们顺带做一些案例啊

00:11.060 --> 00:13.360
这个案例呢还会跟我们下一张联接在一起

00:13.620 --> 00:16.940
所以说呢我做了案例之后呢你们要跟着我做啊

00:17.720 --> 00:23.340
一个来吧我们这节课讲了个模型定义和数据和那个就是结构同步

00:23.600 --> 00:25.140
什么意思呢我们打开这个

00:25.640 --> 00:27.940
网站啊这是他的中文文档

00:28.200 --> 00:30.260
找到这个入门

00:30.460 --> 00:35.380
我们一步步来学其实呢你慢慢大家要学会这个去看文档啊中文文档其实还是蛮好

00:35.640 --> 00:40.500
首先他告诉你你要使用这个东西呢首先要去安装他啊我们的安装这个secret nice

00:41.260 --> 00:42.540
然后呢他同时告诉你

00:42.800 --> 00:46.140
因为他这个东西是一个OM工具他是跟数据库无关的

00:46.640 --> 00:48.180
他可以去操纵任何数据库

00:48.440 --> 00:52.540
因此呢你还要去安装相应的数据库驱动比方说你要使用my circle

00:52.800 --> 00:54.080
你要去安装my circle

00:54.580 --> 00:57.900
你要使用mongo DB然后你要去安装mongo

00:58.360 --> 01:00.920
比方说你还要使用secret server你可以去安装这个

01:01.180 --> 01:04.000
那么大家可以去安装相应的数据库啊

01:04.500 --> 01:08.100
我们这里呢安装这两个secret nice和那个my circle 2

01:08.860 --> 01:09.640
上面安装

01:10.400 --> 01:11.680
这里我们使用npm i

01:11.940 --> 01:14.740
安装这个secret nice然后安装my circle 2

01:16.020 --> 01:16.800
好让他安装啊

01:17.060 --> 01:18.580
安装好了过后呢他告诉你

01:18.840 --> 01:22.180
同样的道理啊无论是哪一个数据库呢他都要建立连接

01:22.440 --> 01:25.760
那么怎么来建立连接呢非常简单他这里告诉你这样子来建立连接

01:26.020 --> 01:27.040
好我们这里呢

01:27.240 --> 01:29.300
开始来把工程搭建一下

01:29.560 --> 01:32.880
我们在工程里边呢去建立一个文件夹给他叫做models

01:33.380 --> 01:36.460
就是模型啊或者是不加这个复数也行啊

01:36.720 --> 01:38.260
嗯就是我们

01:38.520 --> 01:42.860
数据库里边有哪些模型什么叫模型呢可以理解为数据库一张表就对应一个模型

01:43.380 --> 01:47.460
啊当然这个模型呢本质上的是介石里面一个对象啊咱们一个个来看吧

01:47.720 --> 01:52.080
首先我们要连接数据库肯定要去建立一个数据库的连接的一个

01:52.340 --> 01:55.160
工具啊我们这个可以利用他这么一个就是

01:55.920 --> 01:56.680
利用他这个东西

01:57.440 --> 02:00.340
这个东西就是secret nice这个库里边他提供了一个

02:00.600 --> 02:02.000
构造函数叫secret nice

02:02.260 --> 02:07.900
通过他呢能够创建一个连接啊这个连接里边呢他其实在内部呢使用了一个连接池

02:08.920 --> 02:13.520
啊使用了一个连接池所以说他他会自动的帮我们管理连接我们不用去管他怎么管理的

02:13.800 --> 02:19.420
好我们这个连接池呢我们只需要去创建这么一个对象过后呢他就是一个实力啊secret nice实力

02:19.680 --> 02:26.320
这个实力里边呢还保含了保含了一个连接池啊通过这个实力呢就可以操作数据库的各种操作都可以用了

02:26.840 --> 02:29.680
好咱们来看吧首先我运行这么这么一句话

02:31.200 --> 02:37.360
我们到这个工程里边去啊新建这么一个文件叫做地壁吧啊地壁地儿介石

02:38.200 --> 02:42.640
啊就是跟数据库相关的操作啊以及数据库的模型文全部放到这个文件夹里边

02:42.840 --> 02:50.480
嗯把它叫模型文件夹啊模型啊模型的文件夹我们之后呢会讲一个东西叫做三成架构啊我们后边会慢慢来看

02:51.280 --> 02:54.560
嗯然后这里边我们这里写什么呢我们就写这么一句话

02:55.440 --> 02:59.640
对吧导入进来导入进来之后呢他让你去新建一个secret nice对象

03:00.640 --> 03:07.320
新建的时候新建的时候呢要传一个配传一些配置啊他又配置有很多方式一种是使用制服串的方式来进行配置

03:07.600 --> 03:14.800
一种是使用对象的方式一种是呢是制服串加对象我们通常的可以可以使用最后一种啊最后比较简单好理解

03:15.160 --> 03:22.290
好我们再给他复制一下好OK我们这里呢创建这么一个东西啊

03:23.610 --> 03:24.210
把这删除了

03:26.730 --> 03:28.130
哪里还有包错了

03:31.060 --> 03:35.180
看一下啊哪里还有包错这个地方没有可用的快捷修复

03:36.540 --> 03:37.300
没有错误了呀

03:39.300 --> 03:43.740
哪个地方啊这个地方没有写啊这个地方没有写啊那么这里我们看一下啊

03:44.340 --> 03:54.660
这个地方写啥呢 第一个参数写的数据库名数据库的名字好数据库的名字呢我们这里将来会新建一个数据库啊就是学校数据库我们这里的新建一个数据库给他写个

03:54.820 --> 04:01.860
my school db 这是我们数据库的名字好确定啊数据库的名字就是这个

04:02.220 --> 04:09.180
咱们写一个my school db 好那么这个是数据库的用户名啊root数据库的密码

04:10.700 --> 04:16.140
啊当然这个东西呢你可以写到一个接受的配置文件里面从配置文件里面去读对吧啊我这里就拿着弄了啊

04:16.620 --> 04:23.180
好这边呢我们写到的是数据库的连接的服务器服务器是什么noco host的好接下来这个选项这个选项很重要

04:23.460 --> 04:30.420
这个选项要告诉你要告诉他的是数据库的内行他告诉你数据库的内行呢他目前这个欧亚民框架呀他支持这么几种

04:30.860 --> 04:39.020
my circle mario db pro grace ms circle啊就是违远的这个数据库啊其实他数据库的目前支持这几个

04:39.420 --> 04:46.340
啊像欧亚口呢目前呢还不支持对吧像那个啊有些数据库是不支持的啊我们不过我们现在使用的是my circle

04:47.380 --> 04:49.060
好咱们来写一下啊my circle

04:49.940 --> 04:57.500
接进去好这样子的我们就创建好了这么一个连接这个连接呢他是从连接词例来的啊他会自动帮你管理连接词

04:57.700 --> 05:03.140
所以说他叫他的连接的还不是很准确应该他叫一个什么叫做secretize实力一个欧亚民实力

05:03.420 --> 05:08.460
这个欧亚民实力呢我们整个系统里面只用一个就够了啊所以说我们在这里就直接创建好

05:08.780 --> 05:15.260
创建好了只用一个就够了那么我们后面的把这个实力把这个secretize的导出啊使用march export

05:16.260 --> 05:17.620
把导出啊secretize

05:18.740 --> 05:20.620
行了那么这个db点击也是有些好了

05:21.220 --> 05:28.020
非常简单对不对啊那么这里呢连接就创建好了啊我们首先运行一下看一下有没有错误我们到index里面去导入他

05:30.260 --> 05:33.860
require导入这个model models db

05:34.820 --> 05:37.060
看一下直接直接运行看一下有没有错误呢

05:37.700 --> 05:39.020
好咱们切到那个控制台

05:41.410 --> 05:42.610
load index

05:43.570 --> 05:46.290
你看是不是没有错误没有错误说明一切都正常

05:47.050 --> 05:49.250
这是关于这个secretize啊

05:50.210 --> 05:51.690
好咱们继续看

05:53.530 --> 06:00.770
下面他告诉你啊我刚才我刚才不是刚才还没有真正的去连接啊他这里告诉你怎么去测试连接测试连接能用这个方法

06:01.050 --> 06:01.810
ocintin cage

06:02.090 --> 06:08.730
ocintin cage表示看一下连接能不能连通啊他是一个异步方法因此呢你可以去等待他好咱们来试一下吧

06:09.330 --> 06:10.650
我们把这个复制一下再带嘛

06:11.290 --> 06:13.490
然后呢到这个这边来index这边来

06:14.370 --> 06:19.090
导入过后了他会给高因为我们导出了嘛所以他会给我们这个东西啊secretize

06:20.810 --> 06:22.970
好接下来我们运行一个异步方法

06:23.970 --> 06:25.490
方可惜直接运行啊

06:29.410 --> 06:36.810
咱听我来看一下这个到底能不能连接上啊如果说连接成功的话他就输出啊你成功连接了如果说无法连接的话就输出这个结果

06:37.010 --> 06:37.610
咱们来看一下吧

06:38.530 --> 06:38.810
运行

06:39.810 --> 06:49.090
啊告诉你已经成功连接了对吧而且他在这里等待对不对说明连接他他没有关闭啊他可能后续呢他会重复的去使用同一个连接啊

06:49.770 --> 06:53.410
他可以他其实呢给你用了一个收口语句叫什么是那个扯一加一

06:54.370 --> 06:58.410
也就是运行这个收口语句看一下那个能不能运行通啊能够运行通发现没问题

06:58.690 --> 07:07.290
好过了一会儿他停止了说明了他如果说他等了一会儿这个连接没有人使用的话那么他会自动的把那个连接关闭啊这次都是他自动管理的你都不用去管

07:08.090 --> 07:10.890
啊这是关于这个连接的测试啊

07:11.690 --> 07:19.290
关闭连接的情况下他告诉你一般来情况下我们不需要去关闭连接啊如果说你真正的需要关闭连接的话你可以调用这个secret as close

07:20.050 --> 07:25.130
那么他反回来也是个promise啊如果成功关关闭的话那么他就promise就完成了

07:25.490 --> 07:31.210
但是我们一般不会去手动去管他他他自动进行管理好接下来我们这个连接受成功了

07:31.530 --> 07:32.770
好连接成功我们这将去看完了

07:33.490 --> 07:35.930
连接好了过后呢我们怎么来定义模型呢

07:36.810 --> 07:42.330
什么叫模型就是我们的数据库的表在我们的介石里面就相当于是个介石对象 那么怎么来定义的模型呢

07:42.890 --> 07:51.690
这个模型的定义呢他告诉你有这么几种方法一种是呢使用secret as里面提供了这个东西啊他有个静态方法叫他不是个构造函数吗他有个静态方法

07:53.010 --> 07:58.530
就是我们创建好了不是静态方法啊他创建好了这个对象之后啊他有一个方法叫做define

07:59.090 --> 08:05.050
定义一个模型啊通过他来定一个模型第二种方法呢是你去继承他里边的一个

08:06.610 --> 08:14.290
内叫做model啊继承了他那个内过后呢那么这个内就是你你自己想的那就是一个模型啊然后呢使用他的一个静态方法

08:14.730 --> 08:20.130
init啊init一个静态方法然后来定一个模型两种方式都可以看你自己喜欢哪一种

08:20.370 --> 08:24.850
那么我们这里呢使用比方说使用第一种吧使用第一种怎么来试一下定一个模型

08:25.810 --> 08:27.330
我们这里呢就按照这个案例来做

08:27.970 --> 08:34.290
一个是就是学校数据库啊我们建一个学校数据库有这么四张表啊也就是四个模型在代码里面就叫做模型

08:35.370 --> 08:42.130
第一个模型是管理员管理员有这么有四个属性相当于是表得裂对不对相当于是表得裂好咱们来试一下

08:42.530 --> 08:45.570
首先我们定义第一个模型要定一个管理员啊就是二字面

08:46.490 --> 08:46.850
了解

08:48.330 --> 08:54.330
好那么这个地方呢我们来定一个模型怎么来定义呢首先他告诉你要使用这个secret as这个secret哪里创建的

08:54.530 --> 08:58.490
是不是在这里创建的把我们把导出了因此呢这个secret as呢我们这里可以这样子使用

09:00.330 --> 09:01.050
secret as

09:03.250 --> 09:03.650
require

09:04.610 --> 09:05.010
导入

09:05.730 --> 09:07.170
当前目录下面的

09:07.810 --> 09:08.090
db

09:09.370 --> 09:09.610
db

09:10.170 --> 09:10.370
对吧

09:10.930 --> 09:11.930
好这里呢导进来

09:12.330 --> 09:19.370
然后这怎么来用呢他使用他的使用方式呢是这里边呢有一个方法叫define啊定一个模型好来吧

09:19.770 --> 09:20.290
secret as

09:20.930 --> 09:21.210
define

09:21.890 --> 09:26.330
定一个模型好模型的他这里边两个参数啊第一个参数的是模型的名字

09:27.210 --> 09:28.930
模型的名字你给模型取个名字

09:29.130 --> 09:35.290
比方说我们这里的名字呢就命名为耳朵命嘛啊就是个耳朵命这个模型啊那我们可以把个手这么大型

09:35.730 --> 09:37.090
耳朵命表示我们的

09:37.890 --> 09:42.010
模型模型名称啊模型的他的命名规范的是手这么大型的啊

09:42.730 --> 09:45.290
相当于是个类的名字好然后呢这里

09:45.690 --> 09:46.690
第二个参数呢是什么呢

09:46.690 --> 09:48.330
这个参数是一个模型的配置

09:48.570 --> 09:53.650
就是个模型里边有哪些属性有哪些每个属性又是什么类型就相当于是配置表的列

09:54.050 --> 09:54.570
懂我的意思吧

09:55.330 --> 09:58.210
好那么表里边有哪些列呢我们在这里配置

09:58.930 --> 10:00.090
好看一下他是怎么写的

10:02.610 --> 10:06.930
他告诉你每一列呢他的一个列的名字啊相当于是模型的属性名

10:07.610 --> 10:08.570
然后呢这边

10:09.650 --> 10:10.810
用列的一些配置

10:11.330 --> 10:12.570
好咱们看一下吧

10:13.010 --> 10:13.530
这里边

10:13.530 --> 10:18.490
他first name last name是不是第一个名字还有就是一个就是姓和名对不对

10:18.490 --> 10:20.610
那么我们那个管理员那边呢

10:20.610 --> 10:22.330
不就是账号密码姓名吗

10:22.650 --> 10:23.570
对不对就三个列吗

10:24.050 --> 10:25.970
那要说不是不配置id这个列吗

10:26.290 --> 10:27.690
id这个列我们一般不配置

10:28.010 --> 10:31.570
这是主键列他会自动帮你生成主键列啊你不用管他

10:31.970 --> 10:34.570
好咱们这里只配置一个是locking id

10:35.050 --> 10:35.650
登录账号

10:36.210 --> 10:37.850
好账号里边他有一些信息

10:38.170 --> 10:40.490
后面信息写啥呢写的是列的类型

10:40.890 --> 10:42.210
以及云布云续为NOW

10:42.970 --> 10:43.850
那么我们这里呢

10:45.690 --> 10:48.210
这里呢就是我们可以导入

10:52.040 --> 10:52.960
怎么来定义类型

10:52.960 --> 10:54.120
他的类型在这里边

10:54.720 --> 10:55.760
一个什么tabs

10:56.840 --> 10:57.640
data tabs

10:58.600 --> 11:00.840
就是通过这个里边的一些属性

11:00.840 --> 11:01.840
在定义列的类型

11:01.840 --> 11:03.200
比较locking id是什么类型呢

11:03.560 --> 11:05.080
我们把它定义为stream

11:06.520 --> 11:07.680
字幕刷你看看

11:08.280 --> 11:09.440
就是stream

11:10.960 --> 11:11.960
然后呢我们这里

11:12.280 --> 11:13.840
这是一个啊这是列的类型

11:14.280 --> 11:15.040
前面一个tab

11:15.800 --> 11:16.680
表示列的类型

11:17.320 --> 11:18.320
他是一个字幕刷类型

11:18.840 --> 11:19.560
然后呢

11:19.920 --> 11:20.960
他云布云续为NOW了

11:20.960 --> 11:21.800
如果说这个东西

11:21.800 --> 11:23.080
他默认是云续为NOW的

11:23.080 --> 11:24.520
啊如果说你不云续为NOW的话

11:24.520 --> 11:25.360
一把tabs为force

11:25.360 --> 11:26.880
啊比较账号我不云续为NOW

11:26.880 --> 11:27.920
啊tabs为force

11:28.520 --> 11:30.520
好然后呢再点locking password

11:31.400 --> 11:32.080
好tabs

11:33.080 --> 11:33.800
data tabs

11:34.160 --> 11:36.440
我们给他定义一个啊就是还是stream

11:37.200 --> 11:37.680
字幕刷

11:37.680 --> 11:39.880
然后呢 erlow為force

11:40.560 --> 11:42.320
啊是不是这两个两类就定义好了

11:42.520 --> 11:44.080
然后还有一点啊就是姓名

11:44.400 --> 11:45.280
官员的姓名

11:45.360 --> 11:45.780
tab

11:46.240 --> 11:46.560
啊

11:46.880 --> 11:47.720
data tabs

11:48.440 --> 11:48.920
erlow

11:48.920 --> 11:50.160
诶就是stream

11:51.080 --> 11:52.960
然后呢 erlow force

11:53.720 --> 11:54.680
好了是不是定义好了

11:54.880 --> 11:56.520
这样子呢我们就定义好了一个模型

11:56.520 --> 11:57.360
没有组件啊

11:57.360 --> 11:58.920
组件让他自动帮我们搞定

11:59.760 --> 12:01.240
好然后他会返回一个什么呢

12:01.240 --> 12:02.800
返回一个模型对象

12:02.920 --> 12:04.760
这个模型对象很很有用啊

12:04.760 --> 12:06.640
我们后续对他对什么管理员

12:06.640 --> 12:08.600
这个操作全是通过这个模型对象

12:08.600 --> 12:10.760
说模型对象我们一定要拿到啊

12:10.760 --> 12:12.440
这个模型对象呢我们直接

12:12.760 --> 12:14.680
收到啊就用一个辨量来接收嘛

12:14.680 --> 12:16.200
我们就用同样的名字来辨量啊

12:16.200 --> 12:17.760
耳朵命这个辨量来接收

12:17.760 --> 12:19.000
然后呢我们把它导出

12:19.440 --> 12:20.080
marge

12:20.080 --> 12:21.040
export

12:21.040 --> 12:21.680
导出

12:21.960 --> 12:22.600
耳朵命

12:22.880 --> 12:23.480
就完了

12:23.880 --> 12:24.320
啊

12:24.320 --> 12:26.320
那么这样子的就导出了一个模型

12:26.720 --> 12:28.440
有的人说啊这个就很奇怪

12:28.440 --> 12:31.400
这个模型呢不就是GS里面一个普普通通对象吗

12:31.400 --> 12:32.680
他跟数据库有啥关系啊

12:32.680 --> 12:33.880
你看一下我们的数据库

12:34.520 --> 12:36.520
啊我们看一下这个nav開始我们的数据库

12:36.520 --> 12:37.480
数据库里面

12:37.480 --> 12:39.120
这个东西里面有这个表吗

12:39.120 --> 12:40.480
所以根本就没有这个表

12:40.600 --> 12:41.240
对不对

12:41.440 --> 12:42.840
那么接下来我们看这个文档

12:42.840 --> 12:44.480
还有一个神奇的事情发生了啊

12:46.000 --> 12:47.880
那么我们这里呢

12:47.880 --> 12:48.760
他告诉你

12:49.640 --> 12:51.840
他会自动的帮你去生成表

12:51.840 --> 12:52.520
你看啊

12:52.520 --> 12:55.080
他表的名称呢他会有自动的一个名称

12:55.080 --> 12:57.840
这个名称呢就是你的模型的名字

12:57.840 --> 12:58.760
加上一个复数

12:58.760 --> 13:00.160
比方你的模型是U字

13:00.160 --> 13:02.840
他会把它表的名称呢给你设置成U字

13:02.840 --> 13:03.800
加上一个复数啊

13:03.800 --> 13:06.080
这是一种比较常见的命名规范

13:06.080 --> 13:08.520
如果说你不希望他这样子来做的话

13:09.000 --> 13:11.600
那么你可以手动的去指定表名

13:11.600 --> 13:13.440
比方说啊他有几种几种方式

13:13.440 --> 13:15.320
第一种方式叫个free table name

13:15.320 --> 13:17.080
就第三个配置啊在定义的时候

13:17.080 --> 13:18.440
给他传一个第三个配置

13:18.440 --> 13:19.720
那么这样子呢我们来看一下

13:20.440 --> 13:21.440
如果如果说写的话

13:21.440 --> 13:23.560
就给他传一个第三个配置叫free

13:24.280 --> 13:25.120
table name

13:25.120 --> 13:26.760
那么如果说把这个设为处的话

13:26.760 --> 13:28.760
那么你的模型名是啥

13:28.760 --> 13:30.440
他的表名就是啥啊

13:30.440 --> 13:31.920
比方说你模型名是admin

13:31.920 --> 13:33.360
他的表名就是admin

13:33.360 --> 13:34.880
如果说你这个东西不传的话

13:34.880 --> 13:36.040
你的模型名是admin

13:36.040 --> 13:37.840
他的表名就是admin s

13:37.880 --> 13:39.040
加上一个复数的形式

13:40.040 --> 13:42.240
有专门的这么一个库

13:42.240 --> 13:44.120
就是把一个单词转换成复数形式

13:44.120 --> 13:45.520
他还会根据单词的语法

13:45.520 --> 13:47.720
因为有些单词的复数形式加es

13:47.720 --> 13:48.040
对吧

13:49.080 --> 13:49.520
然后呢

13:49.520 --> 13:51.880
还有一种方式就直接提供表名

13:51.880 --> 13:53.680
那么这里呢可以通过第三个参数

13:53.680 --> 13:54.440
table name

13:54.440 --> 13:55.600
来定义表名

13:55.600 --> 13:56.400
table name

13:56.400 --> 13:57.560
比方说我们这里呢

13:57.560 --> 13:58.800
就给他定义名

13:58.800 --> 14:00.720
admin's twitter

14:00.720 --> 14:02.320
这样子也可以

14:02.320 --> 14:04.520
这是他们他的第三个配置

14:04.520 --> 14:05.520
你可以去指定的

14:05.520 --> 14:06.280
我们不过了

14:06.320 --> 14:07.920
我们这里一般不用去指定他

14:07.920 --> 14:10.040
让他自动把我们生存表就完事了

14:10.040 --> 14:11.480
那么他能不能自动生存表呢

14:11.480 --> 14:12.360
他告诉你

14:12.360 --> 14:14.520
他下面一个方式叫模型同步

14:14.520 --> 14:15.920
什么叫模型同步呢

14:15.920 --> 14:17.760
他指的是你创建好了模型过后

14:17.760 --> 14:20.200
不是我们收到了这么一个对象吗

14:20.200 --> 14:20.520
对对

14:20.520 --> 14:21.400
这个模型对象

14:23.480 --> 14:26.360
创建一个模型对象

14:26.360 --> 14:27.640
这个模型对象里边呢

14:27.640 --> 14:28.520
他就有一个方法

14:29.520 --> 14:29.920
admin

14:31.080 --> 14:32.800
叫做sync

14:32.800 --> 14:33.800
叫sync

14:33.800 --> 14:34.840
sync就同步

14:34.880 --> 14:35.720
他是一个异步方法

14:35.720 --> 14:36.360
他会promise

14:36.360 --> 14:37.560
如果同步完成过后了

14:37.560 --> 14:40.200
他会表示个promise完成

14:40.200 --> 14:41.320
如果说出现错误的话

14:41.320 --> 14:42.320
他会保缩

14:42.320 --> 14:43.240
这是同步

14:43.240 --> 14:44.040
同步里边呢

14:44.040 --> 14:45.160
他有几种同步方式

14:45.160 --> 14:45.960
他告诉你

14:45.960 --> 14:47.800
如果说你直接调用他的话

14:47.800 --> 14:48.760
表如果不存在

14:48.760 --> 14:50.320
他就会自动创建表

14:50.320 --> 14:51.440
神奇吧

14:51.440 --> 14:52.400
怎么他怎么创建的

14:52.400 --> 14:53.560
他就根据你模型的配置

14:53.560 --> 14:54.600
他发现这个数据库里面

14:54.600 --> 14:56.560
根本就没有这个表

14:56.560 --> 14:58.000
那么他怎么知道没有这个表

14:58.000 --> 14:59.800
他是通过搜扣语句去查询的

14:59.800 --> 15:01.480
因为我们现在链接的是买搜扣

15:01.480 --> 15:02.280
买搜扣对吧

15:02.320 --> 15:04.040
买这个数据库里面是可以查询的

15:04.040 --> 15:06.080
现在目前有哪些数据库里面

15:06.080 --> 15:06.920
有哪些表的

15:06.920 --> 15:07.920
是可以查询的

15:07.920 --> 15:09.640
在系统数据库里面可以查

15:09.640 --> 15:10.800
他可以查到有没有这个表

15:10.800 --> 15:11.840
如果说没有表这个表的话

15:11.840 --> 15:13.200
他就会按照我们的定义

15:13.200 --> 15:14.120
去创建好表

15:14.120 --> 15:15.480
把表根本创建好

15:15.480 --> 15:17.040
这是第一种方式

15:17.040 --> 15:19.120
第二种方式是force2

15:19.120 --> 15:20.880
就是如果说表不存在

15:20.880 --> 15:22.080
他创建表

15:22.080 --> 15:22.800
那么第一种方式

15:22.800 --> 15:24.160
如果说表存在的话

15:24.160 --> 15:26.280
他是不会执行任何操作的

15:26.280 --> 15:28.280
第二种方式是强制执行

15:28.280 --> 15:29.080
强制同步

15:29.080 --> 15:30.120
什么意思呢

15:30.120 --> 15:31.400
不管表有没有存在

15:31.400 --> 15:32.880
如果说存在的话

15:32.880 --> 15:34.200
把表先删了

15:34.200 --> 15:36.480
删了过后再重新创建

15:36.480 --> 15:37.040
对吧

15:37.040 --> 15:38.720
这是force的这种方式

15:38.720 --> 15:40.360
第三种方式叫outer

15:40.360 --> 15:42.080
outer的方式比较温和一点

15:42.080 --> 15:43.480
就是如果说不存在表的话

15:43.480 --> 15:44.640
他给你创建表

15:44.640 --> 15:46.240
如果说存在表的话

15:46.240 --> 15:48.080
那么他对比一下表里面

15:48.080 --> 15:50.760
跟我们的模型里面有没有差异

15:50.760 --> 15:52.200
因为我们模型将来还会修改

15:52.200 --> 15:52.960
对不对

15:52.960 --> 15:53.640
那么修改过后

15:53.640 --> 15:54.800
跟表是不是有差异了

15:54.800 --> 15:56.080
如果说有差异的话

15:56.080 --> 15:57.920
那么他会修改这个表

15:57.920 --> 15:59.440
让他跟这个表

15:59.440 --> 16:00.560
跟我们模型比配

16:00.600 --> 16:01.560
我们来看一下吧

16:01.560 --> 16:02.760
我们为了验证这一点

16:02.760 --> 16:05.400
我们首先不写这个name

16:05.400 --> 16:07.560
然后我们去运行syncur

16:07.560 --> 16:08.520
syncur 同步

16:08.520 --> 16:10.040
然后这里面我们写个配置

16:10.040 --> 16:11.000
叫做outer

16:11.000 --> 16:13.880
把设为q

16:13.880 --> 16:17.440
那么让他去同步我们的表

16:17.440 --> 16:18.640
接下来我们来运行一下

16:18.640 --> 16:20.560
我们这里面写个异步函数

16:20.560 --> 16:21.720
syncur

16:21.720 --> 16:23.160
函数

16:23.160 --> 16:26.200
好 这里面我们去同步表

16:26.200 --> 16:27.520
好 这里有await

16:27.520 --> 16:29.120
等待他

16:29.160 --> 16:31.280
同步完成之后我们输出

16:31.280 --> 16:37.440
erdmi模型erdmi同步完成

16:37.440 --> 16:39.320
咱们来看一下这个神奇的效果

16:39.320 --> 16:40.640
接下来我们在这里

16:40.640 --> 16:41.920
连接也不用管了

16:41.920 --> 16:43.160
测试也不用管测试了

16:43.160 --> 16:45.400
然后我们这里直接运行

16:45.400 --> 16:46.720
require

16:46.720 --> 16:47.760
去运行什么

16:47.760 --> 16:49.600
erdmi

16:49.600 --> 16:52.200
models

16:52.200 --> 16:52.880
erdmi

16:52.880 --> 16:55.480
好 咱们来试一下

16:55.480 --> 16:56.720
运行

16:56.720 --> 16:58.280
好 爆错了

16:58.320 --> 17:00.000
发生什么了

17:00.000 --> 17:03.840
他说那个有一个裂

17:03.840 --> 17:05.920
他说无法识别的内形

17:05.920 --> 17:08.360
login id他无法识别这个内形

17:08.360 --> 17:09.400
我看呀

17:09.400 --> 17:10.760
login id

17:10.760 --> 17:12.280
他无法识别内形

17:12.280 --> 17:15.460
拿去写出来

17:15.460 --> 17:16.700
找一找

17:16.700 --> 17:18.020
哦

17:18.020 --> 17:19.660
这是大写的

17:19.660 --> 17:20.340
写

17:20.340 --> 17:21.500
是大写的

17:21.500 --> 17:24.180
我写的是啥

17:24.180 --> 17:26.540
好 再重新来

17:26.540 --> 17:28.140
那么现在肯定是没法完成同步了

17:28.140 --> 17:29.580
因为他不知道裂的内形是啥

17:29.580 --> 17:30.460
你看一下吧

17:30.460 --> 17:32.220
现在是没法完成同步的

17:32.220 --> 17:33.220
表里边啥都没有

17:33.220 --> 17:33.540
对吧

17:33.540 --> 17:34.380
刷新

17:34.380 --> 17:35.180
没有东西

17:35.180 --> 17:37.660
好 接下来同步

17:37.660 --> 17:39.500
运行

17:39.500 --> 17:40.380
好 运行完了

17:40.380 --> 17:42.900
哎 我们的同步完成了

17:42.900 --> 17:44.020
刷新

17:44.020 --> 17:45.740
没有同步完成了

17:45.740 --> 17:47.340
我看一下啊

17:47.340 --> 17:49.220
嗯 哪里写错了

17:49.220 --> 17:53.610
同步

17:53.610 --> 17:56.050
呃 这里user

17:56.050 --> 17:59.330
sync

17:59.330 --> 18:10.370
同步

18:10.370 --> 18:18.200
哦 我应该是这

18:18.200 --> 18:18.960
哦 是这里啊

18:18.960 --> 18:19.800
是这里

18:19.840 --> 18:21.600
这里呢 我没有写这个

18:21.600 --> 18:22.800
没有写立即执行

18:22.800 --> 18:23.080
对吧

18:23.080 --> 18:23.960
所以说

18:23.960 --> 18:25.440
所以他没有执行这个函数

18:25.440 --> 18:26.480
好 再重新来

18:26.480 --> 18:27.760
弄的

18:27.760 --> 18:29.040
啊

18:29.040 --> 18:30.400
这里呢 你看到啊

18:30.400 --> 18:31.600
他这里不是爆错啊

18:31.600 --> 18:32.600
不是爆错

18:32.600 --> 18:33.840
他是

18:33.840 --> 18:35.520
呃 模型同步完成了啊

18:35.520 --> 18:36.280
他没有爆错啊

18:36.280 --> 18:37.720
他这个是什么呢

18:37.720 --> 18:39.120
他这里一的显示的是

18:39.120 --> 18:41.480
他已经执行了一些说口语句了啊

18:41.480 --> 18:42.720
执行了什么说口语句呢

18:42.720 --> 18:44.120
就是创建表的说口语句啊

18:44.120 --> 18:44.920
我们不用管他

18:44.920 --> 18:45.800
他显示的是啥吗

18:45.800 --> 18:47.200
他执行了一些说口语句

18:47.200 --> 18:48.160
好 咱们来看一下吧

18:49.840 --> 18:50.720
到数据库里边

18:50.720 --> 18:52.160
右键刷新

18:52.160 --> 18:54.120
你看表是不是出来了

18:54.120 --> 18:55.160
不仅这个表出来了

18:55.160 --> 18:57.080
我们还可以看到一些很神奇的效果

18:57.080 --> 18:57.800
我们打开

18:57.800 --> 18:58.800
打开这个表

19:00.080 --> 19:01.440
可以看到吗

19:01.440 --> 19:02.760
表里边是有id这一列

19:02.760 --> 19:04.680
我们点击右键设计表

19:04.680 --> 19:05.160
你看一下

19:05.160 --> 19:06.320
是不是有id这一列

19:06.320 --> 19:07.800
而且他自动增长的

19:07.800 --> 19:08.040
对吧

19:08.040 --> 19:10.040
他会自动给你创建组件

19:10.040 --> 19:10.400
然后呢

19:10.400 --> 19:12.080
这些东西是不是按照模型来创建的

19:12.080 --> 19:12.280
对吧

19:12.280 --> 19:13.520
我们自布创造就变成了

19:13.520 --> 19:14.880
在买售口里面变成了什么

19:14.880 --> 19:15.440
varchar

19:15.440 --> 19:16.120
对不对

19:16.120 --> 19:17.480
默认长度是255

19:17.480 --> 19:18.800
如果说你要指定长度的话

19:18.800 --> 19:19.600
也很简单

19:19.640 --> 19:21.560
它这里边是可以指定长度的

19:21.560 --> 19:22.440
比方说你100

19:22.440 --> 19:24.000
都可以指定的

19:24.000 --> 19:26.320
然后这里罗金帕索尔的说有

19:26.320 --> 19:27.440
而且不仅如此

19:27.440 --> 19:28.760
他还可以加了两列

19:28.760 --> 19:30.760
一个是created at

19:30.760 --> 19:32.440
一个是updated at

19:32.440 --> 19:33.720
这两个页是什么意思呢

19:33.720 --> 19:35.920
一般来说很多的表里边

19:35.920 --> 19:38.200
它都会有这么两个列

19:38.200 --> 19:39.640
这两个列表是什么意思呢

19:39.640 --> 19:41.120
表示的是

19:41.120 --> 19:43.080
我创建这个条纪录的时间

19:43.080 --> 19:44.400
比方说新建一个管理员

19:44.400 --> 19:46.240
这个管理员新建的时间

19:46.240 --> 19:48.640
以及管理员如果说对他进行修改

19:48.640 --> 19:50.720
他会记录修改时间

19:50.720 --> 19:52.960
而这两列他是自动帮你创建的

19:52.960 --> 19:54.920
那有的人说我不想要这两列

19:54.920 --> 19:56.800
这个表我就不希望

19:56.800 --> 19:58.960
有什么创建时间和修改时间

19:58.960 --> 20:01.320
其实很多表都希望有

20:01.320 --> 20:02.640
以前那么要手动作

20:02.640 --> 20:04.640
这个东西他自动帮我们完成了

20:04.640 --> 20:05.280
比方说文章

20:05.280 --> 20:07.000
他有什么修改时间和创建时间

20:07.000 --> 20:07.480
对不对

20:07.480 --> 20:09.600
很多表都需要的

20:09.600 --> 20:12.320
但是这个地方他由于

20:12.320 --> 20:14.080
我们这里有可能不需要

20:14.080 --> 20:15.000
有可能不需要的话

20:15.000 --> 20:15.520
那怎么办呢

20:15.520 --> 20:17.040
怎么来调这个东西呢

20:17.040 --> 20:18.000
给大家看一下

20:18.040 --> 20:18.960
模型里边

20:20.160 --> 20:21.040
有这么一个

20:22.240 --> 20:24.500
叫做

20:25.180 --> 20:26.220
就是created at

20:26.220 --> 20:27.540
就第三个参数的时候

20:27.540 --> 20:28.300
你可以

20:28.300 --> 20:29.660
你可以给他设置

20:29.660 --> 20:31.380
如果说你不想要这个created at

20:31.380 --> 20:32.900
那么你就给他设置为force

20:33.420 --> 20:34.300
懂了意思吧

20:35.060 --> 20:35.340
好

20:35.340 --> 20:36.900
那么现在我们来看一下吧

20:38.340 --> 20:38.860
我们这里

20:39.500 --> 20:40.740
给他传第三个参数

20:42.640 --> 20:44.280
created at

20:44.280 --> 20:45.160
设为force

20:45.160 --> 20:46.000
不需要了

20:46.000 --> 20:47.240
updated at

20:47.240 --> 20:48.400
给他设为force

20:49.120 --> 20:49.840
好

20:49.840 --> 20:50.920
行了

20:50.920 --> 20:51.600
接下来我们再来看

20:54.040 --> 20:55.120
现在我们要运行

20:55.920 --> 20:57.240
重新来同步

20:58.720 --> 20:59.880
运行

20:59.880 --> 21:00.800
同步完成

21:00.800 --> 21:01.240
对吧

21:01.240 --> 21:01.840
同步完成

21:01.840 --> 21:02.040
好

21:02.040 --> 21:03.680
接下来我们停止

21:03.680 --> 21:04.600
到这个表里边去看

21:05.440 --> 21:06.280
右键刷新

21:07.880 --> 21:08.640
这边

21:08.640 --> 21:09.920
站住

21:09.920 --> 21:10.960
右键刷新

21:11.840 --> 21:13.440
这里重新点设计表

21:13.440 --> 21:14.440
你看是不是没了

21:14.440 --> 21:15.120
只有这两个列了

21:15.120 --> 21:15.480
对吧

21:15.480 --> 21:17.040
因为我们使用的是

21:17.040 --> 21:18.480
这个order的方式来同步

21:18.480 --> 21:20.880
它会把不匹配的列来给你删掉了

21:20.880 --> 21:21.720
对不对

21:21.720 --> 21:21.960
好

21:21.960 --> 21:23.320
这是关于created at

21:23.320 --> 21:24.600
和updated at

21:24.600 --> 21:25.200
那有的同学说

21:25.200 --> 21:26.640
我想要这一列

21:26.640 --> 21:28.320
但是我不想要这个名字

21:28.320 --> 21:29.600
名字我想换一下

21:29.600 --> 21:30.160
可不可以呢

21:30.160 --> 21:30.760
也可以

21:30.760 --> 21:31.960
比方说我们这里

21:31.960 --> 21:32.920
给他换成

21:34.480 --> 21:35.360
创建时间

21:35.360 --> 21:36.080
换成PE

21:36.080 --> 21:37.120
然后这样子肯定不好

21:37.120 --> 21:38.160
创建时间

21:38.920 --> 21:39.320
行不行

21:39.320 --> 21:40.720
这样子也可以

21:40.720 --> 21:41.280
你看吧

21:41.280 --> 21:42.680
我们这样子去设置

21:42.680 --> 21:43.520
clear

21:44.640 --> 21:45.280
运行

21:45.280 --> 21:45.520
好

21:45.520 --> 21:46.280
同步完成

21:47.280 --> 21:48.160
我们讲一讲

21:48.160 --> 21:49.560
他这些乱七八糟的配置

21:49.560 --> 21:50.320
然后点击

21:50.320 --> 21:51.640
我们把他删除了

21:51.640 --> 21:52.280
点击右键

21:52.280 --> 21:53.200
检查

21:53.200 --> 21:54.600
是不是多了一个创建时间

21:54.600 --> 21:54.920
对不对

21:54.920 --> 21:56.080
这是

21:56.080 --> 21:58.440
是不是非常非常简单

21:58.440 --> 21:59.240
这是created at

21:59.240 --> 22:00.040
我们还是把禁用

22:00.040 --> 22:00.920
好

22:00.920 --> 22:02.680
这是关于这一列

22:02.680 --> 22:04.880
其实他还有一列

22:04.880 --> 22:07.400
是关于删除时间的

22:08.400 --> 22:09.680
因为说删除了过后

22:09.680 --> 22:10.840
那一行都没了

22:10.840 --> 22:12.520
那个删除时间有什么用了

22:12.520 --> 22:13.320
我给大家说一下

22:14.320 --> 22:16.760
真正的我们在开发里边

22:16.760 --> 22:18.520
是很多公司里边

22:18.520 --> 22:20.040
都是有一个严格的要求

22:20.040 --> 22:21.680
不允许你删数据库里边

22:21.680 --> 22:22.600
任何一条纪录

22:22.600 --> 22:23.560
不允许你删

22:23.560 --> 22:24.640
就是你不允许你用

22:24.640 --> 22:25.320
地内扯语句

22:25.320 --> 22:26.240
真正的删除

22:26.240 --> 22:28.120
他给你的数据库账号

22:28.120 --> 22:29.800
你根本就没有全线删除了

22:30.520 --> 22:32.200
所以说到了公司里边

22:32.200 --> 22:33.240
你是不能删数据的

22:33.240 --> 22:34.520
因为数据是非常宝贵的

22:34.520 --> 22:36.520
一旦删出来是很难恢复的

22:36.520 --> 22:37.960
虽然说可以通过一些还原的

22:37.960 --> 22:38.840
方式来恢复

22:38.840 --> 22:42.520
都会有一些其他的一些问题

22:42.680 --> 22:43.640
所以说

22:43.640 --> 22:44.320
更多的时候

22:44.320 --> 22:45.880
我们是不希望删数据的

22:45.880 --> 22:46.720
哪怕

22:46.720 --> 22:48.240
比方说用户注销

22:48.240 --> 22:48.720
注销了

22:48.720 --> 22:49.400
这个用户说

22:49.400 --> 22:50.880
我不想要这个用户资料了

22:50.880 --> 22:52.400
那么你真的把用户数据删了吗

22:52.400 --> 22:53.400
肯定是不能删的

22:54.800 --> 22:56.520
因此我们通常的删除了

22:56.520 --> 22:58.200
是给他加一个列

22:58.200 --> 22:59.080
这个列表示状态

22:59.080 --> 23:01.080
这个表示他已经被删除了

23:01.080 --> 23:03.000
通常我们会给他一个删除时间

23:03.000 --> 23:03.480
这一列

23:03.480 --> 23:04.800
这一列的莫认为闹

23:04.800 --> 23:06.000
就表示没有删除

23:06.000 --> 23:07.440
那么你给他删了过后

23:07.440 --> 23:09.320
他会给他设置一个删除时间

23:09.320 --> 23:10.440
他只要有删除时间

23:10.440 --> 23:11.600
就表示这一列

23:11.640 --> 23:12.600
表示删除了

23:12.600 --> 23:14.040
并不是真正的删除

23:14.040 --> 23:15.800
那么这个删除怎么来写呢

23:15.800 --> 23:18.200
删除他这里也是自动支持的

23:18.200 --> 23:20.320
你只要把它开启就行了

23:20.320 --> 23:21.520
那么怎么来配置呢

23:21.520 --> 23:22.440
其实非常简单

23:22.440 --> 23:23.800
你到代码里边

23:23.800 --> 23:26.600
这里还有一个配置叫paranoid

23:26.600 --> 23:27.040
什么意思

23:27.040 --> 23:28.480
这个单词有点有意思

23:28.480 --> 23:30.040
叫做偏志狂

23:30.040 --> 23:31.400
偏志的意思

23:31.400 --> 23:32.760
就是说

23:32.760 --> 23:33.320
怎么解释呢

23:33.320 --> 23:35.200
我也不好解释他到底是啥意思

23:35.200 --> 23:36.680
总之里把他设为出

23:36.680 --> 23:37.880
设为出过后

23:37.880 --> 23:39.160
他表示的是

23:41.640 --> 23:42.880
该表的数据

23:43.880 --> 23:45.640
该表的数据

23:45.640 --> 23:49.000
不会真正真正的删除

23:49.000 --> 23:52.200
而是增加一列

23:52.200 --> 23:53.960
增加一列

23:53.960 --> 23:55.360
叫做updated

23:55.360 --> 23:57.080
不叫做dinated at

23:58.200 --> 24:01.320
dinated at

24:01.320 --> 24:03.600
记录删除的时间

24:03.600 --> 24:04.680
他会这样来做

24:04.680 --> 24:04.880
好

24:04.880 --> 24:06.080
我们把这个东西设置好了过后

24:06.080 --> 24:06.680
再看一下

24:08.240 --> 24:08.600
clear

24:09.760 --> 24:10.320
好

24:10.360 --> 24:11.000
运行

24:11.000 --> 24:11.720
弄的

24:11.720 --> 24:13.000
同步完成

24:13.000 --> 24:13.680
同步完成过后

24:13.680 --> 24:14.360
我们来看一下表

24:16.200 --> 24:17.480
右键点设计表

24:17.480 --> 24:18.480
我们这里关掉

24:18.480 --> 24:19.840
点计设计表

24:19.840 --> 24:22.720
你看是不是多了个dinated at

24:22.720 --> 24:23.160
对吧

24:23.160 --> 24:23.960
删除的时间

24:23.960 --> 24:25.080
它可以是now的

24:25.080 --> 24:26.200
它可以是now的

24:26.200 --> 24:27.160
你加数据的时候

24:27.160 --> 24:28.840
它默认就是now

24:28.840 --> 24:29.520
因此你看

24:29.520 --> 24:31.720
它这个默认值是now

24:31.720 --> 24:33.880
因此你如果说把删了过后

24:33.880 --> 24:35.120
它会自动的往这一列

24:35.120 --> 24:35.960
给它添加一段时间

24:35.960 --> 24:37.520
我们之后就会掩饰

24:37.520 --> 24:39.760
我们把这个结构先看好

24:39.760 --> 24:41.080
懂它什么意思

24:41.080 --> 24:42.120
那么这是关于删除

24:42.120 --> 24:43.040
如果说你想修改

24:43.040 --> 24:44.560
这个deleted at这一列

24:44.560 --> 24:45.960
它的名字你想修改的话

24:45.960 --> 24:46.960
那么你这里可以设置

24:46.960 --> 24:49.560
deleted at该设置别的名字

24:49.560 --> 24:50.720
那么非常简单的

24:50.720 --> 24:52.920
那么这是它对应的模型

24:52.920 --> 24:53.080
好

24:53.080 --> 24:54.120
另外我们再说一个点

24:54.120 --> 24:56.120
刚才我们这里的运行过后

24:56.120 --> 24:58.360
你看这里日字记录是不是很多

24:58.360 --> 24:58.800
有的时候

24:58.800 --> 25:01.200
我不希望看到这么详细的日字记录

25:01.200 --> 25:02.760
除非爆错的情况下

25:02.760 --> 25:05.760
你再给我产生日字记录

25:05.760 --> 25:07.320
那怎么办呢

25:07.320 --> 25:09.360
它这里在创建连接的时候

25:09.360 --> 25:11.360
它其实就已经告诉你了

25:11.360 --> 25:14.120
怎么来设置这个日字

25:14.120 --> 25:15.360
记录日字

25:15.360 --> 25:16.360
它Modern的方式

25:16.360 --> 25:18.160
Login Modern的方式就是console log

25:18.160 --> 25:20.760
console log就是把它输出到控制台

25:20.760 --> 25:22.240
那么我们不希望记录日字的话

25:22.240 --> 25:23.760
把这个地方设置到就完事了

25:23.760 --> 25:24.560
特别简单

25:24.560 --> 25:24.760
好

25:24.760 --> 25:26.160
咱们来看一下吧

25:26.160 --> 25:27.640
我们到那个地壁里边去

25:27.640 --> 25:31.560
在这里边设置一个login

25:31.560 --> 25:33.160
给它设置

25:33.160 --> 25:34.640
就是

25:34.640 --> 25:36.000
Log

25:36.000 --> 25:37.160
那么不再记录日字

25:37.160 --> 25:38.320
咱们再来运行

25:38.360 --> 25:41.830
那么它就没有什么多废话了

25:41.830 --> 25:42.990
你看就没有废话了

25:42.990 --> 25:43.630
对不对

25:43.630 --> 25:46.230
当然了这里很多信息也就丢失掉了

25:46.230 --> 25:48.510
当然也可以在这里制定一个函数

25:48.510 --> 25:49.670
制定一个函数

25:49.670 --> 25:50.630
随便干嘛

25:50.630 --> 25:54.070
你可以得到这个自行来记录日字

25:54.070 --> 25:56.030
把记录到文件里面的都可以

25:56.030 --> 25:58.430
我们后边那会讲这个数据库日字

25:58.430 --> 25:59.630
这里是

25:59.630 --> 26:03.310
这里的一个模型书建立好了

26:03.310 --> 26:03.670
对不对

26:03.670 --> 26:04.670
非常简单

26:04.670 --> 26:04.870
好

26:04.870 --> 26:07.910
接下来我们再来看

26:07.910 --> 26:09.190
新鲜一个文件

26:09.230 --> 26:10.590
然后我们还有几个模型

26:10.590 --> 26:11.790
一起把它做了

26:11.790 --> 26:13.710
班级学生和书籍

26:13.710 --> 26:14.190
来吧

26:14.190 --> 26:15.950
班级学生和书籍

26:15.950 --> 26:16.510
新建

26:16.510 --> 26:17.390
班级

26:17.390 --> 26:17.990
班级的话

26:17.990 --> 26:19.750
我们用一个关键字

26:19.750 --> 26:21.510
class跟关键字同名了

26:21.510 --> 26:23.030
跟介绍的关键字同名

26:23.030 --> 26:24.710
所以说我们换一个关键字吧

26:24.710 --> 26:27.430
或者是给它大写class.介绍

26:27.430 --> 26:28.630
这是班级

26:28.630 --> 26:29.670
然后学生

26:29.670 --> 26:31.350
students.介绍

26:31.350 --> 26:31.870
还有什么呢

26:31.870 --> 26:34.670
书籍book.介绍

26:34.670 --> 26:35.590
一个个来吧

26:35.590 --> 26:37.230
首先是班级

26:37.270 --> 26:37.950
班级我们写法

26:37.950 --> 26:38.590
再来一次

26:38.590 --> 26:39.430
securize

26:39.430 --> 26:41.710
接下来大家要跟着做一次

26:41.710 --> 26:43.070
require

26:43.070 --> 26:45.110
从这个地币里边导出

26:45.110 --> 26:49.190
然后还要导出这个data.tabs

26:49.190 --> 26:53.550
data.securize

26:53.550 --> 26:54.750
securize

26:54.750 --> 26:57.070
导出的data.tabs

26:57.070 --> 26:57.310
好

26:57.310 --> 27:00.190
那么我们这里通过securize

27:00.190 --> 27:01.150
迪凡

27:01.150 --> 27:02.230
班级的话

27:02.230 --> 27:03.830
模型名我们就用class

27:03.830 --> 27:05.550
就用class.模型名

27:05.550 --> 27:09.590
接下来我们再得到这个配置

27:09.590 --> 27:12.190
班级里边有哪些属性呢

27:12.190 --> 27:15.470
班级里边有名称和开班时间

27:15.470 --> 27:18.030
开班时间我们就可以用credit.at

27:18.030 --> 27:19.350
当然也可以单独来写一个

27:19.350 --> 27:20.630
因为credit.at有的时候

27:20.630 --> 27:21.870
我们表示了这个

27:21.870 --> 27:22.830
在数据库里边

27:22.830 --> 27:24.270
这条记录产生的时间

27:24.270 --> 27:25.630
这条记录产生的时间

27:25.630 --> 27:27.190
它不一定是开班时间

27:27.190 --> 27:28.230
懂我的意思吧

27:28.230 --> 27:29.390
比方说我有一个班级

27:29.390 --> 27:31.390
是上周开的

27:31.390 --> 27:33.070
那么我由于没有录入到系统

27:33.070 --> 27:34.950
那么我这个时候把它录入到系统

27:34.990 --> 27:37.070
那我数据产生的时间是不是现在

27:37.070 --> 27:38.950
但是我真正的开班时间是不是过去

27:38.950 --> 27:39.270
对不对

27:39.270 --> 27:40.190
所以说这个要搞清楚

27:40.190 --> 27:41.230
我们还是把它写上

27:41.230 --> 27:43.390
名称和班级开班时间

27:43.390 --> 27:45.430
名称开班时间

27:45.430 --> 27:46.310
来吧

27:46.310 --> 27:48.790
名称是name

27:48.790 --> 27:50.710
data.tabs

27:50.710 --> 27:54.760
stune

27:54.760 --> 27:55.600
data.tabs

27:55.600 --> 27:57.680
stune

27:57.680 --> 27:59.320
然后呢这个

27:59.320 --> 28:00.040
对啊的

28:00.040 --> 28:01.760
然后呢now

28:01.760 --> 28:04.380
不为空

28:04.380 --> 28:05.660
然后开班时间

28:05.660 --> 28:08.220
open date

28:08.220 --> 28:08.700
好

28:08.700 --> 28:09.340
type

28:09.340 --> 28:10.300
类型是什么呢

28:10.300 --> 28:11.180
这个data.tabs里边

28:11.180 --> 28:12.140
支持很多类型

28:12.140 --> 28:13.500
你可以至于看一下

28:13.500 --> 28:14.500
支持很多类型

28:14.500 --> 28:15.740
那么我们这里那是date

28:15.740 --> 28:17.620
日期

28:17.620 --> 28:18.780
allow

28:18.780 --> 28:20.500
force

28:20.500 --> 28:20.820
ok

28:20.820 --> 28:22.540
那么这里是不是定义了一个班级

28:22.540 --> 28:24.220
对不对

28:24.220 --> 28:25.020
班级的话

28:25.020 --> 28:27.780
数据产生时间的东西要不要呢

28:27.780 --> 28:28.220
要吗

28:28.220 --> 28:29.820
我们把这个东西写上

28:29.820 --> 28:30.700
什么created

28:30.700 --> 28:31.540
ad

28:31.540 --> 28:32.420
还是不要了

28:32.420 --> 28:33.060
force

28:33.100 --> 28:34.220
如果说你需要的话

28:34.220 --> 28:35.140
你可以把它写上

28:35.140 --> 28:35.980
force

28:35.980 --> 28:36.220
好

28:36.220 --> 28:38.140
然后呢

28:38.140 --> 28:41.100
写上一个就是paranoid

28:41.100 --> 28:42.500
q

28:42.500 --> 28:43.300
把这东西写上

28:43.300 --> 28:43.380
啊

28:43.380 --> 28:45.340
这个东西是需要的

28:45.340 --> 28:46.860
把这东西

28:46.860 --> 28:47.860
呃

28:47.860 --> 28:48.860
来吧

28:48.860 --> 28:50.860
就是我们这里呢

28:50.860 --> 28:55.070
const class

28:55.070 --> 28:56.590
把导出

28:56.590 --> 28:58.870
marge export

28:58.870 --> 28:59.470
class

28:59.470 --> 29:01.190
把导出

29:01.190 --> 29:02.350
没问题吧

29:02.350 --> 29:02.590
好

29:02.590 --> 29:03.030
这里呢

29:03.070 --> 29:04.830
把这里这里写好

29:04.830 --> 29:05.110
好

29:05.110 --> 29:05.470
然后呢

29:05.470 --> 29:06.950
我们还是用同样的方式啊

29:06.950 --> 29:07.670
在这边

29:07.670 --> 29:08.750
我们刚才不是用了一个

29:08.750 --> 29:09.110
admima

29:09.110 --> 29:09.550
同步吗

29:09.550 --> 29:10.150
同步数据库

29:10.150 --> 29:11.070
对不对

29:11.070 --> 29:11.390
对不对

29:11.390 --> 29:12.470
同步数据库

29:12.470 --> 29:13.150
那么这里呢

29:13.150 --> 29:15.030
我给大家说一个一个技巧啊

29:15.030 --> 29:15.830
就是同步数据库呢

29:15.830 --> 29:16.790
可以一起同步

29:16.790 --> 29:17.910
不是说一个一个同步

29:17.910 --> 29:18.630
可以一起同步

29:18.630 --> 29:19.870
那么怎么来一起同步呢

29:19.870 --> 29:23.410
他这里其实也说到了

29:23.410 --> 29:24.610
同步

29:24.610 --> 29:28.130
看到模型基础

29:28.130 --> 29:30.010
就是很多时候的API啊

29:30.010 --> 29:30.890
你要去查询一下

29:30.890 --> 29:31.450
你才

29:31.450 --> 29:31.810
不然的话

29:31.810 --> 29:32.850
经常容易忘了

29:32.850 --> 29:34.250
你可以使用这个secure nice

29:34.890 --> 29:37.250
这里来自动同步所有类型

29:37.250 --> 29:38.170
但是前提条件

29:38.170 --> 29:39.970
你得先定义模型

29:39.970 --> 29:41.370
模型定义了之后

29:41.370 --> 29:42.730
你才能去同步

29:42.730 --> 29:43.170
所以说呢

29:43.170 --> 29:43.690
我们这里呢

29:43.690 --> 29:46.010
可以写一个启动吗

29:46.010 --> 29:47.570
写一个初始化

29:47.570 --> 29:49.490
叫做sync

29:49.490 --> 29:50.130
sync

29:50.130 --> 29:50.930
点儿介绍

29:50.930 --> 29:51.570
这个介绍呢

29:51.570 --> 29:53.490
主要是用于同步

29:53.490 --> 29:55.130
所有模型

29:55.130 --> 29:56.610
它主要是启动每个作用

29:56.610 --> 29:57.250
好来吧

29:57.250 --> 29:58.330
我们来写一个

29:58.330 --> 29:59.730
一个个导入啊

29:59.730 --> 30:00.730
首先我们require

30:00.730 --> 30:01.410
导入这个模

30:01.410 --> 30:02.130
第一个模型

30:02.130 --> 30:02.770
什么模型呢

30:02.770 --> 30:04.410
就是二的命

30:04.410 --> 30:06.130
然后再导入

30:06.130 --> 30:06.970
因为这个模型呢

30:06.970 --> 30:08.250
在这个文件的运行过程中

30:08.250 --> 30:09.650
是不是就已经定义模型了

30:09.650 --> 30:10.970
模型要先定义啊

30:10.970 --> 30:12.450
定义了之后才能同步

30:12.450 --> 30:14.290
导入这个二的命模型

30:14.290 --> 30:15.810
然后再导入这个

30:15.810 --> 30:16.410
一个来吧

30:16.410 --> 30:19.680
不可能模型

30:19.680 --> 30:20.320
我们打写

30:20.320 --> 30:30.140
打写到了

30:30.140 --> 30:31.980
始终更新吗

30:31.980 --> 30:33.060
好这里

30:33.060 --> 30:33.700
导入二的命

30:33.700 --> 30:34.140
然后呢

30:34.140 --> 30:36.260
再导入require

30:36.260 --> 30:39.820
导入那个class

30:39.820 --> 30:42.140
再导入

30:42.140 --> 30:42.900
student

30:42.940 --> 30:44.420
好我们把四个模型都导入进来

30:44.420 --> 30:45.260
然后呢

30:45.260 --> 30:46.740
再进行同步

30:46.740 --> 30:47.300
用什么呢

30:47.300 --> 30:48.740
用那个sacrlize在同步

30:48.740 --> 30:53.580
sacrlize

30:53.580 --> 30:55.540
require

30:55.540 --> 30:56.740
db

30:56.740 --> 30:57.820
sacrlize

30:57.820 --> 30:58.660
sync

30:58.660 --> 30:59.660
同步

30:59.660 --> 31:00.500
同步所有的

31:00.500 --> 31:01.620
好那么我们这里

31:01.620 --> 31:02.300
给它加上一个

31:02.300 --> 31:03.300
altar

31:03.300 --> 31:04.860
v2

31:04.860 --> 31:06.380
然后进

31:06.380 --> 31:08.960
输出

31:08.960 --> 31:12.640
所有表

31:12.640 --> 31:14.040
所有模型

31:14.080 --> 31:14.920
同步

31:14.920 --> 31:16.360
完成

31:16.360 --> 31:16.920
好

31:16.920 --> 31:18.000
再写到这

31:18.000 --> 31:19.160
行了吧

31:19.160 --> 31:20.440
好那么这里能不能写好了

31:20.440 --> 31:21.320
写好了之后

31:21.320 --> 31:22.520
我们开始来定义模型了

31:22.520 --> 31:23.240
一个个来定义

31:23.240 --> 31:23.800
二的命里面

31:23.800 --> 31:25.080
我就把这个删掉了

31:25.080 --> 31:26.480
不需要了

31:26.480 --> 31:27.080
然后呢

31:27.080 --> 31:28.240
book

31:28.240 --> 31:29.400
刚才是那个

31:29.400 --> 31:31.120
刚才是那个班级

31:31.120 --> 31:31.400
对吧

31:31.400 --> 31:32.400
班级已经定义好了

31:32.400 --> 31:33.800
我们把它复制一下吧

31:33.800 --> 31:34.280
然后呢

31:34.280 --> 31:36.160
去定义学生

31:36.160 --> 31:37.160
学生一个来

31:37.160 --> 31:38.400
这里是student

31:38.400 --> 31:40.200
当然这个是个变量名字里随便去

31:40.200 --> 31:41.600
主要是个模型名字

31:41.600 --> 31:43.160
这个模型名字很关键

31:43.200 --> 31:44.880
它会对应到表明的

31:44.880 --> 31:46.680
这个变量名字里随便写的

31:46.680 --> 31:47.960
这个变量我们只是把它导出而已

31:47.960 --> 31:49.080
当然你也可以这样子

31:49.080 --> 31:50.320
直接把它导出

31:50.320 --> 31:51.160
module

31:51.160 --> 31:51.800
export

31:51.800 --> 31:52.720
直接导出就完事了

31:52.720 --> 31:53.160
对不对

31:53.160 --> 31:54.280
也很简单

31:54.280 --> 31:55.680
好来吧

31:55.680 --> 31:58.280
班级里边有班级的名字

31:58.280 --> 31:58.960
是字不错

31:58.960 --> 31:59.440
然后呢

31:59.440 --> 32:00.640
班级的

32:00.640 --> 32:01.800
不是班级

32:01.800 --> 32:02.960
这里是学生

32:02.960 --> 32:04.000
student

32:04.000 --> 32:06.880
学生

32:06.880 --> 32:08.720
学生里边那些信息

32:08.720 --> 32:10.400
姓名出生日期

32:10.400 --> 32:11.080
一个来

32:11.080 --> 32:13.360
姓名出生日期

32:13.360 --> 32:15.800
birthday

32:15.800 --> 32:17.480
出生日期没问题

32:17.480 --> 32:18.600
然后呢

32:18.600 --> 32:19.840
性别联系电话

32:19.840 --> 32:20.080
好

32:20.080 --> 32:23.000
性别

32:23.000 --> 32:24.680
就我们可以用six吧

32:24.680 --> 32:25.400
six

32:25.400 --> 32:26.880
性别的话用什么来表示呢

32:26.880 --> 32:27.600
你可以用字不错

32:27.600 --> 32:28.440
但是我们最常见的

32:28.440 --> 32:29.840
是用一个bit

32:29.840 --> 32:31.160
就是

32:31.160 --> 32:31.800
不利

32:31.800 --> 32:33.560
在我们的模型里边叫做不利

32:33.560 --> 32:34.800
在数据库里边叫做bit

32:34.800 --> 32:35.200
对吧

32:35.200 --> 32:36.680
0或者是1

32:36.680 --> 32:37.760
这是性别

32:37.760 --> 32:38.840
还有什么呢

32:38.840 --> 32:40.120
还有联系电话

32:40.120 --> 32:40.840
缝

32:42.000 --> 32:43.280
或者叫mobile

32:45.040 --> 32:45.920
复制一下吧

32:47.200 --> 32:48.880
联系电话

32:48.880 --> 32:50.280
stune

32:50.280 --> 32:52.320
那么这个时候可以给他写11位

32:52.320 --> 32:53.520
手机只有11位

32:54.840 --> 32:56.520
当然你要考虑国外的情况了

32:56.520 --> 32:58.440
你还要多写一点

32:58.440 --> 32:59.200
然后联系电话

32:59.200 --> 33:00.200
锁书班级

33:00.200 --> 33:00.440
好

33:00.440 --> 33:02.120
锁书班级我们先暂时不叨集

33:03.120 --> 33:04.080
这是关于这一块

33:05.840 --> 33:06.720
是学生

33:06.720 --> 33:08.840
学生过后还有一个书籍

33:08.840 --> 33:10.040
把学生复制一下

33:11.040 --> 33:12.160
书籍

33:12.160 --> 33:13.320
这里是boog

33:14.320 --> 33:16.360
书籍有哪些属性

33:16.360 --> 33:19.320
名字图片出版日期和作者

33:19.320 --> 33:20.480
名字

33:20.480 --> 33:21.560
图片

33:21.560 --> 33:23.760
图片我们把它叫做image

33:23.760 --> 33:24.720
image图片

33:24.720 --> 33:25.520
UIL

33:25.520 --> 33:28.080
那么有些人说图片我应该存什么

33:28.080 --> 33:29.120
图片其实很简单

33:29.120 --> 33:30.080
就是一个字幕串

33:30.800 --> 33:32.600
存的是图片的路径

33:32.600 --> 33:34.600
它不是存图片的二进字数据

33:34.600 --> 33:36.120
它存图片的路径

33:36.120 --> 33:37.240
实际上它可以存

33:37.240 --> 33:38.520
可不可以存二进字数据

33:39.080 --> 33:40.320
只不能一般不这样做

33:40.320 --> 33:41.960
存的是图片的路径

33:41.960 --> 33:43.880
那么它是连接到一个文件的

33:44.880 --> 33:46.600
这是图片的图片

33:46.600 --> 33:47.760
图片是可以维空的

33:48.520 --> 33:49.480
图片是可以维空的

33:50.720 --> 33:52.000
然后出版日期

33:53.400 --> 33:54.200
publish

33:54.200 --> 33:54.600
dead

33:56.200 --> 33:58.440
之所以我要去建这么一张书籍表

33:58.440 --> 33:59.960
是因为我们后面有一个技术

34:00.280 --> 34:01.400
我要给大家讲一讲

34:02.600 --> 34:03.320
作者

34:03.320 --> 34:04.240
Awesome

34:04.240 --> 34:05.600
我就简单的写了一些信息

34:05.640 --> 34:08.320
好了

34:08.320 --> 34:09.440
是不是建好了

34:09.440 --> 34:10.240
对不对

34:11.240 --> 34:12.400
那么这些东西

34:12.400 --> 34:14.240
我们书籍这里把这个东西开启

34:14.240 --> 34:17.160
把这个quity的appdata的appdata都开启

34:17.160 --> 34:19.040
我们这里模型都建好了

34:19.040 --> 34:20.720
而且我们在这里是不是进行同步了

34:20.720 --> 34:22.760
我们在英这个时候里面去导入这个同步

34:23.760 --> 34:24.320
sync

34:24.320 --> 34:26.240
接下来运行一下

34:26.240 --> 34:28.560
运行

34:28.560 --> 34:30.280
所有模型同步完成

34:30.280 --> 34:31.760
接下来我们到书籍库里面去看一下

34:31.760 --> 34:32.920
是不是真的是同步完成了

34:32.920 --> 34:33.840
点击右键刷新

34:33.840 --> 34:35.000
你看是不是表全部有了

34:35.640 --> 34:39.200
因此我们就不再需要手动的去管理表了

34:39.200 --> 34:41.320
完全可以利用它的ORM框架

34:41.320 --> 34:43.080
帮我们自动来去生成表

34:43.080 --> 34:44.000
你看每一个表

34:45.120 --> 34:47.520
看一下我们用这个对象模型来看吧

34:47.520 --> 34:48.280
对象模型

34:50.280 --> 34:51.080
跑到哪去了呢

34:52.720 --> 34:53.120
我在这

34:56.760 --> 34:58.360
这个还是怎么出来的

34:58.360 --> 35:00.200
这个对象模型

35:00.200 --> 35:01.600
这个苹果我这个

35:01.600 --> 35:02.960
这个界面我还真用不习惯

35:06.600 --> 35:07.200
对象

35:07.200 --> 35:07.600
我在这

35:08.600 --> 35:09.280
一二图表

35:11.120 --> 35:12.520
你看就出来了

35:12.520 --> 35:14.560
但是现在还有一个问题

35:14.560 --> 35:17.480
就是学生跟班级之间是不是有关关系

35:17.480 --> 35:18.760
他有外界关系

35:18.760 --> 35:19.720
你看一下

35:19.720 --> 35:21.240
学生这里

35:21.240 --> 35:23.000
他是不是有个所属班级

35:23.000 --> 35:24.440
他有个外界关系

35:24.440 --> 35:26.800
那么在我们的模型里边怎么来表示

35:26.800 --> 35:27.400
表育

35:27.400 --> 35:29.800
就是一个模型之间的关系呢

35:29.800 --> 35:31.080
怎么来表示呢

35:31.080 --> 35:32.640
好这里给大家说一下

35:32.640 --> 35:35.400
我们这里回到这个文档里面来

35:35.400 --> 35:36.360
看文档里面怎么说的

35:37.360 --> 35:39.360
这里有个关联

35:39.360 --> 35:40.760
看一下吧

35:40.760 --> 35:42.280
就他说的已经非常明确了

35:42.280 --> 35:44.120
他说我们的表里边的关联

35:44.120 --> 35:45.920
无非就是这么几种情况

35:45.920 --> 35:49.000
Has1BelanceToHasManyBelanceToMany

35:49.000 --> 35:49.760
看一下吧

35:49.760 --> 35:51.800
他说了哪些情况

35:51.800 --> 35:53.960
这里他说如果说你使用

35:53.960 --> 35:55.920
你看这两个东西都是模型

35:55.920 --> 35:56.240
看到没有

35:56.240 --> 35:57.360
Define一个模型

35:57.360 --> 35:58.080
另一个表

35:58.080 --> 35:59.320
Define一个模型

35:59.320 --> 36:00.680
那么怎么来用呢

36:00.680 --> 36:02.880
如果说A点Has1B

36:02.880 --> 36:05.480
就意味着A和B之间存在一对一的关系

36:05.560 --> 36:08.080
就是一个A拥有一个B

36:08.080 --> 36:09.520
它其实不是一对一关系

36:09.520 --> 36:11.360
它只能因为一对一关系要表述完

36:11.360 --> 36:12.560
就一个A有一个B

36:12.560 --> 36:13.840
一个B有一个A

36:13.840 --> 36:14.920
但是它指的是

36:14.920 --> 36:16.240
它只看A这一端

36:16.240 --> 36:17.400
一个A拥有一个B

36:17.400 --> 36:19.640
那么它会把外界见到哪呢

36:19.640 --> 36:21.840
见到B里边

36:21.840 --> 36:22.840
见到目标模型

36:22.840 --> 36:25.480
B里边它会见一个外界

36:25.480 --> 36:27.640
如果说你是ABelanceToB

36:27.640 --> 36:30.920
那么表示一个A属于一个B

36:30.920 --> 36:33.120
比方说我们一个学生

36:33.120 --> 36:34.800
是不是属于一个班级

36:35.680 --> 36:39.080
实际上是班级和学生是一对多的

36:39.080 --> 36:40.400
学生的班级是多对一

36:40.400 --> 36:41.480
实际上是这么关系

36:41.480 --> 36:46.000
因此它会把外界见到A里边

36:46.000 --> 36:48.720
如果说你是A has many B

36:48.720 --> 36:49.560
表示什么意思

36:49.560 --> 36:52.200
表示的是一个班级有多个学生

36:52.200 --> 36:54.680
你看一下这个名字就很容易理解了

36:54.680 --> 36:57.640
一个A有一个B

36:57.640 --> 37:01.280
一个A属于一个B

37:01.280 --> 37:03.600
一个A拥有多个B

37:03.600 --> 37:04.560
是不是这么一个意思

37:04.640 --> 37:06.160
因此那么这种情况下

37:06.160 --> 37:08.560
它会把外界见到B里边

37:08.560 --> 37:09.880
如果说多对多

37:09.880 --> 37:14.280
你要这样子写A belongs to many B through C

37:14.280 --> 37:15.240
那么我们说讲了

37:15.240 --> 37:17.480
多对多是不是有一个中间的表

37:17.480 --> 37:18.600
是不是要基督外界关系

37:18.600 --> 37:22.480
那么它会在C表中去基督这个外界关系

37:22.480 --> 37:25.520
根据你不同的情况来去创建不同的关系

37:25.520 --> 37:27.160
它会自动的帮你生成外界

37:27.160 --> 37:28.520
你都不用自语一些

37:28.520 --> 37:29.680
好 咱们来看一下吧

37:29.680 --> 37:33.530
怎么来写这个玩意儿

37:33.570 --> 37:36.170
我们现在有一个班级

37:36.170 --> 37:38.330
班级是不是跟学生是一对多

37:38.330 --> 37:40.490
一个班级拥有多个学生

37:40.490 --> 37:42.610
反过来一个学生属于一个班级

37:42.610 --> 37:45.690
那么我们可以在任何一端都可以这样子写

37:45.690 --> 37:46.890
比方说我们在班级这里

37:46.890 --> 37:48.130
我们完全可以这样子写

37:48.130 --> 37:51.410
class has many

37:51.410 --> 37:52.650
有多个学生

37:52.650 --> 37:54.650
那么我们是不是把学生倒进来

37:54.650 --> 38:04.310
student require

38:04.310 --> 38:05.190
第二什么

38:05.230 --> 38:08.310
student

38:08.310 --> 38:09.230
写过来

38:09.230 --> 38:11.430
表示一个班级拥有多个学生

38:11.430 --> 38:12.150
对不对

38:12.150 --> 38:13.470
那么反过来也是一样

38:13.470 --> 38:15.150
反过来你可以不定义的

38:15.150 --> 38:17.350
那么现在我们只需要搞第一个关系就行了

38:17.350 --> 38:19.710
它就会在学生表里边建立一个外界关系

38:19.710 --> 38:21.230
咱们来试一下

38:21.230 --> 38:23.230
这个是同步完成

38:23.230 --> 38:25.390
我们来看一下表里边结构

38:25.390 --> 38:27.350
这里刷新

38:27.350 --> 38:29.350
你看 外界关系是不是建立好了

38:29.350 --> 38:31.630
而且它会自动帮你建立外界列

38:31.630 --> 38:33.190
你看那个外界列是不是class id

38:33.190 --> 38:34.630
它会用表的名字

38:34.630 --> 38:36.150
加上一个id这个关键字

38:36.150 --> 38:37.430
来表示这个外界

38:37.430 --> 38:39.350
它没有两个关系就建立好了

38:39.350 --> 38:41.070
这都不用你自己去管

38:41.070 --> 38:41.710
那么这些课呢

38:41.710 --> 38:43.470
我们就学习到这么一些东西

38:43.470 --> 38:44.550
如何来根据模型

38:44.550 --> 38:46.390
让它自动来管理我们的表

38:46.390 --> 38:48.110
其实我们真的用鼠了过后

38:48.110 --> 38:50.230
这个数据库窗口根本不用打开

38:50.230 --> 38:51.710
有的时候我们做一些测试的时候

38:51.710 --> 38:52.430
查看一下数据

38:52.430 --> 38:53.350
我们可以打开一下

38:53.350 --> 38:54.870
其实我们很多时候都不用打开了

38:54.870 --> 38:56.350
让它自动帮我们管理就完了

38:56.350 --> 38:58.430
我们只关心结业室里边的对象

38:58.430 --> 39:00.030
它就会生成一个个的对象

39:00.030 --> 39:00.590
对不对

39:00.750 --> 39:01.910
那么现在的数据模型

39:01.910 --> 39:03.150
以及表关性的映射

39:03.150 --> 39:04.270
它就建立好了

39:04.270 --> 39:05.390
建立好了之后

39:05.390 --> 39:07.150
后续它就是根据这个映射

39:07.150 --> 39:08.710
自动去完成数据的读取

39:08.710 --> 39:10.030
和数据的添加

39:10.030 --> 39:12.030
那么咱们下节课来学习

39:12.030 --> 39:14.950
如何来对数据进行增三改查

39:14.950 --> 39:15.830
非常的简单

