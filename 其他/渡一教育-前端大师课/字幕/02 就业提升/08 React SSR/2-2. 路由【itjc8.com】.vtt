WEBVTT

00:00.820 --> 00:03.820
本期课继续来学习内饰介事

00:03.820 --> 00:06.820
内容比较多 但是都很简单

00:06.820 --> 00:10.820
咱们一个一个来 这些问题也是咱们开发中的一些常见问题

00:10.820 --> 00:14.820
我们之前从自己搭建工程的时候 要解决很多麻烦

00:14.820 --> 00:17.820
在内饰介事里面就很简单了 第一个是模板

00:17.820 --> 00:21.820
模板什么意思呢 就是我们很多页面都有叶头叶脚

00:21.820 --> 00:24.820
像这些东西 那么这些东西不用每个页面去兜续一系

00:24.820 --> 00:27.820
我们就可以把它写成模板 模板写到哪呢

00:27.820 --> 00:31.820
我们这里先说一下 那个是介事还实际上是支持这个文件夹的

00:31.820 --> 00:35.820
SRC文件夹 你可以把配级是放到SRC里面

00:35.820 --> 00:38.820
也是没问题的 模板我们写到哪呢

00:38.820 --> 00:42.820
是写到配级式的跟目录下边 跟目录下边写上这么一个东西

00:42.820 --> 00:45.820
叫下滑线开头app.js

00:45.820 --> 00:49.820
js后追名 或者是js X后追名都通用的都可以

00:49.820 --> 00:52.820
那么这里边它就会自动形成模板 自动成为模板

00:52.820 --> 00:56.820
好 咱们来看一下 比方说我们这里写上这么一个

00:56.820 --> 01:00.820
写上这么一个return

01:00.820 --> 01:04.820
DIV 那么这里就是模板

01:04.820 --> 01:07.820
那么我们的纸页面 就是我们的纸的组件写到哪呢

01:07.820 --> 01:10.820
纸的组件是这样子 它会给你传递一个属性进来

01:10.820 --> 01:13.820
这个属性里边它包含了一个

01:13.820 --> 01:15.820
把解构 叫做component

01:15.820 --> 01:18.820
component什么意思呢 就是它匹配到的页面组件

01:18.820 --> 01:22.820
component 它匹配到的页面组件就在这个组件里边

01:22.820 --> 01:25.820
那么你把它眩到任何位置都可以 比方说我们把它眩到这

01:25.820 --> 01:28.820
很简单 对吧 OK 那么这样子来就行了

01:28.820 --> 01:31.820
没问题的 那这就是

01:31.820 --> 01:34.820
这就是咱们的模板

01:34.820 --> 01:37.820
然后我们这里的模板通常是要这样子来做

01:37.820 --> 01:40.820
就是它除了component的属性之外

01:40.820 --> 01:43.820
还有一些额外的属性 这些额外的属性咱们将来可能还会用

01:43.820 --> 01:46.820
可能还会用 所以说我们这里把这些属性展开

01:46.820 --> 01:49.820
这些剩下的属性我们把依次传过去

01:49.820 --> 01:52.820
我们一般会这样子写 对吧

01:52.820 --> 01:55.820
那么这里边有哪些属性还有什么东西

01:55.820 --> 01:58.820
我们以后会用 其实我们来看一下吧

01:58.820 --> 02:01.820
输出一下prose 来看一下

02:01.820 --> 02:04.820
那么咱们这就把模板写好了 写好了之后咱们来看一下吧

02:04.820 --> 02:07.820
我们这里的运行 npm 装dev

02:07.820 --> 02:10.820
我们再来解释一下 这个就是

02:10.820 --> 02:13.820
每一个页面都会选人的app.js

02:13.820 --> 02:16.820
那么它的匹配到的组件 就是匹配到具体的页面

02:16.820 --> 02:19.820
它会给你作为属性传信来 你把它选人到任何位置都可以

02:19.820 --> 02:22.820
那么其他位置就保持固定了

02:22.820 --> 02:25.820
OK 那么现在Ready 这样出现了这个东西就可以了

02:25.820 --> 02:28.820
那么我们访问一下

02:35.810 --> 02:37.810
是3000吗 是3000啊

02:37.810 --> 02:43.340
OK 又卡住了

02:43.340 --> 02:46.340
这个npm PowerShell又卡住了

02:46.340 --> 02:48.340
你看我们首页是不是选人到这了

02:48.340 --> 02:51.340
然后再看电影 movies

02:51.340 --> 02:54.340
你看是不是选人到这了 对吧 很简单

02:54.340 --> 02:56.340
而且我们可以看到这个署项里面

02:56.340 --> 03:01.340
除了就是component之外 还有些别的东西

03:01.340 --> 03:03.340
那么咱们把这些东西都传进去

03:03.340 --> 03:06.340
传进去那么方便的页面之后来使用

03:06.340 --> 03:09.340
OK 那么现在我们当然还有Rotor

03:09.340 --> 03:11.340
Rotor对象我们经常要用的

03:11.340 --> 03:13.340
OK 那么现在我们就得到了这个模板

03:13.340 --> 03:15.340
这是第一个内容 非常简单 对吧

03:15.340 --> 03:17.340
第二个是关于路由

03:17.340 --> 03:19.340
路由我们之前解释过了

03:19.340 --> 03:22.340
就是你根据你的文件夹和你的文件的匹配

03:23.340 --> 03:25.340
我们这一刻主要说一个动态路由

03:25.340 --> 03:28.340
什么动态路由呢 就是有的路由是这样子

03:28.340 --> 03:31.340
有的路由它是这样子

03:31.340 --> 03:33.340
比方说我们movies有个详情页

03:33.340 --> 03:36.340
电影有个详情页 比方说我们传第一个山

03:36.340 --> 03:38.340
就到详情页 因为我们知道访问这个地址的话

03:38.340 --> 03:40.340
访问这个地址的话 应该到哪儿

03:40.340 --> 03:42.340
是不是到index来解释

03:42.340 --> 03:44.340
如果说你访问3到哪儿了

03:44.340 --> 03:46.340
默认的情况下到3点解释

03:46.340 --> 03:48.340
访问4又到4点解释

03:48.340 --> 03:49.340
那么这个情况是无限多的

03:49.340 --> 03:51.340
所以我们应该使用动态路由

03:51.340 --> 03:53.340
那怎么办呢 它的处理方式

03:53.340 --> 03:55.340
跟那个就是无名解释差不多

03:55.340 --> 03:57.340
应该说无名解释跟它差不多

03:57.340 --> 04:00.340
那么它这个做法就是加两个中货号

04:00.340 --> 04:02.340
然后这里边写上一个动态路由名字

04:02.340 --> 04:04.340
比方说我们这里写上一个id

04:04.340 --> 04:05.340
第二

04:05.340 --> 04:06.340
jsx

04:06.340 --> 04:09.340
那么之后它就会生成一个路由的模式

04:09.340 --> 04:11.340
就是什么模式呢 movies

04:11.340 --> 04:12.340
它就会生成这个东西

04:12.340 --> 04:14.340
那么匹配这样的地址 它会传给谁呢

04:14.340 --> 04:15.340
传给这个文件

04:15.340 --> 04:17.340
好 那么咱们来写一下

04:17.340 --> 04:19.340
id

04:19.340 --> 04:20.340
jsx

04:21.340 --> 04:23.340
好 那么这里呢

04:23.340 --> 04:25.340
写一个 这是电影详情页

04:25.340 --> 04:26.340
return

04:26.340 --> 04:29.340
电影详情页

04:29.340 --> 04:31.340
保存一下 咱们来看一下吧

04:31.340 --> 04:32.340
那么现在呢

04:32.340 --> 04:33.340
我们用那个movies

04:33.340 --> 04:35.340
访问这个杀

04:35.340 --> 04:36.340
你看一下

04:36.340 --> 04:37.340
这又卡住了

04:37.340 --> 04:38.340
你看

04:38.340 --> 04:39.340
那么现在呢

04:39.340 --> 04:40.340
这里呢 电影详情页就出来了

04:40.340 --> 04:41.340
对吧

04:41.340 --> 04:42.340
好 那么这里呢

04:42.340 --> 04:43.340
45

04:43.340 --> 04:44.340
电影详情页

04:44.340 --> 04:45.340
都能匹配到它

04:45.340 --> 04:46.340
如果说你不写这个的话

04:46.340 --> 04:47.340
那么就匹配到

04:47.340 --> 04:48.340
电影页

04:48.340 --> 04:50.340
就这么简单

04:50.340 --> 04:52.340
好 那如果说是

04:52.340 --> 04:53.340
我们在这里边

04:53.340 --> 04:55.340
要获取这个路由的

04:55.340 --> 04:56.340
id怎么办呢

04:56.340 --> 04:57.340
它是这样子

04:57.340 --> 04:58.340
咱们把这个属性打印出来

04:58.340 --> 04:59.340
一看就很明白了

04:59.340 --> 05:00.340
就很多时候呢

05:00.340 --> 05:01.340
你不用看文档的话

05:01.340 --> 05:02.340
你都可以通过

05:02.340 --> 05:03.340
这种方式来调试

05:03.340 --> 05:04.340
好 保存

05:04.340 --> 05:05.340
你看一下吧

05:05.340 --> 05:06.340
我们到详情页

05:06.340 --> 05:08.340
检查

05:08.340 --> 05:09.340
空谈

05:09.340 --> 05:10.340
你看一下

05:10.340 --> 05:11.340
刷新

05:12.340 --> 05:13.340
那么这里呢

05:15.340 --> 05:17.340
我们这里保存一次

05:17.340 --> 05:20.340
出了这么多次

05:20.340 --> 05:22.340
我们这里再刷新一次

05:22.340 --> 05:25.670
对 对

05:25.670 --> 05:27.670
这个地方

05:27.670 --> 05:28.670
这个地方

05:28.670 --> 05:29.670
我们这里输出来的

05:29.670 --> 05:30.670
停止

05:31.670 --> 05:32.670
好 刷新

05:33.670 --> 05:34.670
那么它为什么一开始

05:34.670 --> 05:35.670
会渲染两次

05:35.670 --> 05:36.670
为什么会有两次出现

05:36.670 --> 05:38.670
那么咱们之后再说

05:38.670 --> 05:39.670
那么这里呢

05:39.670 --> 05:41.670
它有两种不同的渲染方式

05:41.670 --> 05:42.670
没事

05:42.670 --> 05:43.670
我们之后再说

05:43.670 --> 05:44.670
我们这里呢

05:44.670 --> 05:45.670
可以看到

05:45.670 --> 05:46.670
这里有一个rotor

05:46.670 --> 05:47.670
rotor进来了

05:47.670 --> 05:48.670
那么这个rotor里面呢

05:48.670 --> 05:49.670
我们可以看到

05:49.670 --> 05:50.670
它有个属性叫query

05:50.670 --> 05:51.670
这个query属性呢

05:51.670 --> 05:52.670
是不是可以得到这个ID

05:52.670 --> 05:53.670
对吧

05:53.670 --> 05:54.670
可以得到这个ID

05:54.670 --> 05:56.670
那么这是关于这个

05:56.670 --> 05:57.670
这个地方

05:57.670 --> 05:59.670
它的就是如何来获取

05:59.670 --> 06:00.670
它不是在parals里面获取

06:00.670 --> 06:02.670
是在query里面获取

06:02.670 --> 06:03.670
那么query有些朋友就要问了

06:03.670 --> 06:04.670
那这里面

06:04.670 --> 06:05.670
如果说我们给它

06:05.670 --> 06:06.670
传了一个ID

06:06.670 --> 06:08.670
传了一些地址来参数呢

06:08.670 --> 06:10.670
比如说A等于B等于R

06:10.670 --> 06:11.670
那么这些东西在哪呢

06:11.670 --> 06:13.670
这东西也在query里面

06:13.670 --> 06:14.670
好 看一下吧

06:15.670 --> 06:16.670
它也在query里面

06:18.670 --> 06:19.670
rotor

06:19.670 --> 06:21.670
然后这里的query

06:21.670 --> 06:22.670
是不是在这里面

06:22.670 --> 06:23.670
没问题吧

06:23.670 --> 06:24.670
那么这里呢

06:24.670 --> 06:25.670
它也会传音的

06:25.670 --> 06:26.670
那如果说

06:26.670 --> 06:28.670
它又给你传了一个ID

06:28.670 --> 06:29.670
比方说100

06:29.670 --> 06:30.670
1000

06:30.670 --> 06:31.670
那么这样子呢

06:31.670 --> 06:32.670
它会以谁为准呢

06:32.670 --> 06:33.670
我们来看一下

06:33.670 --> 06:34.670
这个东西其实一调试一下

06:34.670 --> 06:35.670
就明白了

06:35.670 --> 06:36.670
它会以谁为准

06:36.670 --> 06:38.670
它会以我们这里

06:38.670 --> 06:39.670
加传的ID为准

06:39.670 --> 06:40.670
所以说呢

06:40.670 --> 06:41.670
我们这里要注意一下

06:41.670 --> 06:42.670
就地址哪里边呢

06:42.670 --> 06:43.670
这些参数呢

06:43.670 --> 06:44.670
不要

06:44.670 --> 06:46.670
跟这里的动态的

06:46.670 --> 06:47.670
匹配的名字呢

06:47.670 --> 06:48.670
重名

06:48.670 --> 06:49.670
OK

06:49.670 --> 06:50.670
那么现在呢

06:50.670 --> 06:51.670
我们这里就搞定了

06:51.670 --> 06:52.670
搞定了之后呢

06:52.670 --> 06:53.670
我们在这里就可以获取了

06:53.670 --> 06:54.670
比方说我们在这里获取一下吧

06:54.670 --> 06:56.670
电影行情业

06:56.670 --> 06:57.670
ID

06:57.670 --> 06:58.670
ID多少呢

06:58.670 --> 06:59.670
ID我们就可以来自于

06:59.670 --> 07:00.670
probs

07:00.670 --> 07:01.670
rotor

07:01.670 --> 07:02.670
query

07:02.670 --> 07:03.670
叫ID

07:03.670 --> 07:04.670
保存

07:04.670 --> 07:05.670
接下来

07:05.670 --> 07:06.670
你看

07:06.670 --> 07:07.670
ID

07:07.670 --> 07:08.670
OK

07:08.670 --> 07:09.670
那么现在呢

07:09.670 --> 07:10.670
这里搞定了

07:10.670 --> 07:11.670
那么这是这一块

07:11.670 --> 07:12.670
动态路由

07:12.670 --> 07:13.670
非常简单

07:13.670 --> 07:15.670
还有一种情况的动态路由

07:15.670 --> 07:16.670
如果说你的地址里面

07:16.670 --> 07:18.670
出现多段动态路由

07:18.670 --> 07:20.670
多段动态路由怎么办呢

07:20.670 --> 07:21.670
我建议你呢

07:21.670 --> 07:22.670
用这种方式

07:22.670 --> 07:23.670
比方说

07:23.670 --> 07:25.670
这里写3个点

07:25.670 --> 07:26.670
accus

07:26.670 --> 07:28.670
或者是params

07:28.670 --> 07:29.670
2.jsx

07:29.670 --> 07:30.670
那么这里呢

07:30.670 --> 07:31.670
我来看一下

07:31.670 --> 07:32.670
这有匹配到什么

07:32.670 --> 07:33.670
我们这里吧

07:33.670 --> 07:34.670
换到

07:34.670 --> 07:35.670
就在这吧

07:35.670 --> 07:36.670
就在这

07:36.670 --> 07:37.670
edf

07:37.670 --> 07:40.240
return

07:40.240 --> 07:41.240
这里还是把打印出来

07:41.240 --> 07:42.240
我们解构一下吧

07:42.240 --> 07:43.240
解构rotor

07:43.240 --> 07:44.240
输出rotor

07:44.240 --> 07:46.240
返回一个

07:47.240 --> 07:49.680
ac

07:49.680 --> 07:50.680
这写错了

07:50.680 --> 07:51.680
return

07:51.680 --> 07:52.680
这里呢

07:52.680 --> 07:53.680
我们随便吧

07:53.680 --> 07:54.680
多段

07:54.680 --> 07:56.680
动态路由

07:56.680 --> 07:57.680
保存

07:57.680 --> 07:58.680
接下来

07:58.680 --> 07:59.680
我们来访问一下

07:59.680 --> 08:00.680
还是这个地址

08:00.680 --> 08:01.680
这个地址呢

08:01.680 --> 08:02.680
我们得到电影详情页

08:02.680 --> 08:03.680
那么我们如果说

08:03.680 --> 08:04.680
多处传了几段呢

08:04.680 --> 08:06.680
abcd

08:06.680 --> 08:07.680
好

08:07.680 --> 08:08.680
那么现在

08:08.680 --> 08:10.680
匹配到多段动态路由了

08:10.680 --> 08:11.680
再让我们看一下吧

08:11.680 --> 08:12.680
看一下这里

08:12.680 --> 08:13.680
匹配到这个路由

08:13.680 --> 08:14.680
匹配到这个路由

08:14.680 --> 08:15.680
然后呢

08:15.680 --> 08:16.680
我们看一下这个rotor

08:16.680 --> 08:18.680
我们的crary

08:18.680 --> 08:19.680
你看一下

08:19.680 --> 08:20.680
它是不是一个数组

08:20.680 --> 08:21.680
它就匹配到一个数组

08:21.680 --> 08:23.680
abcd

08:23.680 --> 08:24.680
那么这里就是

08:24.680 --> 08:25.680
abcd

08:25.680 --> 08:26.680
它就一式传进来了

08:26.680 --> 08:27.680
原来的意思

08:27.680 --> 08:28.680
OK

08:28.680 --> 08:29.680
那么这里是匹配多个

08:29.680 --> 08:30.680
这是很简单

08:30.680 --> 08:32.680
这是动态路由

08:32.680 --> 08:33.680
然后呢

08:33.680 --> 08:34.680
我们来看一下路由跳转

08:34.680 --> 08:35.680
就是说

08:35.680 --> 08:36.680
如果说

08:36.680 --> 08:37.680
我们要写一个导航

08:37.680 --> 08:38.680
来跳转的话

08:38.680 --> 08:39.680
比方说我们要写一些A元数

08:39.680 --> 08:41.680
那么跳转要分为两种

08:41.680 --> 08:42.680
咱们一个说一下

08:42.680 --> 08:44.680
一个是链接式跳转

08:45.680 --> 08:46.680
是跳转

08:46.680 --> 08:48.680
一个是代码式跳转

08:48.680 --> 08:52.060
那么这两个分别来怎么做

08:52.060 --> 08:53.060
首先是链接式跳转

08:53.060 --> 08:54.060
链接式跳转的话

08:54.060 --> 08:55.060
非常简单

08:55.060 --> 08:57.060
比方说我们这里的app里边

08:57.060 --> 08:58.060
既然我们有导航

08:58.060 --> 08:59.060
我们就写个导航

08:59.060 --> 09:00.060
写个导航

09:00.060 --> 09:01.060
来吧

09:01.060 --> 09:02.060
写一个

09:02.060 --> 09:03.060
lab元数

09:03.060 --> 09:04.060
一个导航

09:04.060 --> 09:05.060
或者是一个li

09:05.060 --> 09:07.060
ULLI元数

09:07.060 --> 09:10.820
一个是导航到首页

09:10.820 --> 09:12.820
一个是导航到首页

09:12.820 --> 09:13.820
导航到首页

09:13.820 --> 09:14.820
这里是要用A元数

09:14.820 --> 09:15.820
对吧

09:15.820 --> 09:16.820
另一个元数

09:16.820 --> 09:17.820
在这

09:17.820 --> 09:18.820
在这

09:18.820 --> 09:19.820
我们使用link

09:19.820 --> 09:20.820
从哪里导出呢

09:20.820 --> 09:22.820
从那个next link

09:22.820 --> 09:24.820
所以跟ULLI接式差不多的

09:24.820 --> 09:26.820
只不过大家要注意一下

09:26.820 --> 09:28.820
link它不是

09:28.820 --> 09:30.820
rexrotor的那种link用法

09:30.820 --> 09:32.820
你不能这样子写

09:32.820 --> 09:34.820
你不能这样子写

09:34.820 --> 09:35.820
就写to

09:35.820 --> 09:36.820
它不是这个属性

09:36.820 --> 09:37.820
它叫ref属性

09:37.820 --> 09:38.820
所以跟A元数差不多

09:38.820 --> 09:39.820
那么这里写哪呢

09:39.820 --> 09:40.820
这里写的

09:40.820 --> 09:42.820
写的是你的主键路径

09:42.820 --> 09:44.820
你的主键路径

09:44.820 --> 09:45.820
什么意思呢

09:45.820 --> 09:47.820
比方说我们要跳转到首页

09:47.820 --> 09:48.820
写上

09:48.820 --> 09:49.820
index

09:49.820 --> 09:50.820
index

09:51.820 --> 09:52.820
写钢就行了

09:52.820 --> 09:53.820
它默认会去读哪呢

09:53.820 --> 09:54.820
默认会去读

09:54.820 --> 09:55.820
这个写钢下面的index

09:55.820 --> 09:56.820
叫js

09:56.820 --> 09:57.820
或者是jsx

09:57.820 --> 09:58.820
去读这个文件

09:58.820 --> 09:59.820
去选择这个文件

09:59.820 --> 10:01.820
注意你的主键路径

10:01.820 --> 10:02.820
那么这里呢

10:02.820 --> 10:04.820
我们里边写上首页

10:04.820 --> 10:05.820
实际上里边

10:05.820 --> 10:06.820
它的要求是

10:06.820 --> 10:08.820
让你去写上一个A元数

10:08.820 --> 10:09.820
它会把这个

10:09.820 --> 10:10.820
它会把这个链接地址

10:10.820 --> 10:11.820
传递给A元数

10:11.820 --> 10:12.820
这是首页

10:13.820 --> 10:14.820
它让你去这样子写

10:16.820 --> 10:17.820
好

10:17.820 --> 10:18.820
那么这里呢

10:18.820 --> 10:19.820
我们写上

10:19.820 --> 10:20.820
保存

10:20.820 --> 10:21.820
你看一下吧

10:21.820 --> 10:22.820
我们这里呢

10:22.820 --> 10:23.820
多一个首页

10:23.820 --> 10:24.820
点击

10:24.820 --> 10:25.820
什么跳转到首页

10:25.820 --> 10:26.820
就这么简单

10:27.820 --> 10:29.820
都是这个链接

10:29.820 --> 10:31.820
那么我们一个个写

10:31.820 --> 10:32.820
首页完了之后

10:32.820 --> 10:33.820
有一个配起E

10:33.820 --> 10:34.820
对吧

10:34.820 --> 10:35.820
配起E

10:35.820 --> 10:36.820
那么我们跳转到哪呢

10:36.820 --> 10:37.820
配起E

10:37.820 --> 10:38.820
接下来我们再继续写

10:38.820 --> 10:39.820
那么这里呢

10:39.820 --> 10:40.820
跳转到哪呢

10:40.820 --> 10:41.820
电影

10:41.820 --> 10:42.820
电影页

10:42.820 --> 10:43.820
电影页

10:43.820 --> 10:44.820
比方说

10:45.820 --> 10:46.820
接下来我们继续写

10:46.820 --> 10:47.820
那么这里呢

10:47.820 --> 10:49.820
是电影详情页

10:49.820 --> 10:50.820
当然我们一般来说

10:50.820 --> 10:51.820
不会去写链接

10:51.820 --> 10:52.820
当然也可能

10:52.820 --> 10:53.820
一个列表里面

10:53.820 --> 10:54.820
可能有链接

10:54.820 --> 10:55.820
跳转到电影详情页

10:55.820 --> 10:57.820
我们这里单独来说一下

10:57.820 --> 10:58.820
电影详情页的时候

10:58.820 --> 10:59.820
就会出一些问题

10:59.820 --> 11:01.820
比方说你这里该怎么写呢

11:01.820 --> 11:02.820
比方说我们跳转到

11:02.820 --> 11:03.820
IT为3的电影详情页

11:03.820 --> 11:04.820
那么你能不能这样子写呢

11:04.820 --> 11:05.820
你是不能这样子写的

11:05.820 --> 11:06.820
不能这样写的

11:06.820 --> 11:07.820
咱们来看一下吧

11:07.820 --> 11:08.820
有没有什么问题

11:08.820 --> 11:09.820
保存

11:10.820 --> 11:11.820
你看配起E

11:12.820 --> 11:13.820
电影

11:14.820 --> 11:15.820
手页

11:15.820 --> 11:16.820
配起E

11:16.820 --> 11:17.820
电影

11:17.820 --> 11:18.820
什么都没问题

11:18.820 --> 11:19.820
刚才要卡一下

11:19.820 --> 11:20.820
为什么呢

11:20.820 --> 11:21.820
因为它要夹在一些件

11:22.820 --> 11:23.820
那么我们之后会说

11:23.820 --> 11:25.820
它的圈转点集中模式

11:25.820 --> 11:26.820
那么这三个都没问题

11:26.820 --> 11:27.820
那么我们看一下

11:27.820 --> 11:28.820
电影详情页会不会出问题

11:28.820 --> 11:29.820
点击

11:30.820 --> 11:31.820
没问题

11:31.820 --> 11:32.820
大家看一下

11:32.820 --> 11:33.820
一个浏览器

11:33.820 --> 11:34.820
没有刷新

11:34.820 --> 11:35.820
仔细看一下

11:35.820 --> 11:36.820
我们再点电影详情页

11:36.820 --> 11:37.820
是不是刷新了

11:37.820 --> 11:38.820
为什么电影详情页

11:38.820 --> 11:39.820
它要刷新呢

11:39.820 --> 11:41.820
是因为它找不到这个路径的

11:41.820 --> 11:42.820
它找不到

11:42.820 --> 11:43.820
找不到它就刷新了

11:43.820 --> 11:44.820
它就不实在是

11:44.820 --> 11:45.820
无刷新的跳转

11:45.820 --> 11:46.820
那为什么呢

11:46.820 --> 11:47.820
为什么找不到呢

11:47.820 --> 11:48.820
不是有吗

11:48.820 --> 11:49.820
它是这样子

11:49.820 --> 11:50.820
我们这个Rave属性

11:50.820 --> 11:51.820
它是指的是

11:51.820 --> 11:52.820
你的

11:52.820 --> 11:54.820
你的主键的文件路径

11:54.820 --> 11:55.820
主键的路径

11:55.820 --> 11:57.820
比方说我们这个Movies3

11:57.820 --> 11:58.820
它会找谁

11:58.820 --> 11:59.820
它会找Movies

11:59.820 --> 12:00.820
这个文件夹里边的

12:00.820 --> 12:02.820
3.js

12:02.820 --> 12:03.820
这个文件

12:03.820 --> 12:04.820
有没有这个文件

12:04.820 --> 12:05.820
是不是没有

12:05.820 --> 12:06.820
它没有这个文件

12:06.820 --> 12:07.820
因此呢

12:07.820 --> 12:08.820
它又把它当成一个

12:08.820 --> 12:09.820
普通的A元素

12:09.820 --> 12:10.820
就刷新跳转了

12:10.820 --> 12:11.820
它找不到这个主键了

12:11.820 --> 12:12.820
它没法去渲染这个主键

12:12.820 --> 12:13.820
它一定要注意

12:13.820 --> 12:15.820
它是一个主键地址

12:15.820 --> 12:16.820
那我如果说

12:16.820 --> 12:17.820
我们希望它成为一个

12:17.820 --> 12:18.820
真正的链接地址

12:18.820 --> 12:19.820
怎么办呢

12:19.820 --> 12:21.820
那么要给它另外一个属性

12:21.820 --> 12:22.820
那么另外一个属性的名字

12:22.820 --> 12:23.820
叫20

12:23.820 --> 12:24.820
默认情况下

12:24.820 --> 12:25.820
这个20个属性

12:25.820 --> 12:26.820
跟这个

12:26.820 --> 12:27.820
跟这个东西是一致的

12:27.820 --> 12:28.820
是一致的

12:28.820 --> 12:29.820
那么如果

12:29.820 --> 12:30.820
那么这个要地方要改

12:30.820 --> 12:31.820
改成什么呢

12:31.820 --> 12:32.820
改成这个

12:33.820 --> 12:34.820
ID

12:34.820 --> 12:35.820
2.js

12:35.820 --> 12:36.820
对吧

12:36.820 --> 12:37.820
说改成这个

12:37.820 --> 12:38.820
不用写后追名

12:38.820 --> 12:39.820
是不是改成这个

12:39.820 --> 12:40.820
对吧

12:40.820 --> 12:41.820
那么我们真正的链接地址

12:41.820 --> 12:42.820
这样子写的话

12:42.820 --> 12:43.820
又不对了

12:43.820 --> 12:44.820
你看一下

12:44.820 --> 12:45.820
你这样写的话

12:45.820 --> 12:46.820
电影强企业

12:46.820 --> 12:47.820
他给我这个东西了

12:47.820 --> 12:49.820
他到时能找到这个主键

12:49.820 --> 12:50.820
你看现在没有刷新

12:50.820 --> 12:52.820
跳转的一些都没有刷新

12:52.820 --> 12:53.820
但是他把这个东西

12:53.820 --> 12:54.820
给我们填进去了

12:54.820 --> 12:55.820
它不是真正的地址

12:55.820 --> 12:56.820
所以我一定要区分开

12:56.820 --> 12:57.820
这个是主键的地址

12:57.820 --> 12:58.820
那么另外一个是20

12:58.820 --> 12:59.820
那么这个表示

12:59.820 --> 13:00.820
链接地址

13:00.820 --> 13:02.820
链接地址是Movies3

13:02.820 --> 13:03.820
OK

13:03.820 --> 13:04.820
保存

13:04.820 --> 13:05.820
那么现在看一下

13:05.820 --> 13:06.820
电影

13:06.820 --> 13:07.820
没问题

13:07.820 --> 13:08.820
电影强企业ID为3

13:08.820 --> 13:09.820
对吧

13:09.820 --> 13:10.820
这都没问题了

13:10.820 --> 13:11.820
OK

13:11.820 --> 13:13.820
那么现在这就是Link

13:13.820 --> 13:14.820
这种方式来进行跳转

13:16.820 --> 13:17.820
下一个是Dimars跳转

13:17.820 --> 13:18.820
Dimars跳转是什么呢

13:18.820 --> 13:19.820
比方说

13:19.820 --> 13:20.820
我们又来一个

13:20.820 --> 13:21.820
又来一个

13:21.820 --> 13:22.820
下面有个Button

13:23.820 --> 13:24.820
按钮

13:24.820 --> 13:25.820
跳转到

13:28.820 --> 13:29.820
跳转到这个

13:29.820 --> 13:30.820
Parrot

13:30.820 --> 13:31.820
Parrot

13:31.820 --> 13:33.820
Parrot.js

13:33.820 --> 13:34.820
那么这个按钮

13:34.820 --> 13:36.820
我们要给他写个点击时间

13:36.820 --> 13:37.820
对吧

13:37.820 --> 13:38.820
onclick

13:38.820 --> 13:39.820
点击的时候

13:39.820 --> 13:40.820
那么我们这个时候

13:40.820 --> 13:41.820
怎么跳转呢

13:41.820 --> 13:42.820
这个时候

13:42.820 --> 13:44.820
这个时候我们要用Props

13:44.820 --> 13:45.820
里边的一个属性

13:45.820 --> 13:46.820
Rotor

13:47.820 --> 13:48.820
Rotor

13:48.820 --> 13:49.820
这个属性里边

13:49.820 --> 13:50.820
我们可以用replace

13:50.820 --> 13:51.820
replace

13:51.820 --> 13:52.820
我们这里说一下

13:52.820 --> 13:53.820
这个Link元素

13:53.820 --> 13:54.820
还有个东西叫replace

13:54.820 --> 13:55.820
那么用replace

13:55.820 --> 13:56.820
属性加上之后

13:56.820 --> 13:57.820
它就不再有Push的方式

13:57.820 --> 13:58.820
来加入了

13:58.820 --> 13:59.820
不是加入到地址站了

13:59.820 --> 14:00.820
而是替换的方式

14:00.820 --> 14:01.820
那么这里

14:01.820 --> 14:02.820
我们可以用replace

14:02.820 --> 14:03.820
也可以用Push

14:03.820 --> 14:04.820
来进行跳转

14:04.820 --> 14:05.820
然后跳转到哪呢

14:05.820 --> 14:06.820
我们跳转到

14:06.820 --> 14:08.820
这个直线路径就行了

14:08.820 --> 14:09.820
3

14:09.820 --> 14:10.820
2

14:10.820 --> 14:11.820
ABC

14:11.820 --> 14:12.820
ABC

14:12.820 --> 14:13.820
OK

14:13.820 --> 14:14.820
保存

14:14.820 --> 14:15.820
咱们来看一下吧

14:15.820 --> 14:17.820
那么现在我们点击按钮

14:17.820 --> 14:19.820
那么是不是还跳转到这儿了

14:19.820 --> 14:20.820
还跳转到这儿了

14:20.820 --> 14:21.820
那么同样的

14:21.820 --> 14:22.820
会出现同样的问题

14:22.820 --> 14:23.820
那么怎么办呢

14:23.820 --> 14:25.820
我们还是给两个参数

14:25.820 --> 14:27.820
第一个参数我们写上路径

14:27.820 --> 14:29.820
第一个参数我们写上路径

14:29.820 --> 14:31.820
组建路径

14:31.820 --> 14:32.820
保存

14:32.820 --> 14:34.820
这里我们来看一下

14:34.820 --> 14:35.820
跳转

14:36.820 --> 14:38.820
它说

14:38.820 --> 14:40.820
明白了

14:40.820 --> 14:42.820
它说应该是

14:42.820 --> 14:44.820
这个路径它没法匹配这个组建

14:44.820 --> 14:45.820
没法匹配这个组建

14:45.820 --> 14:47.820
所以说我们这里写错了

14:47.820 --> 14:49.820
应该是Paris

14:49.820 --> 14:50.820
这个组建

14:50.820 --> 14:51.820
OK

14:51.820 --> 14:52.820
保存

14:52.820 --> 14:53.820
现在我们来看一下

14:53.820 --> 14:54.820
电影

14:54.820 --> 14:55.820
电影强行业

14:55.820 --> 14:56.820
然后跳转

14:56.820 --> 14:58.820
现在是不是跳转了

14:58.820 --> 14:59.820
无刷新的跳转

14:59.820 --> 15:00.820
当然这个直线是

15:00.820 --> 15:02.820
如果说你的路由

15:02.820 --> 15:03.820
是动摊路由的时候

15:03.820 --> 15:04.820
才会出现这种东西

15:04.820 --> 15:05.820
如果说你不是动摊路由

15:05.820 --> 15:06.820
你写一个就行了

15:06.820 --> 15:07.820
OK

15:07.820 --> 15:08.820
那么这就是关于

15:08.820 --> 15:10.820
如何来跳转路由

15:10.820 --> 15:11.820
另外一个

15:11.820 --> 15:13.820
如果说你不是页面

15:13.820 --> 15:15.820
如果说你不是页面怎么办

15:15.820 --> 15:16.820
不是页面的话

15:16.820 --> 15:17.820
那么你如何来使用

15:17.820 --> 15:18.820
什么Rotor

15:18.820 --> 15:20.820
Rotor怎么使用

15:20.820 --> 15:21.820
还有Link

15:21.820 --> 15:22.820
当然你可以使用

15:22.820 --> 15:23.820
导致一下就行了

15:23.820 --> 15:24.820
如果说你别的组建

15:24.820 --> 15:26.820
不要在component里面

15:26.820 --> 15:27.820
我们把它写一下

15:28.820 --> 15:30.820
这里新建个文件牙

15:30.820 --> 15:31.820
component

15:31.820 --> 15:32.820
那么这个文件牙里面

15:32.820 --> 15:33.820
我们写上一些通用的主件

15:33.820 --> 15:34.820
header

15:34.820 --> 15:35.820
它不是页面

15:35.820 --> 15:36.820
通用的主件

15:36.820 --> 15:37.820
那比方说这个header

15:37.820 --> 15:38.820
我们就给它写一下

15:38.820 --> 15:40.820
写成一个方式

15:41.820 --> 15:42.820
好来自于这

15:43.820 --> 15:44.820
App里面

15:44.820 --> 15:45.820
我们把写过来

15:47.820 --> 15:48.820
这个地方

15:49.820 --> 15:50.820
把这个UL写过来

15:51.820 --> 15:54.260
写到这个header里面

15:56.260 --> 15:57.260
写到了去了

15:57.260 --> 15:58.260
写到这

15:59.260 --> 16:00.260
OK

16:00.260 --> 16:01.260
然后这边

16:01.260 --> 16:02.260
这边我们要导入

16:04.260 --> 16:05.260
不导入link了

16:05.260 --> 16:06.260
导入的是什么

16:06.260 --> 16:07.260
header

16:07.260 --> 16:08.260
这里来自于

16:10.260 --> 16:11.260
component

16:11.260 --> 16:12.260
header

16:12.260 --> 16:14.260
那么这里我们写了header

16:14.260 --> 16:15.260
我们把它写成个主件

16:15.260 --> 16:16.260
那么这个header里面

16:16.260 --> 16:17.260
我们来怎么来使用

16:17.260 --> 16:18.260
一个是link

16:18.260 --> 16:20.260
link的使用方式是一样的

16:20.260 --> 16:21.260
导入link

16:21.260 --> 16:22.260
from

16:22.260 --> 16:23.260
next link

16:23.260 --> 16:24.260
这个是一样的

16:24.260 --> 16:25.260
那么关键是Rotor

16:25.260 --> 16:26.260
Rotor哪来

16:26.260 --> 16:27.260
这个属性里面

16:27.260 --> 16:28.260
是不可能有Rotor的

16:28.260 --> 16:29.260
当然有Rotor说

16:29.260 --> 16:30.260
那我在这里面

16:30.260 --> 16:31.260
传过去行不行

16:31.260 --> 16:32.260
这个属性里面不是有Rotor吗

16:32.260 --> 16:33.260
该传过去

16:33.260 --> 16:34.260
那么这个显得比较麻烦

16:34.260 --> 16:35.260
如果说主件的层次

16:35.260 --> 16:36.260
掏的比较深的话

16:36.260 --> 16:38.260
那这个传递是很麻烦的

16:38.260 --> 16:39.260
那么我们在以前的说法

16:39.260 --> 16:40.260
是用withRotor

16:40.260 --> 16:41.260
对吧

16:41.260 --> 16:42.260
withRotor可以

16:42.260 --> 16:43.260
没问题

16:43.260 --> 16:44.260
比如说我们导入

16:44.260 --> 16:45.260
从这个next

16:45.260 --> 16:46.260
Rotor里面

16:46.260 --> 16:48.260
可以导入这个withRotor

16:48.260 --> 16:49.260
withRotor

16:49.260 --> 16:50.260
来进行高线主件

16:50.260 --> 16:51.260
把它处理一下

16:51.260 --> 16:52.260
另外一个

16:52.260 --> 16:53.260
就是使用它的一个

16:53.260 --> 16:54.260
自定义的hook

16:54.260 --> 16:55.260
因为我们还是主件

16:55.260 --> 16:56.260
一般用hook

16:56.260 --> 16:57.260
它更加推荐你

16:57.260 --> 16:59.260
使用这个useRotor

16:59.260 --> 17:00.260
那么 useRotor

17:00.260 --> 17:01.260
就很简单的

17:01.260 --> 17:02.260
我们就调一个useRotor

17:02.260 --> 17:03.260
调到它

17:03.260 --> 17:04.260
那么会得到

17:04.260 --> 17:05.260
得到一个什么呢

17:05.260 --> 17:06.260
得到一个Rotor

17:06.260 --> 17:07.260
就这么简单

17:07.260 --> 17:08.260
Rotor

17:08.260 --> 17:09.260
那么这里我们就可以使用

17:09.260 --> 17:10.260
Rotor来进行调转

17:12.260 --> 17:14.630
这里Rotor来进行调转

17:14.630 --> 17:15.630
保证看一下吧

17:15.630 --> 17:16.630
一样的

17:16.630 --> 17:17.630
完全一样的

17:17.630 --> 17:19.630
那么这里电影

17:20.630 --> 17:21.630
调转

17:21.630 --> 17:22.630
对吧

17:22.630 --> 17:23.630
配级

17:24.630 --> 17:25.630
首页

17:25.630 --> 17:26.630
因为这是

17:26.630 --> 17:27.630
我们目前是开发模式

17:27.630 --> 17:28.630
开发模式

17:28.630 --> 17:30.630
它加的东西比较多

17:30.630 --> 17:31.630
而且它可以注入的

17:31.630 --> 17:32.630
一些这些东西

17:33.630 --> 17:34.630
配级

17:34.630 --> 17:35.630
我们以后会说

17:35.630 --> 17:36.630
以后再说

17:36.630 --> 17:37.630
那么它开发模式

17:37.630 --> 17:38.630
加的东西还有

17:38.630 --> 17:39.630
就是jessmap

17:39.630 --> 17:40.630
加的东西比较多

17:40.630 --> 17:41.630
所以说看上去

17:41.630 --> 17:42.630
连卡顿

17:42.630 --> 17:43.630
在生产环境下面

17:43.630 --> 17:45.630
我们以后会解决这些问题

17:45.630 --> 17:46.630
那么调整都没有问题了

17:46.630 --> 17:47.630
对吧

17:47.630 --> 17:48.630
这就是关于这一块

17:50.630 --> 17:51.630
为什么到处都在输出

17:51.630 --> 17:52.630
没事

17:52.630 --> 17:53.630
我们输出吧

17:53.630 --> 17:54.630
无所谓

17:54.630 --> 17:55.630
然后现在就是

17:55.630 --> 17:56.630
404页面

17:56.630 --> 17:57.630
就是说

17:57.630 --> 17:58.630
如果说你访问

17:58.630 --> 17:59.630
一个不存在的地址

17:59.630 --> 18:01.630
那么它会给你出现的页面

18:01.630 --> 18:02.630
比如说我们这里

18:02.630 --> 18:04.630
随便访问一个

18:04.630 --> 18:05.630
那么这里

18:05.630 --> 18:06.630
这里就给你

18:06.630 --> 18:07.630
显示一个错误

18:07.630 --> 18:08.630
对吧

18:08.630 --> 18:09.630
那么我们这里

18:09.630 --> 18:10.630
如果说你要自定义

18:10.630 --> 18:11.630
适应适应页面的话

18:11.630 --> 18:12.630
那么这里点击右键

18:12.630 --> 18:13.630
新键

18:13.630 --> 18:14.630
404.jess

18:14.630 --> 18:15.630
那么当放文不到的时候

18:15.630 --> 18:17.630
还会出现这个页面地址

18:17.630 --> 18:18.630
好

18:18.630 --> 18:19.630
咱们来试一下

18:19.630 --> 18:20.630
试一下

18:20.630 --> 18:21.630
return

18:21.630 --> 18:22.630
H1

18:22.630 --> 18:23.630
404

18:23.630 --> 18:24.630
not found

18:24.630 --> 18:25.630
好

18:25.630 --> 18:26.630
保存

18:26.630 --> 18:27.630
你看一下

18:27.630 --> 18:28.630
现在我们来刷新

18:28.630 --> 18:29.630
那么是不是显示我们的主键了

18:29.630 --> 18:30.630
而且不仅如此

18:30.630 --> 18:32.630
会自动的把404页面

18:32.630 --> 18:34.630
给你生成的页面

18:34.630 --> 18:35.630
你看一下吧

18:35.630 --> 18:36.630
它会变成404

18:36.630 --> 18:38.630
消息码会变成404

18:38.630 --> 18:39.630
而且不仅如此

18:39.630 --> 18:41.630
在我们的主键里面

18:41.630 --> 18:42.630
打印一下属性

18:42.630 --> 18:43.630
你可以看到很清楚

18:43.630 --> 18:45.630
它会有一些东西出现

18:45.630 --> 18:46.630
刷新

18:46.630 --> 18:47.630
咱们来看一下

18:47.630 --> 18:48.630
那么它可以看到

18:48.630 --> 18:49.630
我们的主键里面

18:49.630 --> 18:50.630
rotr

18:50.630 --> 18:51.630
它的Rotr是404

18:51.630 --> 18:52.630
它自动给你放到这

18:52.630 --> 18:53.630
那么如果说你还要

18:53.630 --> 18:54.630
做一些别的事情的话

18:54.630 --> 18:55.630
你可以根据这个东西

18:55.630 --> 18:57.630
来去进行处理

18:57.630 --> 18:58.630
OK

18:58.630 --> 18:59.630
那么这是关于这个

18:59.630 --> 19:00.630
下一个

19:00.630 --> 19:03.630
下一个是这个

19:03.630 --> 19:05.630
错误页面

19:05.630 --> 19:06.630
错误页面是这么一个文件

19:06.630 --> 19:08.630
叫做error

19:08.630 --> 19:09.630
当它发生了一些

19:09.630 --> 19:11.630
404之外的错误的时候

19:11.630 --> 19:13.630
它会给你显示这个页面

19:13.630 --> 19:15.630
给显示这个主键

19:15.630 --> 19:16.630
比方说我们

19:16.630 --> 19:18.630
位置错误

19:18.630 --> 19:19.630
就是浮气爆错了

19:19.630 --> 19:20.630
它会给你显示

19:20.630 --> 19:22.630
那么这个文件不好演示

19:22.630 --> 19:23.630
因为什么呢

19:23.630 --> 19:24.630
因为在开发模式下边

19:24.630 --> 19:25.630
这个错误

19:25.630 --> 19:26.630
这个错误主键是

19:26.630 --> 19:27.630
不会有用的

19:27.630 --> 19:29.630
它只有在生产环境下面

19:29.630 --> 19:30.630
才会有用

19:30.630 --> 19:31.630
开发模式下边

19:31.630 --> 19:32.630
只有某一些

19:32.630 --> 19:33.630
比较特殊的错误

19:33.630 --> 19:35.630
才能会出现

19:35.630 --> 19:37.630
这里我不好演示

19:37.630 --> 19:38.630
而且现在如果说

19:38.630 --> 19:39.630
我去勾件一个生产环境

19:39.630 --> 19:40.630
就是用bo的

19:40.630 --> 19:41.630
去建立生产环境的话

19:41.630 --> 19:43.630
它会进行预渲染

19:43.630 --> 19:44.630
它勾件的时候

19:44.630 --> 19:45.630
它会渲染一遍

19:45.630 --> 19:46.630
那么我们之后会说

19:46.630 --> 19:47.630
它是为了提高效率

19:47.630 --> 19:48.630
所以说

19:48.630 --> 19:49.630
目前勾件

19:49.630 --> 19:50.630
它也要爆错

19:50.630 --> 19:51.630
如果说我去写个错误的话

19:51.630 --> 19:52.630
勾件也勾件不成功

19:52.630 --> 19:53.630
那么这里我怎么来演示呢

19:53.630 --> 19:54.630
它是这样子

19:54.630 --> 19:56.630
如果说你没有这个404

19:56.630 --> 19:57.630
页面

19:57.630 --> 19:59.630
那么它就会找这个Error

19:59.630 --> 20:00.630
目前只能这样子演示

20:00.630 --> 20:02.630
比方说我们把404去掉

20:03.630 --> 20:04.630
去掉过后

20:04.630 --> 20:05.630
我们来看一下

20:05.630 --> 20:07.630
这里它重新编译

20:08.630 --> 20:09.630
来看

20:09.630 --> 20:10.630
是不是显示的错误了

20:10.630 --> 20:11.630
位置错误

20:11.630 --> 20:12.630
没了意思吧

20:12.630 --> 20:13.630
OK

20:13.630 --> 20:14.630
那么这里我们就把

20:14.630 --> 20:15.630
而且它打印的时候

20:15.630 --> 20:16.630
你会看到

20:16.630 --> 20:18.630
它这里边变成了Error

20:18.630 --> 20:19.630
变成了Error

20:19.630 --> 20:20.630
那么这里

20:20.630 --> 20:22.630
我们还是把404加上

20:22.630 --> 20:23.630
404加上

20:24.630 --> 20:25.630
OK

20:26.630 --> 20:27.630
那么这里我们把它

20:27.630 --> 20:28.630
注意

20:29.630 --> 20:31.630
开发反应下面那个错误页面

20:31.630 --> 20:32.630
是无效的

20:32.630 --> 20:33.630
我们这里404

20:33.630 --> 20:34.630
那是放

20:35.630 --> 20:36.630
把这个Error删掉

20:36.630 --> 20:37.630
目前看不到效果

20:37.630 --> 20:38.630
OK

20:38.630 --> 20:39.630
那么是关于错误页面

20:39.630 --> 20:40.630
好

20:40.630 --> 20:41.630
其他的没有怎么

20:41.630 --> 20:42.630
路由的所有知识

20:42.630 --> 20:43.630
有就这么一些了

20:43.630 --> 20:44.630
OK

20:44.630 --> 20:45.630
那么现在路由是不是搞定了

20:45.630 --> 20:46.630
路由搞定了

20:46.630 --> 20:47.630
OK

20:47.630 --> 20:48.630
那么我们下节课

20:48.630 --> 20:49.630
继续来搞定剩下的事情

