WEBVTT

00:00.820 --> 00:06.380
好 咱们呢 这个门课的最后一节课 啊 给他说一下另外一种方式

00:06.940 --> 00:13.940
来实现那个seo优化 因为呢 是这样子 我们呢 开发那个ssr 它的目的啊

00:15.300 --> 00:20.340
我们开发ssr的目的呢 他是为了解决两个问题 对吧 我们之前讲过 一个是白屏的问题

00:21.700 --> 00:27.660
因为他 他始终把所有的ts 资源全部加载完成 然后呢 才能去运行ts

00:28.020 --> 00:35.340
运行是需要花一段时间的 对吧 拿去也是需要花一段时间 然后呢 运行又需要花一段时间 那么就会出现一个

00:36.060 --> 00:43.860
比较长时间的白屏 这是为解决第一个问题 当然 如果说你的应用程序优化的比较好啊 这变形了搭建了 搭载了一些cdn

00:44.620 --> 00:47.300
速度非常快的话 那么白屏问题呢 可能没有那么严重

00:48.100 --> 00:56.140
第二个呢 就是关于seo 因为我们访问到的页面呢 他里边是只有一个div 啊 id为root 对吧 没有其他东西了

00:56.740 --> 01:02.660
因此呢 搜索引擎看到我们的页面的时候呢 就看到一个白板 啥都没有 他就认为你网站里边啥都没有

01:03.100 --> 01:10.660
他不会不会去运行ts 虽然说现在呢 有些搜索引擎呢 有运行ts的能力 但是呢 他没有那么全面啊 没有

01:11.500 --> 01:15.220
没有那么理想效果 所以说呢 搜索引擎呢 他不太喜欢这种页面

01:15.860 --> 01:23.500
那么为了解决这两个问题呢 我们就用使用了服务端渲染的吧 服务端呢 我们把那个东西全部拿到啊 全部在ges 在服务端运行一遍啊

01:23.820 --> 01:29.380
渲染出来 然后呢 在直接发送的客户端 然后客户端接管后预浅染 这是用ssr的方式

01:29.900 --> 01:37.740
当然呢 除了用ssr之外呢 我们之前学习过那个设ges啊 会发现了 还有一些方式 比方说静态化啊 也是一种方案

01:38.500 --> 01:44.100
那么这一期 现在我们这节课呢 就最后节课啊 给大家介绍另外一种方案 叫做预浅染

01:44.580 --> 01:50.260
其实我们之前说的那个设ges里面也有预浅染 对吧 他分成两种一种是ssr 一种是静态化

01:50.660 --> 01:57.340
那么这里的预浅染的概念呢 跟他不一样啊 这里叫pray render 预浅染 单词都是一样的概念不一样

01:57.660 --> 02:02.500
它是什么意思呢 就是我的工程啊 还是按照最传统的做法

02:02.900 --> 02:07.940
就是一个csr应用程序 就是客户端渲染的应用程序 服务端不做任何处理

02:08.420 --> 02:10.340
啊 就是一个传统的csr

02:11.100 --> 02:17.300
那么我们通过另外一个服务器 就是用pray render呢 他去访问我们的csr

02:18.020 --> 02:19.620
比方说啊 举个例子啊

02:20.820 --> 02:25.540
咱们呢 这里呢 有一个react app 这个东西很简单 就是用一个creator react app来搭建的

02:25.860 --> 02:29.180
我们来看一下这里面的代码吧 没什么就是就是纯粹的用了这个

02:30.020 --> 02:30.620
就是这个啊

02:32.100 --> 02:38.540
我先搭建一个csr 就是一个客户端渲染的应用程序啊 无忧也好 react也好都可以啊 无所谓

02:38.740 --> 02:45.780
那么这节课呢 是不涉及到任何技术的啊 就是你react 还有你学的无忧啊 你这些东西都可以用来搭建一个

02:46.420 --> 02:54.820
csr啊 就是客户端渲染的应用程序啊 不限框架的啊 那么我们这里呢还是用react app来搭建的 那么我们用的教授家呢 是这个

02:55.300 --> 02:59.900
crazy react app 就最传统的教授家 对吧 搭建的一定是一个客户端的

03:00.500 --> 03:01.060
应用程序

03:01.860 --> 03:07.140
好 搭建出来了过后呢 我们来看一下里边的代码 请问里边的代码改都没改 齐聚化都没改 就改了一句话

03:07.540 --> 03:11.060
就这个地方啊 在app里边呢 我给他加了一个动态内容啊

03:11.700 --> 03:21.620
就是获取服务器的数据啊 我们请求api test啊 请求服务器的数据啊 然后去把服务器的数据呢 设置到data里边 然后这个位置呢 显示data 没了啊 其他就没了

03:21.940 --> 03:30.580
其他的都是默认的啊 crazy react app 默认的 好 搭建完了过后呢 我们这里呢就build啊 为了解决时间 我这里就已经build了啊 完成

03:31.700 --> 03:39.860
然后呢 接下来呢 我们把这个 就是我们传统的做法怎么做的 把这个build的文件夹放到哪呢 是放到这个一个server啊 一个服务器里边

03:39.940 --> 03:45.700
那么这个服务器呢 我做的非常非常简单 就是一个express啊 加了一个什么connected history api 4 bike

03:46.020 --> 03:50.740
这是为了访问任何地址呢 都都给我们链接到 访问任何地址的时候呢 都让我他

03:51.380 --> 03:56.820
到这啊 都到这个index里面 因为单一用程序嘛 对吧 访问任何地址都要到这个页面

03:57.220 --> 04:03.620
你们都应该都知道啊 这个东西我不用太过于多说了 嗯 然后呢就是有静态化这个目录啊 public 目录

04:04.180 --> 04:11.220
啊 接下来呢 看这啊 就是一个app 然后就做了一个app啊 你请求这个地址的时候呢 我们就给他访问这个数据

04:11.700 --> 04:20.420
好 那么我们现在就是要把什么呢 把这个就是这个地方的build文件夹放到这个server里面的public目录下面 对吧 那么现在呢 我们把这个server启动起来

04:20.660 --> 04:20.900
看一下

04:22.580 --> 04:27.540
我们进入这个server 这就是我们的应用程序了 对吧 我们用传统的方式打箭的应用程序

04:28.020 --> 04:31.860
纯粹的扣扶端宣展 有没有服务器呢 有 他只是一个静态资源服务器

04:32.580 --> 04:36.740
啊 好 运行出来了啊 咱们来看一下 这里呢 我们使用localhost

04:37.700 --> 04:38.020
啊

04:39.140 --> 04:48.580
我用了端口的是5010啊 用了这个端口 刷新啊呗 访问 好 访问过后呢 他就是拿到拿到这个rat的应用程序了

04:48.580 --> 04:53.380
对吧 这里也显示出来了服务端 就是阿加克斯请求的结果 也显示到这了 非常简单

04:53.780 --> 05:00.580
然后我们看一下右面键的页面元代码 元代码里面呢 就是你看一下啊 他其实把ges一去掉的话 其实没有什么东西

05:00.820 --> 05:06.340
什么东西都没有 只有一个dv入址 里面没有东西 那么这对搜索引擎呢就非常不好

05:07.220 --> 05:10.740
那么这个时候怎么办呢 我们这几个课呢就学习另外一种方式叫pray render

05:11.060 --> 05:13.700
pray render是什么意思呢 就是再搭建一个服务器

05:14.500 --> 05:22.100
啊 再搭建一个服务器 那么我们客户端请求的时候呢 客户端请求的时候呢 是请求了这个pray render服务器

05:22.900 --> 05:28.980
那么他呢就有点像代理啊 他去请求什么呢 请求我们的真实的服务器 就是5010

05:29.460 --> 05:35.300
啊 那么这个地方呢 我给他做一个5011嘛啊 我的区分一下吧 5060

05:36.900 --> 05:42.740
60啊 我们这里换个端口啊 免了搞混了啊 脑袋搞晕了 这里呢我们用5000

05:44.340 --> 05:45.380
啊 这里重新启动意思

05:46.580 --> 05:50.340
啊 用5000端口啊 这边呢我们用5000啊

05:52.260 --> 05:54.660
好 那么这边呢我们用6000 诶

05:55.220 --> 06:01.140
这边我们就用6000啊pray render又是一个服务器 我们客户端去请求这个服务器 不再直接去请求我们的5000

06:01.860 --> 06:06.980
5000那个端口了啊 不去请求这个服务器了 因为请求这个服务器呢 他拿到的就是没有一个宣传数据的

06:07.220 --> 06:10.180
啊 对这个搜索引擎特别不友好 那么我们客户端去请求他

06:10.740 --> 06:16.260
请求他的时候 他帮我们去请求这个端口啊 去请求这个东西 但是他请求这个东西是不是拿到还是一样的

06:16.260 --> 06:21.460
只有一个divid为入者 对吧 他还是拿到这个 但是他里边呢他有个好处有在于他里边

06:22.340 --> 06:29.060
他可以去执行介石啊 他用什么执行呢 他用你本机安装的那个cron 就是你谷歌流暗器

06:29.620 --> 06:35.140
啊 如果说你本机没有安装谷歌流暗器的话 那这个东西用不了啊 他会用你本机安装的谷歌流暗器

06:35.860 --> 06:41.540
啊 那么真不用打开流暗器 他不会打开的 没有见面的 他只能内部啊 去运行这个介石

06:41.860 --> 06:48.420
运行完了介石是不是把一面宣传出来了 好 宣传出来了过后呢 然后他把这个宣传的完整页面再给客户端

06:48.900 --> 06:52.740
他是用这种模式来处理的 他既保证了实时性

06:53.220 --> 07:01.460
啊 也就是说你你这个页面他应该是什么样子 那么他这里就会变成什么样子 他跟我们之前的静态化还有些区别 对吧 因为静态化了 他一旦往生静态化

07:01.940 --> 07:07.300
就会怎么样啊 他就会永远是静态的了 对吧 那这种方式呢 他还可以实施的来获取数据

07:07.860 --> 07:11.460
OK 那么这是他使用这种方式 因此呢我们还要打一个服务器

07:11.940 --> 07:16.900
啊 就是pray render 服务器 我们现在搞定了静态支援服务器了 对吧 就是在这里啊 就这个东西

07:17.300 --> 07:22.180
他没有数据了 好 那么既然我们打件这个pray render 服务器 接下来那么在这里再再建一个文件夹

07:25.620 --> 07:29.220
pray render 那么这个地方呢 他是要用到一个第三方库啊

07:29.940 --> 07:34.100
我们到自己的服务器呢 让他运行着吧 我们自己 我们自己的服务器让他运行着

07:35.620 --> 07:37.940
啊 我们这里 这边呢 我们进入这个文件夹

07:39.380 --> 07:45.780
pray render 这里呢 我们用some power shell 打开 然后那么这里用npmn

07:47.060 --> 07:51.940
然后呢 就随便吧啊 算了 这个名字要改一下啊 以后我要改一下这个名字

07:53.300 --> 07:57.380
好 这里我们把这个拍给点节省啊 名字改一下啊pray render test

07:59.860 --> 08:04.900
OK 好 这是我们的pray render 服务器 那么这个服务器怎么来搭建呢 非常简单

08:04.900 --> 08:09.460
我们可以使用一个第三方库 叫做pray render 所以说我们安装一下啊 npm i

08:11.140 --> 08:14.020
pray render 安装一下这个库

08:14.740 --> 08:23.940
那么安装库库库后 我们把这个代码直接拷贝过去 拷贝到哪呢 就在这里边新建个文件啊 取名为index.js

08:24.980 --> 08:29.220
啊 运行这个 就这个文件 好这个文件呢 我们来看一下啊 它里边代码什么意思

08:29.620 --> 08:34.100
这个是使用第三方库的pray render 然后呢 这里告诉他这个服务器的端口是什么port

08:34.660 --> 08:40.340
5011 那么这个东西呢 是他在使用一个插件啊 插件有什么作用 我们一会再说 然后可以把它启动起来

08:40.820 --> 08:47.060
对吧 把它启动起来 好 那咱们来看一下啊 我们现在把它启动起来啊 运行一下这个low的index

08:47.380 --> 08:51.540
好 那么现在我们注意啊 运行的是pray render这个服务器 现在我们打了两个服务器了 对吧

08:51.700 --> 08:56.260
一个是我们自己的low的服务器 一个是pray render服务器 这两个服务器了 我们要做成这个效果

08:56.660 --> 09:01.140
那么科普端去访问他的时候 我们这里呢 把它换成6000 换成6000

09:01.700 --> 09:09.540
重新那一次啊 运行啊 你看他是不是在运行谷歌 说你电脑上必须安装谷歌

09:09.700 --> 09:14.500
如果说你肯定这个东西最重要的在服务器上运行 那服务器也得安装谷歌啊 也得安装crawl

09:15.140 --> 09:18.820
好 那么这里呢 我们打讲好了 对吧 现在我们有两个服务器了啊 一个是low的

09:19.540 --> 09:25.860
在5000端口 一个是6000端口的pray render 好 那么我们现在要去访问谁 访问的是不是6000端口

09:25.940 --> 09:28.900
对吧 访问他 好 咱们来试一下啊 来访问他试一下

09:30.020 --> 09:31.540
好 接下来我们用localhost

09:32.900 --> 09:34.180
呃 6000

09:35.140 --> 09:41.940
6000端口 然后怎么访问呢 是这样子访问的 我们后边呢 要加上一个这么一个东西啊 就Render啊 问号

09:42.740 --> 09:48.260
后边跟上 我们的真实的要访问的服务器地址啊 真实的要访问哪个服务器呢 ADDP

09:48.820 --> 09:56.580
localhost 5000 那么他就相当于一个转发 对吧 他我们访问他的时候呢 告诉他 我真实的要访问这个地方 那么麻烦你

09:56.740 --> 10:02.820
你去帮我们访问这个地址 然后呢 把里边的介石来乱七八糟的东西全部运行出来 然后把运行的结果直接告诉我

10:03.060 --> 10:04.100
好 回车 我们来看一下

10:04.900 --> 10:11.300
哎 出问题了 是吧 呃 我看一下哪里出了问题 哦哦 这里还少写一个啊 地产参数吗啊 还有一个url

10:14.020 --> 10:16.020
刷新 哎 哪里出了问题

10:17.060 --> 10:24.340
呃localhost 6000 render啊 我看一下哪里出了问题

10:25.700 --> 10:31.780
停止 这边 我们改了6000端口 6000端口 我们再来一次啊运行出来

10:32.580 --> 10:39.460
6000啊 6000没问题 刷新 哎 为什么出了这个问题呢 我看一下啊

10:41.060 --> 10:46.740
等一下 我用这种方式来访问 他现在访问不到这个服务器啊 他访问不到这个服务器

10:48.020 --> 10:54.980
前面没写这个吗 不至于吧 呃 6000端口 啊说这个网

10:55.940 --> 10:59.700
我们看这个网页 网页没问题啊 没问题

11:01.140 --> 11:06.500
哎 这个6000端口出了 说6000端口已经占用了吗 我们把它换成6001试一下呢

11:10.560 --> 11:18.660
啊 这里换成6001啊 刚才6000端口可能是占用了啊 可能是占用了

11:18.660 --> 11:24.260
那不对啊 占用了他不需要启动啊 很奇怪啊 我刚才说了什么问题 没关系啊 我们来看一下这里

11:24.420 --> 11:26.980
那么现在呢 我们是6001对吧 那就6001吧

11:27.380 --> 11:30.500
啊 那么现在呢 我们是不是可能拿到结果了 拿到这个服务器反过来结果

11:30.740 --> 11:35.460
那么这些图片呀 这些东西显示不出来 其实这个的时候没关系啊 因为我们还要进行进一步处理的

11:35.700 --> 11:40.740
而且呢 搜索引擎要这些东西也没啥意义 咱们来看一下右键 看一下页面元带嘛

11:41.540 --> 11:44.740
关键看在这 看一下我们能不能拿到这些数据

11:45.940 --> 11:46.740
数据是不拿到了

11:47.620 --> 11:51.620
那么服务器这个服务器是不是直接给我把这些数据响应过来了 对吧 就响应过来了

11:51.940 --> 11:59.620
那么就通过这种方式来完成的 我们请求他 他来帮我们请求他 然后执行介石 然后把执行的结果 页面执行的结果拿给我

12:00.020 --> 12:00.900
那就是pray render

12:01.540 --> 12:07.780
对吧 啊 当然了 他这肯定会导致一些效率问题啊 这是一定的 为什么会导致效率问题呢 因为我们

12:08.260 --> 12:14.820
他要转两次对吧 我要先转给他 他要去执行他 然后他要去执行介石 执行介石 执行完了再把

12:15.220 --> 12:18.980
东西给我 所以他会终转两次 因此效率呢 肯定会发生一些

12:19.780 --> 12:21.380
问题啊 发生一些问题

12:21.860 --> 12:28.580
嗯 然而呢 现在呢 我们刚才在解释一下这个代码啊 在这个代码 这个是个插件啊 插件有什么用呢 他是这样子

12:29.060 --> 12:34.420
这个插件的作用呢 是把我们页面上的介石全部消除掉 你看我们页面上是不是没有一个scripps的元素

12:35.060 --> 12:41.700
对吧 是不是没有scripps元素 那有些同学想问的 那没有scripps元素的 后续客户端怎么来接管渲染的 对吧

12:42.660 --> 12:48.100
兄弟 搞清楚 这个网要根本就不是给用户用的 是专门给seo用的

12:48.420 --> 12:53.460
seo本来就不需要执行介石 对吧 你给他一些介石呢 可能有 因为现在

12:53.940 --> 13:00.900
一些搜索引擎呢 他本身有执行一部分介石的能力 你给他介石呢 反而耽误他的时间啊 不需要他

13:01.220 --> 13:03.780
不需要他只执行介石的 所以这个东西纯粹是给

13:04.500 --> 13:07.940
搜索引擎用的啊 不是给用户访问的 用户访问还是访问的

13:08.340 --> 13:13.380
原来的意思吧 好 那么现在问题是怎么样让搜索引擎访问这个

13:14.340 --> 13:16.020
然后让用户访问这个呢

13:16.900 --> 13:22.260
啊 我们肯定要不能说给他两个地址的话 搜索引擎他肯定要访问用户访问 他要模拟用户嘛

13:22.420 --> 13:28.020
要访问用户访问的页面 说肯定不能给两个地址 肯定要同意一个地址 那么这个时候呢 我就可以用那个

13:28.340 --> 13:29.060
index代理

13:29.460 --> 13:32.980
因为呢 我现在不能确定啊 你们有没有学过那个服务器部署

13:33.300 --> 13:36.980
如果说学过服务器部署的话呢 OK 那这个就很简单了 非常非常简单

13:37.300 --> 13:38.900
就是你搭一个index服务器

13:39.460 --> 13:44.740
我们给他画一个图啊 就是我们普通用户通过浏览器访问的是 访问的是谁 访问的是index

13:44.820 --> 13:52.020
对吧 访问的是他 他去访问谁 他他一看到哦 是普通用户 那我就访问谁了 我就访问逗得服务器 对吧 就是我们这里的

13:52.420 --> 13:59.140
啊 这个逗得服务器 那么逗得服务器是不是给他一个就是客户端渲染的结果 就是一个div id为入词 对吧 让你去宣展

13:59.460 --> 14:02.740
当然他肯定是有白拼问题 对吧 他白拼问题是解决不了的啊

14:03.140 --> 14:09.140
白拼问题是解决不了的 那么只有靠什么cdn 让快速的响应介石啊 然后优化带嘛

14:09.220 --> 14:14.980
然后让他让他执行的效率高一些 说白拼问题解决不了 如果说你还要解决白拼问题 那只能用ssl

14:15.380 --> 14:20.100
只能用我们前两张学的内容啊 他只能是解决seo 他仅解决seo啊

14:20.340 --> 14:27.380
所以说他这里给浏览器的事业还是一个白拼的啊 然后浏览器完成接管客户端的宣展 对吧 这是他的做法

14:28.420 --> 14:37.300
然后呢 如果说他是蜘蛛啊 访问的都是因击人士啊 统一地址 如果说他发现他是一个蜘蛛 那么他就会把他交给这个啊 就是pray render

14:37.780 --> 14:43.460
交给pray render pray render 又去访问的漏的啊 漏的给他结果 然后他完成宣展 对吧 执行界是完成宣展

14:43.540 --> 14:49.380
把宣传结果交给因击人士 因击人士交给蜘蛛 那么蜘蛛呢 拿到的东西呢 他就有内容了 对吧

14:50.500 --> 14:55.380
嗯 我现在不能确定你们有没有学过因击人士啊 所以说呢 我这里呢

14:56.260 --> 15:03.860
我就那这样吧 你就算现在没有学过啊 我建议你呢 你可以看一看啊 后边呢 你学了因击人士呢 再回来看一下就明白了啊

15:04.500 --> 15:10.180
我现在呢 就给大家演示一下吧 怎么来搭这个 现在我们两个服务器已经启动起来了 对吧 两个服务器已经启动起来了

15:10.420 --> 15:12.180
好 那么现在呢 我们还需要个因击人士

15:13.220 --> 15:16.820
我是个温斗室操作系统的因击人士 我是安装在这

15:17.780 --> 15:19.460
我是安装在

15:20.980 --> 15:22.100
我是放在哪儿的呀

15:23.940 --> 15:26.420
不管不是这 software

15:27.140 --> 15:28.260
啊 这里

15:28.980 --> 15:31.540
啊 在这啊 okay 在这啊

15:32.500 --> 15:33.060
power shield

15:33.940 --> 15:36.980
好 那么现在呢 我们来启动啊 启动我们的因击人士 start

15:37.460 --> 15:38.260
啊 因击人士

15:38.900 --> 15:39.620
啊 启动

15:40.420 --> 15:46.500
好 启动完了 好 启动起来了 过后呢 我们现在呢 要去配置一下 因击人士的配置啊

15:46.580 --> 15:48.900
现在呢 其实我们已经可以看到结果了啊

15:49.380 --> 15:50.100
local host

15:50.660 --> 15:51.540
比方说这里

15:57.100 --> 15:57.660
等一下啊

15:58.860 --> 16:01.260
我把 我把那个就是因击人士删了

16:02.700 --> 16:03.740
重新启动一次

16:04.460 --> 16:05.340
重新启动一次

16:08.380 --> 16:08.940
被删了

16:10.540 --> 16:13.500
我说到开机启动了 不是啊 启动了多少个进程了啊

16:14.140 --> 16:16.940
呃 我就再把删了啊 重新来一次 重新启动一次

16:17.340 --> 16:18.940
呃 来 重新启动

16:19.420 --> 16:20.860
好 接下来我们来local host

16:21.660 --> 16:22.220
80

16:22.620 --> 16:23.100
端口

16:23.660 --> 16:27.980
啊 你看 是不是得到一个普通的页面 对吧 因击人士启动起来了啊 我把放到80端口的

16:27.980 --> 16:30.540
那么这个肯定是可以配置的啊 可以配置的

16:30.540 --> 16:33.980
那么这个因击人士呢 我启动在80端口 因为他是一个配置文件啊

16:33.980 --> 16:36.220
他目前访问的是什么呢 目前访问的是这个啊

16:36.220 --> 16:39.980
哈哈 因这个时候啊 这个东西肯定不是我们希望看到的

16:39.980 --> 16:42.460
那么我们现在打开配置啊 我们配置一下这个因击人士

16:43.660 --> 16:44.620
啊 来配置一下

16:45.900 --> 16:47.500
啊 把这个格式调一下吧

16:48.060 --> 16:49.900
应该是因击人士啊 格式调一下

16:50.380 --> 16:53.740
好 那么这里呢 配置怎么配置呢 我们肯定要把这个server肯定要改一下

16:53.740 --> 16:57.260
对吧 把这个server要改一下 改成什么呢 这个配置呢 我给大家都写好了

16:57.820 --> 17:01.100
啊 我没有写好啊 这个地方是一个配置参考啊

17:01.420 --> 17:06.220
就是官方这个prevendor的官方呢 他建议你的配置是什么啊 建议你的配置

17:06.780 --> 17:10.140
呃 在这里 官方这个下面说到一个就是

17:10.140 --> 17:11.580
N1个是啊

17:12.140 --> 17:13.980
这个配置 他推荐你怎么去配置

17:14.300 --> 17:16.700
那么他这里边肯定要改一下啊 肯定要改一下的

17:17.180 --> 17:19.740
我这里呢 把它复制过来啊 我稍微做一下修改

17:20.300 --> 17:25.260
复制一下

17:25.900 --> 17:28.940
复制啊 把这个server呢 去掉啊 这个去掉

17:29.740 --> 17:31.740
然后呢 粘贴过来啊 格式调一下

17:32.140 --> 17:34.060
来 我们来改一下啊 改一下这里边的东西

17:34.620 --> 17:37.900
嗯 监听80端可没问题啊 server name server name 就是nokahost

17:38.220 --> 17:41.340
啊 nokahost 就是我们的主机名啊 这些东西你得

17:41.340 --> 17:44.540
这是一门课啊 这是部署的这门课 我没法太太多解释

17:44.860 --> 17:47.580
拍摄这些东西都不要了啊 不要了 我们没有进台一面

17:48.140 --> 17:48.860
没有进台一面

17:49.180 --> 17:53.980
ok 现在他让我就把请求了uild 地址呢 交给他 交给这个东西来处理

17:54.220 --> 17:56.060
啊 交给这个东西来处理 这个东西设置了一个

17:57.020 --> 17:59.580
变量 对吧 一个变量 从零开始啊 零开始

18:00.060 --> 18:02.460
嗯 你看这里 他在判断了

18:03.100 --> 18:07.740
当我们发现请求头里边啊 就是有一个user agent

18:08.140 --> 18:11.420
请求头一个user agent 表示什么意思啊 用户代理

18:11.740 --> 18:13.020
就是告诉我你是谁

18:13.740 --> 18:14.620
啊 告诉我你是谁

18:15.100 --> 18:15.740
就这么个意思

18:16.220 --> 18:20.220
搜索引擎 他很自觉的 他不会告诉你他是牛郎期的

18:20.620 --> 18:23.260
搜索引擎都很自觉的 他会告诉你他是一个蜘蛛爬虫

18:23.820 --> 18:28.860
啊 他是一个蜘蛛 那么有哪些蜘蛛呢 像谷歌啊 还有什么 我记得这里面还有应该还有百度

18:29.420 --> 18:33.180
百度啊 对吧 那么这些都是蜘蛛 各种常见的搜索引擎他会搞

18:33.180 --> 18:37.340
他会通过这个user agent 这个头啊 消息头来告诉你他是谁

18:37.660 --> 18:41.260
那么如果说匹配到了这个东西 那么我就把这个变量设为1 对吧

18:42.140 --> 18:44.940
那么

18:45.980 --> 18:53.020
下面呢 就是我们往下看啊 这个url呢 如果说如果说你请求的是什么gs啊 css啊 atmr

18:53.020 --> 18:58.140
就像这些普通的文件啊 不是一个页面 那不是页面的话 我就把它设为0 就是一个普通的

18:58.220 --> 19:02.860
总之这个变量呢 如果说他是1啊 这个什么这个什么dns也不要了啊

19:03.900 --> 19:08.300
嗯 如果说他他是1就表示应该使用pre-render 对吧 应该

19:08.860 --> 19:13.500
到哪 看下我们的图啊 如果说他是1这个变量 那么就应该通过这个这条路径

19:13.580 --> 19:18.380
就是应该是应该转发到这 如果说他是0的话 我们转发到这 对吧 我们就做这么一件事

19:18.540 --> 19:22.540
好 那么下面判断啊 如果说他是1的话怎么办呢 一的话我们

19:23.180 --> 19:25.500
啊 我们这里把一些乱七八糟删掉啊 删掉

19:26.380 --> 19:35.100
我们首先重写一下地址 地址重写为什么呢 重写为这个啊 render 对吧 url等于什么呢啊等于啊这个

19:35.820 --> 19:41.580
呃 要要挑到哪呢 要挑到http localhost

19:43.020 --> 19:47.580
localhost 对吧 3000 是不是这样子

19:48.700 --> 19:55.100
5000对不对啊 我们要超到这对吧 后面后面把后续的路径给加上啊 把后续的路径给加上

19:55.740 --> 19:58.460
request 就把这个地方取掉啊 把这个localhost

19:59.340 --> 20:05.020
3000对吧 我们说要超到这对吧 那么后边还有后续的路径 比方我们哪个路径

20:05.260 --> 20:12.620
这些东西加进去 那么如果说啊 他是1就是我们要预选展 那么我们比方说我们访问的英镜式的地址呢是这个

20:12.860 --> 20:18.940
那么我希望他把地址变成这个啊 变成什么了 变成这个 render啊冒号啊

20:20.060 --> 20:24.620
url啊 url 然后等于等于这个

20:26.460 --> 20:31.740
这个对吧 那么我们希望他变成这个样子 如果说我访问的路径是abc

20:32.300 --> 20:34.300
啊 那么他 我希望他变成这个样子

20:35.500 --> 20:39.260
把他变成这个样子 明白这个意思吧 就是这么一个意思 对吧 就是这么一个意思

20:39.500 --> 20:44.700
然后呢 把这个把这个请求交给谁呢 通过一个代理交给谁呢 交给这个localhost

20:45.820 --> 20:48.300
6000 对吧 是不是6000这个端可 交给他

20:49.100 --> 20:52.460
对不对 好 然后呢 我们现在呢 再来啊 如果说

20:53.740 --> 20:59.340
啊 如果说我们是0啊 我们是0的话怎么办呢 我们是0的话 我们就

20:59.900 --> 21:02.780
直接交给5000 对吧 是不是直接交给5000

21:04.900 --> 21:09.940
ok 那咱们这样子呢 就配置完了 对吧 接下来我们把重启一下啊 in this

21:10.660 --> 21:19.140
s reload 重启一下 好 重启一下了 过后我们到流量器里边啊 去请求 现在我们就直接请求我们的 in这个室了 对吧 请求localhost

21:20.100 --> 21:24.580
好 你看 那么客户端这一边 是不是搞定了 对不对 客户端这边就搞定了

21:24.820 --> 21:30.180
那你看客户端这边呢 达到的就是一个客户端炫耳的东西 没有任何东西啊 只有一个id为入持的dv

21:30.420 --> 21:35.940
对吧 那么我们看一下这里 客户端流量器请求因净是因净和直接拿到load的啊 直接给他结果 对吧

21:36.900 --> 21:42.980
ok 那么我们再看一下蜘蛛啊 蜘蛛这里我们怎么办呢 我们只能用postman来模拟啊 来模拟

21:44.020 --> 21:51.140
好 到postman里边去 我们打开一个请求地址啊localhost还是请求因净式啊 还是请求因净式啊 就请求守验嘛

21:51.700 --> 21:59.060
然后呢 我们来给他一些header 因为我们蜘蛛的话 他有 我们先把一个基本header 加上啊except啊 这个什么text

22:00.740 --> 22:09.700
哎 停 没有啊 把这东西给加上 关键是这个user agent 那么蜘蛛呢 他会给他一个user agent啊 比方说这里呢 我们随便找一个user agent嘛

22:09.940 --> 22:14.580
比如说谷歌 我们来模拟一下谷歌 爬虫 那么他在请求我们的页面的时候呢 我们发送

22:15.940 --> 22:18.900
那么他就会拿到一个服务端炫耳的结果 就是拿到这个

22:19.540 --> 22:23.540
你一个时候会交给他 他去拿到的里边东西 对吧 好 这么来看一下

22:24.500 --> 22:25.620
哎 出问题了

22:27.140 --> 22:35.300
呃 我看一下 哦 这个端口有问题啊 这个端口 这里是5000 哦 这里好像是66001 是吧 我看一下

22:37.390 --> 22:43.710
哦 对 6001啊 把改成6001 然后这里是5000啊 ok 那么现在保存一下啊 我们再来

22:44.270 --> 22:45.870
呃 这里重新启动一下inus

22:46.830 --> 22:49.870
重新启动 好 到过来啊 再来请求

22:50.590 --> 22:57.550
然后你看 这边如果说蜘蛛的话 他拿到了结果是什么 是不是就有一个完整的结果的页面了 对吧

22:57.550 --> 22:59.790
所以说aseo 同样的一个地址

23:00.590 --> 23:05.870
蜘蛛来请求的话就请求的是他 那慢一点就慢一点 肯定是要比我们页面上请求要慢

23:06.030 --> 23:10.910
然后呢 我们请求的时候呢 就请求到的是啊 一个正常的客户端炫耳的结果

23:11.470 --> 23:16.990
是吧 ok 那么这是也是一种解决办法 中解办法要比这个ssr 是不是要简单太多了

23:16.990 --> 23:19.310
对吧 简单太多了 他解决不了白平问题

23:19.950 --> 23:26.590
但是呢 他能解决aseo的问题 那么以后呢 到公司里边看看具体情况吧 具体情况选择具体的技术

23:27.310 --> 23:33.150
当然这些这些方式呢 也不是你一选的啊 一般一开始的肯定你做不了主

23:33.710 --> 23:39.870
停公司安排吧 那么你看到过这些方式之后呢 你会发现以后呢 不管他用什么样的方式来

23:40.110 --> 23:42.590
处理呢 你都至少你做过的 对吧 你不慌了

23:43.230 --> 23:49.310
好了 那咱们这门客ssr就到此结束了啊 希望对同学们有些帮助啊 有些收获 拜拜

