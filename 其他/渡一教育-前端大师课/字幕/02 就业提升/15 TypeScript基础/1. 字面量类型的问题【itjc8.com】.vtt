WEBVTT

00:01.200 --> 00:04.800
Hello 大家好 我是独一教育 未保钱专奖师 元静

00:04.800 --> 00:07.500
这一课 咱们继续来学习TS

00:07.500 --> 00:12.200
上年课中呢 我们已经学过了TS的很多的基本内容了

00:12.200 --> 00:14.600
一些常见的操作呢 也讲到了

00:14.600 --> 00:19.800
其实有了上年课的知识呢 我们在开发一个普通的应用的时候

00:19.800 --> 00:23.400
绝大部分常见下都已经够用了 已经够用了

00:23.400 --> 00:26.000
那为什么还要有学习后边的知识呢

00:26.000 --> 00:29.800
后边的知识呢 是解决很多的一些特殊情况

00:30.100 --> 00:34.200
已经优化前面的一些代码 主要是出于这么一些目的

00:34.200 --> 00:38.400
后边呢 我们主要是讲扩展内容 主要是讲扩展内容

00:38.400 --> 00:41.800
扩展内容呢 就是说 我们自己去开发一些内容

00:41.800 --> 00:44.800
TS里面给你提供的内容不够用了 不够了

00:44.800 --> 00:47.000
我们要自己去开发一些内容

00:47.000 --> 00:50.900
那么扩展内容有哪些呢 先跟大家说一下啊 预告一下

00:50.900 --> 00:54.000
咱们的扩展内容呢 包含这么一些

00:54.000 --> 00:58.700
一个是咱们上节课学习的内容别名

00:58.700 --> 01:00.600
你看 我们上节课学习的内容别名

01:00.600 --> 01:02.900
是不是自己做了一个新的内容出来 对不对

01:02.900 --> 01:04.500
给他取了个名字

01:04.500 --> 01:07.700
好 然后呢 是包含这节课的美举

01:07.700 --> 01:12.700
已经包含后边课程的接口和内

01:12.700 --> 01:18.600
这些呢 都属于扩展内容 就是你自己去开发出来的一些内容

01:18.600 --> 01:21.900
好 我们这节课呢 学习的是美举

01:21.900 --> 01:25.500
其实呢 如果你接触过后端开发

01:25.500 --> 01:28.900
比方说加瓦 比方说这些语言

01:28.900 --> 01:32.000
它里面都有美举 你对美举的话不会陌生

01:32.000 --> 01:33.900
那如果你没有接触过美举

01:33.900 --> 01:36.200
没有接触过后端语言也没关系

01:36.200 --> 01:39.200
这节课听我讲你就明白了什么叫美举

01:39.200 --> 01:41.300
美举是什么意思呢

01:41.300 --> 01:44.200
就相当于是字面的意思

01:44.200 --> 01:46.500
把一个东西一个东西挪裂出来

01:46.500 --> 01:50.500
就是美举 那么美举它用来做什么呢

01:50.500 --> 01:55.500
美举通常用于约束某个变量

01:55.500 --> 01:58.900
当然可以约束变量也可以约束参数

01:58.900 --> 02:02.500
也可以约束 喊数的返回值都是一样的

02:02.500 --> 02:06.600
它可以约束某一个变量的取值范围

02:06.600 --> 02:08.900
它是来做这么一件事的

02:08.900 --> 02:11.000
你看很多变量它都有取值范围

02:11.000 --> 02:13.900
咱们上节课开发的练习那个花色

02:13.900 --> 02:17.200
对吧 四种情况 是不是一个取值范围

02:17.200 --> 02:19.300
我们开发一个游戏的时候

02:19.300 --> 02:22.600
比如说坦克大干 坦克不是有方向吗

02:22.600 --> 02:25.900
上下左右 是不是有取值范围

02:25.900 --> 02:27.800
咱们开发一个应用的时候

02:27.800 --> 02:30.600
很多时候都有用户 有性别

02:30.600 --> 02:33.500
性别是不是只能取值为男或者是女

02:33.500 --> 02:35.000
也是一个取值范围

02:35.000 --> 02:38.800
像那种取值范围就可以使用美举

02:38.800 --> 02:42.600
讲到这有些同学可能会回忆到

02:42.600 --> 02:45.400
讲课的时候要多去回忆以前的知识

02:45.400 --> 02:47.200
有些同学可能就会回忆到

02:47.300 --> 02:50.500
咱们上节课也遇到了性别

02:50.500 --> 02:53.000
也遇到了不同的花色

02:53.000 --> 02:54.600
铺盖牌不同的花色

02:54.600 --> 02:56.800
那么当时我们是怎么处理的呢

02:56.800 --> 02:59.400
当时我们是使用字面量

02:59.400 --> 03:02.000
配合联合类型来处理的

03:02.000 --> 03:04.100
比方说

03:04.100 --> 03:06.400
我们定一个变量

03:06.400 --> 03:07.900
间断

03:07.900 --> 03:09.300
给它进行约束

03:09.300 --> 03:12.100
男或者是女

03:12.100 --> 03:15.300
你看是不是字面量配合联合类型

03:15.300 --> 03:17.100
就可以完成这样的约束

03:17.800 --> 03:20.700
字面量类型和联合类型配合起来

03:20.700 --> 03:23.500
也可以达到同样的目的

03:23.500 --> 03:26.900
因此不是说只有美剧才能做这件事情

03:26.900 --> 03:31.700
字面量和联合类型

03:31.700 --> 03:33.700
配合使用

03:33.700 --> 03:38.000
也可以达到同样的目的

03:38.000 --> 03:41.000
也可以约束一个变量的取值范围

03:41.000 --> 03:42.700
那么这两者有什么区别呢

03:42.700 --> 03:44.200
他们肯定是有区别的

03:44.200 --> 03:47.200
咱们这些课呢会详细的来研究

03:47.200 --> 03:48.800
我们首先看一下

03:48.800 --> 03:51.100
之所以要整一个美剧出来

03:51.100 --> 03:53.400
如果字面量和联合类型

03:53.400 --> 03:54.700
它已经完全够用的话

03:54.700 --> 03:55.900
就不需要美剧了

03:55.900 --> 03:57.400
那么一定是他们遇到了问题

03:57.400 --> 04:00.500
才需要这个美剧的这么一个扩展类型出来

04:00.500 --> 04:01.300
什么问题的

04:01.300 --> 04:02.500
我们第一部分

04:02.500 --> 04:04.900
现在研究

04:04.900 --> 04:08.200
字面量类型的问题

04:08.200 --> 04:09.700
它的问题在哪

04:09.700 --> 04:10.900
好我们比方说

04:10.900 --> 04:12.700
举个例子

04:12.700 --> 04:14.000
第一个例子

04:14.100 --> 04:16.100
就是这里有个性别

04:16.100 --> 04:16.700
性别呢

04:16.700 --> 04:18.200
我们到时候复制的时候呢

04:18.200 --> 04:21.200
他只能复制为要么为男

04:21.200 --> 04:23.000
然后要么为女都可以

04:23.000 --> 04:24.200
但是不能复制为其他字

04:24.200 --> 04:25.700
已经得到余输了

04:25.700 --> 04:27.500
好大家想想这么个场景

04:27.500 --> 04:28.900
我写这么一个函数

04:28.900 --> 04:31.000
这个函数的名字叫Gate users

04:31.000 --> 04:33.500
表示查询用户

04:33.500 --> 04:34.300
或者叫这样子吧

04:34.300 --> 04:34.800
这样子

04:34.800 --> 04:36.400
12起 users

04:36.400 --> 04:38.700
查询很多用户

04:38.700 --> 04:40.700
这里面要根据条件

04:40.700 --> 04:41.600
条件是什么呢

04:41.700 --> 04:45.100
我要按照性别来查询用户

04:45.100 --> 04:46.900
于是这里有个参数

04:46.900 --> 04:48.300
参数啥类型

04:48.300 --> 04:49.600
参数是不是性别

04:49.600 --> 04:50.900
性别是啥

04:50.900 --> 04:52.500
字面量约束

04:52.500 --> 04:55.000
男或者是女

04:55.000 --> 04:56.700
大家看到问题没

04:56.700 --> 04:59.100
问题在于我们这里的代码呢

04:59.100 --> 05:01.700
会导致重复的苏醒

05:01.700 --> 05:02.300
因此呢

05:02.300 --> 05:03.000
字面量类型

05:03.000 --> 05:05.200
你看在类型约束的位置

05:05.200 --> 05:07.000
你这个类型约束的位置

05:07.000 --> 05:08.500
这个地方是在约束

05:08.500 --> 05:10.100
这个地方也是在约束

05:10.100 --> 05:11.400
在约束的位置

05:11.400 --> 05:13.500
会产生重复的代码

05:13.500 --> 05:13.700
好

05:13.700 --> 05:15.100
第一个问题

05:15.100 --> 05:17.900
在类型约束位置

05:17.900 --> 05:21.900
会产生重复代码

05:21.900 --> 05:24.800
相信我讲到这啊

05:24.800 --> 05:27.700
很多同学已经安慰不住了

05:27.700 --> 05:29.400
已经要举手发言了

05:29.400 --> 05:31.300
因为他知道我们上

05:31.300 --> 05:32.400
上节课呢

05:32.400 --> 05:33.700
讲到了一个东西

05:33.700 --> 05:35.900
叫做类型别名

05:35.900 --> 05:36.700
类型别名

05:36.700 --> 05:38.300
是不是可以解决这个问题

05:38.300 --> 05:39.100
他可以解决

05:39.100 --> 05:40.500
确实他可以解决

05:40.600 --> 05:42.000
我们来写个类型别名

05:42.000 --> 05:42.400
间断

05:44.000 --> 05:45.500
我们把这个类型呢

05:45.500 --> 05:47.300
放到这个类型别名里面

05:47.300 --> 05:48.700
给他取个名字

05:48.700 --> 05:49.400
间断

05:49.400 --> 05:51.200
后面我们就可以使用这个间断

05:51.200 --> 05:52.200
来进行约束了

05:52.200 --> 05:53.100
看没

05:53.100 --> 05:55.200
可以通过这种方式来进行约束了

05:55.200 --> 05:55.600
所以说

05:55.600 --> 05:58.100
这个问题是可以得到解决的

05:58.100 --> 06:02.800
可以使用类型别名解决该问题

06:04.300 --> 06:04.900
但是呢

06:04.900 --> 06:06.200
其他问题

06:06.200 --> 06:08.700
类型别名就不太容易解决了

06:08.700 --> 06:10.200
我们再看下一个问题

06:11.200 --> 06:13.000
下一个问题呢

06:13.000 --> 06:15.700
可能不是那么容易理解

06:15.700 --> 06:16.900
我们先写

06:16.900 --> 06:17.700
写了过后呢

06:17.700 --> 06:19.000
我再详细解释

06:19.000 --> 06:20.700
大家不太容易想到

06:20.700 --> 06:21.800
这是有什么问题呢

06:22.800 --> 06:25.400
是表示逻辑名称

06:26.800 --> 06:29.100
和真实的值

06:31.900 --> 06:33.000
产生了混淆

06:33.900 --> 06:34.900
产生了混淆

06:36.300 --> 06:38.300
会导致一个什么结果呢

06:38.300 --> 06:39.600
会导致

06:39.600 --> 06:43.200
当修改真实值的时候

06:43.200 --> 06:44.200
值的时候

06:46.000 --> 06:49.600
产生大量的修改

06:49.600 --> 06:49.900
好

06:49.900 --> 06:50.900
这个是什么意思

06:50.900 --> 06:52.200
虽然看这句话

06:52.200 --> 06:53.400
我总结出来这句话

06:53.400 --> 06:54.600
不太容易理解

06:54.600 --> 06:55.800
但是我给大家举个例子

06:55.800 --> 06:56.600
你就明白了

06:56.600 --> 06:57.600
马上就明白了

06:58.800 --> 06:59.600
假设

06:59.600 --> 07:02.100
我这里盯了盯了这么一个类型别名

07:02.100 --> 07:03.100
他要么取之为男

07:03.100 --> 07:04.400
要么取之为女

07:04.400 --> 07:06.600
咱们程序里边有很多很多地方

07:06.600 --> 07:08.200
都要给性别复职

07:08.300 --> 07:09.500
那么复职为男

07:09.500 --> 07:10.000
复职为女

07:10.000 --> 07:10.300
对吧

07:11.300 --> 07:12.700
将来有一天

07:12.700 --> 07:14.600
突然你的项目经历

07:14.600 --> 07:16.100
或者你的产品经历

07:16.100 --> 07:17.200
不知道抽什么风

07:17.200 --> 07:19.900
他说叫男和女这样子

07:19.900 --> 07:21.200
显得太熟了

07:21.200 --> 07:22.800
没有档次

07:22.800 --> 07:24.400
我们换一个名字边

07:24.400 --> 07:26.000
咱们来换一个帅哥

07:28.700 --> 07:29.300
帅哥

07:29.300 --> 07:31.100
然后这里换成美女

07:31.100 --> 07:32.300
这个都舒服对吧

07:33.500 --> 07:34.200
他觉得没问题

07:34.200 --> 07:35.400
好让你去修改

07:35.400 --> 07:36.700
把这里换成帅哥

07:36.700 --> 07:38.100
换成美女

07:38.100 --> 07:39.800
这样你是不是疯了

07:39.800 --> 07:42.600
你要把它这个程序想象成有几万行

07:42.600 --> 07:43.200
几十万行

07:43.200 --> 07:44.900
300万行的程序的话

07:44.900 --> 07:46.000
你就疯了

07:46.000 --> 07:48.200
因为你这里面全用的是字面量

07:48.200 --> 07:50.200
男和女来表示的

07:50.200 --> 07:52.200
你这些地方全部要跟着改

07:52.200 --> 07:54.600
因为你这里改了过后全部要跟着改

07:54.600 --> 07:56.700
就导致了一大堆的重复修改

07:58.000 --> 08:00.300
为什么会产生这样的问题呢

08:00.300 --> 08:02.000
究其根源就在于

08:03.100 --> 08:05.400
他把真实的纸

08:05.400 --> 08:08.500
和逻辑名称混小战的意气

08:08.500 --> 08:10.100
啥意思

08:10.100 --> 08:13.100
我这里的曲直是帅哥美女

08:13.100 --> 08:15.500
这是真实的纸

08:15.500 --> 08:17.300
他可以曲直为帅哥美女

08:17.300 --> 08:19.400
还可以曲直为很多很多的情况

08:19.400 --> 08:23.700
比方说先生女士

08:23.700 --> 08:24.200
对吧

08:24.200 --> 08:26.900
或者是男女

08:26.900 --> 08:28.500
或者是 male

08:28.500 --> 08:29.800
或者是 female

08:29.800 --> 08:31.600
他可以有很多很多的情况

08:31.600 --> 08:33.100
这是真实的纸

08:33.100 --> 08:35.800
真实的纸是多变的

08:35.800 --> 08:38.600
但是逻辑含义是不是一样的

08:38.600 --> 08:40.500
无论是帅哥先生男

08:40.500 --> 08:42.300
没有是不是一个含义

08:42.300 --> 08:46.100
都表示生物学上的性别难

08:46.100 --> 08:47.100
而这边美女

08:47.100 --> 08:48.800
无论是女士女

08:48.800 --> 08:49.600
还有female

08:49.600 --> 08:51.500
是不是完全一样的逻辑含义

08:51.500 --> 08:52.800
这是逻辑含义

08:52.800 --> 08:54.400
我这里用逻辑含义比较好

08:57.100 --> 08:59.100
使用字面量类型的时候

08:59.100 --> 09:01.500
他会导致逻辑含义

09:01.500 --> 09:05.100
跟他真实的纸是完全对应的

09:05.100 --> 09:06.600
他没有一个逻辑含义

09:06.600 --> 09:08.900
没有一个逻辑含义抽象出来

09:08.900 --> 09:10.200
明白这个意思吧

09:10.200 --> 09:12.400
这些含义是完全一样的

09:12.400 --> 09:13.900
但是我复纸的时候

09:13.900 --> 09:16.400
只能复纸为真实的纸

09:16.400 --> 09:17.900
他会有这个问题

09:17.900 --> 09:20.000
那么根源在于这

09:20.000 --> 09:22.200
他没有把逻辑的含义

09:22.200 --> 09:24.900
和真实的纸分开

09:24.900 --> 09:27.100
没有分开就导致了这个问题

09:27.100 --> 09:29.000
当我要修改这个纸的时候

09:29.000 --> 09:31.900
他的逻辑意识没有发生任何变化

09:31.900 --> 09:33.600
逻辑意识还是这个意识

09:33.600 --> 09:34.600
还是难

09:34.600 --> 09:37.100
但是他的真实的纸发生变化了

09:37.100 --> 09:39.300
导致了我们大量的修改

09:39.300 --> 09:41.200
这个问题不是靠

09:41.200 --> 09:43.000
类型别名能解决的

09:43.000 --> 09:44.900
不是靠他能解决的

09:44.900 --> 09:46.600
这是这个问题

09:46.600 --> 09:48.500
还有第三个问题

09:48.500 --> 09:50.900
第三个问题是什么问题呢

09:50.900 --> 09:55.000
就是字面量类型

09:55.000 --> 09:58.800
不会进入到编义结果

09:58.800 --> 10:00.700
我们对他进行编义的时候

10:00.700 --> 10:02.900
我们之前演示过

10:02.900 --> 10:05.400
编义完成之后

10:05.400 --> 10:09.400
这些类型全部消失

10:09.400 --> 10:10.400
也就是说

10:10.400 --> 10:12.100
如果我要动态的读取

10:12.100 --> 10:13.900
比方说我读一下

10:13.900 --> 10:15.900
读一下我们这个系统里边

10:15.900 --> 10:17.400
有哪些

10:17.400 --> 10:18.400
有哪些曲子

10:18.400 --> 10:19.700
就是性别有哪些曲子

10:19.700 --> 10:21.100
我要把它显示到页面上

10:21.100 --> 10:23.500
动态的读取显示到页面上的时候

10:23.500 --> 10:24.700
这个时候办不到了

10:24.700 --> 10:26.300
因为在编义结果里边

10:26.300 --> 10:27.500
在运行的过程中

10:27.600 --> 10:29.600
我们已经丢失了这个信息

10:29.600 --> 10:31.300
我们知道运行的时候

10:31.300 --> 10:32.500
它运行的是什么

10:32.500 --> 10:34.500
运行的是GS

10:34.500 --> 10:35.700
运行的不是TS

10:35.700 --> 10:37.300
TS是不参与运行的

10:37.300 --> 10:38.800
它只参与编义

10:38.800 --> 10:39.500
编义完成过后

10:39.500 --> 10:41.700
就已经变成了一个存介式的代码

10:41.700 --> 10:43.500
运行的时候运行的是GS

10:43.500 --> 10:45.000
而这些信息

10:45.000 --> 10:47.800
在运行的时候已经丢失掉了

10:47.800 --> 10:49.800
我们无法动态的循环

10:49.800 --> 10:51.300
我们看一下我们目前

10:51.300 --> 10:53.100
设置的性别有哪些

10:53.100 --> 10:54.700
把循环显示到页面上

10:54.700 --> 10:55.500
做不到

10:55.500 --> 10:56.500
你做不到

10:56.500 --> 10:58.300
比方说这里是撲克牌的花色

10:58.300 --> 11:00.700
我们要把花色循环显示出来

11:00.700 --> 11:01.900
你做不到

11:01.900 --> 11:04.400
因此它就会有这么三个问题

11:04.400 --> 11:05.400
第一个问题

11:05.400 --> 11:09.100
字面两个内情别名可以解决

11:09.100 --> 11:11.200
后边两个问题解决不了了

11:11.200 --> 11:13.400
内情别名是无法解决的

11:13.400 --> 11:15.200
那么这两个问题怎么来解决呢

11:15.200 --> 11:17.800
就需要靠我们的美具

11:17.800 --> 11:21.100
所以首先大家要了解

11:21.100 --> 11:22.500
我们用字面量

11:22.500 --> 11:25.000
配合联合内情来使用的时候

11:25.100 --> 11:27.400
是可以达到约束范围的目的

11:27.400 --> 11:29.500
还可以配合内情别名

11:29.500 --> 11:32.300
但是有这么两个问题得不到解决

11:32.300 --> 11:34.800
如果这两个问题对你很重要

11:34.800 --> 11:36.300
你必须要解决的话

11:36.300 --> 11:38.500
那么建议你使用美具

11:38.500 --> 11:41.600
美具就可以完美的解决这两个问题

11:41.600 --> 11:43.800
OK 先搞清楚第一个部分

11:43.800 --> 11:45.300
字面量内情的问题

11:45.300 --> 11:46.800
我们再来说美具

