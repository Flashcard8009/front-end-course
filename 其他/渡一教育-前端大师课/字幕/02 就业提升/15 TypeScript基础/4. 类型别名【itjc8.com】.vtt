WEBVTT

00:00.820 --> 00:04.660
OK 接下来呢 我们来看另外一个概念

00:04.660 --> 00:07.020
这个概念呢 用的蛮多的

00:07.020 --> 00:10.460
叫做内询别名

00:10.460 --> 00:12.780
内询别名

00:12.780 --> 00:15.660
什么意思呢 回来看一下

00:15.660 --> 00:20.660
在刚才我们书写代码的时候呢 书写过这么一段代码

00:20.660 --> 00:23.020
就是定一个辩量

00:23.020 --> 00:27.620
这个辩量呢 给他进行约束 约束为一个对象

00:27.820 --> 00:29.020
字面量嘛

00:29.020 --> 00:33.420
然后这个对象里边呢 要有姓名 指幅圈

00:33.420 --> 00:36.820
要有年年 男本

00:36.820 --> 00:41.020
甚至呢 还要有姓别 姓别 比方说

00:41.020 --> 00:44.820
男 字面量约束 或者是女

00:44.820 --> 00:47.020
要有这么三个属性

00:47.020 --> 00:50.420
他是一个对象 这个对象里边 必须要有这么三个属性

00:50.420 --> 00:52.820
而且内询呢 给他进行约束了

00:52.820 --> 00:55.420
接下来呢 有可能会发生这么一件事

00:55.420 --> 00:57.420
我写这么一个函数

00:57.620 --> 01:01.220
这个函数呢 该取个名字叫做getusers

01:01.220 --> 01:05.420
得到所有的用户 得到所有的用户 没有参数

01:05.420 --> 01:07.820
这个函数的返回指呢

01:07.820 --> 01:10.020
返回指呢 它可能是这样子的

01:10.020 --> 01:13.220
是一个用户的数组 问题来了

01:13.220 --> 01:15.820
用户的数组我该咋写呢 问题是

01:15.820 --> 01:18.220
我该咋书写这个用户的数组呢

01:18.220 --> 01:20.820
我只能牢牢实实的

01:20.820 --> 01:22.920
我们看一下 之前用户 这个数字怎么写的

01:22.920 --> 01:26.020
Number对吧 一个数组 这是个数字的数组

01:26.220 --> 01:27.720
这种写法 没问题

01:27.720 --> 01:30.820
我这里为了让它不爆出 返回一个空数数

01:30.820 --> 01:32.820
这样子写法没问题

01:32.820 --> 01:35.120
如果这个数组的每一项不是一个数字

01:35.120 --> 01:37.020
而是一个对象怎么办呢

01:37.020 --> 01:40.320
没关系 把这个对象直接写过来

01:40.320 --> 01:43.220
可以 没问题的 把这个对象直接写过来

01:43.220 --> 01:45.720
但是觉得这个代码丑不丑

01:45.720 --> 01:48.020
先不说丑不丑的问题了

01:48.020 --> 01:50.220
你这里是不是有重复代码

01:50.220 --> 01:52.420
将来如果我对这个用户的内型

01:52.420 --> 01:54.420
可能要做一些稍微的改动

01:54.420 --> 01:57.420
或者是增加一个属性 或者是减少一个属性

01:57.420 --> 02:00.420
或者是对某一个属性的内型做一些变动的时候

02:00.420 --> 02:01.920
是不是到处要改

02:01.920 --> 02:04.020
有很多地方都可能要改

02:04.020 --> 02:07.120
因为我们的系统里面可能会到处要用到

02:07.120 --> 02:08.920
用户这个内型

02:08.920 --> 02:11.120
因此我们最好的做法是

02:11.120 --> 02:13.220
把这个内型提出来

02:13.220 --> 02:16.020
把这个内型的代码提出来

02:16.020 --> 02:17.220
形成一个什么呢

02:17.220 --> 02:19.520
形成一个名称 给它取个名字

02:19.520 --> 02:21.020
比方说这个东西

02:21.020 --> 02:22.520
这个内型就叫做用户

02:22.520 --> 02:24.320
给它取个这么一个名字

02:24.320 --> 02:27.420
那么这个名字就是内雄别秘

02:27.420 --> 02:28.620
内雄别秘

02:28.620 --> 02:30.720
内雄别秘的作用是什么

02:30.720 --> 02:38.220
对已知的一些内雄定义名称

02:38.220 --> 02:40.520
就是内雄别秘 非常非常简单

02:40.520 --> 02:41.820
好 怎么来定义呢

02:41.820 --> 02:45.520
与法规则是 与法规则是这样子的

02:45.520 --> 02:46.820
Type

02:46.820 --> 02:50.820
然后里边写上内雄名称

02:50.820 --> 02:52.220
内雄名称

02:52.320 --> 02:55.220
然后等于后面写具体的东西

02:55.220 --> 02:56.320
到底是一个什么内雄

02:56.320 --> 02:57.920
具体往后面写

02:57.920 --> 03:01.320
因此在这边我们可以用这种方式来做

03:01.320 --> 03:03.720
定一个Type

03:03.720 --> 03:05.920
好 里面给它取个名字

03:05.920 --> 03:08.520
U字 取个名字

03:08.520 --> 03:11.720
然后给它复制为内雄

03:11.720 --> 03:13.520
给它复制为内雄

03:13.520 --> 03:16.620
好 那么现在这个名字U字就表示的是什么

03:16.620 --> 03:18.920
表示的是这个字面让内雄

03:18.920 --> 03:20.420
就表示这个内雄了

03:20.520 --> 03:22.720
接下来我们就可以使用这个名字

03:22.720 --> 03:23.920
在这里进行约束

03:23.920 --> 03:25.520
U必须是一个用户

03:25.520 --> 03:26.720
而这里呢

03:26.720 --> 03:28.320
必须是一个用户对象

03:28.320 --> 03:30.520
后边代码就会非常非常的简洁了

03:30.520 --> 03:31.720
我们来试一下

03:31.720 --> 03:34.720
给U复制的时候

03:34.720 --> 03:36.720
那么就必须要有内名

03:36.720 --> 03:37.720
你看它有提示的

03:37.720 --> 03:38.820
内名是一个什么内雄

03:38.820 --> 03:40.920
字符串 写书写

03:40.920 --> 03:42.020
然后呢

03:42.020 --> 03:43.720
间断 性别

03:43.720 --> 03:44.720
什么内情呢

03:44.720 --> 03:47.020
必须是男 或者是女

03:47.020 --> 03:49.920
然后呢 什么A级

03:49.920 --> 03:52.720
必须是一个数字没问题

03:52.720 --> 03:55.120
这就是通过内雄别名的好处

03:55.120 --> 03:56.320
我们就不用去重复的

03:56.320 --> 03:58.520
去书写一些内雄了

03:58.520 --> 04:00.520
甚至说我们还可以进行组合

04:00.520 --> 04:01.620
比方说这里

04:01.620 --> 04:04.520
我们可以把性别这个单独提出来

04:04.520 --> 04:06.320
形成一个内雄 间断

04:06.320 --> 04:07.220
间断等于什么呢

04:07.220 --> 04:11.120
等于男 或者是女

04:11.120 --> 04:12.620
把这个东西提出来

04:12.620 --> 04:13.520
于是这个地方

04:13.520 --> 04:15.720
我们也不需要写这个东西了

04:15.720 --> 04:17.420
写这个玩意就行了

04:17.420 --> 04:18.320
好处在哪

04:18.320 --> 04:21.120
好处在于我们将来查询用户的时候

04:21.120 --> 04:23.520
有可能要传一个性别进来

04:23.520 --> 04:25.120
要传一个性别纪

04:25.120 --> 04:25.820
传进来

04:25.820 --> 04:27.020
那么它是什么内雄

04:27.020 --> 04:28.820
它是间断

04:28.820 --> 04:30.220
那么调用这个函数的时候

04:30.220 --> 04:31.720
传的是什么

04:31.720 --> 04:33.820
它只是给它取了一个名字叫间断

04:33.820 --> 04:37.220
实际上本质上相当于是把这个玩意

04:37.220 --> 04:38.720
放到了这个位置

04:38.720 --> 04:40.120
明白这个意思了

04:40.120 --> 04:41.220
因此我们当时到时候

04:41.220 --> 04:42.620
调用这个函数的时候

04:42.620 --> 04:43.820
该是游热式

04:43.820 --> 04:44.820
要传啥

04:44.920 --> 04:46.620
传的就是男或者是女

04:46.620 --> 04:48.120
因为这个内雄别名

04:48.120 --> 04:51.920
它就是两个字面量的联合内雄

04:51.920 --> 04:52.820
对吧

04:52.820 --> 04:54.420
这就是内雄别名的好处

04:54.420 --> 04:55.720
防止我们去重复的

04:55.720 --> 04:58.120
去书写一些内雄的代码

04:58.120 --> 04:59.920
当然跟之前一样

04:59.920 --> 05:01.720
跟之前一样

05:01.720 --> 05:03.620
这里的东西呢

05:03.620 --> 05:05.920
这里的内型关于内型的所有东西

05:05.920 --> 05:08.220
在编译结果里面都是不存在的

05:08.220 --> 05:09.220
都是不存在的

05:09.220 --> 05:11.520
咱们来看一下吧

05:11.520 --> 05:12.920
停止

05:13.520 --> 05:15.020
TSC进行编译

05:15.020 --> 05:17.020
完成编译

05:17.020 --> 05:18.020
编译完了过后

05:18.020 --> 05:20.020
我们来看一下编译的结果

05:22.020 --> 05:22.920
编译结果里面

05:22.920 --> 05:24.520
内型别名是不是全都没了

05:24.520 --> 05:26.020
所有的内型约束全都没了

05:26.020 --> 05:27.420
它不到编译结果

05:27.420 --> 05:29.320
编译结果里面是没有的

05:29.320 --> 05:30.520
这是关于内型别名

05:30.520 --> 05:32.820
很多时候非常非常有用

05:32.820 --> 05:34.020
这一块大家要学会

