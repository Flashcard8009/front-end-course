WEBVTT

00:00.820 --> 00:02.820
好 我来补充一个知识吧

00:02.820 --> 00:04.820
这个知识呢

00:04.820 --> 00:06.820
是一个关键字 叫做

00:06.820 --> 00:08.820
red only 这个关键字

00:08.820 --> 00:10.820
这个关键字

00:10.820 --> 00:12.820
这个关键字用来做什么呢

00:12.820 --> 00:14.820
它是一个修饰服

00:14.820 --> 00:16.820
咱们应该是第一次在

00:16.820 --> 00:18.820
TS里面接触到修饰服

00:18.820 --> 00:20.820
修饰服呢 后面我们在

00:20.820 --> 00:22.820
学习内的时候 还会接触一些

00:22.820 --> 00:24.820
修饰服 还会接触一些

00:24.820 --> 00:26.820
那么这是咱们第一次接触

00:26.820 --> 00:28.820
好 我们来看一下啊 修饰服

00:28.820 --> 00:30.820
可以修饰一些内行

00:30.820 --> 00:32.820
可以修饰一些内的属性

00:32.820 --> 00:34.820
它是用来取些修饰效果的

00:34.820 --> 00:36.820
给它附加一些信息

00:36.820 --> 00:38.820
这是一个

00:38.820 --> 00:40.820
叫做指读修饰服

00:40.820 --> 00:42.820
它表示什么意思

00:42.820 --> 00:44.820
修饰的成员

00:44.820 --> 00:46.820
修饰的目标或者叫做

00:46.820 --> 00:48.820
修饰的目标是指读的

00:48.820 --> 00:50.820
不能改一些

00:50.820 --> 00:52.820
你不能更改它是指读的

00:52.820 --> 00:54.820
好 咱们来看一下这个修饰服

00:54.820 --> 00:56.820
有哪些用法

00:56.820 --> 00:58.820
有哪些用法

00:58.820 --> 01:00.820
比方说

01:00.820 --> 01:02.820
咱们这里写一个

01:02.820 --> 01:04.820
接口

01:04.820 --> 01:06.820
interface

01:06.820 --> 01:08.820
当然写内行别名也可以啊

01:08.820 --> 01:10.820
写接口呢 我们还是定一个用户吧

01:10.820 --> 01:12.820
这个用户里边呢 有一个

01:12.820 --> 01:14.820
ID这个属性

01:14.820 --> 01:16.820
它是一个制服创

01:16.820 --> 01:18.820
它表示唯一编号

01:18.820 --> 01:20.820
然后用户有新名 制服创

01:20.820 --> 01:22.820
随便写

01:22.820 --> 01:24.820
有这么一个用户对象

01:24.820 --> 01:26.820
然后呢 我们后边

01:26.820 --> 01:28.820
建立一个用户对象之后呢

01:28.820 --> 01:30.820
对它进行一下约束

01:30.820 --> 01:32.820
要给它ID复制

01:32.820 --> 01:34.820
然后给它name复制

01:34.820 --> 01:36.820
这些随便写

01:36.820 --> 01:38.820
好 我们有可能

01:38.820 --> 01:40.820
后边会导致一些物操作

01:40.820 --> 01:42.820
比方说有点ID

01:42.820 --> 01:44.820
我就给它重新复制了

01:44.820 --> 01:46.820
你觉得这样子合理吗

01:46.820 --> 01:48.820
肯定不合理 对不对

01:48.820 --> 01:50.820
肯定是不合理的

01:50.820 --> 01:52.820
我们这个ID你怎么能重新复制呢

01:52.820 --> 01:54.820
就是唯一不变的

01:54.820 --> 01:56.820
冲建过后就唯一不变

01:56.820 --> 01:58.820
ID是永远不能改变的

01:58.820 --> 02:00.820
它是唯一编号

02:00.820 --> 02:02.820
就像一些商品一样

02:02.820 --> 02:04.820
出厂过后的编号就定时了

02:04.820 --> 02:06.820
它不能改变的

02:06.820 --> 02:08.820
那么我们以前是没有办法去限制它的

02:08.820 --> 02:10.820
没有办法限制它

02:10.820 --> 02:12.820
那么现在呢 有了这个修饰服呢

02:12.820 --> 02:14.820
就可以对它进行限制的

02:14.820 --> 02:16.820
做法非常简单

02:16.820 --> 02:18.820
在约束它的类型的时候

02:18.820 --> 02:20.820
对它约束它的类型

02:20.820 --> 02:22.820
加这个关键制过后呢

02:22.820 --> 02:24.820
你只能在最开始的时候

02:24.820 --> 02:26.820
给这个ID复制

02:26.820 --> 02:28.820
复完制过后

02:28.820 --> 02:30.820
对不起 永远不能再更改了

02:30.820 --> 02:32.820
这个代码你是永远不能再改了

02:32.820 --> 02:34.820
这就是Raid Only

02:34.820 --> 02:36.820
非常非常简单 叫止毒修饰服

02:36.820 --> 02:38.820
止毒修饰服

02:38.820 --> 02:40.820
那么这里呢

02:40.820 --> 02:42.820
我们要把它编译看一下

02:42.820 --> 02:44.820
编译结果里边

02:44.820 --> 02:46.820
止毒修饰服有没有东西

02:46.820 --> 02:48.820
看一下

02:48.820 --> 02:50.820
编译结果里边看一下

02:50.820 --> 02:52.820
止毒修饰服会变成什么样

02:52.820 --> 02:54.820
到编译结果里看一下

02:54.820 --> 02:56.820
又没了

02:56.820 --> 02:58.820
又没了

02:58.820 --> 03:00.820
所以说 止毒修饰服呢

03:00.820 --> 03:02.820
它也是只影响你写代码

03:02.820 --> 03:04.820
保证你代码不要乱写

03:04.820 --> 03:06.820
买下一些隐患 不要去乱写代码

03:06.820 --> 03:08.820
因为我定义这里的时候

03:08.820 --> 03:10.820
我就清楚了知道ID一定是不能改变的

03:10.820 --> 03:12.820
因此 我们这里记一遍

03:12.820 --> 03:14.820
止毒修饰服

03:14.820 --> 03:16.820
不参与编译

03:16.820 --> 03:18.820
不参与编译

03:18.820 --> 03:20.820
不参与编译结果中

03:20.820 --> 03:22.820
不参与编译结果中

03:22.820 --> 03:24.820
不参与编译结果中

03:24.820 --> 03:26.820
这是止毒修饰服

03:26.820 --> 03:28.820
那有的时候

03:28.820 --> 03:30.820
这个东西用的内形明明也是一样

03:30.820 --> 03:32.820
Type

03:32.820 --> 03:34.820
完全一样

03:34.820 --> 03:36.820
那么现在我们再来看

03:36.820 --> 03:38.820
再来看一个场景

03:38.820 --> 03:40.820
就是有的时候

03:40.820 --> 03:42.820
一些数组

03:42.820 --> 03:44.820
它修饰为止毒的

03:44.820 --> 03:46.820
表示这个数组

03:46.820 --> 03:48.820
你不能重新复制

03:48.820 --> 03:50.820
比方说

03:50.820 --> 03:52.820
用户里边

03:52.820 --> 03:54.820
有什么样的一个数组

03:54.820 --> 03:56.820
它是不能重新复制的呢

03:56.820 --> 03:58.820
好像

03:58.820 --> 04:00.820
不太找得到

04:00.820 --> 04:02.820
我们就不管它了

04:02.820 --> 04:04.820
我们就讲愚发就行了

04:04.820 --> 04:06.820
好 这里

04:06.820 --> 04:08.820
比方说我建议这么一个

04:08.820 --> 04:10.820
内形别名

04:10.820 --> 04:12.820
不用内形别名

04:12.820 --> 04:14.820
就建一个数组

04:14.820 --> 04:16.820
这个数组

04:16.820 --> 04:18.820
是一个数字的数组

04:18.820 --> 04:20.820
是一个数字的数组

04:20.820 --> 04:22.820
我们以前

04:22.820 --> 04:24.820
起了这个数组之后

04:24.820 --> 04:26.820
我是可以重新复制的

04:26.820 --> 04:28.820
比方说一开始给它一些数字

04:28.820 --> 04:30.820
一开始给它一些数字

04:30.820 --> 04:32.820
过一会我给它一个新的数组

04:32.820 --> 04:34.820
给它一个新的数组

04:34.820 --> 04:36.820
没问题的

04:36.820 --> 04:38.820
之前都是没问题的

04:38.820 --> 04:40.820
数组前面再加一个修饰符

04:40.820 --> 04:42.820
加成

04:42.820 --> 04:44.820
加成

04:44.820 --> 04:49.150
Red only

04:49.150 --> 04:51.150
加上这个修饰符过后

04:51.150 --> 04:53.150
加上这个修饰符过后

04:53.150 --> 04:55.150
那么现在呢

04:55.150 --> 04:57.150
这就变成了一个

04:57.150 --> 04:59.150
止独的数组

04:59.150 --> 05:01.150
但是现在有一个疑问

05:01.150 --> 05:03.150
它怎么能重新复制呢

05:03.150 --> 05:05.150
它怎么能重新复制呢

05:05.150 --> 05:07.150
大家一定要理解这里的区别

05:07.150 --> 05:09.150
这里是一个细节

05:09.150 --> 05:11.150
大家注意看

05:11.150 --> 05:13.150
我这个Red only是加在哪个位置的

05:13.150 --> 05:15.150
加在哪个位置的

05:15.150 --> 05:17.150
是来修饰谁的

05:17.150 --> 05:19.150
是来修饰这个数组的类型的

05:19.150 --> 05:21.150
而不是来修饰这个变量的

05:21.150 --> 05:23.150
而不是来修饰这个变量的

05:23.150 --> 05:25.150
不是来修饰这个变量的

05:25.150 --> 05:27.150
这个变量没法用的Red only修饰

05:27.150 --> 05:29.150
你要变量

05:29.150 --> 05:31.150
如何来防止它重新复制

05:31.150 --> 05:33.150
不要学着学着学蒙了

05:33.150 --> 05:35.150
不要学着学着学蒙了

05:35.150 --> 05:37.150
不这个完全完事了嘛

05:37.150 --> 05:39.150
还需要你TX来搞定

05:39.150 --> 05:41.150
TX就可以办到了

05:41.150 --> 05:43.150
抗拭多少长量它就不能重新复制了

05:43.150 --> 05:45.150
所以说变量这个Red only修饰的

05:45.150 --> 05:47.150
不是这个变量

05:47.150 --> 05:49.150
所以说这个变量是可以重新复制的

05:49.150 --> 05:51.150
如果你希望这个变量不能重新复制

05:51.150 --> 05:53.150
你抗拭就完事了

05:53.150 --> 05:55.150
不要学着学着学蒙了

05:55.150 --> 05:57.150
然后这个Red only修饰的这个数组

05:57.150 --> 05:59.150
那啥意思呢

05:59.150 --> 06:01.150
表示的是这个数组

06:01.150 --> 06:03.150
是一个止独的数组

06:03.150 --> 06:05.150
是一个止独的数组

06:05.150 --> 06:07.150
什么意思

06:07.150 --> 06:09.150
什么叫止独的数组

06:09.150 --> 06:11.150
数组里边不是有PoC寒数吗

06:11.150 --> 06:13.150
你看现在还有吗

06:13.150 --> 06:15.150
数组里边不是有PoP寒数吗

06:15.150 --> 06:17.150
你看还有吗

06:17.150 --> 06:19.150
里边不是有Splite

06:19.150 --> 06:21.150
Splite还有

06:21.150 --> 06:23.150
Splite

06:23.150 --> 06:25.150
我们来

06:25.150 --> 06:27.150
不是这个

06:27.150 --> 06:29.150
Splite

06:29.150 --> 06:31.150
就说嘛

06:31.150 --> 06:33.150
Splite是不是也没了

06:33.150 --> 06:35.150
要删除

06:35.150 --> 06:37.150
要替换也不行

06:37.150 --> 06:39.150
也就是这个数组里面

06:39.150 --> 06:41.150
凡是涉及到改变

06:41.150 --> 06:43.150
这个数组的相关寒数

06:43.150 --> 06:45.150
相关成员都不见了

06:45.150 --> 06:47.150
凡是涉及到这个数组的

06:47.150 --> 06:49.150
改变这个数组的相关成员都不见了

06:49.150 --> 06:51.150
于是这个数组就变成了

06:51.150 --> 06:53.150
永远是

06:53.150 --> 06:55.150
这些东西

06:55.150 --> 06:57.150
并且我们这样子来做

06:57.150 --> 06:59.150
试一下呢

06:59.150 --> 07:01.150
连这样子都不行了

07:01.150 --> 07:03.150
你想改变这个数组的成员

07:03.150 --> 07:05.150
也不行了

07:05.150 --> 07:07.150
所以

07:07.150 --> 07:09.150
也是只读的

07:09.150 --> 07:11.150
因此这个数组

07:11.150 --> 07:13.150
创建的时候是346

07:13.150 --> 07:15.150
这一辈子永远都是346

07:15.150 --> 07:17.150
永远是346

07:17.150 --> 07:19.150
那么接下来我们看一下编印结果

07:19.150 --> 07:21.150
多看编印结果

07:21.150 --> 07:23.150
你慢慢就能明白

07:23.150 --> 07:25.150
TS他到底在做什么

07:25.150 --> 07:27.150
他到底是怎么来发挥作用

07:27.150 --> 07:29.150
重新编印一下

07:29.150 --> 07:31.150
结果

07:31.150 --> 07:33.150
结果里面有啥差别没有

07:33.150 --> 07:35.150
跟之前的GS

07:35.150 --> 07:37.150
没任何区别

07:37.150 --> 07:39.150
之前的修饰服啊内形约束全部不见了

07:39.150 --> 07:41.150
这再一次反复反复的强调

07:41.150 --> 07:43.150
TS发挥作用发挥在哪

07:43.150 --> 07:45.150
发挥在运行之前

07:45.150 --> 07:47.150
运行之后他就不管了

07:47.150 --> 07:49.150
运行之后你搞了什么事情

07:49.150 --> 07:51.150
他就不管了

07:51.150 --> 07:53.150
他只来防止你写出错误的

07:53.150 --> 07:55.150
不正确的代码或者是有隐患的代码

07:55.150 --> 07:57.150
运行出来他就没有什么

07:57.150 --> 07:59.150
什么事了

07:59.150 --> 08:01.150
好这是修饰宿主

08:01.150 --> 08:03.150
这里有另外一种写法

08:03.150 --> 08:05.150
因为我们之前说过宿主这里的写法

08:05.150 --> 08:07.150
有都是上面的那种写法

08:07.150 --> 08:09.150
还有一种是array对吧

08:09.150 --> 08:11.150
array使用这种方式

08:11.150 --> 08:13.150
我们后面会讲这个东西到底是啥

08:13.150 --> 08:15.150
那么这里如果你要做一个止毒的宿主

08:15.150 --> 08:17.150
你可以使用这种

08:17.150 --> 08:19.150
这个array

08:19.150 --> 08:21.150
RAID ONLY

08:21.150 --> 08:23.150
RAID ONLY

08:23.150 --> 08:25.150
是一样的效果

08:25.150 --> 08:27.150
没有

08:27.150 --> 08:29.150
然后shift没有

08:29.150 --> 08:31.150
这些含书都没了

08:31.150 --> 08:33.150
这是关于

08:33.150 --> 08:35.150
修饰一个

08:35.150 --> 08:37.150
RAID ONLY可以修饰这个内行

08:37.150 --> 08:39.150
把它变成一个止毒的宿主

08:39.150 --> 08:41.150
好那么再说一个宿主的修饰情况

08:41.150 --> 08:43.150
比方说

08:43.150 --> 08:45.150
刚才对箱里边

08:45.150 --> 08:47.150
刚才对箱里边

08:47.150 --> 08:49.150
我就这个内心别命

08:49.150 --> 08:51.150
我就随便写

08:51.150 --> 08:53.150
比方说我这里有一个宿主

08:53.150 --> 08:55.150
不用管它是啥宿主吧

08:55.150 --> 08:57.150
因为我一时半会也想不出来有什么样的宿主

08:57.150 --> 08:59.150
我就随便写吧

08:59.150 --> 09:01.150
array它是一个

09:01.150 --> 09:03.150
制不出来的宿主

09:03.150 --> 09:05.150
那么现在呢我写一个

09:05.150 --> 09:07.150
修饰服

09:07.150 --> 09:09.150
RAID ONLY修饰服

09:09.150 --> 09:11.150
我写到哪呢我不写到这

09:11.150 --> 09:13.150
我不写到这

09:13.150 --> 09:15.150
我写到这

09:15.150 --> 09:17.150
因为它是成员嘛对吧

09:17.150 --> 09:19.150
内里面的成员你是没有办法用couns

09:19.150 --> 09:21.150
来修饰的对吧你不能在这里写couns

09:21.150 --> 09:23.150
没有这种语法

09:23.150 --> 09:25.150
没有这种语法

09:25.150 --> 09:27.150
所以说你只能使用RAID ONLY来修饰

09:27.150 --> 09:29.150
如果你要修饰

09:29.150 --> 09:31.150
一个对象里面的某一个属性是不能更改的

09:31.150 --> 09:33.150
那么你可以使用RAID ONLY来修饰

09:33.150 --> 09:35.150
RAID ONLY修饰过后

09:35.150 --> 09:37.150
大家看一下arr

09:37.150 --> 09:39.150
它是一个宿主

09:39.150 --> 09:41.150
一个制不出来的宿主

09:41.150 --> 09:43.150
那么之后呢

09:43.150 --> 09:45.150
这个属性就跟其他属性一样

09:45.150 --> 09:47.150
你是不能更改的

09:47.150 --> 09:49.150
要跟重新为负责

09:49.150 --> 09:51.150
但是你能不能往这个宿主里面加东西呢

09:51.150 --> 09:53.150
那是可以的

09:53.150 --> 09:55.150
那没问题

09:55.150 --> 09:57.150
你可以往宿主里面加东西

09:57.150 --> 09:59.150
只要你没有改变整个宿主就行了

09:59.150 --> 10:01.150
你没有给这个宿主重新负责

10:01.150 --> 10:03.150
只要你不给它重新负责

10:03.150 --> 10:05.150
没问题

10:05.150 --> 10:07.150
所以RAID ONLY修饰

10:07.150 --> 10:09.150
成员的时候呢

10:09.150 --> 10:11.150
因为成员它有个问题

10:11.150 --> 10:13.150
它没有办法使用couns

10:13.150 --> 10:15.150
你回忆一下呗

10:15.150 --> 10:17.150
GS里面

10:17.150 --> 10:19.150
内的属性

10:19.150 --> 10:21.150
你能用couns的修饰吗

10:21.150 --> 10:22.150
不行对吧

10:22.150 --> 10:23.150
不能使用关键值

10:23.150 --> 10:24.150
因此呢

10:24.150 --> 10:25.150
如果你要做一个指读的属性

10:25.150 --> 10:27.150
你可以使用RAID ONLY

10:27.150 --> 10:28.150
宿主也是一样啊

10:28.150 --> 10:29.150
没有什么区别

10:29.150 --> 10:31.150
那如果你既希望这个

10:31.150 --> 10:32.150
在一个对象里边

10:32.150 --> 10:33.150
这个属性是个宿主

10:33.150 --> 10:35.150
你既希望它是指

10:35.150 --> 10:36.150
它本身不能重新负责

10:36.150 --> 10:38.150
又希望

10:38.150 --> 10:40.150
这个宿主不能改变

10:40.150 --> 10:41.150
怎么办

10:41.150 --> 10:42.150
是一样的嘛

10:42.150 --> 10:43.150
有啥区别呢

10:43.150 --> 10:44.150
有啥区别呢

10:44.150 --> 10:46.150
加上这个修饰服就完事了

10:46.150 --> 10:47.150
加上这个修饰服就完事了

10:47.150 --> 10:49.150
那么这里就不能改变了

10:49.150 --> 10:50.150
OK

10:50.150 --> 10:52.150
这是关于补充一个点

10:52.150 --> 10:53.150
补充一个点

10:53.150 --> 10:54.150
因为这个RAID ONLY

10:54.150 --> 10:55.150
它可以出现在接口里边

10:55.150 --> 10:57.150
其实之前学习内容别名的时候

10:57.150 --> 10:59.150
也可以加这个东西

10:59.150 --> 11:01.150
那么现在我把它补充了

11:01.150 --> 11:03.150
补充的之前就是RAID ONLY

11:03.150 --> 11:04.150
这个修饰服

11:04.150 --> 11:05.150
有的时候

11:05.150 --> 11:07.150
其实我们以前在GS的时候

11:07.150 --> 11:08.150
在写GS的时候

11:08.150 --> 11:10.150
我在接触TS之前

11:10.150 --> 11:11.150
我就一直在想

11:11.150 --> 11:12.150
怎么来做一个

11:12.150 --> 11:14.150
在GS里面

11:14.150 --> 11:15.150
要用什么样的方式

11:15.150 --> 11:16.150
比较简单一点

11:16.150 --> 11:17.150
做出一个

11:17.150 --> 11:19.150
止毒的宿主出来

11:20.150 --> 11:21.150
想来想去

11:21.150 --> 11:23.150
都没有一种非常优雅的方式

11:23.150 --> 11:24.150
那么这里有了TS过河

11:24.150 --> 11:26.150
这种方式就非常非常舒服

11:26.150 --> 11:27.150
一下就完事了

11:27.150 --> 11:28.150
对吧

11:28.150 --> 11:29.150
加上一个RAID ONLY修饰服

11:29.150 --> 11:31.150
这个宿主就不能变黄

11:31.150 --> 11:32.150
不能变黄

11:33.150 --> 11:34.150
OK

11:34.150 --> 11:36.150
那么咱们

11:37.150 --> 11:38.150
这一块就完事了

11:38.150 --> 11:40.150
整个接口这一块的

11:40.150 --> 11:42.150
就是知识就结束了

11:42.150 --> 11:43.150
咱们接下来呢

11:43.150 --> 11:46.150
讲一讲类型的接种性

11:46.150 --> 11:47.150
在下个小节目中

11:47.150 --> 11:48.150
我们来讲类型的接种性

